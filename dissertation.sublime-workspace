{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"wor",
				"sec:worfklow-for-reducing-run-time-overheads-in-multi-stage"
			],
			[
				"custom",
				"sec:embedding-with-custom-types"
			],
			[
				"virtu",
				"rompf_scala-virtualized:_2009: Scala-virtualized: Linguistic reuse for deep embeddings"
			],
			[
				"con",
				"sec:constants-and-free-variables"
			],
			[
				"poly",
				"sec:polymorphic-embedding"
			],
			[
				"par",
				"jones1993partial: Partial Evaluation and Automatic Program Generation"
			],
			[
				"scrpp",
				"scr brady2010scrapping: Scrapping your inefficient engine: using partial evaluation to improve domain-specific language implementation"
			],
			[
				"taha",
				"ta taha_multi-stage_1997: Multi-stage programming with explicit annotations"
			],
			[
				"rom",
				"rom rompf_scala-virtualized:_2009: Scala-virtualized: Linguistic reuse for deep embeddings"
			],
			[
				"sec",
				"sec:motivation"
			],
			[
				"Matri",
				"MatrixMult"
			],
			[
				"matri",
				"MatrixCarrier"
			],
			[
				"Ordering",
				"ScalaGenOrderingOps"
			],
			[
				"Boolean",
				"BooleanOpsExp"
			],
			[
				"Dyn",
				"DynamicBase"
			],
			[
				"update",
				"updateAttachment"
			],
			[
				"Double",
				"DoubleNumeric"
			],
			[
				"App",
				"AppTpe"
			],
			[
				"expec",
				"expectedTp"
			],
			[
				"Type",
				"TypeVariant"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main/p3_removing_abstraction_overheads_shallow_embedding.tex",
			"settings":
			{
				"buffer_size": 41350,
				"line_ending": "Unix"
			}
		},
		{
			"file": "head/settings_epfl_template.tex",
			"settings":
			{
				"buffer_size": 6740,
				"line_ending": "Unix"
			}
		},
		{
			"file": "head/settings_custom.tex",
			"settings":
			{
				"buffer_size": 13199,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 1202,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/YYTransformer.scala",
			"settings":
			{
				"buffer_size": 12862,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Reified.scala",
			"settings":
			{
				"buffer_size": 379,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/LiftLiteralsTransformation.scala",
			"settings":
			{
				"buffer_size": 1373,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/examples/src/base/Base.scala",
			"settings":
			{
				"buffer_size": 1358,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/typetransformers/PolyTransformer.scala",
			"settings":
			{
				"buffer_size": 2275,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/YYConfig.scala",
			"settings":
			{
				"buffer_size": 965,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/AscriptionTransformation.scala",
			"settings":
			{
				"buffer_size": 2464,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/project/Build.scala",
			"settings":
			{
				"buffer_size": 6159,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/reification/build.sbt",
			"settings":
			{
				"buffer_size": 585,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/.travis.yml",
			"settings":
			{
				"buffer_size": 284,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/examples/src/la/lifted/VectorOpsRep.scala",
			"settings":
			{
				"buffer_size": 12905,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main/p1_dsl_embedding.tex",
			"settings":
			{
				"buffer_size": 135816,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "param-LoC,value,success,cilo,cihi,units,complete\n2015-10-25T16:16:34Z,1,0.3224765833333333,true,0.134,0.511,ms,\"0.225939 0.251782 0.341214 0.36673 0.33458 0.339237 0.345503 0.354636 0.217151 0.221702 0.224822 0.230125 0.505802 0.628539 0.770843 1.065651 0.236883 0.243103 0.310606 0.346903 0.241337 0.242007 0.268645 0.299978 0.218373 0.219246 0.343895 0.38489 0.211609 0.215226 0.220254 0.220479 0.227821 0.237533 0.242553 0.25356\"\n2015-10-25T18:52:07Z,1,0.21641144444444443,true,0.185,0.248,ms,\"0.212167 0.214908 0.215634 0.21601 0.201952 0.202362 0.205112 0.206906 0.207313 0.211165 0.225636 0.23532 0.200231 0.208097 0.208587 0.220077 0.208998 0.217367 0.219 0.225629 0.201351 0.202923 0.207897 0.214405 0.204507 0.209828 0.280336 0.363741 0.197129 0.197634 0.202474 0.202632 0.195498 0.206604 0.216767 0.224615\"\n2015-10-25T18:52:07Z,3,0.29635141666666664,true,0.276,0.317,ms,\"0.275592 0.276944 0.283488 0.290514 0.269994 0.282157 0.282608 0.28409 0.277034 0.286519 0.286882 0.29052 0.302791 0.304073 0.304685 0.304751 0.295416 0.301138 0.301661 0.309508 0.279083 0.295788 0.304795 0.314927 0.28617 0.32374 0.339574 0.34305 0.278743 0.283 0.287416 0.290272 0.278334 0.301746 0.307708 0.34394\"\n2015-10-25T18:52:07Z,5,0.34459166666666674,true,0.331,0.358,ms,\"0.323744 0.336649 0.3378 0.340893 0.331061 0.33332 0.345861 0.347883 0.335021 0.336677 0.337855 0.338517 0.35123 0.351763 0.361308 0.367649 0.347351 0.352688 0.37033 0.383315 0.331686 0.333037 0.340757 0.344511 0.334811 0.335664 0.345259 0.346802 0.329318 0.342648 0.346335 0.347165 0.337697 0.340697 0.355903 0.362095\"\n2015-10-25T18:52:07Z,7,0.40054919444444453,true,0.387,0.414,ms,\"0.381667 0.394968 0.397298 0.402623 0.386356 0.389345 0.389991 0.394314 0.389318 0.391359 0.397332 0.404718 0.412584 0.420613 0.437107 0.438931 0.394645 0.400062 0.400093 0.405685 0.388096 0.395707 0.404145 0.4076 0.389246 0.400648 0.406482 0.414225 0.388852 0.391306 0.392912 0.394403 0.397563 0.398611 0.409155 0.411811\"\n2015-10-25T18:52:07Z,9,0.46383994444444443,true,0.445,0.482,ms,\"0.442835 0.447899 0.448358 0.448872 0.446976 0.454918 0.459208 0.47506 0.438521 0.447636 0.44884 0.462497 0.48641 0.487728 0.491772 0.498693 0.467076 0.470765 0.471845 0.47208 0.454258 0.45443 0.459488 0.462308 0.454261 0.463113 0.463948 0.466346 0.448129 0.455727 0.456233 0.458996 0.451153 0.472819 0.503116 0.505924\"\n2015-10-25T18:52:07Z,11,0.5258646388888889,true,0.501,0.551,ms,\"0.510576 0.540759 0.565041 0.600993 0.495489 0.502471 0.510718 0.512151 0.501945 0.504802 0.512388 0.517812 0.541891 0.554973 0.561591 0.587392 0.526098 0.528515 0.530946 0.535098 0.507347 0.508972 0.516916 0.519742 0.511345 0.520869 0.521292 0.525783 0.51353 0.513944 0.514803 0.518668 0.504392 0.521758 0.52901 0.541107\"\n2015-10-25T18:52:07Z,13,0.5880535555555554,true,0.555,0.621,ms,\"0.553768 0.557513 0.578397 0.591922 0.556818 0.563982 0.614273 0.628267 0.562329 0.564359 0.569501 0.578203 0.600125 0.600354 0.624376 0.634295 0.568249 0.582961 0.590254 0.591509 0.56071 0.567991 0.618546 0.69427 0.566051 0.598175 0.619743 0.632233 0.560591 0.561932 0.56239 0.562835 0.569845 0.590064 0.596341 0.596756\"\n2015-10-25T18:52:07Z,15,0.6365609444444442,true,0.616,0.657,ms,\"0.614394 0.633741 0.655427 0.66922 0.60963 0.612674 0.61475 0.620221 0.620898 0.621045 0.621339 0.621586 0.664065 0.664526 0.664983 0.66564 0.642367 0.642986 0.645241 0.645556 0.625197 0.635468 0.649192 0.663491 0.622987 0.630841 0.652181 0.672855 0.617426 0.617955 0.618789 0.622073 0.631278 0.63376 0.634747 0.637665\"\n2015-10-25T18:52:07Z,17,0.6996850000000001,true,0.680,0.719,ms,\"0.673263 0.68252 0.688225 0.694842 0.674064 0.678673 0.69168 0.706315 0.698951 0.702426 0.715048 0.7162 0.732846 0.733352 0.736414 0.740348 0.688096 0.697389 0.704574 0.71034 0.681577 0.683722 0.69709 0.698368 0.689408 0.693197 0.698947 0.704054 0.679827 0.68057 0.680606 0.681145 0.705474 0.712252 0.716056 0.720801\"\n2015-10-25T18:52:07Z,19,0.7674467777777778,true,0.741,0.794,ms,\"0.732668 0.754554 0.756797 0.763357 0.734117 0.735184 0.743472 0.748635 0.771693 0.793267 0.80647 0.80784 0.797409 0.813839 0.818082 0.819044 0.745099 0.749213 0.749622 0.751076 0.742739 0.744341 0.76293 0.767331 0.755118 0.778056 0.779385 0.788843 0.739803 0.750696 0.770741 0.783054 0.758189 0.763615 0.769133 0.782672\"\n2015-10-25T18:52:07Z,21,0.8304796388888889,true,0.796,0.865,ms,\"0.795246 0.801685 0.827356 0.8296 0.798098 0.806921 0.819981 0.838816 0.784815 0.81731 0.865078 0.888479 0.866075 0.888276 0.898117 0.909569 0.816333 0.840829 0.846691 0.868037 0.805558 0.807358 0.807442 0.809195 0.814473 0.814885 0.816241 0.816933 0.802674 0.803292 0.805302 0.807674 0.83146 0.844314 0.845442 0.857712\"\n2015-10-25T18:52:07Z,23,0.898696138888889,true,0.867,0.931,ms,\"0.860264 0.860784 0.861168 0.861904 0.861329 0.886117 0.890532 0.898826 0.831265 0.870103 0.898584 0.904964 0.938767 0.940349 0.962224 0.966461 0.881657 0.888092 0.902703 0.904158 0.87343 0.874264 0.89723 0.929791 0.884104 0.885844 0.90081 0.910457 0.910727 0.915256 0.919219 0.919981 0.895135 0.916649 0.921634 0.928279\"\n2015-10-25T18:52:07Z,25,0.9538886666666665,true,0.917,0.991,ms,\"0.920372 0.94744 0.957385 0.963572 0.923793 0.926304 0.930394 0.931938 0.894702 0.897043 0.898474 0.902689 1.006149 1.006235 1.009547 1.014278 0.943947 0.944684 0.946398 0.953555 0.935548 0.936151 0.941793 0.947802 0.950385 0.957371 0.972446 0.981806 0.924412 0.970577 1.000698 1.031419 0.959034 0.96212 0.964079 0.985452\"\n2015-10-25T18:52:07Z,27,1.038312027777778,true,0.988,1.089,ms,\"0.989631 0.997081 1.038655 1.041244 0.994274 1.004105 1.018545 1.027311 0.965074 0.96762 1.005467 1.049054 1.101481 1.103762 1.118851 1.121846 1.013885 1.031019 1.055372 1.061904 1.006911 1.011335 1.014645 1.015862 1.016957 1.019466 1.048949 1.050619 0.95884 0.974732 1.064883 1.11836 1.069757 1.081625 1.109166 1.110945\"\n2015-10-25T18:52:07Z,29,1.1116863333333333,true,1.041,1.182,ms,\"1.051913 1.056117 1.071875 1.092545 1.056677 1.100974 1.108349 1.112199 1.028801 1.031183 1.040894 1.044899 1.156038 1.189843 1.252408 1.294835 1.093771 1.132257 1.138914 1.157109 1.078347 1.131584 1.131941 1.142368 1.121848 1.131864 1.163808 1.191874 1.023471 1.030511 1.051462 1.053141 1.052767 1.133982 1.160475 1.209664\"\n2015-10-27T06:41:15Z,0,0.11322669444444441,true,0.105,0.121,ms,\"0.111367 0.114948 0.11786 0.118121 0.103279 0.107393 0.118105 0.118541 0.108218 0.109651 0.111974 0.112276 0.10645 0.107445 0.114607 0.116253 0.10794 0.112616 0.12212 0.141117 0.108662 0.108877 0.113117 0.116511 0.105164 0.107298 0.118905 0.125333 0.107311 0.110303 0.117275 0.120405 0.103843 0.106344 0.112288 0.114244\"\n2015-10-27T06:41:15Z,4,0.34880472222222225,true,0.289,0.409,ms,\"0.312147 0.32404 0.330488 0.339963 0.302479 0.320521 0.332092 0.362947 0.323732 0.335514 0.341155 0.346614 0.308606 0.323546 0.342752 0.35144 0.334428 0.345246 0.48186 0.576614 0.304993 0.310814 0.315522 0.321756 0.303693 0.326755 0.359025 0.405098 0.313907 0.348212 0.38816 0.454124 0.300048 0.321496 0.347297 0.399886\"\n2015-10-27T06:41:15Z,8,0.4425768888888888,true,0.420,0.465,ms,\"0.416384 0.426804 0.434654 0.440224 0.445173 0.460279 0.467389 0.471973 0.42769 0.440311 0.44836 0.451201 0.434452 0.436919 0.456664 0.487653 0.411407 0.413643 0.423363 0.425377 0.42476 0.42569 0.457261 0.475014 0.434734 0.436806 0.443608 0.450742 0.422066 0.422509 0.444249 0.446172 0.427098 0.427297 0.484919 0.489923\"\n2015-10-27T06:41:15Z,12,0.5518840277777777,true,0.540,0.564,ms,\"0.538669 0.549685 0.562945 0.567366 0.555659 0.559271 0.570512 0.570763 0.552709 0.553911 0.554582 0.565965 0.544422 0.548593 0.552062 0.556702 0.528679 0.536743 0.538116 0.542695 0.533182 0.541657 0.542192 0.544022 0.554546 0.559843 0.563424 0.569141 0.553312 0.556504 0.559794 0.563187 0.538776 0.54358 0.546203 0.548413\"\n2015-10-27T06:41:15Z,16,0.7033583888888889,true,0.662,0.745,ms,\"0.675389 0.687421 0.688036 0.689079 0.707033 0.72334 0.729797 0.742709 0.679862 0.6887 0.694579 0.711495 0.673686 0.687277 0.783214 0.815641 0.655134 0.665839 0.666098 0.670286 0.673826 0.690125 0.693976 0.700748 0.671654 0.710864 0.712342 0.722778 0.674587 0.686611 0.693301 0.716885 0.662173 0.700408 0.776782 0.799227\"\n2015-10-27T06:41:15Z,20,0.8209744444444442,true,0.793,0.849,ms,\"0.80386 0.822902 0.840069 0.854027 0.836279 0.844285 0.847647 0.851403 0.801487 0.81057 0.836981 0.863353 0.826049 0.834695 0.840644 0.842326 0.791128 0.792767 0.792971 0.796421 0.78541 0.787615 0.796031 0.79749 0.82058 0.827934 0.836853 0.842152 0.803643 0.807806 0.812463 0.813727 0.767552 0.803959 0.839683 0.882318\"\n2015-10-27T06:41:15Z,24,0.9584338055555557,true,0.922,0.994,ms,\"0.936213 0.943144 0.966633 0.967767 0.962109 1.011123 1.012552 1.024101 0.980078 1.002472 1.017604 1.031003 0.941175 0.944549 0.950308 0.957004 0.91901 0.92123 0.948261 0.974265 0.906855 0.921789 0.939488 0.952421 0.954218 0.965747 0.983173 1.001479 0.932898 0.94255 0.946931 0.954567 0.921646 0.921779 0.923535 0.92394\"\n2015-10-27T06:41:15Z,28,1.1121227777777778,true,1.077,1.147,ms,\"1.093427 1.101853 1.104843 1.141313 1.103776 1.143108 1.148002 1.152508 1.095102 1.107272 1.113848 1.131695 1.080146 1.115905 1.119199 1.171066 1.059596 1.069216 1.069617 1.070333 1.055292 1.100285 1.147674 1.165491 1.116731 1.128666 1.141699 1.156948 1.081014 1.105502 1.111581 1.115503 1.064034 1.072056 1.113047 1.169072\"\n2015-10-27T06:41:15Z,32,1.2528082777777783,true,1.212,1.294,ms,\"1.205027 1.209169 1.227127 1.255034 1.307908 1.315978 1.341435 1.361307 1.204618 1.216333 1.231827 1.238427 1.24088 1.257586 1.268899 1.289712 1.208419 1.208562 1.215832 1.231585 1.232838 1.238833 1.282113 1.293282 1.253256 1.255771 1.267805 1.271377 1.209328 1.242502 1.252805 1.263351 1.223749 1.236125 1.264868 1.27743\"\n2015-10-27T06:41:15Z,36,1.3921339444444445,true,1.343,1.441,ms,\"1.35249 1.3901 1.422968 1.429772 1.405949 1.429009 1.475344 1.480333 1.408051 1.415499 1.445063 1.463321 1.368397 1.397941 1.406708 1.450589 1.318058 1.329853 1.39759 1.428217 1.329819 1.343026 1.357653 1.390704 1.37292 1.391346 1.417894 1.427223 1.337741 1.342583 1.393087 1.427081 1.318405 1.322166 1.355468 1.374454\"\n2015-10-27T06:41:15Z,40,1.5256716666666668,true,1.480,1.571,ms,\"1.501491 1.502547 1.532714 1.534935 1.560738 1.57242 1.620787 1.680082 1.508033 1.508997 1.509173 1.510712 1.514943 1.51753 1.523029 1.528538 1.495658 1.500137 1.514631 1.533036 1.47229 1.483804 1.498298 1.51321 1.517282 1.539567 1.548954 1.579906 1.495901 1.506432 1.543606 1.587127 1.464375 1.475664 1.505283 1.52235\"\n2015-10-27T06:41:15Z,44,1.6977480555555557,true,1.642,1.754,ms,\"1.645778 1.710199 1.73215 1.753711 1.71423 1.747402 1.770524 1.7765 1.657127 1.680412 1.707178 1.747391 1.672464 1.677757 1.710427 1.738278 1.607579 1.611047 1.653438 1.67852 1.613664 1.639202 1.648271 1.681432 1.711544 1.728809 1.774465 1.800361 1.653896 1.65903 1.701172 1.721691 1.622534 1.666422 1.737907 1.766418\"\n2015-10-27T06:41:15Z,48,1.8428545833333334,true,1.787,1.898,ms,\"1.806853 1.821766 1.85332 1.897594 1.886397 1.921465 1.931795 1.956559 1.824647 1.833963 1.85406 1.89271 1.812463 1.818249 1.869491 1.888602 1.759816 1.767385 1.772441 1.774327 1.768854 1.829969 1.838225 1.868289 1.829767 1.866426 1.867123 1.90407 1.813217 1.815534 1.876889 1.926569 1.795008 1.796253 1.798941 1.803728\"\n2015-10-27T06:41:15Z,52,1.9978554166666669,true,1.948,2.047,ms,\"1.988189 2.003734 2.030199 2.072306 2.033604 2.046284 2.052551 2.075732 1.983559 1.985237 1.987282 1.988325 1.999419 2.036217 2.051672 2.087714 1.92402 1.928635 1.984368 1.988539 1.91698 1.933887 1.933988 1.940399 1.993557 1.998144 2.002366 2.007134 1.974054 2.02792 2.044982 2.048612 1.93983 1.943745 1.972895 1.996716\"\n2015-10-27T06:41:15Z,56,2.189248555555556,true,2.103,2.276,ms,\"2.134175 2.144646 2.151149 2.15491 2.211227 2.218696 2.276739 2.308443 2.185804 2.197513 2.21527 2.215762 2.168283 2.281373 2.342992 2.443903 2.076307 2.07661 2.079695 2.087635 2.088999 2.153012 2.157079 2.269218 2.204684 2.205931 2.207267 2.212095 2.131672 2.207744 2.221297 2.25865 2.100161 2.101022 2.147533 2.175452\"\n2015-10-27T06:41:15Z,60,2.356673916666667,true,2.278,2.435,ms,\"2.304362 2.305988 2.392045 2.420891 2.394456 2.400782 2.425876 2.432881 2.463049 2.46839 2.475316 2.47825 2.339186 2.344069 2.353559 2.362505 2.260671 2.273049 2.377099 2.503184 2.252366 2.263489 2.268926 2.279552 2.342293 2.367941 2.408875 2.43443 2.309661 2.311748 2.314699 2.315279 2.262682 2.262867 2.328183 2.341662\"\n2015-10-27T06:41:15Z,64,2.5479875277777784,true,2.461,2.635,ms,\"2.482736 2.575054 2.581879 2.603934 2.560391 2.570887 2.604533 2.616349 2.485525 2.600569 2.609629 2.630137 2.497576 2.50888 2.515805 2.522056 2.541282 2.552309 2.766984 2.825522 2.432173 2.433314 2.476083 2.527702 2.508514 2.515641 2.516324 2.523385 2.47595 2.507996 2.516254 2.537125 2.445264 2.491135 2.581973 2.586681\"\n2015-10-27T06:41:15Z,68,2.7277689722222216,true,2.643,2.813,ms,\"2.672694 2.676259 2.677495 2.717656 2.801723 2.834021 2.838949 2.839463 2.658226 2.751757 2.765127 2.783823 2.701305 2.773883 2.783092 2.89765 2.740943 2.745596 2.842728 2.857537 2.601167 2.612405 2.662432 2.723878 2.719381 2.75584 2.775275 2.782092 2.659219 2.666592 2.667041 2.708541 2.609807 2.623806 2.631647 2.640633\"\n2015-10-27T06:41:15Z,72,2.9365891944444447,true,2.808,3.066,ms,\"2.816472 2.816686 2.934047 2.936328 2.945881 2.953575 3.012352 3.01424 2.812841 2.886427 2.89127 2.893929 3.040384 3.042129 3.060633 3.077128 2.746809 2.79113 2.883269 3.063378 2.778052 2.785591 2.856787 2.893906 3.07369 3.088858 3.202112 3.241101 2.845181 2.933801 2.968593 2.974768 2.807555 2.816876 2.893033 2.938399\"\n2015-10-27T06:41:15Z,76,3.1710602222222217,true,3.013,3.329,ms,\"3.012061 3.115653 3.157651 3.243921 3.296618 3.37515 3.443815 3.633137 2.998685 3.004177 3.033919 3.055656 3.042984 3.048468 3.215856 3.314871 2.919554 3.010147 3.036608 3.055392 3.136221 3.174564 3.202595 3.26768 3.179909 3.205349 3.242623 3.339648 3.05803 3.115615 3.214954 3.380179 3.122626 3.158204 3.170321 3.175327\"\n2015-10-27T06:41:15Z,80,3.339422666666666,true,3.177,3.502,ms,\"3.182572 3.286431 3.359708 3.370982 3.328347 3.627011 3.649074 3.680661 3.291872 3.307909 3.367045 3.450422 3.238427 3.319091 3.411977 3.47193 3.123645 3.123988 3.214445 3.29762 3.129955 3.274359 3.280979 3.312378 3.306494 3.429987 3.472979 3.726043 3.201473 3.23691 3.329814 3.427454 3.159124 3.262977 3.278515 3.286618\"\n2015-10-27T06:41:15Z,84,3.491772055555556,true,3.393,3.590,ms,\"3.386883 3.387186 3.393436 3.417962 3.503106 3.505879 3.512918 3.51791 3.440037 3.461368 3.465699 3.480003 3.440053 3.442464 3.54612 3.554414 3.316731 3.428117 3.506855 3.564414 3.325116 3.452345 3.563824 3.609873 3.539218 3.610217 3.63303 3.742842 3.387468 3.475896 3.498349 3.581934 3.366545 3.510063 3.533028 3.602491\"\n2015-10-27T06:41:15Z,88,3.6812902499999987,true,3.579,3.783,ms,\"3.593504 3.60798 3.756228 3.838493 3.808127 3.83011 3.852491 3.899153 3.606336 3.609172 3.615763 3.62643 3.629008 3.644063 3.676849 3.727222 3.536153 3.602636 3.663201 3.704562 3.544349 3.647681 3.651248 3.654513 3.642919 3.710125 3.73853 3.756919 3.64831 3.698799 3.804624 3.822377 3.545115 3.606489 3.611928 3.615042\"\n2015-10-27T06:41:15Z,92,3.9060186666666663,true,3.784,4.028,ms,\"3.800535 3.894905 3.954459 4.030899 3.919825 3.920115 3.937555 3.95766 3.836048 3.93055 4.056729 4.069983 3.872593 3.948507 4.047801 4.132118 3.710093 3.716429 3.724949 3.735435 3.741099 3.848123 3.91929 3.9925 3.878871 3.886986 4.076587 4.077196 3.825931 3.862264 3.967483 3.969991 3.747258 3.831742 3.860554 3.933609\"\n2015-10-27T06:41:15Z,96,4.138853305555555,true,3.963,4.315,ms,\"4.021301 4.030478 4.318837 4.427036 4.157569 4.38265 4.494959 4.588875 4.062853 4.067918 4.101924 4.142857 4.058349 4.18311 4.211705 4.248627 3.931221 3.944213 3.96127 3.996665 3.928569 3.93629 3.959221 3.981143 4.073702 4.112145 4.152141 4.15231 4.036672 4.047509 4.194559 4.350882 4.132656 4.169716 4.177479 4.261308\"\n2015-10-27T06:41:15Z,100,4.335383305555556,true,4.158,4.513,ms,\"4.250649 4.25229 4.372121 4.375448 4.372612 4.397494 4.659612 4.699906 4.27457 4.277039 4.286891 4.288605 4.304842 4.417259 4.488241 4.499841 4.130968 4.153487 4.16199 4.200633 4.150974 4.244152 4.384926 4.678237 4.301014 4.454504 4.595155 4.684407 4.240317 4.244173 4.249545 4.256023 4.179095 4.181281 4.181372 4.184126\"\ndate,param-LoC,value,success,cilo,cihi,units,complete\n2015-10-25T18:52:07Z,1,431.13340447222214,true,422.582,439.684,ms,\"417.01676 421.555748 426.48126 429.003674 419.273641 420.367492 421.521904 421.824639 424.106564 426.196707 430.94221 433.621784 433.454411 437.808875 437.811275 441.810557 441.76894 442.331461 444.044056 445.677442 434.339464 436.142077 437.312279 441.012087 427.232644 427.521125 428.820349 433.328954 426.697639 430.999677 435.455122 442.903569 422.189296 423.457844 426.902495 429.86854\"\n2015-10-25T18:52:07Z,3,440.6658445833333,true,431.431,449.901,ms,\"431.225827 432.514154 432.949761 433.904916 428.872706 430.514467 434.760407 435.4794 432.705107 432.746717 436.729729 438.739425 445.65989 447.927065 449.809174 453.826796 452.158343 452.276911 454.317161 455.740939 446.757272 447.149976 450.442938 455.188737 430.708475 433.151772 436.596413 443.062435 439.943953 442.406755 444.74566 446.046627 430.120392 431.119755 436.569069 437.101281\"\n2015-10-25T18:52:07Z,5,452.76579383333325,true,441.909,463.623,ms,\"441.822993 443.437857 444.4712 446.806985 439.600945 442.567443 445.059493 449.84278 445.508967 445.83994 446.844497 446.886707 456.997446 458.701917 459.597208 460.857598 465.416351 468.564027 473.110938 482.711836 458.03372 459.251257 461.003734 462.507556 442.207667 443.21108 444.211061 445.541979 448.652923 453.558036 456.959917 463.988328 443.260557 447.716675 451.598508 453.218452\"\n2015-10-25T18:52:07Z,7,464.18028225000006,true,454.738,473.623,ms,\"449.721645 456.451809 456.752553 457.100333 451.504354 456.735279 462.376395 462.633756 454.50453 458.950199 459.262889 461.199966 469.656319 472.529244 474.796941 475.199416 478.130791 480.006723 480.820513 484.334692 468.890141 469.749981 469.836226 471.293261 457.251761 460.38954 462.049379 464.347888 456.71684 464.730657 465.863693 466.469641 453.736486 456.720863 458.164251 461.611206\"\n2015-10-25T18:52:07Z,9,475.0508943055555,true,465.615,484.486,ms,\"469.066182 469.576803 470.764369 471.650506 463.84038 466.888929 470.936223 470.950228 468.357088 468.869629 470.231793 472.449893 479.475346 479.988961 482.207321 485.397473 486.945874 489.037768 492.10593 494.496881 484.832945 485.427844 486.789944 486.836167 464.766538 467.048466 467.497605 468.988293 471.178039 472.637407 473.455597 475.163691 462.921338 464.563917 471.191928 475.294899\"\n2015-10-25T18:52:07Z,11,486.5841021944444,true,476.405,496.764,ms,\"474.735773 477.333953 478.556869 481.787221 472.511465 473.722809 475.89078 479.423836 483.202436 486.509285 488.164496 490.191541 492.086088 495.910049 497.612928 504.084081 498.604682 500.034763 500.246489 502.827933 493.420627 493.775112 500.344778 502.119711 478.589801 481.135082 481.662673 483.649753 480.250149 481.787998 482.036947 485.316391 477.878006 479.332565 479.938799 482.35181\"\n2015-10-25T18:52:07Z,13,500.735879222222,true,488.440,513.032,ms,\"486.939833 487.198445 489.318309 490.871186 488.032061 491.013341 493.810653 495.611393 491.919121 491.952756 492.414292 492.579561 508.061274 508.913143 509.21784 509.367091 513.632125 515.351163 516.958075 517.471436 510.217615 512.306184 512.588671 513.149838 488.379733 489.473438 491.264815 493.1425 502.347026 514.24935 514.54547 523.931555 490.250703 491.030012 493.641664 495.33998\"\n2015-10-25T18:52:07Z,15,515.9984003888889,true,503.143,528.853,ms,\"503.584779 505.265078 516.052698 518.970051 497.634697 501.251417 506.332911 511.801708 508.538112 513.91614 522.610562 522.883643 520.471215 520.848206 522.936257 523.219474 532.109612 532.458793 532.472458 532.941343 519.670155 532.043368 532.440404 543.265267 500.893317 502.770655 505.380297 505.722961 512.76176 515.424003 520.040476 524.959926 500.227279 503.194782 504.713669 506.134941\"\n2015-10-25T18:52:07Z,17,526.8395140277777,true,514.993,538.686,ms,\"514.197762 516.020105 520.693469 522.301144 514.068005 518.493211 520.53101 525.340512 522.208147 523.728199 524.978707 527.067977 531.525745 543.233406 548.139896 555.684182 539.481171 539.967292 544.388491 544.808649 530.566484 532.840826 533.861457 538.040746 511.924939 516.974341 518.928084 523.583094 522.654074 522.948209 522.986956 523.248427 514.01931 517.23242 517.568914 521.987144\"\n2015-10-25T18:52:07Z,19,539.0507291666665,true,525.923,552.178,ms,\"523.349939 523.780455 524.174759 524.48123 525.890825 532.846429 533.167701 545.588106 530.901942 533.166708 534.269624 534.572319 546.185191 547.164909 547.827187 549.513828 552.639858 558.609212 559.488567 569.994594 547.08494 547.955471 548.532592 548.607695 527.97292 528.803053 528.887781 529.918224 533.905758 535.242837 535.880819 536.557647 525.759608 526.25682 548.424817 558.421885\"\n2015-10-25T18:52:07Z,21,552.2850586388889,true,539.422,565.148,ms,\"538.425995 541.067329 543.305468 547.377414 543.432778 545.288507 548.072952 548.866149 542.294955 552.661602 555.987898 558.751451 555.464507 559.233462 561.312522 563.002386 565.318493 571.030881 571.41112 573.577579 560.958456 563.443295 569.914893 581.608191 536.925179 538.965632 544.760555 548.504241 546.09743 547.006317 549.776396 552.08421 535.766792 538.419835 538.68943 543.457811\"\n2015-10-25T18:52:07Z,23,558.821662111111,true,546.703,570.940,ms,\"543.600377 544.714036 546.232596 547.326162 545.289582 545.841288 546.889297 548.060238 552.486075 552.736683 557.00284 557.920915 564.506741 565.52905 567.393947 570.618884 576.568413 577.917526 579.203745 580.793614 565.935687 570.326703 571.360715 573.670568 546.805409 549.172337 549.872558 553.414324 557.628739 560.064343 564.728378 565.842341 550.142448 551.065573 555.797626 561.120078\"\n2015-10-25T18:52:07Z,25,571.3440041111111,true,558.561,584.127,ms,\"557.514354 558.477754 560.221396 563.103561 555.844745 562.693874 563.947143 568.965246 562.021331 565.058554 566.134482 566.335125 578.121844 583.40578 585.313518 587.519356 588.610249 589.287726 593.697198 596.635889 582.645722 583.049388 583.303642 583.875527 554.949926 558.80747 559.885552 565.085825 571.101201 571.470975 572.670467 573.983817 561.440111 564.179989 564.410073 564.615338\"\n2015-10-25T18:52:07Z,27,582.0521168333333,true,569.844,594.260,ms,\"568.003749 569.731722 569.862173 572.458663 570.533556 572.154913 579.818094 583.082444 573.900936 574.354064 574.429113 574.967479 593.051175 594.188761 594.883206 595.355494 597.901383 600.959617 601.067336 602.097525 591.982437 593.25873 593.742534 594.448359 566.544472 571.626222 573.331829 573.727872 582.002468 583.335988 586.774772 589.629334 571.434539 571.737029 573.601895 573.896323\"\n2015-10-25T18:52:07Z,29,594.712190611111,true,580.788,608.636,ms,\"578.045996 583.387555 589.531967 592.987618 582.234212 583.607235 584.196382 584.472477 584.355832 585.901871 588.229362 589.908283 606.916164 607.397567 608.931336 609.536455 611.279776 616.533751 618.277707 624.472018 604.383843 604.640282 607.129567 610.011574 579.085617 581.132763 582.09737 584.795648 592.306285 595.506442 597.325408 601.63527 581.537391 583.997895 586.869945 586.979998\"\n2015-10-27T06:41:15Z,0,415.0413679166666,true,410.602,419.481,ms,\"408.732064 413.213474 414.80832 418.118759 414.484479 418.496296 419.871692 422.292421 409.848119 412.258022 413.257223 415.080769 407.483094 408.810929 410.037426 411.233226 415.626935 418.583336 419.810294 423.489122 409.624214 411.6215 413.667601 414.888945 412.132491 414.095108 414.227438 414.740396 412.202111 417.942376 419.249196 419.433628 413.882017 417.229887 420.260115 420.756222\"\n2015-10-27T06:41:15Z,4,450.39261074999996,true,445.686,455.099,ms,\"444.135401 444.745002 448.897405 449.552718 448.917125 449.206719 454.595491 458.109837 448.194029 448.50461 449.061163 450.303237 445.007629 447.982016 448.699549 449.652344 447.468687 447.889337 455.755099 462.14072 446.248379 446.383281 449.127926 449.827991 448.219357 449.559453 449.996279 452.066685 448.529551 453.272853 453.343077 456.536961 447.070069 448.293867 454.147202 462.692938\"\n2015-10-27T06:41:15Z,8,472.5240181666667,true,467.485,477.563,ms,\"463.095304 466.186459 466.595266 470.217651 471.99453 478.911607 481.978729 482.248172 466.497436 469.011051 470.073965 474.383603 469.026098 470.971566 471.030436 471.037846 467.414915 471.18551 475.780682 477.257809 467.645531 467.857263 471.195882 472.04268 471.063139 471.927564 472.528001 474.371545 473.424689 475.31886 476.187787 477.101202 469.773338 475.896112 477.526417 482.106009\"\n2015-10-27T06:41:15Z,12,494.19101297222227,true,489.438,498.944,ms,\"492.096143 492.159931 492.354154 492.881187 489.537224 490.545564 491.487683 496.739323 492.15929 492.66918 496.506885 498.053086 486.036167 487.494511 487.580484 488.508317 493.018864 500.811743 502.792324 504.569035 489.781791 491.94307 496.576426 497.139363 491.348338 491.764891 493.991641 497.467655 496.526201 497.335782 499.202879 501.97823 492.047195 494.370462 494.370638 497.03081\"\n2015-10-27T06:41:15Z,16,520.3278089166666,true,515.963,524.692,ms,\"516.982403 518.358902 519.463651 519.930916 524.463492 527.448717 528.468433 528.494232 518.178057 518.588316 518.984864 519.44609 511.067044 516.88398 517.099557 519.245863 519.407678 523.244079 524.490002 525.291545 512.963607 515.649092 520.900729 524.701607 516.274727 517.833941 519.396019 523.080158 521.294341 521.746592 523.097742 523.499856 515.015005 518.476595 519.431649 522.90164\"\n2015-10-27T06:41:15Z,20,540.4829019166665,true,535.113,545.853,ms,\"536.320933 536.977695 537.231377 541.193216 542.979194 544.963915 546.895674 551.544545 531.97606 540.097154 541.370338 544.63582 531.245661 532.735279 538.04698 538.655805 539.696031 539.805367 544.806388 547.113379 532.383619 535.433952 539.573443 539.6202 534.447766 537.856249 542.191108 543.405196 538.789906 540.095615 545.135734 549.312873 538.070233 540.723872 543.583121 548.470771\"\n2015-10-27T06:41:15Z,24,562.6163356666667,true,556.266,568.966,ms,\"554.095779 558.297727 559.681828 560.432058 568.593351 571.231272 572.030811 576.587067 553.945019 554.264346 562.243546 564.829181 554.618737 555.263868 555.841371 556.936727 561.309835 562.942091 565.541709 568.767188 554.943636 559.371912 562.217018 564.861294 557.75705 557.980161 564.185808 564.687276 561.1417 566.978927 568.84107 569.574397 561.580677 565.363103 566.829837 570.420707\"\n2015-10-27T06:41:15Z,28,587.4968991666667,true,580.360,594.634,ms,\"578.827742 585.645839 585.723292 591.903803 589.938844 591.096068 591.558628 593.34582 580.16624 581.838872 590.929426 591.394168 577.667327 588.182932 588.350128 594.017198 582.415731 592.065347 594.498399 596.499056 576.591031 577.963063 579.064439 583.097803 583.658489 584.055026 584.796249 585.807689 585.25652 586.483448 586.574654 587.455036 585.205187 593.092471 594.890439 609.831966\"\n2015-10-27T06:41:15Z,32,612.5445720833335,true,605.441,619.648,ms,\"600.655872 604.278782 605.302778 605.437462 610.14117 612.622507 612.958341 615.067423 607.992138 610.872211 616.848984 619.406305 603.728781 606.202885 606.43911 608.552514 608.355903 614.251608 620.460876 628.869216 602.820824 605.062438 612.713005 616.148912 614.165627 618.323039 618.366976 619.778142 615.675026 618.942862 619.017357 623.280345 606.817596 608.301704 615.575164 618.170712\"\n2015-10-27T06:41:15Z,36,632.7520204444445,true,626.260,639.244,ms,\"619.227346 625.753135 627.796868 630.008318 632.270273 635.272187 642.023263 643.362666 627.074683 629.115315 634.478168 635.104559 623.680797 626.214397 626.539974 628.152504 636.901906 637.94568 639.116627 639.91553 619.809073 630.028449 633.691158 638.913246 627.611317 631.544484 634.636467 638.032129 629.906628 633.670362 635.856667 640.714177 632.619919 635.326406 637.780838 638.97722\"\n2015-10-27T06:41:15Z,40,654.6112840277779,true,648.483,660.739,ms,\"650.30449 656.300046 658.00767 659.784878 654.440749 655.453497 656.218506 657.534098 650.349286 650.519076 656.043057 657.64069 645.953414 647.591761 648.573938 648.604113 653.948168 656.158076 660.380529 664.158805 647.407848 648.023441 648.251506 648.828779 648.771641 653.967991 654.841718 660.015507 650.935869 655.558726 663.388834 673.059352 653.070253 656.772237 657.230459 657.917217\"\n2015-10-27T06:41:15Z,44,676.6934863333333,true,670.952,682.435,ms,\"665.327739 668.518571 670.773137 675.949666 676.261837 676.691925 680.201728 685.19212 668.275168 677.229635 682.265596 686.229095 667.417707 673.30566 674.044393 675.338129 674.666007 674.668836 678.466738 683.513018 665.340393 676.024997 677.884937 678.517621 676.251666 676.356588 677.663097 679.298607 677.024109 680.780378 681.045722 682.497694 674.713876 675.524486 683.825817 683.878815\"\n2015-10-27T06:41:15Z,48,697.4411231666666,true,692.697,702.185,ms,\"686.651306 688.014927 692.250042 694.333721 698.337448 700.125233 701.799349 703.158414 692.361341 699.32015 699.389675 699.73706 693.820659 695.014341 696.050876 697.522993 697.875047 697.992453 701.785777 702.016437 688.362235 693.888838 695.278814 696.287542 695.077596 696.121175 703.152384 705.773057 696.280391 696.640317 699.457949 701.232148 699.714987 699.748791 701.633863 701.673098\"\n2015-10-27T06:41:15Z,52,719.3195634444446,true,713.804,724.835,ms,\"709.095249 710.73036 714.413752 718.188744 724.359663 725.867875 726.377707 727.261522 715.193628 716.7849 716.812271 718.551479 715.192672 719.362695 720.287037 723.639632 718.44594 724.070445 729.540173 730.36418 714.286572 714.522798 715.145378 715.183307 715.377343 716.472018 716.857366 718.245029 716.004668 717.107949 719.341777 720.278607 718.506388 723.443929 725.009825 725.181406\"\n2015-10-27T06:41:15Z,56,741.9357108055555,true,734.830,749.041,ms,\"729.409216 730.259473 731.474604 731.717147 747.909745 749.09601 751.330491 752.984832 737.942227 738.302755 738.61392 739.165946 737.465547 737.720516 738.216342 738.986177 736.360029 742.346889 745.95033 746.774075 735.55811 736.921017 737.706166 739.040902 742.059807 742.906097 749.345567 751.321468 740.29503 743.526921 745.675243 752.028935 744.249353 745.75463 748.465984 752.804088\"\n2015-10-27T06:41:15Z,60,767.2202769999999,true,761.698,772.743,ms,\"768.563774 775.322906 775.549191 777.293797 767.112308 768.834424 774.322352 776.045483 762.83897 763.155168 768.600472 769.315096 762.179923 764.063923 766.406876 767.376309 764.01451 766.145899 766.594505 770.201112 763.393212 764.434361 765.184158 765.921223 757.365533 757.406941 760.039073 760.112546 764.522298 764.792015 766.363917 768.307761 768.70058 771.81155 772.91626 774.721546\"\n2015-10-27T06:41:15Z,64,789.8317470555554,true,781.737,797.926,ms,\"776.52061 777.012002 777.504013 783.675962 795.726884 796.846992 803.399087 809.173709 789.737059 790.091587 790.245458 790.520917 786.898426 790.118532 791.52844 791.618859 791.347375 796.557559 797.06607 797.767579 776.324445 778.953774 779.430791 780.288628 789.68079 790.048904 790.658276 796.677704 789.098347 792.394937 793.348087 793.368884 785.950633 789.125023 790.220741 795.01581\"\n2015-10-27T06:41:15Z,68,811.6886431666668,true,805.251,818.126,ms,\"800.803549 805.659772 806.093011 813.59907 811.812508 813.036123 817.705272 820.388807 812.771637 814.838316 816.394875 819.150636 808.847759 812.173875 816.896931 818.59811 811.669128 811.802343 812.310566 813.462573 797.636675 798.534639 801.5567 801.905543 808.114943 809.639351 809.737901 812.202325 811.339929 815.673584 817.454359 819.348925 811.799079 812.813512 816.405906 818.612922\"\n2015-10-27T06:41:15Z,72,835.5138491666668,true,829.154,841.874,ms,\"827.158049 829.643292 834.924481 835.048934 839.104788 842.414126 843.997712 846.236318 829.979839 832.550019 835.993381 837.93432 831.902895 832.616378 832.652436 833.155737 835.883747 836.365608 836.82189 836.836599 823.595882 829.054474 830.139842 835.143903 825.924284 829.219677 830.859322 831.971429 836.557856 839.642646 845.216248 847.228223 835.365408 840.593664 842.045583 844.71958\"\n2015-10-27T06:41:15Z,76,858.6457253333334,true,849.621,867.670,ms,\"844.705045 848.701589 848.986724 855.654383 860.99965 870.392662 872.882039 884.595206 852.965941 857.313817 857.55109 857.752516 851.105313 854.617971 854.772546 856.630398 857.30252 867.022277 867.237898 872.369608 850.478642 850.938552 851.863472 852.699981 851.200139 853.123619 853.531636 855.676382 861.487307 863.80714 865.886853 868.876624 855.999009 856.430983 860.737732 864.948848\"\n2015-10-27T06:41:15Z,80,881.3465511666667,true,873.259,889.434,ms,\"874.191195 875.203314 878.479369 879.194537 887.55775 890.828213 898.014348 900.039112 878.160509 882.335881 885.817926 889.027592 872.554557 874.744279 875.037849 875.238328 884.708446 886.135821 888.461343 888.493491 870.291408 872.66684 874.406057 875.369084 872.50446 873.018438 873.380273 873.606888 884.334737 886.54023 886.749461 887.144182 880.905705 882.275969 884.542508 886.515742\"\n2015-10-27T06:41:15Z,84,904.9195363888889,true,898.698,911.141,ms,\"893.643251 901.899864 903.256952 906.248619 910.5165 913.119145 914.046444 914.532553 900.297573 902.208752 902.464565 905.32882 898.295665 902.349953 907.538048 912.110999 904.872702 910.350358 911.004494 912.452484 897.324994 897.865427 899.688778 901.566628 895.111544 896.467816 900.341985 900.570519 903.836337 907.743974 908.858278 912.241935 904.23216 905.446404 907.765323 911.503467\"\n2015-10-27T06:41:15Z,88,927.8162435555556,true,921.254,934.379,ms,\"920.363966 924.196982 924.696004 926.440826 931.310014 931.894856 931.999182 933.644888 925.719546 927.912311 929.075582 930.866414 922.511379 922.700249 924.764684 928.833592 927.271361 932.733912 936.310191 939.682148 912.647148 921.920405 922.043296 923.678207 919.197539 919.710771 920.875707 922.957066 931.826475 935.035648 935.116014 937.586635 928.430373 930.743384 931.683217 935.004796\"\n2015-10-27T06:41:15Z,92,953.1078724722223,true,942.884,963.332,ms,\"935.197602 939.087171 942.31304 945.091484 957.41258 963.751873 968.12652 968.755355 949.352485 952.15056 952.837992 953.002241 948.816871 949.792025 951.051293 953.110549 958.083757 960.582378 964.2674 965.539771 941.384732 942.773377 942.898641 943.955149 941.290831 942.808632 944.476759 946.633197 954.086987 957.690667 957.993036 963.079338 957.301563 964.123849 965.67389 967.389814\"\n2015-10-27T06:41:15Z,96,976.7720640555557,true,969.650,983.894,ms,\"964.984432 965.514734 966.987619 967.673542 981.187572 984.294368 987.372297 990.639544 972.736883 973.124856 979.07054 979.280676 972.362205 973.280371 974.443205 974.930462 972.226752 976.964538 979.454418 987.557673 972.657005 975.972597 977.102663 983.386613 966.67378 971.132266 972.34219 978.212012 974.677612 975.774272 977.538828 977.644414 980.715437 981.915307 985.674947 988.287676\"\n2015-10-27T06:41:15Z,100,997.848937638889,true,989.286,1006.412,ms,\"984.238214 984.499033 985.191703 985.659119 1000.098305 1010.409638 1012.137004 1013.22965 1002.075273 1004.017147 1007.187067 1008.504122 992.379398 992.91265 997.474537 1004.447223 996.437855 997.798386 998.784788 998.859951 988.301005 989.556394 989.741354 990.285164 991.771439 991.991832 995.470008 997.987948 994.243101 997.860734 999.409403 1003.617528 1001.486427 1003.516002 1004.078512 1006.903841\"\ndate,param-LoC,value,success,cilo,cihi,units,complete\n2015-10-25T18:52:07Z,1,58.489967611111105,true,56.822,60.157,ms,\"57.74898 58.97639 60.503893 60.87485 55.694925 57.557511 58.368791 58.808779 57.622245 58.35661 58.899942 59.991821 55.513258 56.775191 57.74311 58.282872 56.065092 57.779155 58.268957 60.971346 56.685464 56.911369 58.288663 58.335608 57.017855 58.210443 59.370367 59.53122 59.12273 59.139459 59.663451 60.019997 56.848356 59.39731 59.702657 62.590167\"\n2015-10-25T18:52:07Z,3,152.59583063888886,true,149.385,155.806,ms,\"155.613672 155.781311 160.967004 161.671224 149.29123 150.057563 150.83066 152.19196 150.683263 151.101562 152.510006 153.772383 150.101556 150.476446 150.667977 151.05186 149.743916 150.267107 150.424885 151.381571 149.517967 151.634602 153.914743 155.018287 151.176748 151.615266 154.083647 154.790045 150.346714 150.353318 151.280124 151.741888 153.128059 153.34288 155.217945 157.700514\"\n2015-10-25T18:52:07Z,5,249.76175838888892,true,244.852,254.671,ms,\"256.980718 260.302869 260.517263 261.247651 244.18326 248.507294 248.596602 249.754448 247.67011 249.682688 250.99698 254.519075 244.784686 245.359769 249.352023 253.705487 244.597577 245.818427 245.961208 246.880831 243.617835 246.691041 247.446903 247.653781 247.299326 248.186826 249.356717 249.684177 246.620063 247.449628 253.474724 255.482904 249.13195 249.836586 249.962214 250.109661\"\n2015-10-25T18:52:07Z,7,343.97024272222217,true,338.124,349.816,ms,\"351.583893 354.358962 355.242166 355.47644 336.790518 337.398498 338.469952 339.010408 344.702944 346.96316 347.244842 348.577024 336.629561 341.474808 341.708642 342.499221 338.170843 338.599252 340.531681 342.954103 337.207424 338.598164 343.284191 343.712567 341.591839 341.906669 343.42831 344.250593 340.664087 340.969854 343.80771 347.537848 345.54683 347.52774 352.068179 352.439815\"\n2015-10-25T18:52:07Z,9,440.1093524444445,true,433.731,446.488,ms,\"448.755184 450.413203 450.520146 450.663744 429.478659 432.224227 433.748443 438.527532 437.971965 439.273048 440.286577 442.711809 430.97935 431.082389 435.234855 438.246534 434.817814 435.997286 438.704752 440.605013 433.777769 436.317118 437.259165 438.277084 442.009445 444.232939 444.564376 445.877927 433.188184 439.556691 441.377516 442.352294 443.550291 446.522978 446.554523 448.275858\"\n2015-10-25T18:52:07Z,11,535.78994725,true,527.833,543.747,ms,\"544.84073 547.181516 547.521361 548.075436 523.842348 530.10267 530.173103 534.455631 536.273188 541.504977 542.304259 546.266537 526.476324 526.856477 529.630779 530.040575 527.229936 530.410477 530.928082 534.544501 524.934595 527.98233 529.068783 530.226017 534.180804 534.606412 535.569781 537.106404 531.609462 536.217716 538.833804 540.281205 542.564091 543.204514 545.597598 547.795678\"\n2015-10-25T18:52:07Z,13,633.33275525,true,622.080,644.585,ms,\"650.926803 654.277851 654.51792 655.951162 623.342509 625.772487 625.829745 626.940679 636.426574 636.48998 641.090547 642.005679 619.149243 622.356762 622.78951 623.063912 622.659251 626.149391 627.899361 630.814236 619.443292 622.273925 628.54984 629.274559 628.603779 633.139145 635.468949 644.41015 627.197776 628.986808 631.099464 631.526184 638.842914 643.253633 644.593935 644.861234\"\n2015-10-25T18:52:07Z,15,731.7966273055553,true,718.169,745.424,ms,\"753.433116 755.309527 759.303474 759.751046 719.192433 730.761446 732.452557 734.001901 730.322561 741.092656 741.871666 752.899807 716.074433 716.828004 717.349118 718.486568 720.463088 722.305188 724.351659 724.608766 718.992617 720.863296 724.311185 728.15732 727.419599 729.97088 731.492581 733.864955 720.538769 722.221424 725.568643 726.123612 735.659427 742.36268 743.12073 743.151851\"\n2015-10-25T18:52:07Z,17,828.4135213333334,true,814.338,842.489,ms,\"846.731541 849.637886 855.222658 863.817826 817.705281 817.857455 822.295844 825.91789 821.696966 830.33507 832.617878 839.622282 806.148187 812.053773 816.076989 818.906878 816.538803 822.928567 829.224593 833.488084 811.877197 813.401456 819.508536 821.430774 828.848339 829.496004 843.903312 844.541026 819.331518 820.295143 822.944799 825.004149 834.203015 835.444251 836.7482 837.084598\"\n2015-10-25T18:52:07Z,19,929.3382182500001,true,912.675,946.001,ms,\"959.776137 965.082868 966.082229 967.501846 910.266381 915.029822 918.892885 926.057185 921.87975 925.586766 930.582826 932.63689 912.974006 918.142828 918.365134 926.13687 915.330098 920.536779 924.963132 925.041092 908.778904 913.997286 914.288989 918.08441 926.441255 936.994284 937.781796 938.43433 920.436151 924.196537 929.788685 929.960492 934.284313 939.59214 939.951525 942.299236\"\n2015-10-25T18:52:07Z,21,1028.2098368055558,true,1011.353,1045.067,ms,\"1051.502294 1057.79953 1060.496601 1062.897213 1009.947613 1010.52585 1017.486245 1021.253298 1034.349073 1034.39659 1036.13581 1036.217095 1008.991895 1010.997844 1011.543848 1012.897282 1014.54619 1017.276724 1019.574249 1025.295958 1009.838102 1013.007391 1013.236472 1013.366095 1024.131585 1031.619857 1042.238693 1045.327849 1020.647915 1022.668632 1027.878799 1032.774936 1039.847941 1040.23042 1041.919142 1042.689094\"\n2015-10-25T18:52:07Z,23,1125.1872338333333,true,1107.785,1142.590,ms,\"1157.859456 1160.7949 1161.608405 1163.436028 1107.721879 1109.493926 1110.298992 1113.486333 1119.435049 1122.5353 1124.001171 1125.84549 1108.435281 1112.593009 1113.649276 1114.926398 1115.308146 1118.046891 1118.203156 1118.816011 1104.9367 1113.596838 1114.267143 1119.313484 1120.327895 1123.351358 1130.919565 1134.296531 1115.175408 1118.360444 1122.68317 1125.03128 1140.410347 1141.078621 1142.448313 1144.048224\"\n2015-10-25T18:52:07Z,25,1224.5312717777774,true,1206.328,1242.734,ms,\"1254.885223 1259.636856 1259.895826 1268.268939 1203.154498 1204.581821 1205.37427 1205.795905 1222.616573 1225.194458 1226.616069 1228.719145 1207.125928 1211.555104 1214.087996 1216.81774 1214.957452 1215.119171 1216.513891 1217.450885 1202.631106 1204.781433 1212.712846 1225.279873 1228.750499 1229.210237 1231.911297 1232.357944 1217.081796 1218.374931 1221.82341 1223.936537 1234.313381 1239.74608 1240.241778 1241.604886\"\n2015-10-25T18:52:07Z,27,1321.5132915000004,true,1299.043,1343.984,ms,\"1349.624783 1354.348463 1362.302597 1367.96795 1295.638946 1298.17484 1299.362107 1302.287298 1319.41459 1320.342916 1338.419635 1343.422269 1290.732993 1291.132792 1298.058193 1308.294052 1301.765993 1306.020476 1311.85058 1318.932764 1298.012887 1305.511552 1306.209921 1314.76706 1322.508965 1325.022828 1334.954569 1350.035363 1317.395855 1320.649202 1326.849039 1331.680182 1327.653423 1328.757966 1337.027027 1349.348418\"\n2015-10-25T18:52:07Z,29,1419.7042026666666,true,1394.403,1445.005,ms,\"1454.33682 1472.69038 1473.266803 1486.906638 1382.995592 1384.138659 1401.358016 1411.343162 1416.660329 1417.399723 1422.269179 1424.485119 1394.651367 1399.924997 1403.160837 1405.497726 1405.179081 1407.070427 1413.472786 1414.543034 1392.920003 1398.65753 1410.198523 1412.791164 1421.514703 1425.722205 1426.247942 1433.097069 1411.36822 1412.045113 1413.531557 1414.161946 1433.054967 1435.574306 1437.491748 1439.623625\"\n2015-10-27T06:41:15Z,0,9.000197138888892,true,8.576,9.425,ms,\"8.74771 8.889511 9.554226 9.692696 8.837348 8.89754 9.100714 9.330685 8.712054 8.796931 8.896021 8.990891 8.464103 8.545587 8.698846 8.755286 8.65787 8.941903 9.286464 9.670935 8.807343 8.929337 9.32429 9.76568 8.88192 8.979509 9.287878 9.3107 8.544568 8.572081 8.577487 8.661698 8.640558 8.730965 9.739487 9.786275\"\n2015-10-27T06:41:15Z,4,201.97530127777773,true,199.103,204.847,ms,\"199.558748 200.773725 201.649981 203.657209 201.656694 205.733872 205.82346 207.904472 201.432896 202.526822 206.835139 208.065619 198.357462 198.660197 200.069155 200.970217 199.222103 200.456608 200.975817 202.780082 202.741589 202.967282 203.046556 203.164543 202.47384 202.80463 203.645217 204.639125 198.182327 199.332142 200.08707 201.704044 197.890823 198.093534 201.096755 202.131091\"\n2015-10-27T06:41:15Z,8,396.47351777777783,true,389.616,403.331,ms,\"390.513525 391.335509 396.443275 400.196474 394.456377 403.425883 403.904655 406.294195 395.875593 396.028885 400.223164 404.246646 388.046462 388.594221 388.941908 389.85198 394.303516 394.650483 395.390445 396.03472 397.46187 398.37856 408.041718 415.411143 397.658277 398.161955 402.024965 404.314468 388.421555 391.37353 391.544061 392.091709 389.77637 390.14507 394.684256 394.799217\"\n2015-10-27T06:41:15Z,12,589.9498575555554,true,581.771,598.129,ms,\"583.343719 586.202586 586.543501 586.656318 596.125893 597.500134 597.603428 599.09191 592.766267 592.900656 594.281955 594.785119 579.140696 579.782507 580.112641 583.248371 587.24933 587.718768 588.271231 590.123596 589.433243 594.247386 597.140035 597.58493 591.186495 591.442412 592.461387 599.040257 575.062205 576.679905 577.118792 578.088103 595.73548 597.503779 599.869192 602.152645\"\n2015-10-27T06:41:15Z,16,790.6740289166668,true,777.577,803.771,ms,\"785.325896 786.909169 793.511983 795.396976 787.496632 787.55066 793.792084 800.787592 790.455622 795.41324 796.1576 798.980931 766.1892 767.714325 779.899704 781.724897 786.249272 791.87295 792.788027 793.122661 802.330321 803.137039 803.846405 804.456959 802.415898 807.081021 811.926414 818.218663 767.385119 776.438503 779.750127 787.804484 777.508887 780.396838 784.202842 786.0261\"\n2015-10-27T06:41:15Z,20,990.8235298333335,true,978.549,1003.098,ms,\"986.948382 991.198704 991.935067 996.762982 995.605049 1000.267808 1002.854501 1005.923471 987.69673 991.868423 994.939107 1000.095643 970.151209 973.559445 973.616345 974.148032 988.612964 991.037317 991.605295 991.614989 1000.804551 1005.754081 1006.542957 1013.502495 994.299766 1000.678562 1003.377083 1003.510705 971.714992 977.696129 979.245457 980.902643 980.354226 980.385184 982.041284 988.395496\"\n2015-10-27T06:41:15Z,24,1183.7082105277777,true,1169.012,1198.404,ms,\"1179.518695 1187.176801 1188.192492 1193.083182 1184.813665 1192.407955 1194.039342 1199.124103 1176.42121 1180.639699 1183.253789 1183.853924 1156.139995 1160.298025 1164.089354 1165.789769 1175.252687 1178.920291 1184.023392 1185.122829 1194.598578 1198.454931 1201.119823 1202.127503 1194.330166 1198.757113 1204.463489 1216.527634 1168.750091 1169.315657 1176.184577 1180.421791 1168.469202 1172.973884 1173.958685 1180.881256\"\n2015-10-27T06:41:15Z,28,1376.3551954166671,true,1360.627,1392.083,ms,\"1372.283349 1376.901299 1378.098572 1379.550737 1382.301691 1382.556764 1385.380427 1385.532181 1370.552916 1378.888177 1386.007248 1387.968227 1342.27436 1348.671397 1349.384822 1351.14533 1380.198302 1385.993674 1390.212529 1391.152929 1390.53664 1391.188171 1392.986045 1395.481925 1380.529311 1380.636176 1392.991024 1396.876902 1362.496635 1369.416811 1371.455132 1373.940504 1351.826492 1362.081341 1364.346049 1366.942946\"\n2015-10-27T06:41:15Z,32,1572.6878917777778,true,1552.295,1593.081,ms,\"1565.016232 1566.050039 1573.879692 1576.672523 1566.761994 1578.319342 1584.494679 1594.517184 1574.16463 1577.930198 1579.923843 1582.118268 1532.324924 1535.408154 1546.15218 1548.471379 1565.543687 1573.424937 1574.672659 1575.901256 1591.862813 1592.085522 1593.392969 1594.656055 1592.929549 1601.94984 1602.76523 1609.169736 1551.451396 1553.861451 1560.54671 1571.012908 1551.512014 1553.043714 1559.098476 1565.677921\"\n2015-10-27T06:41:15Z,36,1768.9247468888889,true,1746.922,1790.927,ms,\"1757.905413 1760.855045 1765.612472 1771.028816 1777.097228 1785.920493 1786.350781 1797.810871 1770.026803 1777.691775 1783.712055 1797.384356 1725.723117 1727.374228 1742.277197 1750.484862 1755.301054 1761.73884 1764.09319 1767.957363 1788.799638 1789.863732 1793.713418 1793.75533 1781.244768 1786.12155 1792.900233 1799.050085 1735.317879 1741.345333 1760.335707 1773.429957 1746.659291 1755.052561 1757.698072 1759.657375\"\n2015-10-27T06:41:15Z,40,1971.5482154166666,true,1946.460,1996.636,ms,\"1963.894078 1964.519321 1969.825341 1969.848942 1981.565629 1982.814351 1984.261525 1985.768453 1967.960777 1970.653981 1977.234185 1983.009205 1914.975815 1928.480416 1939.14373 1945.761498 1974.493163 1974.660017 1979.104494 1980.445341 1991.471524 1998.618334 1999.387417 2007.471272 2002.817221 2003.756582 2004.345838 2005.135171 1950.10549 1955.827075 1964.239954 1973.621008 1935.839357 1944.544511 1945.083705 1955.051034\"\n2015-10-27T06:41:15Z,44,2170.9440017499996,true,2144.848,2197.040,ms,\"2162.09012 2167.7453 2173.770228 2183.34115 2164.926524 2175.057881 2178.345906 2193.647922 2173.64831 2175.654084 2176.635154 2177.144244 2138.49134 2141.617262 2147.090065 2148.660087 2150.574428 2152.577937 2158.538894 2161.956097 2203.526616 2212.094939 2217.911822 2224.867056 2191.662403 2196.83106 2198.961232 2207.199374 2132.639002 2139.245991 2158.505706 2171.300123 2146.155158 2147.729606 2150.10151 2153.739532\"\n2015-10-27T06:41:15Z,48,2364.307588972222,true,2339.784,2388.831,ms,\"2343.363747 2361.604861 2361.884987 2368.831741 2355.482073 2367.723959 2372.853755 2375.179473 2360.35593 2361.982394 2380.392609 2380.420903 2323.185828 2330.435961 2334.286127 2336.337442 2355.613928 2357.952465 2368.188242 2373.134553 2391.294883 2395.750021 2396.010372 2397.001968 2384.016761 2397.185756 2398.483607 2411.288314 2347.091844 2351.433646 2357.089677 2367.125568 2328.712753 2337.804057 2338.156971 2347.416027\"\n2015-10-27T06:41:15Z,52,2577.5526528611113,true,2537.440,2617.665,ms,\"2551.799384 2553.758177 2555.484541 2558.646087 2553.26678 2557.283789 2567.477408 2568.180378 2541.818519 2557.36863 2559.827554 2567.586217 2647.941075 2664.44939 2664.989324 2673.780329 2553.979429 2565.338086 2574.82382 2576.701855 2603.397391 2606.575094 2609.377575 2615.836306 2586.553747 2588.553852 2594.926583 2595.717644 2531.61351 2551.008526 2555.972194 2556.985017 2531.689465 2545.749036 2548.989199 2554.449592\"\n2015-10-27T06:41:15Z,56,2773.01891375,true,2730.798,2815.240,ms,\"2735.925233 2746.937833 2755.309559 2761.032816 2764.363533 2766.753296 2769.60928 2770.309896 2740.82912 2755.970593 2769.63427 2785.522002 2837.76021 2844.191254 2863.523393 2870.724346 2733.374725 2734.316574 2738.686731 2743.783225 2785.995381 2801.052052 2813.736031 2815.676975 2794.645588 2799.287708 2800.750081 2808.70329 2731.762219 2743.715228 2752.002362 2758.068648 2720.849118 2726.684257 2741.328018 2745.86605\"\n2015-10-27T06:41:15Z,60,2971.487447527778,true,2920.351,3022.624,ms,\"2945.019058 2953.409848 2958.140206 2958.457571 2953.073047 2964.216615 2964.262656 2971.519358 2946.616369 2956.892044 2968.242922 2983.182934 3068.372237 3080.176733 3080.817887 3086.161609 2934.845733 2938.827749 2942.803498 2946.246716 3001.973106 3007.963074 3008.454877 3017.506365 2973.241379 2976.135802 2980.823006 2986.876729 2925.490266 2936.68153 2951.287696 2953.839124 2891.837949 2893.812401 2919.764716 2946.575301\"\n2015-10-27T06:41:15Z,64,3180.747725916667,true,3121.052,3240.443,ms,\"3145.068298 3150.525274 3159.809576 3161.470355 3151.112055 3154.678076 3156.962803 3157.420914 3158.333187 3159.806152 3171.296304 3171.662673 3276.010213 3276.709371 3278.719263 3280.883846 3128.357405 3144.371835 3152.317833 3168.812065 3260.679064 3273.461773 3280.931565 3294.430342 3168.207294 3172.533627 3190.658019 3195.449093 3115.167989 3145.291878 3146.102204 3146.438571 3118.564309 3126.094284 3128.437709 3140.142914\"\n2015-10-27T06:41:15Z,68,3392.261593027778,true,3325.044,3459.479,ms,\"3329.519209 3334.207223 3367.246793 3367.435293 3349.845922 3361.540714 3377.060387 3381.375302 3351.761513 3357.900978 3369.220084 3386.275157 3469.390659 3474.659349 3500.337744 3519.29716 3330.482411 3336.349459 3348.473978 3352.828232 3486.565958 3496.223171 3508.999395 3513.033529 3386.14571 3388.43525 3394.781353 3397.003611 3399.898165 3401.974337 3402.391408 3405.701644 3313.659036 3315.747646 3320.071968 3325.577601\"\n2015-10-27T06:41:15Z,72,3590.949332638888,true,3524.525,3657.373,ms,\"3564.843266 3566.873934 3572.449579 3577.240321 3525.702021 3552.386878 3558.218831 3575.043056 3536.016365 3553.114156 3559.504245 3561.905919 3668.557753 3685.653827 3691.63583 3691.956132 3545.444004 3550.946779 3564.087374 3570.599965 3703.49053 3704.712582 3705.541296 3709.175144 3564.197345 3576.912552 3580.390506 3582.542433 3589.012404 3602.362735 3608.892621 3610.169792 3496.221555 3517.011937 3520.521052 3530.841256\"\n2015-10-27T06:41:15Z,76,3797.2104746666655,true,3722.161,3872.259,ms,\"3779.666732 3792.759835 3795.829637 3814.39688 3730.235316 3748.75465 3766.172613 3769.164692 3748.410293 3749.11392 3756.297591 3762.033732 3896.538077 3900.036063 3900.729515 3905.761046 3723.273087 3733.575759 3733.703144 3736.240454 3907.963229 3911.467098 3920.673214 3925.717838 3796.383093 3809.341957 3810.802775 3818.123545 3805.756513 3806.844472 3809.771353 3813.934939 3692.970664 3704.551108 3709.676969 3712.905285\"\n2015-10-27T06:41:15Z,80,3991.8661936666663,true,3919.812,4063.920,ms,\"3943.435025 3953.549213 3961.373643 3973.832646 3967.832819 3970.205479 3977.068144 3979.875111 3946.090313 3975.396086 3977.276986 3982.141469 4082.194698 4090.73615 4095.129257 4102.182975 3926.894713 3931.263298 3937.865306 3938.132894 4073.580561 4104.44621 4117.993819 4124.198699 3987.130245 3991.052459 4000.885695 4002.961318 4000.758953 4002.178438 4004.594655 4008.14801 3870.105332 3889.601353 3905.67326 3911.39774\"\n2015-10-27T06:41:15Z,84,4201.168262666668,true,4120.009,4282.328,ms,\"4173.808029 4185.297297 4190.515766 4190.576813 4144.127214 4151.358656 4160.307744 4173.857683 4150.708529 4154.596584 4154.842291 4158.835344 4306.461582 4306.923012 4307.183133 4309.335826 4128.466774 4133.385164 4154.024916 4158.480243 4332.188766 4343.96646 4348.365776 4366.807441 4167.096519 4187.359572 4191.237112 4192.910234 4190.123821 4210.65433 4225.948735 4238.103994 4101.42585 4115.137657 4117.721713 4119.916876\"\n2015-10-27T06:41:15Z,88,4402.311980861111,true,4315.002,4489.622,ms,\"4347.752235 4361.967422 4372.026334 4375.665439 4347.27787 4367.025872 4382.403275 4401.293856 4358.567898 4360.146631 4386.589552 4399.025421 4496.22539 4524.796129 4527.234541 4539.039129 4273.093245 4319.30657 4338.542621 4361.038539 4517.972282 4521.036252 4547.462015 4552.589901 4405.684437 4409.434611 4410.309541 4422.107684 4412.687707 4426.775716 4432.565896 4436.364432 4285.194247 4287.489588 4288.232069 4288.306964\"\n2015-10-27T06:41:15Z,92,4610.875641555557,true,4514.414,4707.337,ms,\"4438.1231 4563.436278 4595.065892 4769.600347 4549.756686 4564.553109 4566.385579 4574.191096 4570.295525 4576.361467 4586.464006 4601.17321 4722.234356 4732.612182 4744.525449 4763.455235 4541.937545 4548.161708 4549.152841 4554.270578 4731.236424 4733.600176 4735.994558 4736.344585 4577.590974 4591.948561 4608.341966 4628.547078 4622.89365 4639.946598 4650.699508 4661.210476 4486.454471 4488.68519 4489.429418 4496.843274\"\n2015-10-27T06:41:15Z,96,4826.243931972222,true,4714.852,4937.636,ms,\"4973.963839 4990.964143 4996.927846 5008.015724 4756.354061 4764.959502 4770.563621 4770.885785 4742.691365 4745.150031 4749.012993 4751.252079 4933.481271 4933.737194 4954.702537 4959.404767 4728.285598 4731.963407 4736.643507 4744.748407 4917.143082 4937.309701 4943.979625 4949.822047 4789.563665 4806.640663 4807.362482 4809.812569 4798.684333 4817.729203 4831.968664 4844.823801 4667.418999 4679.636511 4689.257171 4709.921358\"\n2015-10-27T06:41:15Z,100,5025.191250361112,true,4915.332,5135.051,ms,\"5175.682344 5204.443798 5206.360829 5229.141214 4955.299117 4957.339513 4971.285105 4971.809301 4964.027096 4967.09779 4974.557247 4975.429656 5091.607523 5120.486346 5141.020427 5148.467165 4903.305205 4920.389625 4921.591487 4922.833575 5101.798512 5123.492952 5135.226863 5140.118172 5000.584351 5003.401365 5005.907608 5015.60539 5015.258661 5023.206869 5028.648165 5035.298936 4862.608211 4886.943594 4903.173952 4903.437049\"\n\n\n\n",
			"file": "/Users/vjovanov/Desktop/tmp/report/js/ScalaMeter/data.js",
			"file_size": 54928,
			"file_write_time": 130904308510000000,
			"settings":
			{
				"buffer_size": 54928,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/papers/2015-dsldi/paper.tex",
			"settings":
			{
				"buffer_size": 7911,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/reification/src/test/scala/LMSReification.scala",
			"settings":
			{
				"buffer_size": 797,
				"line_ending": "Unix",
				"name": "LMSReification.scala"
			}
		},
		{
			"file": "/Users/vjovanov/code/reification/tmp/report/js/ScalaMeter/data.js",
			"settings":
			{
				"buffer_size": 20872,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/Desktop/Numbers.csv",
			"settings":
			{
				"buffer_size": 2466,
				"line_ending": "CR"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/Base.scala",
			"settings":
			{
				"buffer_size": 3373,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 19080 files for \"toimplement\" (case sensitive)\n\n/Users/vjovanov/dissertation/head/settings_custom.tex:\n  136  \\renewcommand{\\sout}[1]{}\n  137  \\fi\n  138: \\newcommand{\\toimplement}{0}{}\n  139  \n  140  \n\n/Users/vjovanov/dissertation/main/p1_dsl_embedding.tex:\n  709    The difference is that in Scala, the \\code{def} keyword is used to define universal quantification and possibly recursion.\n  710    This is similar to the \\code{let} and \\code{letrec} constructs in other functional languages. This translation is optional\n  711:   as in some DSLs it is more concise to reuse method application of the host language. \\toimplement\n  712  \n  713  % Discuss control structures.\n  ...\n  737  \n  738    For DSLs that require extension of these methods we provide an alternative translation\n  739:   of universal methods into the name mangled infix form:%\\toimplement\n  740  \n  741    \\infyyax{}\n  ...\n 1331  \\emph{no guarantees} for this type of the translation.\n 1332  \n 1333: %\\toimplement Generics\n 1334  \n 1335  \\end{itemize}\n\n4 matches across 2 files\n\n\nSearching 19080 files for \"toimplement\" (case sensitive)\n\n/Users/vjovanov/dissertation/head/settings_custom.tex:\n  136  \\renewcommand{\\sout}[1]{}\n  137  \\fi\n  138: \\newcommand{\\toimplement}{0}{}\n  139  \n  140  \n\n/Users/vjovanov/dissertation/main/p1_dsl_embedding.tex:\n  711    as in some DSLs it is more concise to reuse method application of the host language.\n  712  \n  713:   %\\toimplement\n  714  \n  715  % Discuss control structures.\n  ...\n  739  \n  740    For DSLs that require extension of these methods we provide an alternative translation\n  741:   of universal methods into the name mangled infix form:%\\toimplement\n  742  \n  743    \\infyyax{}\n  ...\n 1333  \\emph{no guarantees} for this type of the translation.\n 1334  \n 1335: %\\toimplement Generics\n 1336  \n 1337  \\end{itemize}\n\n4 matches across 2 files\n\n\nSearching 19079 files for \"rompf_lightweight_2012\" (case sensitive)\n\n/Users/vjovanov/dissertation/main/p0_introduction.tex:\n  182  Deeply embedded DSLs have \\emph{high performance}. An important advantage of deep embeddings over shallow ones is that DSL\n  183    terms can be easily manipulated by the host language. This enables domain-specific\n  184:   optimizations~\\cite{rompf_lightweight_2012,rompf_optimizing_2013}\n  185    that lead to orders-of-magnitude improvements in program performance, and\n  186    multi-target code generation~\\cite{brown_heterogeneous_2011}.\n  ...\n  429  In this section we provide background information necessary for understanding this\n  430  thesis. We briefly explain the core concepts of Lightweight Modular Staging\n  431: \\cite{rompf_lightweight_2012,rompf_optimizing_2013} and Scala Macros\n  432  \\cite{burmako_scala_2013}. Throughout the paper we assume familiarity with\n  433  the basics of the Scala Programming Language~\\cite{odersky_scala_2004}.\n\n/Users/vjovanov/dissertation/main/p1_dsl_embedding.tex:\n 1107  designates IR types). Instead of constructing an IR node for function application, such functions reify the\n 1108  whole body of the function starting with IR nodes passed as arguments. The effect of such\n 1109: reification is equivalent to inlining. This function representation is used in LMS~\\cite{rompf_lightweight_2012} by default\n 1110  and we use it in \\figref{fig:translation-example}. The translation functions are defined as:\n 1111  \\renewcommand*{\\mathellipsis}{%\n\n\n\nSearching 19079 files for \"rompf_lightweight_2012\" (case sensitive)\n\n/Users/vjovanov/dissertation/main/p0_introduction.tex:\n  182  Deeply embedded DSLs have \\emph{high performance}. An important advantage of deep embeddings over shallow ones is that DSL\n  183    terms can be easily manipulated by the host language. This enables domain-specific\n  184:   optimizations~\\cite{rompf_lightweight_2012,rompf_optimizing_2013}\n  185    that lead to orders-of-magnitude improvements in program performance, and\n  186    multi-target code generation~\\cite{brown_heterogeneous_2011}.\n  ...\n  429  In this section we provide background information necessary for understanding this\n  430  thesis. We briefly explain the core concepts of Lightweight Modular Staging\n  431: \\cite{rompf_lightweight_2012,rompf_optimizing_2013} and Scala Macros\n  432  \\cite{burmako_scala_2013}. Throughout the paper we assume familiarity with\n  433  the basics of the Scala Programming Language~\\cite{odersky_scala_2004}.\n\n/Users/vjovanov/dissertation/main/p1_dsl_embedding.tex:\n 1107  designates IR types). Instead of constructing an IR node for function application, such functions reify the\n 1108  whole body of the function starting with IR nodes passed as arguments. The effect of such\n 1109: reification is equivalent to inlining. This function representation is used in LMS~\\cite{rompf_lightweight_2012} by default\n 1110  and we use it in \\figref{fig:translation-example}. The translation functions are defined as:\n 1111  \\renewcommand*{\\mathellipsis}{%\n\n3 matches across 2 files\n\n\nSearching 19079 files for \"def fun\" (case sensitive)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Functions.scala:\n   12  \n   13    def doLambda[A:Manifest,B:Manifest](fun: Rep[A] => Rep[B])(implicit pos: SourceContext): Rep[A => B]\n   14:   implicit def fun[A:Manifest,B:Manifest](f: Rep[A] => Rep[B]): Rep[A=>B] = doLambda(f)\n   15  \n   16    implicit def toLambdaOps[A:Manifest,B:Manifest](fun: Rep[A => B]) = new LambdaOps(fun)\n   ..\n   24  \n   25  trait TupledFunctions extends Functions with TupleOps {\n   26:   implicit def fun[B:Manifest](f: () => Rep[B]): Rep[Unit=>B] =\n   27      fun((t: Rep[Unit]) => f())\n   28:   implicit def fun[A1:Manifest,A2:Manifest,B:Manifest](f: (Rep[A1], Rep[A2]) => Rep[B]): Rep[((A1,A2))=>B] =\n   29      fun((t: Rep[(A1,A2)]) => f(tuple2_get1(t), tuple2_get2(t)))\n   30:   implicit def fun[A1:Manifest,A2:Manifest,A3:Manifest,B:Manifest](f: (Rep[A1], Rep[A2], Rep[A3]) => Rep[B]): Rep[((A1,A2,A3))=>B] =\n   31      fun((t: Rep[(A1,A2,A3)]) => f(tuple3_get1(t), tuple3_get2(t), tuple3_get3(t)))\n   32:   implicit def fun[A1:Manifest,A2:Manifest,A3:Manifest,A4:Manifest,B:Manifest](f: (Rep[A1], Rep[A2], Rep[A3], Rep[A4]) => Rep[B]): Rep[((A1,A2,A3,A4))=>B] =\n   33      fun((t: Rep[(A1,A2,A3,A4)]) => f(tuple4_get1(t), tuple4_get2(t), tuple4_get3(t), tuple4_get4(t)))\n   34:   implicit def fun[A1:Manifest,A2:Manifest,A3:Manifest,A4:Manifest,A5:Manifest,B:Manifest](f: (Rep[A1], Rep[A2], Rep[A3], Rep[A4], Rep[A5]) => Rep[B]): Rep[((A1,A2,A3,A4,A5))=>B] =\n   35      fun((t: Rep[(A1,A2,A3,A4,A5)]) => f(tuple5_get1(t), tuple5_get2(t), tuple5_get3(t), tuple5_get4(t), tuple5_get5(t)))\n   36  \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestCrossStage.scala:\n   22      def test(x: Rep[Int]): Rep[Unit]\n   23      \n   24:     implicit def funToRep[T:Manifest,U:Manifest](x:T=>U): Rep[T=>U]\n   25      implicit def abToRep[T:Manifest](x:ArrayBuffer[T]): Rep[ArrayBuffer[T]]\n   26    }\n   ..\n   29        with IfThenElseExp with RangeOpsExp with PrintExp with ScalaCompile { self => \n   30  \n   31:     def funToRep[T:Manifest,U:Manifest](x:T=>U): Rep[T=>U] = staticData(x)\n   32      def abToRep[T:Manifest](x:ArrayBuffer[T]): Rep[ArrayBuffer[T]] = staticData(x)\n   33  \n\n/Users/vjovanov/code/scala/spec/01-lexical-syntax.md:\n  270  \n  271  ```scala\n  272: def func(x: Int)\n  273          (y: Int) = x + y\n  274  ```\n  ...\n  278  \n  279  ```scala\n  280: def func(x: Int)\n  281  \n  282          (y: Int) = x + y\n\n/Users/vjovanov/code/scala/src/build/genprod.scala:\n   29    def productFiles  = arities map Product.make\n   30    def tupleFiles    = arities map Tuple.make\n   31:   def functionFiles = (0 :: arities) map Function.make\n   32    def absFunctionFiles = (0 :: arities) map AbstractFunction.make\n   33    def allfiles      = productFiles ::: tupleFiles ::: functionFiles ::: absFunctionFiles\n   ..\n   54      def constructorArgs = (targs).map( _.toLowerCase ) mkString \", \"\n   55      def fields          = (mdefs, targs).zipped.map(_ + \": \" + _) mkString \", \"\n   56:     def funArgs         = (vdefs, targs).zipped.map(_ + \": \" + _) mkString \", \"\n   57  \n   58      def genprodString       = \" See scala.Function0 for timestamp.\"\n   ..\n  172  class Function(val i: Int) extends Group(\"Function\") with Arity {\n  173    def descriptiveComment  = \"\"\n  174:   def functionNTemplate =\n  175  \"\"\"\n  176   *  In the following example, the definition of %s is a\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/ast/parser/Parsers.scala:\n  856         */\n  857        def argType(): Tree\n  858:       def functionArgType(): Tree\n  859  \n  860        private def tupleInfixType(start: Offset) = {\n  ...\n 1037         */\n 1038        def types(): List[Tree] = commaSeparated(argType())\n 1039:       def functionTypes(): List[Tree] = commaSeparated(functionArgType())\n 1040      }\n 1041  \n ....\n 1800        def isXML: Boolean = false\n 1801  \n 1802:       def functionArgType(): Tree = argType()\n 1803        def argType(): Tree = {\n 1804          val start = in.offset\n ....\n 1993      object outPattern extends PatternContextSensitive {\n 1994        def argType(): Tree = typ()\n 1995:       def functionArgType(): Tree = paramType(useStartAsPosition = true)\n 1996      }\n 1997      /** The implementation for parsing inside of patterns at points where sequences are allowed. */\n ....\n 2558       *  }}}\n 2559       */\n 2560:     def funDefOrDcl(start : Int, mods: Modifiers): Tree = {\n 2561        in.nextToken()\n 2562        if (in.token == THIS) {\n ....\n 2578      }\n 2579  \n 2580:     def funDefRest(start: Offset, nameOffset: Offset, mods: Modifiers, name: Name): Tree = {\n 2581        val result = atPos(start, if (name.toTermName == nme.ERROR) start else nameOffset) {\n 2582          var newmods = mods\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/transform/patmat/MatchCodeGen.scala:\n   63  \n   64      abstract class CommonCodegen extends AbsCodegen { import CODE._\n   65:       def fun(arg: Symbol, body: Tree): Tree     = Function(List(ValDef(arg)), body)\n   66        def tupleSel(binder: Symbol)(i: Int): Tree = (REF(binder) DOT nme.productAccessorName(i)) // make tree that accesses the i'th component of the tuple referenced by binder\n   67        def index(tgt: Tree)(i: Int): Tree         = tgt APPLY (LIT(i))\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/transform/patmat/MatchTranslation.scala:\n  385      abstract class ExtractorCall(val aligner: PatternAligned) {\n  386        import aligner._\n  387:       def fun: Tree\n  388        def args: List[Tree]\n  389  \n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/typechecker/Typers.scala:\n 4353        }\n 4354  \n 4355:       def functionTypeWildcard(tree: Tree, arity: Int): Type = {\n 4356          val tp = functionType(List.fill(arity)(WildcardType), WildcardType)\n 4357          if (tp == NoType) MaxFunctionArityError(tree)\n\n/Users/vjovanov/code/scala/src/library/scala/concurrent/TaskRunner.scala:\n   20    type Task[T]\n   21  \n   22:   implicit def functionAsTask[S](fun: () => S): Task[S]\n   23  \n   24    def execute[S](task: Task[S]): Unit\n\n/Users/vjovanov/code/scala/src/library/scala/concurrent/ThreadPoolRunner.scala:\n   28    }\n   29  \n   30:   implicit def functionAsTask[S](fun: () => S): Task[S] =\n   31      new RunCallable(fun)\n   32  \n\n/Users/vjovanov/code/scala/src/library/scala/util/control/Exception.scala:\n  203    }\n  204    def handling[T](exceptions: Class[_]*) = {\n  205:     def fun(f: Throwable => T) = catching(exceptions: _*) withApply f\n  206      new By[Throwable => T, Catch[T]](fun _)\n  207    }\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/api/Trees.scala:\n 1134       *  See the example for [[scala.reflect.api.Trees#UnApplyExtractor]].\n 1135       */\n 1136:     def fun: Tree\n 1137  \n 1138      /** The arguments of the unapplication.\n ....\n 1537    trait GenericApplyApi extends TermTreeApi { this: GenericApply =>\n 1538      /** The target of the application. */\n 1539:     def fun: Tree\n 1540  \n 1541      /** The arguments of the application. */\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/Definitions.scala:\n  558      /** Creators for TupleN, ProductN, FunctionN. */\n  559      def tupleType(elems: List[Type])                            = TupleClass.specificType(elems)\n  560:     def functionType(formals: List[Type], restpe: Type)         = FunctionClass.specificType(formals, restpe)\n  561      def abstractFunctionType(formals: List[Type], restpe: Type) = AbstractFunctionClass.specificType(formals, restpe)\n  562  \n  ...\n  775        abstractFunctionType(tp.typeArgs.init, tp.typeArgs.last)\n  776      }\n  777:     def functionNBaseType(tp: Type): Type = tp.baseClasses find isFunctionSymbol match {\n  778        case Some(sym) => tp baseType unspecializedSymbol(sym)\n  779        case _         => tp\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/CompletionOutput.scala:\n   57  \n   58      def tupleString(tp: Type) = parenList(tp.dealiasWiden.typeArgs map relativize)\n   59:     def functionString(tp: Type) = tp.dealiasWiden.typeArgs match {\n   60        case List(t, r) => t + \" => \" + r\n   61        case xs         => parenList(xs.init) + \" => \" + xs.last\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/JavapClass.scala:\n  721       *  where k may be an available class or a symbol in scope.\n  722       */\n  723:     def funsOf(selection: String): Seq[String] = {\n  724        // class is either something replish or available to loader\n  725        val target = translate(selection)\n  ...\n  795       *  If C has lambda closure classes, then use C#$anonfun (special-cased by output filter).\n  796       */\n  797:     def funs(ks: Seq[String]): Seq[String] = ks flatMap funsOf\n  798    }\n  799  }\n\n/Users/vjovanov/code/scala/test/benchmarks/src/scala/collection/parallel/benchmarks/parallel_array/FlatMapLight.scala:\n   12    override def defaultSize = 10000\n   13    \n   14:   def fun = (a: Cont) => { List(1, 2, 3, 4, a.in) }\n   15  }\n   16  \n\n/Users/vjovanov/code/scala/test/benchmarks/src/scala/collection/parallel/benchmarks/parallel_array/MapLight.scala:\n   10    override def defaultSize = 100000\n   11    \n   12:   def fun = (a: Cont) => { a }\n   13:   def funjsr = new extra166y.Ops.Op[Cont, Cont] {\n   14      def op(a: Cont) = { a }\n   15    }\n\n/Users/vjovanov/code/scala/test/benchmarks/src/scala/collection/parallel/benchmarks/parallel_array/PartialMapLight.scala:\n   10    override def defaultSize = 100000\n   11    \n   12:   def fun: PartialFunction[Cont, Cont] = {\n   13      case c: Cont if c.in >= 0 => c\n   14    }\n\n/Users/vjovanov/code/scala/test/files/jvm/typerep.scala:\n  211      Tuple9Rep(_1, _2, _3, _4, _5, _6, _7, _8, _9)\n  212  \n  213:   implicit def func1Rep[A1, B](implicit a1: TypeRep[A1], b: TypeRep[B]): TypeRep[Function1[A1, B]] =\n  214      Function1Rep(a1, b)\n  215:   implicit def func2Rep[A1, A2, B](implicit a1: TypeRep[A1], a2: TypeRep[A2], b: TypeRep[B]): TypeRep[Function2[A1, A2, B]] =\n  216      Function2Rep(a1, a2, b)\n  217:   implicit def func3Rep[A1, A2, A3, B](implicit a1: TypeRep[A1], a2: TypeRep[A2], a3: TypeRep[A3], b: TypeRep[B]): TypeRep[Function3[A1, A2, A3, B]] =\n  218      Function3Rep(a1, a2, a3, b)\n  219:   implicit def func4Rep[A1, A2, A3, A4, B](implicit a1: TypeRep[A1], a2: TypeRep[A2], a3: TypeRep[A3], a4: TypeRep[A4], b: TypeRep[B]): TypeRep[Function4[A1, A2, A3, A4, B]] =\n  220      Function4Rep(a1, a2, a3, a4, b)\n  221:   implicit def func5Rep[A1, A2, A3, A4, A5, B](implicit a1: TypeRep[A1], a2: TypeRep[A2], a3: TypeRep[A3], a4: TypeRep[A4], a5: TypeRep[A5], b: TypeRep[B]): TypeRep[Function5[A1, A2, A3, A4, A5, B]] =\n  222      Function5Rep(a1, a2, a3, a4, a5, b)\n  223:   implicit def func6Rep[A1, A2, A3, A4, A5, A6, B](implicit a1: TypeRep[A1], a2: TypeRep[A2], a3: TypeRep[A3], a4: TypeRep[A4], a5: TypeRep[A5], a6: TypeRep[A6], b: TypeRep[B]): TypeRep[Function6[A1, A2, A3, A4, A5, A6, B]] =\n  224      Function6Rep(a1, a2, a3, a4, a5, a6, b)\n  225:   implicit def func7Rep[A1, A2, A3, A4, A5, A6, A7, B](implicit a1: TypeRep[A1], a2: TypeRep[A2], a3: TypeRep[A3], a4: TypeRep[A4], a5: TypeRep[A5], a6: TypeRep[A6], a7: TypeRep[A7], b: TypeRep[B]): TypeRep[Function7[A1, A2, A3, A4, A5, A6, A7, B]] =\n  226      Function7Rep(a1, a2, a3, a4, a5, a6, a7, b)\n  227:   implicit def func8Rep[A1, A2, A3, A4, A5, A6, A7, A8, B](implicit a1: TypeRep[A1], a2: TypeRep[A2], a3: TypeRep[A3], a4: TypeRep[A4], a5: TypeRep[A5], a6: TypeRep[A6], a7: TypeRep[A7], a8: TypeRep[A8], b: TypeRep[B]): TypeRep[Function8[A1, A2, A3, A4, A5, A6, A7, A8, B]] =\n  228      Function8Rep(a1, a2, a3, a4, a5, a6, a7, a8, b)\n  229:   implicit def func9Rep[A1, A2, A3, A4, A5, A6, A7, A8, A9, B](implicit a1: TypeRep[A1], a2: TypeRep[A2], a3: TypeRep[A3], a4: TypeRep[A4], a5: TypeRep[A5], a6: TypeRep[A6], a7: TypeRep[A7], a8: TypeRep[A8], a9: TypeRep[A9], b: TypeRep[B]): TypeRep[Function9[A1, A2, A3, A4, A5, A6, A7, A8, A9, B]] =\n  230      Function9Rep(a1, a2, a3, a4, a5, a6, a7, a8, a9, b)\n  231  /*\n\n/Users/vjovanov/code/scala/test/files/neg/t1431.check:\n    1  t1431.scala:8: error: class type required but X#Factory found\n    2:   def fun[X<:MyTrait with Singleton]() = new X#Factory().value\n    3                                                 ^\n    4  one error found\n\n/Users/vjovanov/code/scala/test/files/neg/t1431.scala:\n    6    }\n    7  \n    8:   def fun[X<:MyTrait with Singleton]() = new X#Factory().value\n    9  }\n   10  \n\n/Users/vjovanov/code/scala/test/files/neg/t391.check:\n    1  t391.scala:2: error: identifier expected but 'def' found.\n    2:   def fun1(def x: Int): Int = x; // the \"def x\" is illegal\n    3             ^\n    4  t391.scala:4: error: ':' expected but '}' found.\n\n/Users/vjovanov/code/scala/test/files/neg/t391.scala:\n    1  trait C {\n    2:   def fun1(def x: Int): Int = x; // the \"def x\" is illegal\n    3:   def fun2(val x: Int): Int = x; // the \"val x\" is illegal\n    4  }\n    5  \n\n/Users/vjovanov/code/scala/test/files/neg/t6758.check:\n    9         ^\n   10  t6758.scala:25: error: not found: type param\n   11:   def func(@param x: Int): Int = 0\n   12              ^\n   13  t6758.scala:28: error: not found: type typealias\n\n/Users/vjovanov/code/scala/test/files/neg/t6758.scala:\n   23    }\n   24  \n   25:   def func(@param x: Int): Int = 0\n   26  \n   27    abstract class A {\n\n/Users/vjovanov/code/scala/test/files/pos/compile.scala:\n  136  \n  137  trait Test3A[T] {\n  138:   def fun: T = fun;\n  139  }\n  140  \n  ...\n  142  \n  143  trait Test3M extends Test3A[Test3Foo] {\n  144:   override def fun: Test3Foo = super.fun;\n  145  }\n  146  \n\n/Users/vjovanov/code/scala/test/files/pos/spec-t6286.scala:\n    1  trait Foo[@specialized(Int) A] {\n    2:   def fun[@specialized(Int) B](init: B)(f: (B, A) => B): B\n    3  }\n    4  \n    5  class Bar(values: Array[Int]) extends Foo[Int] {\n    6:   def fun[@specialized(Int) C](init: C)(f: (C, Int) => C): C = {\n    7      val arr = values\n    8      f(init, arr(0))\n\n/Users/vjovanov/code/scala/test/files/pos/t245.scala:\n    7    def foo(i: Int): Int = 0\n    8  \n    9:   def fun0         : Value = null\n   10:   def fun0(i: Int ): Value = null\n   11  \n   12:   def fun1(i: Int ): Value = null\n   13:   def fun1(l: Long): Value = null\n   14  \n   15    foo(fun0           );\n\n/Users/vjovanov/code/scala/test/files/pos/t318.scala:\n    1  object Test {\n    2:   def fun: Int = {\n    3      object o {\n    4        def a: Int = 1;\n\n/Users/vjovanov/code/scala/test/files/pos/t319.scala:\n    5    trait B { type T; }\n    6  \n    7:   /** def functor(x: A): B { type T = x.T } */\n    8    abstract class functor() {\n    9      val arg: A;\n\n/Users/vjovanov/code/scala/test/files/pos/t6221.scala:\n    8  \n    9  object Test {\n   10:   implicit def functionToMyFunc[A, B](f: A => B): MyFunc[A, B] = new MyFunc // = new MyFunc[A,Nothing]();\n   11  \n   12    implicit def otherFuncToMyFunc[A, B](f: OtherFunc[A, B]): MyFunc[A, B] = new MyFunc // = new MyFunc[A,Nothing]();\n\n/Users/vjovanov/code/scala/test/files/pos/t720.scala:\n    5  class Two\n    6  object Test2 extends App {\n    7:   def fun (two: Two) = ()\n    8    fun(new One)\n    9  }\n\n/Users/vjovanov/code/scala/test/files/pos/t1987b/a.scala:\n    3  // goes with t1987b.scala\n    4  package object packageb {\n    5:   def func(a: Int) = ()\n    6:   def func(a: String) = ()\n    7  }\n    8  \n\n/Users/vjovanov/code/scala/test/files/pos/t2464/ScalaOne_1.scala:\n    1  class ScalaClassOne extends ClassTwo.Child {\n    2:   def func4() = {\n    3      func2\n    4    }\n\n/Users/vjovanov/code/scala/test/files/pos/t5703/Impl.scala:\n    1  class Implementation extends Base[Object] {\n    2:   def func(params: Array[Object]): Unit = {}\n    3  }\n\n/Users/vjovanov/code/scala/test/files/run/reify_closure8a.scala:\n    6  object Test extends App {\n    7    class Foo(val y: Int) {\n    8:     def fun = reify{y}\n    9    }\n   10  \n\n/Users/vjovanov/code/scala/test/files/run/reify_closure8b.scala:\n    8    // reification doesn't magically make unavailable stuff available\n    9    class Foo(y: Int) {\n   10:     def fun = reify{y}\n   11    }\n   12  \n\n/Users/vjovanov/code/scala/test/files/run/t7899-regression.scala:\n    5      def foo[A](ma: M[A])(f: M[A] => Any) = f(ma)\n    6    }\n    7:   implicit def function1Covariant[T]: Monad[({type l[a] = (T => a)})#l] =\n    8      new Monad[({type l[a] = (T => a)})#l] {}\n    9  \n\n/Users/vjovanov/code/scala/test/files/run/tuples.scala:\n    9      case _ => ???\n   10    }\n   11:   def func(x: Int, y: String, z: Double) {\n   12      Console.println(\"x = \" + x + \"; y = \" + y + \"; z = \" + z);\n   13    }\n\n/Users/vjovanov/code/scala/test/pending/run/reify_closure9a.scala:\n    7    def foo(y: Int) = {\n    8      class Foo(val y: Int) {\n    9:       def fun = reify{y}\n   10      }\n   11  \n\n/Users/vjovanov/code/scala/test/pending/run/reify_closure9b.scala:\n    7    def foo(y: Int) = {\n    8      class Foo(y: Int) {\n    9:       def fun = reify{y}\n   10      }\n   11  \n\n/Users/vjovanov/code/scala/test/pending/run/reify_closures11.scala:\n    5  \n    6  object Test extends App {\n    7:   def fun() = {\n    8      def z() = 2\n    9      reify{z}\n\n/Users/vjovanov/code/scala/test/scaladoc/resources/explicit-inheritance-override.scala:\n   17     * @todo Call mom.\n   18     */\n   19:   def function[T](arg1: T, arg2: String): Double = 0.0d\n   20  }\n   21  \n   ..\n   45     * @todo StartTodo @inheritdoc And dad! EndTodo\n   46     */\n   47:   override def function[T](arg1: T, arg2: String): Double = 1.0d\n   48  }\n\n/Users/vjovanov/code/scala/test/scaladoc/resources/explicit-inheritance-usecase.scala:\n   18     * @todo Call mom.\n   19     *\n   20:    * @usecase def function[T](arg1: T, arg2: String): Double\n   21     *\n   22     * Starting line\n   ..\n   43     * @todo StartTodo @inheritdoc And dad! EndTodo\n   44     */\n   45:   def function[T](implicit arg1: T, arg2: String): Double = 0.0d\n   46  }\n   47  \n\n/Users/vjovanov/code/scala/test/scaladoc/resources/implicit-inheritance-override.scala:\n    9     * @return The return comment\n   10     */\n   11:   def function[T](arg1: T, arg2: String): Double = 0.0d\n   12  }\n   13  \n   ..\n   16     * Overriding the comment, the params and returns comments should stay the same.\n   17     */\n   18:   override def function[T](arg1: T, arg2: String): Double = 1.0d\n   19  }\n   20  \n   ..\n   24     * @param arg2 The overridden string comment\n   25     */\n   26:   override def function[T](arg1: T, arg2: String): Double = 2.0d\n   27  }\n   28  \n   ..\n   31     * @return The overridden return comment\n   32     */\n   33:   override def function[T](arg1: T, arg2: String): Double = 3.0d\n   34  }\n   35  \n   ..\n   38     * @tparam T The overriden type parameter comment\n   39     */\n   40:   override def function[T](arg1: T, arg2: String): Double = 3.0d\n   41  }\n\n/Users/vjovanov/code/scala/test/scaladoc/resources/implicit-inheritance-usecase.scala:\n   29     * The overridden comment.\n   30     */ \n   31:   def function[T](implicit arg1: T, arg2: String): Double = 0.0d\n   32  }\n   33  \n   ..\n   54     * The overridden comment.\n   55     */ \n   56:   override def function[T](implicit arg1: T, arg2: String): Double = 0.0d\n   57  } \n   58  \n\n/Users/vjovanov/code/scala/test/scaladoc/scalacheck/HtmlFactoryTest.scala:\n  453      checkText(\"implicit-inheritance-override.scala\")(\n  454        (Some(\"Base\"),\n  455:        \"\"\"def function[T](arg1: T, arg2: String): Double\n  456            The base comment.\n  457            The base comment. And another sentence...\n  ...\n  462            \"\"\", true),\n  463        (Some(\"DerivedA\"),\n  464:        \"\"\"def function[T](arg1: T, arg2: String): Double\n  465            Overriding the comment, the params and returns comments should stay the same.\n  466            Overriding the comment, the params and returns comments should stay the same.\n  ...\n  471            \"\"\", true),\n  472        (Some(\"DerivedB\"),\n  473:        \"\"\"def function[T](arg1: T, arg2: String): Double\n  474            T the type of the first argument\n  475            arg1 The overridden T term comment\n  ...\n  478            \"\"\", true),\n  479        (Some(\"DerivedC\"),\n  480:        \"\"\"def function[T](arg1: T, arg2: String): Double\n  481            T the type of the first argument\n  482            arg1 The T term comment\n  ...\n  485            \"\"\", true),\n  486        (Some(\"DerivedD\"),\n  487:        \"\"\"def function[T](arg1: T, arg2: String): Double\n  488            T The overriden type parameter comment\n  489            arg1 The T term comment\n  ...\n  564    checkText(\"explicit-inheritance-override.scala\")(\n  565      (Some(\"InheritDocDerived\"),\n  566:      \"\"\"def function[T](arg1: T, arg2: String): Double\n  567          Starting line\n  568          Starting line\n  ...\n  591    checkText(\"explicit-inheritance-usecase.scala\")(\n  592      (Some(\"UseCaseInheritDoc\"),\n  593:      \"\"\"def function[T](arg1: T, arg2: String): Double\n  594          [use case] Starting line\n  595          [use case] Starting line\n\n93 matches across 47 files\n\n\nSearching 19258 files for \"ScalaPkg\" (case sensitive)\n\n0 matches\n\nSearching 19258 files for \"ScalaPkg\" (case sensitive)\n\n0 matches\n\nSearching 19258 files for \"ScalaOpsPkg\" (case sensitive)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala:\n   20  \n   21  trait LiftScala extends LiftAll with LiftVariables with LiftEquals with LiftArrays {\n   22:   this: ScalaOpsPkg =>\n   23  }\n   24  \n   25: trait ScalaOpsPkg extends Base\n   26      with ImplicitOps with NumericOps with FractionalOps with OrderingOps with StringOps\n   27      with RangeOps with IOOps with ArrayOps with BooleanOps with PrimitiveOps with MiscOps\n   ..\n   29      with SeqOps with MathOps with CastingOps with SetOps with ObjectOps with ArrayBufferOps\n   30  \n   31: trait ScalaOpsPkgExp extends ScalaOpsPkg\n   32      with ImplicitOpsExp with NumericOpsExp with FractionalOpsExp with OrderingOpsExp with StringOpsExp\n   33      with RangeOpsExp with IOOpsExp with ArrayOpsExp with BooleanOpsExp with PrimitiveOpsExp with MiscOpsExp\n   ..\n   49      with ScalaGenSeqOps with ScalaGenDSLOps with ScalaGenMathOps with ScalaGenCastingOps with ScalaGenSetOps\n   50      with ScalaGenObjectOps with ScalaGenArrayBufferOps\n   51:   { val IR: ScalaOpsPkgExp  }\n   52  \n   53  \n   ..\n   60      with CGenSeqOps with CGenDSLOps with CGenMathOps with CGenCastingOps with CGenSetOps \n   61      with CGenObjectOps with CGenArrayBufferOps\n   62:     { val IR: ScalaOpsPkgExp  }\n   63  \n   64  ///////\n   ..\n   70      with CudaGenSeqOps with CudaGenDSLOps with CudaGenMathOps with CudaGenCastingOps with CudaGenSetOps \n   71      with CudaGenObjectOps with CudaGenArrayBufferOps\n   72:     { val IR: ScalaOpsPkgExp  }\n   73  \n   74  /////////\n   ..\n   80      with OpenCLGenSeqOps with OpenCLGenDSLOps with OpenCLGenMathOps with OpenCLGenCastingOps with OpenCLGenSetOps \n   81      with OpenCLGenObjectOps with OpenCLGenArrayBufferOps\n   82:     { val IR: ScalaOpsPkgExp  }\n\n/Users/vjovanov/code/virtualization-lms-core/target/streams/compile/incCompileSetup/$global/streams/inc_compile_2.11:\n  792  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/OpenCLCodeGenPkg.class\n  793  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/ScalaCodeGenPkg.class\n  794: /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/ScalaOpsPkg.class\n  795: /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/ScalaOpsPkgExp.class\n  796  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/CGenPrimitiveOps$class.class\n  797  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/CGenPrimitiveOps.class\n  ...\n 3594  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> scala.lms.common.OpenCLCodeGenPkg\n 3595  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> scala.lms.common.ScalaCodeGenPkg\n 3596: /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> scala.lms.common.ScalaOpsPkg\n 3597: /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> scala.lms.common.ScalaOpsPkgExp\n 3598  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> scala.lms.common.CGenPrimitiveOps\n 3599  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> scala.lms.common.CGenPrimitiveOps$class\n ....\n 7888  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> ScalaGenVariables\n 7889  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> ScalaGenWhile\n 7890: /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> ScalaOpsPkg\n 7891: /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> ScalaOpsPkgExp\n 7892  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> SeqOps\n 7893  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> SeqOpsExp\n ....\n 13718  /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/ScalaGenWhile.class -> lastModified(1445657416000)\n 13719  /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/ScalaGenWhileOptSpeculative.class -> lastModified(1445657416000)\n 13720: /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/ScalaOpsPkg.class -> lastModified(1445657416000)\n 13721: /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/ScalaOpsPkgExp.class -> lastModified(1445657416000)\n 13722  /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/SeqOps$Seq$.class -> lastModified(1445657416000)\n 13723  /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/SeqOps$SeqOpsCls.class -> lastModified(1445657416000)\n\n~/code/virtualization-lms-core/target/streams/compile/packageBin/$global/streams/inputs:\n    <binary>\n\n~/code/virtualization-lms-core/target/streams/compile/packageBin/$global/streams/out:\n    <binary>\n\n~/code/virtualization-lms-core/target/streams/test/compileIncremental/$global/streams/out:\n    <binary>\n\n/Users/vjovanov/code/virtualization-lms-core/target/streams/test/incCompileSetup/$global/streams/inc_compile_2.11:\n 2889  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.OrderingOps\n 2890  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.PrimitiveOps\n 2891: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.ScalaOpsPkg\n 2892: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.ScalaOpsPkgExp\n 2893  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.TupledFunctions\n 2894  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.TupledFunctionsRecursiveExp\n ....\n 2923  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.PrimitiveOpsExpOpt\n 2924  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.ReadVarImplicit\n 2925: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.ScalaOpsPkg\n 2926: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.ScalaOpsPkgExp\n 2927  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.StringOps\n 2928  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.TupledFunctions\n ....\n 3870  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.LiftString\n 3871  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.LiftVariables\n 3872: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.ScalaOpsPkg\n 3873: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.ScalaOpsPkgExp\n 3874  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.TupledFunctions\n 3875  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.TupledFunctionsRecursiveExp\n ....\n 3884  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.LiftVariables\n 3885  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.PrimitiveOpsExpOpt\n 3886: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.ScalaOpsPkg\n 3887: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.ScalaOpsPkgExp\n 3888  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.TupledFunctions\n 3889  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.TupledFunctionsRecursiveExp\n ....\n 8872  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> Prog\n 8873  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> Rep\n 8874: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> ScalaOpsPkg\n 8875: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> ScalaOpsPkgExp\n 8876  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> ScalaRunTime\n 8877  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> Serializable\n ....\n 9033  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> Rep\n 9034  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> RowBasedTable\n 9035: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> ScalaOpsPkg\n 9036: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> ScalaOpsPkgExp\n 9037  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> ScalaRunTime\n 9038  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> ScanOp\n ....\n 15703  scala.lms.common.ScalaGenWhileOptSpeculative -> \n 15704  \n 15705: scala.lms.common.ScalaOpsPkg -> \n 15706  \n 15707: scala.lms.common.ScalaOpsPkgExp -> \n 15708  \n 15709  scala.lms.common.SeqOpsExp -> \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala:\n   16    val prefix = home + \"test-out/epfl/test14-\"\n   17    \n   18:   trait DSL extends ScalaOpsPkg with TupledFunctions with UncheckedOps with LiftPrimitives with LiftString with LiftVariables {\n   19      // keep track of top level functions\n   20      case class TopLevel[A,B](name: String, mA: Typ[A], mB:Typ[B], f: Rep[A] => Rep[B])\n   ..\n   27    }\n   28  \n   29:   trait Impl extends DSL with ScalaOpsPkgExp with TupledFunctionsRecursiveExp with UncheckedOpsExp { self => \n   30      val codegen = new CCodeGenPkg with CGenVariables with CGenTupledFunctions with CGenUncheckedOps { val IR: self.type = self }\n   31      def emitAll(): Unit = {\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala:\n   16    val prefix = home + \"test-out/epfl/test14-\"\n   17    \n   18:   trait DSL extends ScalaOpsPkg with TupledFunctions with UncheckedOps with LiftPrimitives with LiftString with LiftVariables {\n   19      // keep track of top level functions\n   20      case class TopLevel[A,B](name: String, mA: Typ[A], mB:Typ[B], f: Rep[A] => Rep[B])\n   ..\n  156    }\n  157  \n  158:   trait Impl extends DSL with ScalaOpsPkgExp with VariablesExpOpt with PrimitiveOpsExpOpt with TupledFunctionsRecursiveExp with UncheckedOpsExp { self => \n  159      val codegen = new CCodeGenPkg with CGenVariables with CGenTupledFunctions with CGenUncheckedOps { \n  160        val IR: self.type = self \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestQueries.scalax:\n  326  \n  327  // a staged implementation\n  328: trait Staged extends ScalaOpsPkg with LiftPrimitives with LiftString with StructOps {\n  329    \n  330    def database[T:Typ](s: String): Rep[T]\n  ...\n  665  \n  666  // internal staged implementation: IR node classes, rewrites for normalization\n  667: trait StagedExp extends Staged with ScalaOpsPkgExp with BooleanOpsExpOpt with StructExpOpt {\n  668  \n  669    // IR node representing database(\"name\")\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-terrors/ErrorSamples.scala:\n   25   *   8) User code can not be debugged\n   26   */\n   27: trait RepDSL extends ScalaOpsPkg with LiftPrimitives with LiftBoolean with LiftString {\n   28  \n   29    /**\n   ..\n  301    def testPolymorphicStaging1 = {\n  302      withOutFile(prefix + \"var-val\") {\n  303:       new RepDSL with ScalaOpsPkgExp { self =>\n  304          val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n  305          codegen.emitSource(valVarDef, \"valVarDef\", new PrintWriter(System.out))\n  ...\n  311    def testPolymorphicStaging2 = {\n  312      withOutFile(prefix + \"inference\") {\n  313:       new RepDSL with ScalaOpsPkgExp { self =>\n  314          val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n  315          codegen.emitSource(inference, \"inference\", new PrintWriter(System.out))\n  ...\n  321    def testPolymorphicStaging3 = {\n  322      withOutFile(prefix + \"recursion\") {\n  323:       new RepDSL with ScalaOpsPkgExp { self =>\n  324          val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n  325          codegen.emitSource(recursion, \"recursion\", new PrintWriter(System.out))\n  ...\n  331    def testPolymorphicStaging4 = {\n  332      withOutFile(prefix + \"whitelistOperations\") {\n  333:       new RepDSL with ScalaOpsPkgExp { self =>\n  334          val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n  335          codegen.emitSource(whitelistOperations, \"whitelistOperations\", new PrintWriter(System.out))\n  ...\n  341    def testPolymorphicStaging5 = {\n  342      withOutFile(prefix + \"tuples\") {\n  343:       new RepDSL with ScalaOpsPkgExp { self =>\n  344          val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n  345          codegen.emitSource(tuples, \"tuples\", new PrintWriter(System.out))\n\n68 matches across 10 files\n\n\nSearching 19258 files for \"ScalaOpsPkg\" (case sensitive)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala:\n   20  \n   21  trait LiftScala extends LiftAll with LiftVariables with LiftEquals with LiftArrays {\n   22:   this: ScalaOpsPkg =>\n   23  }\n   24  \n   25: trait ScalaOpsPkg extends Base\n   26      with ImplicitOps with NumericOps with FractionalOps with OrderingOps with StringOps\n   27      with RangeOps with IOOps with ArrayOps with BooleanOps with PrimitiveOps with MiscOps\n   ..\n   29      with SeqOps with MathOps with CastingOps with SetOps with ObjectOps with ArrayBufferOps\n   30  \n   31: trait ScalaOpsPkgExp extends ScalaOpsPkg\n   32      with ImplicitOpsExp with NumericOpsExp with FractionalOpsExp with OrderingOpsExp with StringOpsExp\n   33      with RangeOpsExp with IOOpsExp with ArrayOpsExp with BooleanOpsExp with PrimitiveOpsExp with MiscOpsExp\n   ..\n   49      with ScalaGenSeqOps with ScalaGenDSLOps with ScalaGenMathOps with ScalaGenCastingOps with ScalaGenSetOps\n   50      with ScalaGenObjectOps with ScalaGenArrayBufferOps\n   51:   { val IR: ScalaOpsPkgExp  }\n   52  \n   53  \n   ..\n   60      with CGenSeqOps with CGenDSLOps with CGenMathOps with CGenCastingOps with CGenSetOps \n   61      with CGenObjectOps with CGenArrayBufferOps\n   62:     { val IR: ScalaOpsPkgExp  }\n   63  \n   64  ///////\n   ..\n   70      with CudaGenSeqOps with CudaGenDSLOps with CudaGenMathOps with CudaGenCastingOps with CudaGenSetOps \n   71      with CudaGenObjectOps with CudaGenArrayBufferOps\n   72:     { val IR: ScalaOpsPkgExp  }\n   73  \n   74  /////////\n   ..\n   80      with OpenCLGenSeqOps with OpenCLGenDSLOps with OpenCLGenMathOps with OpenCLGenCastingOps with OpenCLGenSetOps \n   81      with OpenCLGenObjectOps with OpenCLGenArrayBufferOps\n   82:     { val IR: ScalaOpsPkgExp  }\n\n/Users/vjovanov/code/virtualization-lms-core/target/streams/compile/incCompileSetup/$global/streams/inc_compile_2.11:\n  792  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/OpenCLCodeGenPkg.class\n  793  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/ScalaCodeGenPkg.class\n  794: /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/ScalaOpsPkg.class\n  795: /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/ScalaOpsPkgExp.class\n  796  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/CGenPrimitiveOps$class.class\n  797  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/CGenPrimitiveOps.class\n  ...\n 3594  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> scala.lms.common.OpenCLCodeGenPkg\n 3595  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> scala.lms.common.ScalaCodeGenPkg\n 3596: /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> scala.lms.common.ScalaOpsPkg\n 3597: /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> scala.lms.common.ScalaOpsPkgExp\n 3598  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> scala.lms.common.CGenPrimitiveOps\n 3599  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> scala.lms.common.CGenPrimitiveOps$class\n ....\n 7888  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> ScalaGenVariables\n 7889  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> ScalaGenWhile\n 7890: /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> ScalaOpsPkg\n 7891: /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> ScalaOpsPkgExp\n 7892  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> SeqOps\n 7893  /Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala -> SeqOpsExp\n ....\n 13718  /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/ScalaGenWhile.class -> lastModified(1445657416000)\n 13719  /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/ScalaGenWhileOptSpeculative.class -> lastModified(1445657416000)\n 13720: /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/ScalaOpsPkg.class -> lastModified(1445657416000)\n 13721: /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/ScalaOpsPkgExp.class -> lastModified(1445657416000)\n 13722  /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/SeqOps$Seq$.class -> lastModified(1445657416000)\n 13723  /Users/vjovanov/code/virtualization-lms-core/target/scala-2.11/classes/scala/lms/common/SeqOps$SeqOpsCls.class -> lastModified(1445657416000)\n\n~/code/virtualization-lms-core/target/streams/compile/packageBin/$global/streams/inputs:\n    <binary>\n\n~/code/virtualization-lms-core/target/streams/compile/packageBin/$global/streams/out:\n    <binary>\n\n~/code/virtualization-lms-core/target/streams/test/compileIncremental/$global/streams/out:\n    <binary>\n\n/Users/vjovanov/code/virtualization-lms-core/target/streams/test/incCompileSetup/$global/streams/inc_compile_2.11:\n 2889  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.OrderingOps\n 2890  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.PrimitiveOps\n 2891: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.ScalaOpsPkg\n 2892: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.ScalaOpsPkgExp\n 2893  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.TupledFunctions\n 2894  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.TupledFunctionsRecursiveExp\n ....\n 2923  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.PrimitiveOpsExpOpt\n 2924  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.ReadVarImplicit\n 2925: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.ScalaOpsPkg\n 2926: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.ScalaOpsPkgExp\n 2927  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.StringOps\n 2928  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.TupledFunctions\n ....\n 3870  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.LiftString\n 3871  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.LiftVariables\n 3872: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.ScalaOpsPkg\n 3873: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.ScalaOpsPkgExp\n 3874  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.TupledFunctions\n 3875  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> scala.lms.common.TupledFunctionsRecursiveExp\n ....\n 3884  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.LiftVariables\n 3885  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.PrimitiveOpsExpOpt\n 3886: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.ScalaOpsPkg\n 3887: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.ScalaOpsPkgExp\n 3888  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.TupledFunctions\n 3889  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> scala.lms.common.TupledFunctionsRecursiveExp\n ....\n 8872  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> Prog\n 8873  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> Rep\n 8874: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> ScalaOpsPkg\n 8875: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> ScalaOpsPkgExp\n 8876  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> ScalaRunTime\n 8877  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> Serializable\n ....\n 9033  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> Rep\n 9034  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> RowBasedTable\n 9035: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> ScalaOpsPkg\n 9036: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> ScalaOpsPkgExp\n 9037  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> ScalaRunTime\n 9038  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> ScanOp\n ....\n 15703  scala.lms.common.ScalaGenWhileOptSpeculative -> \n 15704  \n 15705: scala.lms.common.ScalaOpsPkg -> \n 15706  \n 15707: scala.lms.common.ScalaOpsPkgExp -> \n 15708  \n 15709  scala.lms.common.SeqOpsExp -> \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala:\n   16    val prefix = home + \"test-out/epfl/test14-\"\n   17    \n   18:   trait DSL extends ScalaOpsPkg with TupledFunctions with UncheckedOps with LiftPrimitives with LiftString with LiftVariables {\n   19      // keep track of top level functions\n   20      case class TopLevel[A,B](name: String, mA: Typ[A], mB:Typ[B], f: Rep[A] => Rep[B])\n   ..\n   27    }\n   28  \n   29:   trait Impl extends DSL with ScalaOpsPkgExp with TupledFunctionsRecursiveExp with UncheckedOpsExp { self => \n   30      val codegen = new CCodeGenPkg with CGenVariables with CGenTupledFunctions with CGenUncheckedOps { val IR: self.type = self }\n   31      def emitAll(): Unit = {\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala:\n   16    val prefix = home + \"test-out/epfl/test14-\"\n   17    \n   18:   trait DSL extends ScalaOpsPkg with TupledFunctions with UncheckedOps with LiftPrimitives with LiftString with LiftVariables {\n   19      // keep track of top level functions\n   20      case class TopLevel[A,B](name: String, mA: Typ[A], mB:Typ[B], f: Rep[A] => Rep[B])\n   ..\n  156    }\n  157  \n  158:   trait Impl extends DSL with ScalaOpsPkgExp with VariablesExpOpt with PrimitiveOpsExpOpt with TupledFunctionsRecursiveExp with UncheckedOpsExp { self => \n  159      val codegen = new CCodeGenPkg with CGenVariables with CGenTupledFunctions with CGenUncheckedOps { \n  160        val IR: self.type = self \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestQueries.scalax:\n  326  \n  327  // a staged implementation\n  328: trait Staged extends ScalaOpsPkg with LiftPrimitives with LiftString with StructOps {\n  329    \n  330    def database[T:Typ](s: String): Rep[T]\n  ...\n  665  \n  666  // internal staged implementation: IR node classes, rewrites for normalization\n  667: trait StagedExp extends Staged with ScalaOpsPkgExp with BooleanOpsExpOpt with StructExpOpt {\n  668  \n  669    // IR node representing database(\"name\")\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-terrors/ErrorSamples.scala:\n   25   *   8) User code can not be debugged\n   26   */\n   27: trait RepDSL extends ScalaOpsPkg with LiftPrimitives with LiftBoolean with LiftString {\n   28  \n   29    /**\n   ..\n  301    def testPolymorphicStaging1 = {\n  302      withOutFile(prefix + \"var-val\") {\n  303:       new RepDSL with ScalaOpsPkgExp { self =>\n  304          val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n  305          codegen.emitSource(valVarDef, \"valVarDef\", new PrintWriter(System.out))\n  ...\n  311    def testPolymorphicStaging2 = {\n  312      withOutFile(prefix + \"inference\") {\n  313:       new RepDSL with ScalaOpsPkgExp { self =>\n  314          val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n  315          codegen.emitSource(inference, \"inference\", new PrintWriter(System.out))\n  ...\n  321    def testPolymorphicStaging3 = {\n  322      withOutFile(prefix + \"recursion\") {\n  323:       new RepDSL with ScalaOpsPkgExp { self =>\n  324          val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n  325          codegen.emitSource(recursion, \"recursion\", new PrintWriter(System.out))\n  ...\n  331    def testPolymorphicStaging4 = {\n  332      withOutFile(prefix + \"whitelistOperations\") {\n  333:       new RepDSL with ScalaOpsPkgExp { self =>\n  334          val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n  335          codegen.emitSource(whitelistOperations, \"whitelistOperations\", new PrintWriter(System.out))\n  ...\n  341    def testPolymorphicStaging5 = {\n  342      withOutFile(prefix + \"tuples\") {\n  343:       new RepDSL with ScalaOpsPkgExp { self =>\n  344          val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n  345          codegen.emitSource(tuples, \"tuples\", new PrintWriter(System.out))\n\n68 matches across 10 files\n\n\nSearching 19260 files for \"trait ScalaOpsPkg\" (case sensitive)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala:\n   23  }\n   24  \n   25: trait ScalaOpsPkg extends Base\n   26      with ImplicitOps with NumericOps with FractionalOps with OrderingOps with StringOps\n   27      with RangeOps with IOOps with ArrayOps with BooleanOps with PrimitiveOps with MiscOps\n   ..\n   29      with SeqOps with MathOps with CastingOps with SetOps with ObjectOps with ArrayBufferOps\n   30  \n   31: trait ScalaOpsPkgExp extends ScalaOpsPkg\n   32      with ImplicitOpsExp with NumericOpsExp with FractionalOpsExp with OrderingOpsExp with StringOpsExp\n   33      with RangeOpsExp with IOOpsExp with ArrayOpsExp with BooleanOpsExp with PrimitiveOpsExp with MiscOpsExp\n\n2 matches in 1 file\n\n\nSearching 19269 files for \"def eval\" (case sensitive)\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWIP.scalax:\n   27    \n   28    \n   29:   def evalAbs(sym,def) = def match {\n   30      case Foo(MyAbsIntDomain(x),MyAbsIntDomain(y)) => foo(x,y)\n   31    }\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Matching.scala:\n   38  trait Matching extends Base {\n   39    \n   40:   def evalMatch[A:Typ,B:Typ](x: Rep[A], alts: List[PartialFunction[Rep[A],Rep[B]]]): Rep[B]\n   41    \n   42    trait Switchable[A] { // shouldn't need it ...\n   ..\n   87    }\n   88    \n   89:   def evalMatch[A,B](x: Rep[A], alts: List[PartialFunction[Rep[A],Rep[B]]]) = {\n   90      \n   91      def doApply(f: PartialFunction[Rep[A],Rep[B]]) = {\n   ..\n  143  //  def orElse[A](xs: List[Rep[Effectful[A]]]): Rep[A] = reflectEffect(OrElse(xs))\n  144    \n  145:   def evalMatch[A:Typ,B:Typ](x: Rep[A], alts: List[PartialFunction[Rep[A],Rep[B]]]): Rep[B] = {\n  146      \n  147      def liftAlt(f: PartialFunction[Rep[A],Rep[B]]) = doLambda { x: Rep[A] =>\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/FooBar.scala:\n   42    }\n   43  \n   44:   def eval[A](term: Exp[A]): Const[A] = term match {\n   45      case IsSym(Lookup(c)) => c\n   46  //    case Lookup(c) => c\n\n/Users/vjovanov/code/scala/spec/05-classes-and-objects.md:\n  943  case class Value(e: Expr, env: Env)\n  944  \n  945: def eval(e: Expr, env: Env): Value = e match {\n  946    case Var (x) =>\n  947      env(x)\n\n/Users/vjovanov/code/scala/spec/08-pattern-matching.md:\n  615  \n  616  ```scala\n  617: def eval[T](t: Term[T]): T = t match {\n  618    case Lit(n)        => n\n  619    case Succ(u)       => eval(u) + 1\n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Evals.scala:\n   12    private lazy val evalImporter = ru.internal.createImporter(universe).asInstanceOf[ru.Importer { val from: universe.type }]\n   13  \n   14:   def eval[T](expr: Expr[T]): T = {\n   15      expr.tree match {\n   16        case global.Literal(global.Constant(value)) =>\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/ast/TreeGen.scala:\n  194    /** Used in situations where you need to access value of an expression several times\n  195     */\n  196:   def evalOnce(expr: Tree, owner: Symbol, unit: CompilationUnit)(within: (() => Tree) => Tree): Tree = {\n  197      var used = false\n  198      if (treeInfo.isExprSafeToInline(expr)) {\n  ...\n  207    }\n  208  \n  209:   def evalOnceAll(exprs: List[Tree], owner: Symbol, unit: CompilationUnit)(within: (List[() => Tree]) => Tree): Tree = {\n  210      val vdefs = new ListBuffer[ValDef]\n  211      val exprs1 = new ListBuffer[() => Tree]\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/reflect/package.scala:\n  110  package reflect {\n  111    class Eval[T](expr: JavaUniverse # Expr[T]) {\n  112:     def eval: T = {\n  113        val factory = new ToolBoxFactory[JavaUniverse](expr.mirror.universe) { val mirror = expr.mirror.asInstanceOf[this.u.Mirror] }\n  114        val toolBox = factory.mkToolBox()\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/reflect/ToolBox.scala:\n  129     *  Is equivalent to `compile(tree)()`.\n  130     */\n  131:   def eval(tree: u.Tree): Any\n  132  }\n  133  \n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/reflect/ToolBoxFactory.scala:\n  442      }\n  443  \n  444:     def eval(tree: u.Tree): Any = compile(tree)()\n  445    }\n  446  }\n\n/Users/vjovanov/code/scala/src/library/scala/collection/parallel/immutable/ParHashMap.scala:\n  303        evaluateCombiners(trie).asInstanceOf[HashMap[K, Repr]]\n  304      }\n  305:     private def evaluateCombiners(trie: HashMap[K, Combiner[V, Repr]]): HashMap[K, Repr] = trie match {\n  306        case hm1: HashMap.HashMap1[_, _] =>\n  307          val evaledvalue = hm1.value.result\n\n/Users/vjovanov/code/scala/src/partest-extras/scala/tools/partest/ReplTest.scala:\n   33      case _          => true\n   34    }\n   35:   def eval() = {\n   36      val s = settings\n   37      log(\"eval(): settings = \" + s)\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/macros/Evals.scala:\n   55     *  refers to a runtime value `x`, which is unknown at compile time.\n   56     */\n   57:   def eval[T](expr: Expr[T]): T\n   58  }\n   59  \n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/IMain.scala:\n  583            code = cat + \"\\n\"\n  584            new CompiledScript {\n  585:             def eval(context: ScriptContext): Object = null\n  586              def getEngine: ScriptEngine = IMain.this\n  587            }\n  ...\n  610       */\n  611      @throws[ScriptException]\n  612:     def eval(context: ScriptContext): Object = {\n  613        val result = req.lineRep.evalEither match {\n  614          case Left(e: RuntimeException) => throw e\n  ...\n  763  \n  764      def readPath  = pathTo(readName)\n  765:     def evalPath  = pathTo(evalName)\n  766  \n  767      def call(name: String, args: Any*): AnyRef = {\n  ...\n  780      class EvalException(msg: String, cause: Throwable) extends RuntimeException(msg, cause) { }\n  781  \n  782:     private def evalError(path: String, ex: Throwable) =\n  783        throw new EvalException(\"Failed to load '\" + path + \"': \" + ex.getMessage, ex)\n  784  \n  ...\n  790      lazy val evalClass = load(evalPath)\n  791  \n  792:     def evalEither = callEither(resultName) match {\n  793        case Left(ex) => ex match {\n  794            case ex: NullPointerException => Right(null)\n  ...\n  832          mostRecentWarnings = warnings\n  833      }\n  834:     private def evalMethod(name: String) = evalClass.getMethods filter (_.getName == name) match {\n  835        case Array()       => null\n  836        case Array(method) => method\n  ...\n 1039  \n 1040    @throws[ScriptException]\n 1041:   def compile(script: String): CompiledScript = eval(\"new javax.script.CompiledScript { def eval(context: javax.script.ScriptContext): Object = { \" + script + \" }.asInstanceOf[Object]; def getEngine: javax.script.ScriptEngine = engine }\").asInstanceOf[CompiledScript]\n 1042  \n 1043    @throws[ScriptException]\n ....\n 1045  \n 1046    @throws[ScriptException]\n 1047:   def eval(script: String, context: ScriptContext): Object = compiled(script).eval(context)\n 1048  \n 1049    @throws[ScriptException]\n 1050:   def eval(reader: java.io.Reader, context: ScriptContext): Object = eval(stringFromReader(reader), context)\n 1051  \n 1052    override def finalize = close\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/Naming.scala:\n   58      def line   = propOr(\"line\")\n   59      def read   = propOr(\"read\")\n   60:     def eval   = propOr(\"eval\")\n   61      def print  = propOr(\"print\")\n   62      def result = propOr(\"result\")\n\n/Users/vjovanov/code/scala/test/disabled/run/lisp.scala:\n   33    def lisp2string(s: Data): String\n   34  \n   35:   def evaluate(d: Data): Data\n   36:   // !!! def evaluate(s: String): Data = evaluate(string2lisp(s))\n   37:   def evaluate(s: String): Data\n   38  }\n   39  \n   ..\n  142    }\n  143  \n  144:   def eval(x: Data, env: Environment): Data = {\n  145      val prevexp = curexp;\n  146      curexp = x;\n  ...\n  160    }\n  161  \n  162:   def eval1(x: Data, env: Environment): Data = x match {\n  163      case SYM(name) =>\n  164        env lookup name\n  ...\n  231        case List(x, y) => CONS(x, y)}));\n  232  \n  233:   def evaluate(x: Data): Data = eval(normalize(x), globalEnv);\n  234:   def evaluate(s: String): Data = evaluate(string2lisp(s));\n  235  \n  236    def string2lisp(s: String): Data = {\n  ...\n  322    }\n  323  \n  324:   def eval(x: Data, env: Environment): Data = {\n  325      val prevexp = curexp;\n  326      curexp = x;\n  ...\n  340    }\n  341  \n  342:   def eval1(x: Data, env: Environment): Data = x match {\n  343      case Symbol(name) =>\n  344        env lookup name\n  ...\n  422        case _ => 0});\n  423  \n  424:   def evaluate(x: Data): Data = eval(normalize(x), globalEnv);\n  425:   def evaluate(s: String): Data = evaluate(string2lisp(s));\n  426  \n  427    def string2lisp(s: String): Data = {\n  ...\n  452    import lisp._;\n  453  \n  454:   def evaluate(s: String) = lisp2string(lisp.evaluate(s));\n  455  \n  456    def run = {\n\n/Users/vjovanov/code/scala/test/disabled/run/t4532.scala:\n   23  \"\"\"\n   24  \n   25:   override def eval() = \n   26      if (Javap.isAvailable()) super.eval()\n   27      else expectedOutput.lines\n\n/Users/vjovanov/code/scala/test/files/neg/run-gadts-strict.scala:\n    9  \n   10  object Test extends App {\n   11:   def eval[T](t: Term[T]): T = t match {\n   12      case Lit(n)        => n\n   13      case Succ(u)       => eval(u) + 1\n\n/Users/vjovanov/code/scala/test/files/pos/t0786.scala:\n    5  \n    6    trait Rep[T] {\n    7:     def eval: Int\n    8    }\n    9  \n   10    implicit def toRep0(n: Int) = new Rep[Int] {\n   11:     def eval = 0\n   12    }\n   13  \n   14    implicit def toRepN[T](n: M[T])(implicit f: T => Rep[T]) = new Rep[M[T]] {\n   15:     def eval = f(nullval[T]).eval + 1\n   16    }\n   17  \n\n/Users/vjovanov/code/scala/test/files/pos/t267.scala:\n   10  \n   11    trait Exp {\n   12:     def eval: Int\n   13    }\n   14    class Num(v: Int) extends Exp { self: exp =>\n   15      val value = v\n   16:     def eval = value\n   17    }\n   18  }\n   ..\n   30      val left = l\n   31      val right = r\n   32:     def eval = left.eval + right.eval\n   33    }\n   34  }\n\n/Users/vjovanov/code/scala/test/files/pos/t4579.scala:\n   33    def lisp2string(s: Data): String\n   34  \n   35:   def evaluate(d: Data): Data\n   36:   // !!! def evaluate(s: String): Data = evaluate(string2lisp(s))\n   37:   def evaluate(s: String): Data\n   38  }\n   39  \n   ..\n  142    }\n  143  \n  144:   def eval(x: Data, env: Environment): Data = {\n  145      val prevexp = curexp;\n  146      curexp = x;\n  ...\n  160    }\n  161  \n  162:   def eval1(x: Data, env: Environment): Data = x match {\n  163      case SYM(name) =>\n  164        env lookup name\n  ...\n  231        case List(x, y) => CONS(x, y)}));\n  232  \n  233:   def evaluate(x: Data): Data = eval(normalize(x), globalEnv);\n  234:   def evaluate(s: String): Data = evaluate(string2lisp(s));\n  235  \n  236    def string2lisp(s: String): Data = {\n  ...\n  322    }\n  323  \n  324:   def eval(x: Data, env: Environment): Data = {\n  325      val prevexp = curexp;\n  326      curexp = x;\n  ...\n  340    }\n  341  \n  342:   def eval1(x: Data, env: Environment): Data = x match {\n  343      case Symbol(name) =>\n  344        env lookup name\n  ...\n  422        case _ => 0});\n  423  \n  424:   def evaluate(x: Data): Data = eval(normalize(x), globalEnv);\n  425:   def evaluate(s: String): Data = evaluate(string2lisp(s));\n  426  \n  427    def string2lisp(s: String): Data = {\n  ...\n  452    import lisp._;\n  453  \n  454:   def evaluate(s: String) = lisp2string(lisp.evaluate(s));\n  455  \n  456    def run = {\n\n/Users/vjovanov/code/scala/test/files/pos/t8045.scala:\n    9    }\n   10  \n   11:   def eval(expr: Any): Option[Number] = expr match {\n   12      case UnliftNumber(n) => Some(n)\n   13      case _ => None\n\n/Users/vjovanov/code/scala/test/files/run/Course-2002-07.scala:\n   44    }\n   45  \n   46:   def eval(e: Expr): Int = {\n   47      if (e.isNumber) e.numValue\n   48      else if (e.isSum) eval(e.leftOp) + eval(e.rightOp)\n   ..\n   69  \n   70    trait Expr {\n   71:     def eval: Int;\n   72    }\n   73    class Number(n: Int) extends Expr {\n   74:     def eval: Int = n;\n   75    }\n   76    class Sum(e1: Expr, e2: Expr) extends Expr {\n   77:     def eval: Int = e1.eval + e2.eval;\n   78    }\n   79  \n   ..\n   99    case class Sum(e1: Expr, e2: Expr) extends Expr;\n  100  \n  101:   def eval(e: Expr): Int = e match {\n  102      case Number(n) => n\n  103      case Sum(e1, e2) => eval(e1) + eval(e2)\n  ...\n  120  \n  121    trait Expr {\n  122:     def eval: Int = this match {\n  123        case Number(n) => n\n  124        case Sum(e1, e2) => e1.eval + e2.eval\n  ...\n  409    }\n  410  \n  411:   def eval(e: Expr): Int = e match {\n  412      case Number(n) => n\n  413      case Var(_) => sys.error(\"cannot evaluate variable\")\n  ...\n  416    }\n  417  \n  418:   def evalvars(xs: List[(String,Int)]): Expr => Int = {\n  419      def loop(e: Expr): Int = e match {\n  420        case Number(n) => n\n  ...\n  574      }\n  575  \n  576:     def evaluate(vars: List[(String,Int)]): Int = this match {\n  577        case Lit(cst) => cst\n  578        case Var  (name) => lookup(vars, name)\n\n/Users/vjovanov/code/scala/test/files/run/gadts.scala:\n    8  \n    9  object Test extends App {\n   10:   def eval[T](t: Term[T]): T = t match {\n   11      case Lit(n)        => n\n   12      case Succ(u)       => eval(u) + 1\n\n/Users/vjovanov/code/scala/test/files/run/patmat-exprs.scala:\n  112  \n  113      /** Evaluates value of the expression. */\n  114:     def eval(context: Any => Any): T\n  115  \n  116      /** Symbolically calculates derivative of this expression. Does not simplify it. */\n  ...\n  340    case class Const[T](value: T)(implicit num: NumericOps[T]) extends Leaf[T] with NonZero[T] {\n  341      def derivative(variable: Var[T]) = Zero[T]\n  342:     def eval(f: Any => Any) = value\n  343      override def toString = value.toString\n  344    }\n  ...\n  347    case class Zero[T] (implicit num: NumericOps[T]) extends Leaf[T] {\n  348      def derivative(variable: Var[T]) = Zero[T]\n  349:     def eval(f: Any => Any) = num.zero\n  350      override def toString = \"0\"\n  351    }\n  ...\n  353    case class One[T] (implicit num: NumericOps[T]) extends Leaf[T] {\n  354      def derivative(variable: Var[T]) = Zero[T]\n  355:     def eval(f: Any => Any) = num.one\n  356      override def toString = \"1\"\n  357    }\n  ...\n  359    abstract class Var[T](implicit num: NumericOps[T]) extends Leaf[T] {\n  360      def derivative(variable: Var[T]) = if (variable == this) One[T] else Zero[T]\n  361:     def eval(f: Any => Any) = f(this).asInstanceOf[T]\n  362    }\n  363  \n  ...\n  368  \n  369    case class Add[T](args: Iterable[Expr[T]])(implicit num: NumericOps[T]) extends ManyArg[T] {\n  370:     def eval(f: Any => Any) = num.sum(for (i <- args.iterator) yield i.eval(f))\n  371      def derivative(v: Var[T]) = Add(args.map(_.derivative(v)))\n  372      def mapArgs(f: EndoFunction[Expr[_]]) = Add(args map (x => f(x)))\n  ...\n  378    case class Add2[T](left: Expr[T], right: Expr[T])\n  379                      (implicit num: NumericOps[T]) extends TwoArg[T] {\n  380:     def eval(f: Any => Any) = num.add(left.eval(f), right.eval(f))\n  381      def derivative(v: Var[T]) = Add2(left.derivative(v), right.derivative(v))\n  382      def mapArgs(f: EndoFunction[Expr[_]]) = Add2(f(left), f(right))\n  ...\n  388                                    (implicit num: NumericOps[T]) extends ManyArg[T] {\n  389      val args = List(a1, a2, a3)\n  390:     def eval(f: Any => Any) = num.add(a1.eval(f), a2.eval(f), a3.eval(f))\n  391      def derivative(v: Var[T]) = Add3(a1.derivative(v), a2.derivative(v), a3.derivative(v))\n  392      def mapArgs(f: EndoFunction[Expr[_]]) = Add3(f(a1), f(a2), f(a3))\n  ...\n  399                                   (implicit num: NumericOps[T]) extends TwoArg[T] {\n  400      def derivative(v: Var[T]) = Sub(left.derivative(v), right.derivative(v))\n  401:     def eval(f: Any => Any) = num.sub(left.eval(f), right.eval(f))\n  402      def mapArgs(f: EndoFunction[Expr[_]]) = Sub(f(left), f(right))\n  403      override def toString = \"(\" + left + \" - \" + right + \")\"\n  ...\n  408                                   (implicit num: NumericOps[T]) extends OneArg[T] {\n  409      def derivative(v: Var[T]) = Neg(expr.derivative(v))\n  410:     def eval(f: Any => Any) = num.neg(expr.eval(f))\n  411      def mapArgs(f: EndoFunction[Expr[_]]) = Neg(f(expr))\n  412      override def toString = \"(-\" + expr + \")\"\n  ...\n  422          Mul(right, left.derivative(v))))\n  423  \n  424:     def eval(f: Any => Any) = num.mul(left.eval(f), right.eval(f))\n  425      def mapArgs(f: EndoFunction[Expr[_]]) = Mul(f(left), f(right))\n  426      override def toString = \"(\" + left + \" * \" + right + \")\"\n  ...\n  441        )\n  442  \n  443:     def eval(f: Any => Any) = num.div(left.eval(f), right.eval(f))\n  444      def mapArgs(f: EndoFunction[Expr[_]]) =\n  445        Div(f(left), f(right))\n  ...\n  452      // [1 / f(x)]' = - f'(x) / f(x) ^ 2\n  453      def derivative(v: Var[T]) = Neg(Div(expr.derivative(v), Sqr(expr)))\n  454:     def eval(f: Any => Any) = num.div(num.one, expr.eval(f))\n  455      def mapArgs(f: EndoFunction[Expr[_]]) = Inv(f(expr))\n  456      override def toString = \"(1 / \" + expr + \")\"\n  ...\n  461      // [f(x) ^ 2]' = 2 * f(x) * f'(x)\n  462      def derivative(v: Var[T]) = Mul(Mul(Const(num.two), expr), expr.derivative(v))\n  463:     def eval(f: Any => Any) = num.sqr(expr.eval(f))\n  464      def mapArgs(f: EndoFunction[Expr[_]]) = Sqr(f(expr))\n  465      override def toString = expr + \" ^ 2\"\n  ...\n  470    case class Log[T](expr: Expr[T])(implicit num: NumericOps[T]) extends OneArg[T] {\n  471      def derivative(v: Var[T]) = Div(expr.derivative(v), expr)\n  472:     def eval(f: Any => Any) = num.log(expr.eval(f))\n  473      def mapArgs(f: EndoFunction[Expr[_]]) = Log(f(expr))\n  474      override def toString = \"log(\" + expr + \")\"\n  ...\n  479    case class Exp[T](expr: Expr[T])(implicit num: NumericOps[T]) extends OneArg[T] {\n  480      def derivative(v: Var[T]) = Mul(expr.derivative(v), Exp(expr))\n  481:     def eval(f: Any => Any) = num.exp(expr.eval(f))\n  482      def mapArgs(f: EndoFunction[Expr[_]]) = Exp(f(expr))\n  483      override def toString = \"exp(\" + expr + \")\"\n  ...\n  487    case class Sqrt[T](expr: Expr[T])(implicit num: NumericOps[T]) extends OneArg[T] {\n  488      def derivative(v: Var[T]) = Neg(Div(expr.derivative(v), Sqrt(expr)))\n  489:     def eval(f: Any => Any) = num.sqrt(expr.eval(f))\n  490      def mapArgs(f: EndoFunction[Expr[_]]) = Sqrt(f(expr))\n  491      override def toString = \"sqrt(\" + expr + \")\"\n  ...\n  496    case class Sin[T](expr: Expr[T])(implicit num: NumericOps[T]) extends OneArg[T] {\n  497      def derivative(v: Var[T]) = Mul(expr.derivative(v), Cos(expr))\n  498:     def eval(f: Any => Any) = num.sin(expr.eval(f))\n  499      def mapArgs(f: EndoFunction[Expr[_]]) = Sin(f(expr))\n  500      override def toString = \"sin(\" + expr + \")\"\n  ...\n  505    case class Cos[T](expr: Expr[T])(implicit num: NumericOps[T]) extends OneArg[T] {\n  506      def derivative(v: Var[T]) = Neg(Mul(expr.derivative(v), Sin(expr)))\n  507:     def eval(f: Any => Any) = num.cos(expr.eval(f))\n  508      def mapArgs(f: EndoFunction[Expr[_]]) = Cos(f(expr))\n  509      override def toString = \"cos(\" + expr + \")\"\n  ...\n  515      extends Expr[Boolean] {\n  516      def derivative(v: Var[Boolean]) = throw new IllegalStateException(\"Derivative of Boolean not allowed\")\n  517:     def eval(f: Any => Any) = cmp(left.eval(f), right.eval(f))\n  518      val args = List(left, right)\n  519    }\n  ...\n  552      val args = List(condition, left, right)\n  553      def derivative(v: Var[T]) = IfElse(condition, left.derivative(v), right.derivative(v))\n  554:     def eval(f: Any => Any) = if (condition.eval(f)) left.eval(f) else right.eval(f)\n  555      def mapArgs(f: EndoFunction[Expr[_]]) = IfElse(\n  556        f(condition).asInstanceOf[Expr[Boolean]],\n\n/Users/vjovanov/code/scala/test/files/run/reify_this.scala:\n    3  \n    4  trait Transvaal {\n    5:   def eval(tree: Expr[_]) = tree.eval\n    6  }\n    7  \n\n/Users/vjovanov/code/scala/test/files/run/t5080.scala:\n   20    }\n   21  \n   22:   def eval(v: Value): Value = {\n   23      println(\"hey\")\n   24      Num(1)\n\n/Users/vjovanov/code/scala/test/files/run/ctries-new/main.scala:\n   36    }\n   37  \n   38:   def evaluating[U](body: =>U) = new {\n   39      def shouldProduce[T <: Throwable: ClassTag]() = {\n   40        var produced = false\n\n/Users/vjovanov/code/scala/test/files/run/ctries-old/main.scala:\n   34    }\n   35  \n   36:   def evaluating[U](body: =>U) = new {\n   37      def shouldProduce[T <: Throwable: ClassManifest]() = {\n   38        var produced = false\n\n/Users/vjovanov/code/scala/test/pending/pos/unappgadteval.scala:\n   46    )\n   47    \n   48:   def eval[a](t: Term[a], env : Env): a = t match {\n   49      // First three work\n   50      case v : Var[b]         => env(v)                     // a = b\n\n/Users/vjovanov/code/scala/test/pending/run/reify_gadts.scala:\n   25       *  constraint by the pattern type.\n   26       */\n   27:     def eval[T](t: Term[T]): T = t match {\n   28        case Lit(n)        => n\n   29  \n\n96 matches across 31 files\n",
			"settings":
			{
				"buffer_size": 406298,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Evals.scala",
			"settings":
			{
				"buffer_size": 714,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala",
			"settings":
			{
				"buffer_size": 2932,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala",
			"settings":
			{
				"buffer_size": 3976,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main/p2_support_for_deep_embedding_development.tex",
			"settings":
			{
				"buffer_size": 17355,
				"line_ending": "Unix",
				"name": "p2_support_for_deep_embedding_development.tex"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala",
			"settings":
			{
				"buffer_size": 7180,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package scala.virtualization.lms\npackage epfl\npackage test15\n\nimport common._\nimport internal._\nimport test1._\nimport test7._\nimport test8.{ArrayMutation,ArrayMutationExp,ScalaGenArrayMutation}\n\nimport util.OverloadHack\nimport scala.reflect.SourceContext\n\nimport java.io.{PrintWriter,StringWriter,FileOutputStream}\nimport scala.reflect.SourceContext\nimport scala.collection.mutable\n\nimport java.io._\n\nimport scala.tools.nsc._\nimport scala.tools.nsc.util._\nimport scala.tools.nsc.reporters._\nimport scala.tools.nsc.io._\nimport breeze.linalg._\nimport scala.tools.nsc.interpreter.AbstractFileClassLoader\nimport java.util.concurrent.atomic.AtomicLong\n\ntrait Compile0 extends BaseExp {\n\n  def compile[R](syms: List[Sym[_]], f: => Rep[R])(mR: Manifest[R]): Any\n\n}\n\n\ntrait DynCompile extends Expressions with DynamicBase with Blocks {\n  var filename = \"/tmp/last\"\n  val codegen: ScalaCodegen { val IR: DynCompile.this.type }\n\n  var compiler: Global = _\n  var reporter: ConsoleReporter = _\n  //var output: ByteArrayOutputStream = _\n  var measureBytecodeSize = true\n  def setupCompiler() = {\n    val settings = new Settings()\n    // settings.processArguments(List(\"-optimise\"), true)\n    settings.classpath.value = this.getClass.getClassLoader match {\n      case ctx: java.net.URLClassLoader => ctx.getURLs.map(_.getPath).mkString(\":\")\n      case _ => System.getProperty(\"java.class.path\")\n    }\n    settings.bootclasspath.value = Predef.getClass.getClassLoader match {\n      case ctx: java.net.URLClassLoader => ctx.getURLs.map(_.getPath).mkString(\":\")\n      case _ => System.getProperty(\"sun.boot.class.path\")\n    }\n    settings.encoding.value = \"UTF-8\"\n    settings.outdir.value = \".\"\n    settings.extdirs.value = \"\"\n    //settings.verbose.value = true\n    // -usejavacp needed on windows?\n\n    reporter = new ConsoleReporter(settings, null, new PrintWriter(System.out))//writer\n    compiler = new Global(settings, reporter)\n  }\n\n  var compileCount = 0\n\n  var dumpGeneratedCode = false\n\n  def compile[B](syms: List[Sym[_]], f: => Exp[B])(mB: Manifest[B]): Any =\n    compileBlock[B](syms, codegen.reifyBlock(f)(mB))(mB)\n\n  def compileBlock[B](syms: List[Sym[_]], f: codegen.Block[B])(mB: Manifest[B]): Any = {\n    if (this.compiler eq null)\n      setupCompiler()\n\n    val className = \"staged$\" + compileCount\n    compileCount += 1\n\n    val source = new StringWriter()\n    val staticData = codegen.emitSource(syms, f, className, new PrintWriter(source))(mB)\n    codegen.emitDataStructures(new PrintWriter(source))\n\n    if (dumpGeneratedCode) println(source)\n\n    val compiler = this.compiler\n    val run = new compiler.Run\n\n    val fileSystem = new VirtualDirectory(\"<vfs>\", None)\n    compiler.settings.outputDirs.setSingleOutput(fileSystem)\n  //      compiler.genJVM.outputDir = fileSystem\n    run.compileSources(List(new util.BatchSourceFile(\"<stdin>\", source.toString)))\n    reporter.printSummary()\n\n    if (fileSystem.iterator.toList.size == 1) { // TODO this is just wrong\n      val out = new java.io.FileOutputStream(filename)\n      out.write(fileSystem.iterator.toList.head.toByteArray)\n      out.close()\n    }\n\n\n    if (!reporter.hasErrors)\n      println(\"compilation: ok\")\n    else\n      println(\"compilation: had errors\")\n\n    reporter.reset\n    //output.reset\n\n    val parent = this.getClass.getClassLoader\n    val loader = new AbstractFileClassLoader(fileSystem, this.getClass.getClassLoader)\n\n    val cls: Class[_] = loader.loadClass(className)\n    val cons = cls.getConstructor(staticData.map(_._1.tp.erasure):_*)\n\n    cons.newInstance(staticData.map(_._2.asInstanceOf[AnyRef]):_*)\n  }\n}\n\n\ntrait DynCompileScala extends Compile0 with BaseExp with DynCompile\n\n\nclass TestDynamicCompilation extends FileDiffSuite {\n\n  // boilerplate definitions for DSL interface\n\n  trait MatrixChainTransformer extends ForwardTransformer {\n    val IR: ImplLike\n    import IR._\n\n    class MatrixOrderOptimization(p: Array[Dyn[Int]]) {\n      println(\"Matrices: \" + p.map(_.static).toList.mkString(\"[\", \",\", \"]\"))\n      val n: Int = p.length - 1\n      val m: scala.Array[scala.Array[Dyn[Int]]] = scala.Array.fill[Dyn[Int]](n, n)(lift(0))\n      val s: scala.Array[scala.Array[Dyn[Int]]] = scala.Array.ofDim[Dyn[Int]](n, n)\n\n      for (ii: Int <- 1 until n; i: Int <- 0 until n - ii) {\n        val j: Int = i + ii\n        m.apply(i).update(j, lift(scala.Int.MaxValue)) // TODO remove ArrayOps\n        for (k <- i until j) {\n          val q: Dyn[Int] = m(i)(k) + m(k + 1)(j) + p(i) * p(k + 1) * p(j + 1)\n          if (q < m(i)(j)) {\n            m(i)(j) = q\n            s(i)(j) = lift(k)\n          }\n        }\n      }\n\n      def optimalChain(m: Array[DMatrix]): Exp[DenseMatrix[Double]] = {\n        def optimalChain0(i: Int, j: Int): Exp[DenseMatrix[Double]] =\n          if (i != j) MatrixMult(optimalChain0(i, unlift(s(i)(j))), optimalChain0(unlift((s(i)(j) + lift(1))), j))\n          else m(i)\n\n        optimalChain0(0, s.length-1)\n      }\n    }\n\n    val chains: mutable.Map[Sym[_], List[DMatrix]] = mutable.Map.empty[Sym[_], List[DMatrix]]\n\n    override def transformStm(stm: Stm): Exp[Any] = stm match {\n\n      case TP(s, m@DMatrix(l, r, Def(Hole(nr)))) =>\n        chains.update(s, List(m))\n        println(m)\n        super.transformStm(stm)\n\n      case TP(s, mult@DMatrix(_, _, Def(MatrixMult(l: Sym[_], r: Sym[_])))) =>\n        chains.update(s, chains(l) ++ chains(r))\n        println(chains(l).map(x => (x.m.static, x.n.static, x)).mkString(\"\", \" X \", \"\"))\n        println(chains(r).map(x => (x.m.static, x.n.static)).mkString(\"\", \" X \", \"\"))\n        super.transformStm(stm)\n\n      case c@TP(s, Chain(x: Sym[_])) =>\n        // do the reordering\n        val originalChain = chains(x)\n        val sizes: List[Dyn[Int]] = originalChain.tail\n          .foldLeft(scala.List(originalChain.head.m, originalChain.head.n))((agg, m) => agg :+ m.n)\n\n        println(\"Original chain: \")\n        println(originalChain.map(x => (x.m.static, x.n.static) + \" X \"))\n        println(\"Sizes: \")\n        println(sizes)\n        val optimizer = new MatrixOrderOptimization(sizes.toArray)\n        optimizer.optimalChain(originalChain.toArray)\n\n      case _ =>\n        super.transformStm(stm)\n    }\n  }\n\n  trait DSL extends LiftNumeric with common.NumericOps with PrimitiveOps with ArrayOps with BooleanOps\n    with LiftVariables with DynIfThenElse with Print with DynamicBase with OrderingOps with DynArith with MatrixOps with DynMatrixOps with OverloadHack {\n    def staticData[T:Manifest](x: T): Rep[T]\n  }\n  trait ImplLike extends DSL with ArrayOpsExpOpt with NumericOpsExpOpt with PrimitiveOpsExp with OrderingOpsExpOpt with BooleanOpsExp\n      with EqualExpOpt with VariablesExpOpt with StaticDataExp with BooleanOpsExpOpt\n      with IfThenElseExpOpt with PrintExp with DynamicExp with MatrixOpsExp with Transforming\n      with DynCompile with DynMatrixOpsExp\n  abstract class Impl[Ret: Manifest] extends ImplLike { self =>\n    //override val verbosity = 1\n    val UID: Long\n    var cacheSize: Int = 20\n    lazy val codegen = new ScalaGenNumericOps with ScalaGenPrimitiveOps with ScalaGenStaticData with ScalaGenOrderingOps with ScalaGenArrayOps\n      with ScalaGenVariables with ScalaGenIfThenElse with ScalaGenBooleanOps\n      with ScalaGenPrint with ScalaGenEqual with GenMatrixExp with DynamicGen with GenDynMatrixExp { val IR: self.type = self\n         override def emitNode(sym: Sym[Any], rhs: Def[Any]) = rhs match {\n\n           case PEU(x) =>\n             stream.println(s\"println(${quote(x)})\")\n             emitValDef(sym, quote(x))\n\n           case _ => super.emitNode(sym, rhs)\n     }\n      }\n\n\n   // TODO Remove\n   case class PEU(x: Exp[Boolean]) extends Def[Boolean]\n   def printAndUse(x: Exp[Boolean]): Exp[Boolean] = PEU(x)\n\n   private final def constructGuards[T: Manifest]: Rep[T] = {\n      def constructGuards0(current: Node, decisions: List[Boolean], semanticPreserving: Boolean, minimum: Long): Rep[T] = current match {\n\n        case Leaf(Some(leafDecisions)) => // call function\n          assert(leafDecisions == decisions)\n\n          val counter = CodeCache.counters.get(UID -> bitString(decisions))\n          if(counter.isEmpty)\n            CodeCache.counters.update(UID -> bitString(decisions), new AtomicLong(0L))\n          val count = CodeCache.counters(UID -> bitString(decisions))\n\n          if (count.get >= minimum) emitLookup[T](orderedHoles, decisions)\n          else if (semanticPreserving) emitRecompileMRU[T](orderedHoles, decisions, minimum)\n          else emitRecompile(orderedHoles, decisions)\n\n        case Leaf(None) =>\n\n          val counter = CodeCache.counters.get(UID -> bitString(decisions))\n          if(counter.isEmpty)\n            CodeCache.counters.update(UID -> bitString(decisions), new AtomicLong(0L))\n          val count = CodeCache.counters(UID -> bitString(decisions))\n\n          if (semanticPreserving) emitRecompileMRU[T](orderedHoles, decisions, minimum)\n          else emitRecompile[T](orderedHoles, decisions)\n\n        case DecisionNode(tree, semanticPreserving, left, right) =>\n          val thn = constructGuards0(right, decisions :+ true, semanticPreserving, minimum)\n          val els = constructGuards0(left, decisions :+ false, semanticPreserving, minimum)\n          if (tree) thn else els\n      }\n\n      println(s\"!!!!!!!!!!!!!!! Minimum of ${CodeCache.counters} $UID\")\n      val counters = CodeCache.counters.filter(_._1._1 == UID).map(_._2.get)\n      val minimum = counters.toList.sorted.reverse.take(cacheSize).reverse.headOption.getOrElse(0L)\n\n      CodeCache.minimum.update(UID, new AtomicLong(minimum))\n      println(s\"!!!!!!!!!!!!!!! Minimum of $counters is: $minimum\")\n      constructGuards0(root, Nil, false, minimum)\n   }\n   private final def recompile(run: Any): Any = {\n      holes.clear()\n      decisions = Nil\n      parent = None\n      val matrixMultTransformer = new MatrixChainTransformer { val IR: self.type = self }\n      if (CodeCache.meta.contains(UID)) {\n        root = CodeCache.meta(UID)._2\n        parent = None\n      }\n      val code: Rep[Ret] = main()\n\n      // semantic preserving\n      // val transformedCode = semanticPreserving { matrixMultTransformer(codegen.reifyBlock(code)) }\n      val transformedCode = matrixMultTransformer(codegen.reifyBlock(code))\n\n      val guards: Rep[Ret] = constructGuards[Ret]\n\n      val decs = decisions\n      println(\"Guard:\")\n      codegen.emitSource(orderedHoles, codegen.reifyBlock(guards)(manifest[Ret]), \"Guard\", new PrintWriter(System.out))(manifest[Ret])\n      println(\"Code:\")\n      codegen.emitSource(orderedHoles, transformedCode, \"Code\", new PrintWriter(System.out))(manifest[Ret])\n\n\n      val guardFunction = compile[Ret](orderedHoles, guards)(manifest[Ret])\n      val fname = filename\n      filename = \"/dev/null\"\n      val function = compileBlock[Ret](orderedHoles, transformedCode)(manifest[Ret])\n      filename = fname\n\n      if (!CodeCache.code.contains(UID)) CodeCache.code.update(UID, PrefixMap[Any]())\n      CodeCache.code(UID).update(decs.map(if(_) \"1\" else \"0\").mkString(\"\", \"\", \"\"), function)\n      CodeCache.guards.update(UID, guardFunction)\n      CodeCache.meta.update(UID, (run, root))\n\n      function\n    }\n\n   def main(): Rep[Ret]\n\n   def apply[T0: Manifest](v0: T0):  Ret = {\n     if (CodeCache.guards.contains(UID)) {\n       CodeCache.guards(UID).asInstanceOf[T0 => Ret](v0)\n     } else { // on the first run\n       def recompileRun(v0: T0): Ret = recompile(recompileRun _).asInstanceOf[T0 => Ret](v0)\n       recompileRun(v0)\n     }\n   }\n\n   def apply[T0: Manifest, T1: Manifest, T2: Manifest](v0: T0, v1: T1, v2: T2): Ret = {\n     if (CodeCache.guards.contains(UID)) {\n       CodeCache.guards(UID).asInstanceOf[(T0, T1, T2) => Ret](v0, v1, v2)\n     } else { // on the first run\n       def recompileRun(v0: T0, v1: T1, v2: T2): Ret = recompile(recompileRun _).asInstanceOf[(T0, T1, T2) => Ret](v0, v1, v2)\n\n       recompileRun(v0, v1, v2)\n     }\n   }\n\n   def apply[T0: Manifest, T1: Manifest, T2: Manifest, T3: Manifest](v0: T0, v1: T1, v2: T2, v3: T3): Ret = {\n     if (CodeCache.guards.contains(UID)) {\n       CodeCache.guards(UID).asInstanceOf[(T0, T1, T2, T3) => Ret](v0, v1, v2, v3)\n     } else { // on the first run\n       def recompileRun(v0: T0, v1: T1, v2: T2, v3: T3): Ret = recompile(recompileRun _).asInstanceOf[(T0, T1, T2, T3) => Ret](v0, v1, v2, v3)\n\n       recompileRun(v0, v1, v2, v3)\n     }\n   }\n\n   def apply[T0: Manifest, T1: Manifest, T2: Manifest, T3: Manifest, T4: Manifest](v0: T0, v1: T1, v2: T2, v3: T3, v4: T4): Ret = {\n     if (CodeCache.guards.contains(UID)) {\n       CodeCache.guards(UID).asInstanceOf[(T0, T1, T2, T3, T4) => Ret](v0, v1, v2, v3, v4)\n     } else { // on the first run\n       def recompileRun(v0: T0, v1: T1, v2: T2, v3: T3, v4: T4): Ret = recompile(recompileRun _).asInstanceOf[(T0, T1, T2, T3, T4) => Ret](v0, v1, v2, v3, v4)\n\n       recompileRun(v0, v1, v2, v3, v4)\n     }\n   }\n\n   def apply[T0: Manifest, T1: Manifest, T2: Manifest, T3: Manifest, T4: Manifest, T5: Manifest](v0: T0, v1: T1, v2: T2, v3: T3, v4: T4, v5: T5): Ret = {\n     if (CodeCache.guards.contains(UID)) {\n       CodeCache.guards(UID).asInstanceOf[(T0, T1, T2, T3, T4, T5) => Ret](v0, v1, v2, v3, v4, v5)\n     } else { // on the first run\n       def recompileRun(v0: T0, v1: T1, v2: T2, v3: T3, v4: T4, v5: T5): Ret = recompile(recompileRun _).asInstanceOf[(T0, T1, T2, T3, T4, T5) => Ret](v0, v1, v2, v3, v4, v5)\n\n       recompileRun(v0, v1, v2, v3, v4, v5)\n     }\n   }\n\n   def apply[T0: Manifest, T1: Manifest, T2: Manifest, T3: Manifest, T4: Manifest, T5: Manifest, T6: Manifest](v0: T0, v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6): Ret = {\n     if (CodeCache.guards.contains(UID)) {\n       CodeCache.guards(UID).asInstanceOf[(T0, T1, T2, T3, T4, T5, T6) => Ret](v0, v1, v2, v3, v4, v5, v6)\n     } else { // on the first run\n       def recompileRun(v0: T0, v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6): Ret = recompile(recompileRun _).asInstanceOf[(T0, T1, T2, T3, T4, T5, T6) => Ret](v0, v1, v2, v3, v4, v5, v6)\n\n       recompileRun(v0, v1, v2, v3, v4, v5, v6)\n     }\n   }\n\n   def apply[T0: Manifest, T1: Manifest, T2: Manifest, T3: Manifest, T4: Manifest, T5: Manifest, T6: Manifest, T7: Manifest](v0: T0, v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7): Ret = {\n     if (CodeCache.guards.contains(UID)) {\n       CodeCache.guards(UID).asInstanceOf[(T0, T1, T2, T3, T4, T5, T6, T7) => Ret](v0, v1, v2, v3, v4, v5, v6, v7)\n     } else { // on the first run\n       def recompileRun(v0: T0, v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7): Ret = recompile(recompileRun _).asInstanceOf[(T0, T1, T2, T3, T4, T5, T6, T7) => Ret](v0, v1, v2, v3, v4, v5, v6, v7)\n\n       recompileRun(v0, v1, v2, v3, v4, v5, v6, v7)\n     }\n   }\n\n\n   def apply[T0: Manifest, T1: Manifest, T2: Manifest, T3: Manifest, T4: Manifest, T5: Manifest, T6: Manifest, T7: Manifest, T8: Manifest](\n    v0: T0, v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8): Ret = {\n     if (CodeCache.guards.contains(UID)) {\n       CodeCache.guards(UID).asInstanceOf[(T0, T1, T2, T3, T4, T5, T6, T7, T8) => Ret](v0, v1, v2, v3, v4, v5, v6, v7, v8)\n     } else { // on the first run\n       def recompileRun(v0: T0, v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8): Ret =\n         recompile(recompileRun _).asInstanceOf[(T0, T1, T2, T3, T4, T5, T6, T7, T8) => Ret](v0, v1, v2, v3, v4, v5, v6, v7, v8)\n\n       recompileRun(v0, v1, v2, v3, v4, v5, v6, v7, v8)\n     }\n   }\n\n   def apply[T0: Manifest, T1: Manifest, T2: Manifest, T3: Manifest, T4: Manifest, T5: Manifest, T6: Manifest, T7: Manifest, T8: Manifest, T9: Manifest](\n    v0: T0, v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9): Ret = {\n     if (CodeCache.guards.contains(UID)) {\n       CodeCache.guards(UID).asInstanceOf[(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9) => Ret](v0, v1, v2, v3, v4, v5, v6, v7, v8, v9)\n     } else { // on the first run\n       def recompileRun(v0: T0, v1: T1, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6, v7: T7, v8: T8, v9: T9): Ret =\n         recompile(recompileRun _).asInstanceOf[(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9) => Ret](v0, v1, v2, v3, v4, v5, v6, v7, v8, v9)\n\n       recompileRun(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9)\n     }\n   }\n\n    override def reset() = {\n      super.reset\n      root = emptyRoot // TODO this needs to be kept\n      holes.clear()\n      parent = None\n    }\n  }\n\n  /*\n   * This is introduced as primitives can not be caught by the dynamic macro.\n   */\n  trait DynArith extends DynamicBase with PrimitiveOps with BooleanOps with DynIfThenElse with Equal with OrderingOps {\n    def infix_+(lhs: Dyn[Int], rhs: Dyn[Int]): Dyn[Int] =\n      Both(lhs.static + rhs.static, lhs.dynamic + rhs.dynamic)\n\n    def infix_-(lhs: Dyn[Int], rhs: Dyn[Int]): Dyn[Int] =\n      Both(lhs.static - rhs.static, lhs.dynamic - rhs.dynamic)\n\n    def infix_*(lhs: Dyn[Int], rhs: Dyn[Int]): Dyn[Int] =\n      Both(lhs.static * rhs.static, lhs.dynamic * rhs.dynamic)\n\n    def __equal(lhs: Dyn[Any], rhs: Dyn[Any]): Dyn[Boolean] =\n      Both(lhs.static == rhs.static, lhs.dynamic == rhs.dynamic)\n\n    def infix_unary_!(x: Dyn[Boolean]): Dyn[Boolean] =\n      Both(!x.static, !x.dynamic)\n\n    def infix_<(lhs: Dyn[Int], rhs: Dyn[Int]): Dyn[Boolean] =\n      Both(lhs.static < rhs.static, lhs.dynamic < rhs.dynamic)\n\n    def infix_>(lhs: Dyn[Int], rhs: Dyn[Int]): Dyn[Boolean] =\n      Both(lhs.static > rhs.static, lhs.dynamic > rhs.dynamic)\n\n    def infix_&&(lhs: Dyn[Boolean], rhs: Dyn[Boolean]): Dyn[Boolean] =\n      Both(lhs.static && rhs.static, lhs.dynamic && rhs.dynamic)\n\n    def dassert(c: => Dyn[Boolean]): Rep[Unit] = if (infix_unary_!(c)) ???\n  }\n\n  trait MatrixOps { self: DSL =>\n\n    implicit class MatrixOps(l: Rep[DenseMatrix[Double]]) {\n      def m: Rep[Int] = matrix_m(l)\n      def n: Rep[Int] = matrix_n(l)\n      def *(r: Rep[DenseMatrix[Double]]): Rep[DenseMatrix[Double]] = matrix_*(l,r)\n    }\n\n    def matrix_*(l: Rep[DenseMatrix[Double]], r: Rep[DenseMatrix[Double]]): Rep[DenseMatrix[Double]]\n    def matrix_m(l: Rep[DenseMatrix[Double]]): Rep[Int]\n    def matrix_n(l: Rep[DenseMatrix[Double]]): Rep[Int]\n  }\n\n  trait MatrixOpsExp extends MatrixOps with Transforming { self: ImplLike =>\n    case class MatrixMult(l: Rep[DenseMatrix[Double]], r: Rep[DenseMatrix[Double]]) extends Def[DenseMatrix[Double]]\n    case class MatrixN(l: Rep[DenseMatrix[Double]]) extends Def[Int]\n    case class MatrixM(l: Rep[DenseMatrix[Double]]) extends Def[Int]\n\n    def matrix_*(l: Rep[DenseMatrix[Double]], r: Rep[DenseMatrix[Double]]): Rep[DenseMatrix[Double]] = MatrixMult(l, r)\n    def matrix_m(l: Rep[DenseMatrix[Double]]): Rep[Int] = MatrixM(l)\n    def matrix_n(l: Rep[DenseMatrix[Double]]): Rep[Int] = MatrixN(l)\n\n    override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n       case MatrixMult(l, r) => matrix_*(f(l), f(r))\n       case MatrixN(l) => matrix_n(f(l))\n       case MatrixM(l) => matrix_m(f(l))\n       case Hole(n) => toAtom(Hole(n))\n       case _ => super.mirror(e,f)\n     }).asInstanceOf[Exp[A]] // why??\n  }\n\n  trait GenMatrixExp extends ScalaGenBase {\n     val IR: MatrixOpsExp with Expressions with ImplLike\n     import IR._\n     override def emitNode(sym: Sym[Any], rhs: Def[Any]) = rhs match {\n       case MatrixMult(l, r) => emitValDef(sym, quote(l) + \" * \" + quote(r))\n       case MatrixN(l) => emitValDef(sym, quote(l) + \".cols\")\n       case MatrixM(l) => emitValDef(sym, quote(l) + \".rows\")\n       case _ => super.emitNode(sym, rhs)\n     }\n\n  }\n\n  trait DynMatrixOps extends MatrixOps { self: DSL =>\n    type DynMatrix\n    implicit class DynMatrixOps(l: DynMatrix) {\n      def m: Dyn[Int] = matrix_m(l)\n      def n: Dyn[Int] = matrix_n(l)\n      def *(r: DynMatrix): DynMatrix = matrix_*(l,r)\n    }\n\n    def matrix_*(l: DynMatrix, r: DynMatrix)(implicit h:Overloaded1): DynMatrix\n    def matrix_m(l: DynMatrix)(implicit h:Overloaded1): Dyn[Int]\n    def matrix_n(l: DynMatrix)(implicit h:Overloaded1): Dyn[Int]\n    def holeM(x: DenseMatrix[Double], nr: Int): DynMatrix\n    def chain(x: DynMatrix): Rep[DenseMatrix[Double]]\n  }\n\n    trait DynMatrixOpsExp extends DynMatrixOps with Transforming { self: ImplLike =>\n      type DynMatrix = Exp[DenseMatrix[Double]] with Static\n\n      case class Chain(x: DynMatrix) extends Def[DenseMatrix[Double]]\n      final case class DMatrix(m: Dyn[Int], n: Dyn[Int], matrix: Rep[DenseMatrix[Double]]) extends Def[DenseMatrix[Double]]\n      implicit def toSDAtom(v: Def[DenseMatrix[Double]]): Exp[DenseMatrix[Double]] with Static = toAtom(v).asInstanceOf[Exp[DenseMatrix[Double]] with Static]\n\n      def holeM(x: DenseMatrix[Double], nr: Int): DynMatrix ={\n        val mat = holeRep[DenseMatrix[Double]](x, nr)\n        println(\"Hole:\" + DMatrix(Both(x.rows, mat.m), Both(x.cols, mat.n), mat))\n        DMatrix(Both(x.rows, mat.m), Both(x.cols, mat.n), mat)\n      }\n\n      def chain(x: DynMatrix): Rep[DenseMatrix[Double]] = Chain(x)\n\n      def matrix_*(l: DynMatrix, r: DynMatrix)(implicit h:Overloaded1): DynMatrix = {\n        DMatrix(l.m, r.n, MatrixMult(l, r))\n      }\n\n      def matrix_m(l: DynMatrix)(implicit h:Overloaded1): Dyn[Int] = l match {\n        case Def(DMatrix(l, _, _ )) => l\n      }\n      def matrix_n(l: DynMatrix)(implicit h:Overloaded1): Dyn[Int] = l match {\n        case Def(DMatrix(_, r, _ )) => r\n      }\n\n      override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n       case DMatrix(l, r, matrix) => toSDAtom(DMatrix(Both(l.static, f(l.dynamic)), Both(r.static, f(r.dynamic)), f(matrix)))\n       case _ => super.mirror(e,f)\n     }).asInstanceOf[Exp[A]] // why??\n    }\n\n  trait GenDynMatrixExp extends ScalaGenBase {\n     val IR: MatrixOpsExp with Expressions with ImplLike\n     import IR._\n     override def emitNode(sym: Sym[Any], rhs: Def[Any]) = rhs match {\n       case DMatrix(cols, rows, m) => emitValDef(sym, quote(m))\n       case _ => super.emitNode(sym, rhs)\n     }\n  }\n\n\n  // staged program implementations\n  val prefix = home + \"test-out/epfl/test15-\"\n\n  def testBasicIf = {\n    var x = 1\n    withOutFileChecked(prefix+\"dynamic-basic\") {\n      class Prog(val UID: Long = 5551L) extends Impl[Int] {\n        def main(): Rep[Int] = {\n          if (hole[Int](x, 1) < lift(20))\n            if (hole[Int](x, 1) < lift(10)) 0 else 1\n          else 2\n        }\n      }\n\n      println((new Prog)(x))\n      x = 11\n      println((new Prog)(x))\n      x = 20\n      println((new Prog)(x))\n      x = 1\n      println((new Prog)(x))\n      x = 11\n      println((new Prog)(x))\n      x = 20\n      println((new Prog)(x))\n    }\n\n  }\n\n  /*def testpow = {\n    var x = 1\n    withOutFileChecked(prefix+\"dynamic-pow\") {\n      class Prog(val UID: Long = 5552L) extends Impl[Int] {\n        def main(): Rep[Int] = {\n          def pow(base: Rep[Int], exp: Dyn[Int]): Rep[Int] = {\n            if (exp == lift(0)) 1\n            else base * pow(base, exp - lift(1))\n          }\n\n          pow(unit(2), hole[Int](x,1))\n        }\n      }\n      println((new Prog)(x))\n      x = 1\n      println((new Prog)(x))\n      x = 5\n      println((new Prog)(x))\n      x = 4\n      println((new Prog)(x))\n      x = 3\n      println((new Prog)(x))\n      x = 5\n      println((new Prog)(x))\n      x = 5\n      println((new Prog)(x))\n      x = 1\n      println((new Prog)(x))\n    }\n\n  }\n\n  def test3inputs = {\n    var (x, y, z) = (1, 2, 3)\n    withOutFileChecked(prefix+\"dynamic-3inputs\") {\n      class Prog(val UID: Long = 5553L) extends Impl[Int] {\n        def main(): Rep[Int] = {\n          if (hole[Int](x,1) > hole[Int](y,2) + hole[Int](z, 3)) unit(1) else unit(2)\n        }\n      }\n      println((new Prog)(x, y, z))\n      x = 1\n      println((new Prog)(x, y, z))\n      x = 5\n      println((new Prog)(x, y, z))\n      x = 4\n      println((new Prog)(x, y, z))\n      x = 3\n      println((new Prog)(x, y, z))\n      x = 5\n      println((new Prog)(x, y, z))\n      x = 5\n      println((new Prog)(x, y, z))\n      x = 1\n      println((new Prog)(x, y, z))\n    }\n\n  }*/\n\n  def mat(cols: Int, rows: Int) = DenseMatrix.zeros[Double](cols, rows)\n    // distribution is for now the number of different matrices that we make.\n    case class Generator(distribution: Int, maxSize: Int, minSize: Int, chain: Int) {\n      val rand = new scala.util.Random\n      def nextSize: Int = math.abs(rand.nextInt) % (maxSize - minSize) + minSize + 1\n      var (cols, rows) = (nextSize, nextSize)\n      val chains: List[List[DenseMatrix[Double]]] = (0 until distribution).map({ _ =>\n        (0 until chain).map({ _ =>\n        val res = mat(cols, rows)\n        cols = rows\n        rows = nextSize\n        res\n      }).toList}).toList\n\n      def apply(): List[DenseMatrix[Double]] = chains(math.abs(rand.nextInt) % distribution)\n\n  }\n\n  def testMatrixMult = {\n\n    var x = mat(2, 22)\n    var y = mat(22, 2)\n    var z = mat(2, 2)\n\n\n\n\n    /*withOutFileChecked(prefix+\"basic-matrices\") {\n      class Prog(val UID: Long = 5554L) extends Impl[DenseMatrix[Double]] {\n        def main(): Rep[DenseMatrix[Double]] = {\n          val m2 = holeM(x, 1) * holeM(y, 2)\n          chain(m2 * holeM(z, 3))\n        }\n      }\n      println(s\"[${x.cols}, ${x.rows}, ${y.rows}, ${z.rows}]\")\n      println((new Prog)(x, y, z))\n\n      x = mat(3, 22)\n      y = mat(22, 2)\n      z = mat(2, 2)\n\n      println(s\"[${x.cols}, ${x.rows}, ${y.rows}, ${z.rows}]\")\n      println((new Prog)(x, y, z))\n      x = mat(100, 30)\n      y = mat(30, 500)\n      z = mat(500, 6000)\n      println(s\"[${x.cols}, ${x.rows}, ${y.rows}, ${z.rows}]\")\n      println((new Prog)(x, y, z))\n      println(s\"[${x.cols}, ${x.rows}, ${y.rows}, ${z.rows}]\")\n      println((new Prog)(x, y, z))\n\n      x = mat(3, 22)\n      y = mat(22, 2)\n      z = mat(2, 2)\n\n      println(s\"[${x.cols}, ${x.rows}, ${y.rows}, ${z.rows}]\")\n      println((new Prog)(x, y, z))\n    }*/\n\n\n    var (v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) = (mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2))\n    withOutFileChecked(prefix+\"matrices-big\") {\n      class Prog(val UID: Long = 5555L) extends Impl[DenseMatrix[Double]] {\n        def main(): Rep[DenseMatrix[Double]] = {\n          chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5) * holeM(v6, 6) * holeM(v7, 7) * holeM(v8, 8) * holeM(v9, 9))\n        }\n      }\n\n      println((new Prog)(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9))\n    }\n\n    val gen = Generator(distribution = 80, 20, 50, 10)\n    var chain = gen()\n    v0 = chain(0)\n    v1 = chain(1)\n    v2 = chain(2)\n    /*withOutFileChecked(prefix+\"matrices-3\") {\n      class Prog(val UID: Long = 5556L) extends Impl[DenseMatrix[Double]] {\n        override val cacheSize = 2\n        def main(): Rep[DenseMatrix[Double]] = {\n          chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2))\n        }\n      }\n\n      println((new Prog)(v0, v1, v2))\n\n      chain = gen()\n      v0 = chain(0)\n      v1 = chain(1)\n      v2 = chain(2)\n      println((new Prog)(v0, v1, v2))\n\n      chain = gen()\n      v0 = chain(0)\n      v1 = chain(1)\n      v2 = chain(2)\n      println((new Prog)(v0, v1, v2))\n\n      chain = gen()\n      v0 = chain(0)\n      v1 = chain(1)\n      v2 = chain(2)\n      println((new Prog)(v0, v1, v2))\n\n      chain = gen()\n      v0 = chain(0)\n      v1 = chain(1)\n      v2 = chain(2)\n      println((new Prog)(v0, v1, v2))\n\n      chain = gen()\n      v0 = chain(0)\n      v1 = chain(1)\n      v2 = chain(2)\n      println((new Prog)(v0, v1, v2))\n\n      chain = gen()\n      v0 = chain(0)\n      v1 = chain(1)\n      v2 = chain(2)\n      println((new Prog)(v0, v1, v2))\n\n\n      chain = gen()\n      v0 = chain(0)\n      v1 = chain(1)\n      v2 = chain(2)\n      println((new Prog)(v0, v1, v2))\n\n      chain = gen()\n      v0 = chain(0)\n      v1 = chain(1)\n      v2 = chain(2)\n      println((new Prog)(v0, v1, v2))\n\n      chain = gen()\n      v0 = chain(0)\n      v1 = chain(1)\n      v2 = chain(2)\n      println((new Prog)(v0, v1, v2))\n\n      chain = gen()\n      v0 = chain(0)\n      v1 = chain(1)\n      v2 = chain(2)\n      println((new Prog)(v0, v1, v2))\n\n\n      chain = gen()\n      v0 = chain(0)\n      v1 = chain(1)\n      v2 = chain(2)\n      println((new Prog)(v0, v1, v2))\n\n      chain = gen()\n      v0 = chain(0)\n      v1 = chain(1)\n      v2 = chain(2)\n      println((new Prog)(v0, v1, v2))\n    }*/\n  }\n\n\n  // 1) How much bytecode do the guards take for different sizes of multiplication?\n  //   - for [1, 10, 100] explored paths\n  /*def testBytecode() = {\n    var (v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) = (mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2))\n    class Prog10(val UID: Long = 10555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5) * holeM(v6, 6) * holeM(v7, 7) * holeM(v8, 8) * holeM(v9, 9))\n      }\n    }\n\n    class Prog9(val UID: Long = 95555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5) * holeM(v6, 6) * holeM(v7, 7) * holeM(v8, 8))\n      }\n    }\n\n    class Prog8(val UID: Long = 85555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5) * holeM(v6, 6) * holeM(v7, 7))\n      }\n    }\n\n    class Prog7(val UID: Long = 75555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5) * holeM(v6, 6))\n      }\n    }\n\n    class Prog6(val UID: Long = 65555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5))\n      }\n    }\n\n    class Prog5(val UID: Long = 55555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4))\n      }\n    }\n\n    class Prog4(val UID: Long = 45555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3))\n      }\n    }\n\n    class Prog3(val UID: Long = 35555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2))\n      }\n    }\n\n    def generate(paths: List[Int], name: String, setFilename: String => Unit)(b: => Unit): Unit = {\n      val gen = Generator(1000, 2, 20, 10)\n      // set the variable for generation\n      def setValues(): Unit = {\n        var chain = gen()\n        v0 = chain(0)\n        v1 = chain(1)\n        v2 = chain(2)\n        v3 = chain(3)\n        v4 = chain(4)\n        v5 = chain(5)\n        v6 = chain(6)\n        v7 = chain(7)\n        v8 = chain(8)\n        v9 = chain(9)\n      }\n\n      var i = 1\n      val max = paths.max\n      while(i <= paths.max) {\n        setValues()\n        setFilename(name + \"-\" + i + \".class\")\n        b\n        i += 1\n      }\n    }\n    withOutFileChecked(prefix+\"matrices-bytecode\") {\n      val prog3 =new Prog3\n      prog3.cacheSize = 100\n      generate(List(1,20), \"/tmp/prog3\", s => prog3.filename = s)(prog3(v0, v1, v2))\n\n      val prog4 =new Prog4\n      prog4.cacheSize = 100\n      generate(List(1,20), \"/tmp/prog4\", s => prog4.filename = s)(prog4(v0, v1, v2, v3))\n\n      val prog5 =new Prog5\n      prog5.cacheSize = 100\n      generate(List(1,100), \"/tmp/prog5\", s => prog5.filename = s)(prog5(v0, v1, v2, v3, v4))\n\n      val prog6 =new Prog6\n      prog6.cacheSize = 100\n      generate(List(1,20), \"/tmp/prog6\", s => prog6.filename = s)(prog6(v0, v1, v2, v3, v4, v5))\n\n      val prog7 =new Prog7\n      prog7.cacheSize = 100\n      generate(List(1,20), \"/tmp/prog7\", s => prog7.filename = s)(prog7(v0, v1, v2, v3, v4, v5, v6))\n\n      val prog8 =new Prog8\n      prog8.cacheSize = 200\n      generate(List(1,20), \"/tmp/prog8\", s => prog8.filename = s)(prog8(v0, v1, v2, v3, v4, v5, v6, v7))\n    }\n\n  }*/\n\n\n  // 2) How long do the guards run for different sizes of multiplication?\n  //   - 1 10 20 all explored paths\n  def testTime() = {\n    var (v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) = (mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2))\n    class Prog10(val UID: Long = 110555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5) * holeM(v6, 6) * holeM(v7, 7) * holeM(v8, 8) * holeM(v9, 9))\n      }\n    }\n\n    class Prog9(val UID: Long = 195555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5) * holeM(v6, 6) * holeM(v7, 7) * holeM(v8, 8))\n      }\n    }\n\n    class Prog8(val UID: Long = 185555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5) * holeM(v6, 6) * holeM(v7, 7))\n      }\n    }\n\n    class Prog7(val UID: Long = 175555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5) * holeM(v6, 6))\n      }\n    }\n\n    class Prog6(val UID: Long = 165555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5))\n      }\n    }\n\n    class Prog5(val UID: Long = 155555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4))\n      }\n    }\n\n    class Prog4(val UID: Long = 145555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3))\n      }\n    }\n\n    class Prog3(val UID: Long = 135555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2))\n      }\n    }\n\n    def generate(paths: List[Int], name: String, setFilename: String => Unit)(b: => DenseMatrix[Double]): Unit = {\n      val gen = Generator(1000, 2, 20, 10)\n      // set the variable for generation\n      def setValues(): Unit = {\n        var chain = gen()\n        v0 = chain(0)\n        v1 = chain(1)\n        v2 = chain(2)\n        v3 = chain(3)\n        v4 = chain(4)\n        v5 = chain(5)\n        v6 = chain(6)\n        v7 = chain(7)\n        v8 = chain(8)\n        v9 = chain(9)\n      }\n\n      var i = 1\n      val max = paths.max\n      while(i <= paths.max) {\n        setValues()\n        setFilename(name + \"-\" + i + \".class\")\n        for (j <- 0 until 30000) { // warmup\n          b\n        }\n        var sum: Long = 0\n\n        for (j <- 0 until 10000) { // warmup\n          val startTime = System.nanoTime\n          b\n          val time = CodeCache.time - startTime\n          sum += time\n        }\n\n        println(s\"Elapsed time ($name-$i): \" + (sum / 10000))\n        i += 1\n      }\n    }\n    withOutFileChecked(prefix+\"matrices-timings\") {\n      val prog3 =new Prog3\n      prog3.cacheSize = 100\n      generate(List(1,10), \"/tmp/prog3\", s => prog3.filename = s)(prog3(v0, v1, v2))\n\n      val prog4 =new Prog4\n      prog4.cacheSize = 100\n      generate(List(1,10), \"/tmp/prog4\", s => prog4.filename = s)(prog4(v0, v1, v2, v3))\n\n      val prog5 =new Prog5\n      prog5.cacheSize = 100\n      generate(List(1,10), \"/tmp/prog5\", s => prog5.filename = s)(prog5(v0, v1, v2, v3, v4))\n\n      val prog6 =new Prog6\n      prog6.cacheSize = 100\n      generate(List(1,10), \"/tmp/prog6\", s => prog6.filename = s)(prog6(v0, v1, v2, v3, v4, v5))\n\n      val prog7 =new Prog7\n      prog7.cacheSize = 100\n      generate(List(1,10), \"/tmp/prog7\", s => prog7.filename = s)(prog7(v0, v1, v2, v3, v4, v5, v6))\n\n      val prog8 =new Prog8\n      prog8.cacheSize = 200\n      generate(List(1,9), \"/tmp/prog8\", s => prog8.filename = s)(prog8(v0, v1, v2, v3, v4, v5, v6, v7))\n    }\n\n  }\n  // 3) With one stable input?\n  def testUnstable() = {\n    var (v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) = (mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2),mat(2,2))\n    class Prog10(val UID: Long = 1110555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5) * holeM(v6, 6) * holeM(v7, 7) * holeM(v8, 8) * holeM(v9, 9))\n      }\n    }\n\n    class Prog9(val UID: Long = 1195555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5) * holeM(v6, 6) * holeM(v7, 7) * holeM(v8, 8))\n      }\n    }\n\n    class Prog8(val UID: Long = 1185555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5) * holeM(v6, 6) * holeM(v7, 7))\n      }\n    }\n\n    class Prog7(val UID: Long = 1175555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5) * holeM(v6, 6))\n      }\n    }\n\n    class Prog6(val UID: Long = 1165555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4) * holeM(v5, 5))\n      }\n    }\n\n    class Prog5(val UID: Long = 1155555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3) * holeM(v4, 4))\n      }\n    }\n\n    class Prog4(val UID: Long = 1145555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2) * holeM(v3, 3))\n      }\n    }\n\n    class Prog3(val UID: Long = 1135555L) extends Impl[DenseMatrix[Double]] {\n      def main(): Rep[DenseMatrix[Double]] = {\n        chain(holeM(v0, 0) * holeM(v1, 1) * holeM(v2, 2))\n      }\n    }\n    case class Generator(distribution: Int, maxSize: Int, minSize: Int, chain: Int) {\n      val rand = new scala.util.Random\n      def nextSize: Int = math.abs(rand.nextInt) % (maxSize - minSize) + minSize + 1\n      var (cols, rows) = (nextSize, nextSize)\n      val chains: List[(List[DenseMatrix[Double]], List[DenseMatrix[Double]])] = (0 until distribution).map({ _ =>\n        (0 until chain).map({ _ =>\n        val res = (mat(cols, rows), mat(cols+1, rows+1))\n        cols = rows\n        rows = nextSize\n        res\n      }).toList.unzip}).toList\n\n      def apply(nr: Int, index: Int): List[DenseMatrix[Double]] = if (nr == 1)\n       chains(math.abs(index) % distribution)._1\n      else chains(math.abs(index) % distribution)._2\n\n  }\n    def generate(paths: List[Int], name: String, setFilename: String => Unit)(b: => DenseMatrix[Double]): Unit = {\n      val gen = Generator(1000, 2, 20, 10)\n      // set the variable for generation\n      def setValues(index: Int, nr: Int): Unit = {\n        var chain = gen(index, nr)\n        v0 = chain(0)\n        v1 = chain(1)\n        v2 = chain(2)\n        v3 = chain(3)\n        v4 = chain(4)\n        v5 = chain(5)\n        v6 = chain(6)\n        v7 = chain(7)\n        v8 = chain(8)\n        v9 = chain(9)\n      }\n\n      var i = 1\n      val max = paths.max\n      while(i <= paths.max) {\n        val index = gen.rand.nextInt\n\n        setFilename(name + \"-\" + i + \".class\")\n        for (j <- 0 until 30000) { // warmup\n          setValues(index, 1)\n          b\n          setValues(index, 2)\n          b\n        }\n        var sum: Long = 0\n\n        for (j <- 0 until 10000) { // warmup\n          setValues(index, 1)\n          val startTime = System.nanoTime\n          b\n          val time = CodeCache.time - startTime\n          setValues(index, 2)\n          b\n          sum += time\n        }\n\n        println(s\"Elapsed time ($name-$i): \" + (sum / 10000))\n        i += 1\n      }\n    }\n    withOutFileChecked(prefix+\"matrices-timings-unstable\") {\n      val prog3 =new Prog3\n      prog3.cacheSize = 100\n      generate(List(1,10), \"/tmp/prog3\", s => prog3.filename = s)(prog3(v0, v1, v2))\n\n      val prog4 =new Prog4\n      prog4.cacheSize = 100\n      generate(List(1,10), \"/tmp/prog4\", s => prog4.filename = s)(prog4(v0, v1, v2, v3))\n\n      val prog5 =new Prog5\n      prog5.cacheSize = 100\n      generate(List(1,10), \"/tmp/prog5\", s => prog5.filename = s)(prog5(v0, v1, v2, v3, v4))\n\n      val prog6 =new Prog6\n      prog6.cacheSize = 100\n      generate(List(1,10), \"/tmp/prog6\", s => prog6.filename = s)(prog6(v0, v1, v2, v3, v4, v5))\n\n      val prog7 =new Prog7\n      prog7.cacheSize = 100\n      generate(List(1,10), \"/tmp/prog7\", s => prog7.filename = s)(prog7(v0, v1, v2, v3, v4, v5, v6))\n\n      val prog8 =new Prog8\n      prog8.cacheSize = 200\n      generate(List(1,9), \"/tmp/prog8\", s => prog8.filename = s)(prog8(v0, v1, v2, v3, v4, v5, v6, v7))\n    }\n\n  }\n  // This goes tomorrow during the talks!\n  // 4) How do they compare to the interpreter?\n  // 5) How do they compare to the interpreter for a uniform distribution?\n\n\n  // 1) Make all 10 programs\n  // 2) Program 2\n}\n",
			"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala",
			"file_size": 41708,
			"file_write_time": 130891602890000000,
			"settings":
			{
				"buffer_size": 41708,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala",
			"settings":
			{
				"buffer_size": 7163,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala",
			"settings":
			{
				"buffer_size": 10094,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package scala.virtualization.lms\npackage common\n\nimport java.io.PrintWriter\nimport scala.virtualization.lms.internal._\nimport scala.collection.mutable.Set\nimport java.util.HashMap\nimport scala.reflect.SourceContext\n\ntrait HashMapOps extends Base {\n  object HashMap {\n    def apply[K:Manifest,V:Manifest]()(implicit pos: SourceContext) = hashmap_new[K,V]()\n  }\n\n  implicit def repHashMapToHashMapOps[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]]) = new hashmapOpsCls(m)\n\n  class hashmapOpsCls[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]]) {\n    def apply(k: Rep[K])(implicit pos: SourceContext) = hashmap_apply(m, k)\n    def update(k: Rep[K], v: Rep[V])(implicit pos: SourceContext) = hashmap_update(m,k,v)\n    def contains(k: Rep[K])(implicit pos: SourceContext) = hashmap_contains(m, k)\n    def size(implicit pos: SourceContext) = hashmap_size(m)\n    def values(implicit pos: SourceContext) = hashmap_values(m)\n    def clear()(implicit pos: SourceContext) = hashmap_clear(m)\n    def keySet(implicit pos: SourceContext) = hashmap_keyset(m)\n    def keys(implicit pos: SourceContext) = hashmap_keys(m)\n  }\n\n  def hashmap_new[K:Manifest,V:Manifest]()(implicit pos: SourceContext) : Rep[HashMap[K,V]]\n  def hashmap_apply[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]], k: Rep[K])(implicit pos: SourceContext): Rep[V]\n  def hashmap_update[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]], k: Rep[K], v: Rep[V])(implicit pos: SourceContext): Rep[Unit]\n  def hashmap_unsafe_update[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]], k: Rep[K], v: Rep[V])(implicit pos: SourceContext): Rep[Unit]\n  def hashmap_contains[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]], i: Rep[K])(implicit pos: SourceContext): Rep[Boolean]\n  def hashmap_size[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext): Rep[Int]\n  def hashmap_values[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext): Rep[Iterable[V]]\n  def hashmap_clear[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext): Rep[Unit]\n  def hashmap_keyset[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext): Rep[Set[K]]\n  def hashmap_keys[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext): Rep[Iterable[K]]\n}\n\ntrait HashMapOpsExp extends HashMapOps with EffectExp {\n  abstract class HashMapDef[K:Manifest,V:Manifest,R:Manifest] extends Def[R] {\n    val mK = manifest[K]\n    val mV = manifest[V]\n  }\n  case class HashMapNew[K:Manifest,V:Manifest]() extends HashMapDef[K,V,HashMap[K,V]] \n  case class HashMapApply[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]], k: Exp[K]) extends HashMapDef[K,V,V]\n  case class HashMapUpdate[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]], k: Exp[K], v: Exp[V]) extends HashMapDef[K,V,Unit]\n  case class HashMapContains[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]], i: Exp[K]) extends HashMapDef[K,V,Boolean]\n  case class HashMapSize[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]]) extends HashMapDef[K,V,Int]\n  case class HashMapValues[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]]) extends HashMapDef[K,V,Iterable[V]]\n  case class HashMapClear[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]]) extends HashMapDef[K,V,Unit]\n  case class HashMapKeySet[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]]) extends HashMapDef[K,V,Set[K]]\n  case class HashMapKeys[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]]) extends HashMapDef[K,V,Iterable[K]]\n\n  def hashmap_new[K:Manifest,V:Manifest]()(implicit pos: SourceContext) = reflectMutable(HashMapNew[K,V]())\n  def hashmap_apply[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]], k: Exp[K])(implicit pos: SourceContext) = HashMapApply(m,k)\n  def hashmap_update[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]], k: Exp[K], v: Exp[V])(implicit pos: SourceContext) = reflectWrite(m)(HashMapUpdate(m,k,v))\n  def hashmap_unsafe_update[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]], k: Exp[K], v: Exp[V])(implicit pos: SourceContext) = reflectEffect(HashMapUpdate(m,k,v))\n  def hashmap_contains[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]], i: Exp[K])(implicit pos: SourceContext) = HashMapContains(m, i)\n  def hashmap_size[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]])(implicit pos: SourceContext) = HashMapSize(m)\n  def hashmap_values[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]])(implicit pos: SourceContext) = HashMapValues(m)\n  def hashmap_clear[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]])(implicit pos: SourceContext) = reflectWrite(m)(HashMapClear(m))\n  def hashmap_keyset[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext) = HashMapKeySet(m)\n  def hashmap_keys[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext) = HashMapKeys(m)\n  \n  override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = {\n    (e match {\n      case e@HashMapApply(m,k) => hashmap_apply(f(m),f(k))(e.mK,e.mV,pos)\n      case e@HashMapKeys(m) => hashmap_keys(f(m))(e.mK,e.mV,pos)\n      case e@HashMapValues(m) => hashmap_values(f(m))(e.mK,e.mV,pos)\n      case e@HashMapContains(m,k) => hashmap_contains(f(m),f(k))(e.mK,e.mV,pos)\n      case e@HashMapSize(m) => hashmap_size(f(m))(e.mK,e.mV,pos)\n      case Reflect(e@HashMapApply(m,k), u, es) => reflectMirrored(Reflect(HashMapApply(f(m),f(k))(e.mK,e.mV), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)            \n      case Reflect(e@HashMapKeys(m), u, es) => reflectMirrored(Reflect(HashMapKeys(f(m))(e.mK,e.mV), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)    \n      case Reflect(e@HashMapValues(m), u, es) => reflectMirrored(Reflect(HashMapValues(f(m))(e.mK,e.mV), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)    \n      case Reflect(e@HashMapContains(m,k), u, es) => reflectMirrored(Reflect(HashMapContains(f(m),f(k))(e.mK,e.mV), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n      case Reflect(e@HashMapSize(m), u, es) => reflectMirrored(Reflect(HashMapSize(f(m))(e.mK,e.mV), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n      case Reflect(e@HashMapNew(), u, es) => reflectMirrored(Reflect(HashMapNew()(e.mK,e.mV), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)    \n      case Reflect(e@HashMapUpdate(m,k,v), u, es) => reflectMirrored(Reflect(HashMapUpdate(f(m),f(k),f(v))(e.mK,e.mV), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)   \n      case _ => super.mirror(e,f)\n    }).asInstanceOf[Exp[A]] // why??\n  }\n  \n}\n\ntrait BaseGenHashMapOps extends GenericNestedCodegen {\n  val IR: HashMapOpsExp\n  import IR._\n\n}\n\ntrait ScalaGenHashMapOps extends BaseGenHashMapOps with ScalaGenEffect {\n  val IR: HashMapOpsExp\n  import IR._\n\n  // TODO: have two versions for generating Scala/Java versions\n\n  override def emitNode(sym: Sym[Any], rhs: Def[Any]) = rhs match {\n    case m@HashMapNew() => emitValDef(sym, \"new java.util.HashMap[\" + remap(m.mK) + \",\" + remap(m.mV) + \"]()\")\n    case HashMapApply(m,k) => emitValDef(sym, quote(m) + \".get(\" + quote(k) + \")\")\n    case HashMapUpdate(m,k,v)  => emitValDef(sym, quote(m) + \".put(\" + quote(k) + \", \" + quote(v) + \")\")\n    case HashMapContains(m,i) => emitValDef(sym, quote(m) + \".containsKey(\" + quote(i) + \")\")\n    case HashMapSize(m) => emitValDef(sym, quote(m) + \".size\")\n    case HashMapValues(m) => emitValDef(sym, \"scala.collection.JavaConverters.collectionAsScalaIterableConverter(\"+quote(m)+\".values).asScala\")\n    case HashMapClear(m) => emitValDef(sym, quote(m) + \".clear()\")\n    case HashMapKeySet(m) => emitValDef(sym, \"scala.collection.JavaConverters.asScalaSetConverter(\"+quote(m)+\".keySet).asScala\")\n    case HashMapKeys(m) => emitValDef(sym, \"scala.collection.JavaConverters.asScalaSetConverter(\"+quote(m)+\".keySet).asScala.toIterable\")\n    case _ => super.emitNode(sym, rhs)\n  }\n/*\n  override def emitNode(sym: Sym[Any], rhs: Def[Any]) = rhs match {\n    case m@HashMapNew() => emitValDef(sym, src\"collection.mutable.HashMap[${m.mK},${m.mV}]()\")\n    case HashMapApply(m,k) => emitValDef(sym, src\"$m($k)\")\n    case HashMapUpdate(m,k,v)  => emitValDef(sym, src\"$m($k) = $v\")\n    case HashMapContains(m,i) => emitValDef(sym, src\"$m.contains($i)\")\n    case HashMapSize(m) => emitValDef(sym, src\"$m.size\")\n    case HashMapValues(m) => emitValDef(sym, src\"$m.values\")\n    case HashMapClear(m) => emitValDef(sym, src\"$m.clear()\")\n    case HashMapKeySet(m) => emitValDef(sym, src\"$m.keySet\")\n    case HashMapKeys(m) => emitValDef(sym, src\"$m.keys\")\n    case _ => super.emitNode(sym, rhs)\n  }\n*/\n}\n\ntrait CLikeGenHashMapOps extends BaseGenHashMapOps with CLikeCodegen {\n  val IR: HashMapOpsExp\n  import IR._\n\n//  override def emitNode(sym: Sym[Any], rhs: Def[Any]) = rhs match {\n//    case _ => super.emitNode(sym, rhs)\n//  }\n}\n\ntrait CudaGenHashMapOps extends CudaGenEffect with CLikeGenHashMapOps\ntrait OpenCLGenHashMapOps extends OpenCLGenEffect with CLikeGenHashMapOps\ntrait CGenHashMapOps extends CGenEffect with CLikeGenHashMapOps\n",
			"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala",
			"file_size": 8759,
			"file_write_time": 130891602890000000,
			"settings":
			{
				"buffer_size": 8759,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala",
			"settings":
			{
				"buffer_size": 16174,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/build.sbt",
			"settings":
			{
				"buffer_size": 2021,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package scala.virtualization.lms\npackage epfl\npackage test15\n\nimport common._\nimport test1._\n\nimport scala.reflect.macros.Context\nimport language.experimental.macros\nimport util.OverloadHack\nimport java.io.{ PrintWriter, StringWriter, FileOutputStream }\nimport scala.reflect.SourceContext\n\n/**\n * Test that shows type system problems with Rep[T] DSL Interface. The test should flush out what is not good with Rep based approach:\n *   1) Type errors are not readable. There are many wierd errors that the developer can not reason about\n *   2) Requires invocation of the unit parameter in some occasions\n *      * Arithmetic operations\n *      * Tuples\n *   3) Does not allow recursion without annotations\n *   4) Does not prevent the user from using Scala language features\n *   5) Pollutes the method signatures\n *   6) Requires infix_method notation\n *   7) User code is not modular\n *   8) User code can not be debugged\n */\ntrait RepDSL extends ScalaOpsPkg with LiftPrimitives with LiftBoolean with LiftString {\n\n  /**\n   * Definitions of varialbes get the wrong type if unit is not used.\n   */\n  def valVarDef(u: Rep[Unit]): Rep[Unit] = {\n    def testMethod(a: Rep[Int], b: Rep[String], c: Rep[Boolean], d: Rep[Double]) = {\n      print(a)\n      print(b)\n      print(c)\n      print(d)\n    }\n\n    {\n      val i = 1\n      val s = \"y\"\n      val b = true\n      val d = 0.1\n\n      // this works because the implicit gets invoked on the method\n      testMethod(i, s, b, d)\n      // Users tend to write the following (see project stanford-ppl/Delite with grep -rn \"unit(\" .)\n      //      val i = unit(1)\n      //      val s = unit(\"y\")\n      //      val b = unit(true)\n      //      val d = unit(0.1)\n      // TODO investigate why is that? Try to remove them in Delite and see what fails.\n    }\n\n    // assignment to variables does not work properly\n    // we need to fix the scala-virtualized first and then reason about issues.\n    // FIXME one thing that will certainly fail is when we initialize variable with a constant.\n    {  // all var problems can be fixed by removing the bug in EmbeddedControls\n\n      /* FIXME This throws an exception at compilation time. Scala virtualized-bug.\n       var scala = 2\n       scala = 2.10\n       scala = \"perl\"\n       */\n\n      // BUG in Scala-Virtualized\n      // FIXME this throws a class cast exception\n      try {\n        var scala = 2\n        scala = \"perl\"\n        print(scala)\n      } catch {\n        case e: Throwable => ()\n      }\n\n      // BUG this throws a class cast exception and should fail at compile time.\n      try {\n        var scala = unit(2)\n        scala = unit(\"perl\")\n      } catch {\n        case e: Throwable => System.out.println(\"\")\n      }\n\n      // BUG this should work\n      {\n        var i: Rep[Int] = 1\n        var b: Rep[Boolean] = true\n        var d: Rep[Double] = 0.1\n        // BUG throws out of permgen space\n        //var s: Rep[String] = unit(\"y\")\n        //s = \"k\"\n        var s: Rep[String] = unit(\"y\")\n\n        testMethod(i, s, b, d)\n      }\n    }\n\n    // TODO see what happens with the code below. How does var definition work in nested scopes.\n    /* Why does this fail? TODO Investigate and try to fix if SourceContexts are broken. */\n    {\n      var scala = unit(\"scala 2\")\n      // FIXME if we remove the line below the compiler thinks that we are providing the manifest.\n      // Since the macro will also take care of the manifests we should not have this issue.\n\n      {\n          var scala = unit(\"dotty\")\n\n          print(scala)\n      }\n    }\n\n    ()\n  }\n\n  // TODO algebraic data types\n\n  /**\n   * This test shows how regular scala constructs can be mixed with DSL code. This can create confusion with non-proficient users.\n   */\n  def whitelistOperations(v: Rep[Unit]): Rep[Unit] = {\n    // there should be a whitelist of language features\n    // and a nice warning that notes that they are banned\n    {\n      // FIXME The following operations should not be allowd in the DSL code\n      val y = scala.collection.immutable.List(1 -> 3) match {\n        case scala.collection.immutable.List((1, 3)) => \"Nice DSL feature that does not exist\"\n      }\n\n      // This should not be allowed in the DSL\n      val z = try {\n        throw new RuntimeException(\"?????\")\n      } catch { case e: RuntimeException => () }\n\n      // This should be lifted\n      println(\"hey\")\n    }\n  }\n\n  /**\n   * The test that shows errors related to tuples.\n   *\n   * If we leave explicit control about the Rep types to the user we get a complex language that is hard to use.\n   * If the macro searches for the best match we can get into a very complex macro, or even exponential search space explosion.\n   * Check this on an example!!!\n   */\n  def tuples(v: Rep[Unit]): Rep[Unit] = {\n\n    def outer(t: Rep[(Int, Int)]): Unit = print(t)\n    def inner(t: Tuple2[Rep[Int], Rep[Int]]): Unit = print(t)\n\n    val x = (1, 2)\n    // outer(x) // does not compile\n    // outer((1,2)) // does not compile\n    // TODO can this be fixed by better implicits\n\n    val xa: (Rep[Int], Rep[Int]) = (1, 2)\n    //outer(xa)\n\n    val xu = unit((1, 2))\n    //outer(xu)\n\n    {\n      val v = unit(2)\n\n      // FIXME it should work without the unit\n      val z = (unit(1), v)\n      inner(z)\n\n      val x = (1, v)\n      //outer(x)\n    }\n\n    inner((1, 2))\n\n  }\n\n  def intop(x: Rep[Int]) = print(x)\n  def intmap(x: Rep[Int] => Rep[Int]) = x(1)\n\n  // TODO Type inference issues\n  // closure returns a constant: {x => 1} will be inferred as Rep[?] => Int.\n  // closure returns an conditional: if (passes > max_passes) unit(0) else max_passes - passes\n  /**\n   * This test finds the type inference related errors.\n   */\n  def inference(u: Rep[Unit]): Rep[Unit] = {\n\n\n    val number = unit(1)\n    val cond = unit(true)\n\n    // What will be the type of x? How is this achieved?\n    {\n      def m(x: Rep[Int]) = print(x.toString)\n\n      val x = if (cond) number else 1\n      // BUG\n      // m(x) // out of PermGen space TODO investigate\n//    intop(x)\n\n    }\n\n\n\n    {\n      // how does this work?\n      val x = if (unit(true)) if (unit(true)) { print(\"\"); 1 } else { print(\"\"); 2 } else 4\n      intop(x)\n    }\n\n    { // how does this work?\n      val v = unit(1)\n      intmap(x => if (unit(true)) 0 else v)\n    }\n\n    // FIXME methods does not have unit included if it is of type Rep[Unit]\n    {\n      // def m: Rep[Int] = 1\n    }\n    ()\n  }\n\n  /**\n   * This test shows how recursion must specially annotated. The macro based approach should allow recursion as in regular\n   * Scala.\n   */\n  def recursion(u: Rep[Unit]): Rep[Unit] = {\n\n    def gcd(x: Rep[Int], y: Rep[Int]): Rep[Int] =\n      if (y == 0) x\n      else gcd(x, x % y)\n\n    // FIXME this causes the stack overflow.\n    // gcd(1213, 898987)\n    //\n    // def gcd(x: Rep[Int], y: Rep[Int]): Rep[Int] = lam {\n    //   if (y == 0) x\n    //   else gcd(x, x % y) }\n    ()\n  }\n\n  /**\n   * This test shows examples of ugly error messages. This can be added later as we do the work.\n   * I have seen a lot of them so I know they exist.\n   */\n  def typeErrors(u: Rep[Unit]): Rep[Unit] = {\n    {\n     // val one: Rep[Int] = 1;\n     // val void: Rep[Unit] = ()\n     // one + void // ill typed term\n     // No implicit view available from RepDSL.this.Rep[Unit] => Int.\n    }\n\n\n    {\n      //val x: Rep[Array[Int]] = NewArray[Int](10)\n      //x foreach { x =>\n      //  x + \"a\"\n      //}\n      //[error] type mismatch;\n      //[error]  found   : RepDSL.this.Rep[String]\n      //[error]  required: RepDSL.this.Rep[Unit]\n    }\n\n    def abs(t: Int): Int = ???\n\n    {\n      // Rep types end up in non-rep types. This can have a nicer error.\n      // val x: Rep[Int] = 1\n      // val y = abs(x)\n      // [error] found   : RepDSL.this.Rep[Int]\n      // [error]  required: Int\n    }\n\n\n    {\n      // Ugly errors with virtualization\n      val x: Rep[Int] = 1\n      val z: Rep[Int] = x - \"1\"\n      //[error] /home/vjovanov/code/lms/test-src/epfl/test15-terrors/ErrorSamples.scala:280: [Suppressed for performance reasons (SI-6149). Compile with -DshowSuppressedErrors=true to show].\n    }\n\n    {\n      // Erasure is evil\n      // def m(x: Rep[Int]) = ???\n      // def m(x: Rep[String]) = ???\n      // method m is defined twice\n      // [error]   conflicting symbols both originated in file '/home/vjovanov/code/lms/test-src/epfl/test15-terrors/ErrorSamples.scala'\n      // [error]       def m(x: Rep[String]) = ???\n    }\n\n  }\n\n}\n\nclass TestRepTypesErrors extends FileDiffSuite {\n\n  val prefix = \"test-out/epfl/test14-\"\n\n  def testPolymorphicStaging1 = {\n    withOutFile(prefix + \"var-val\") {\n      new RepDSL with ScalaOpsPkgExp { self =>\n        val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n        codegen.emitSource(valVarDef, \"valVarDef\", new PrintWriter(System.out))\n      }\n    }\n    //assertFileEqualsCheck(prefix + \"staging1\")\n  }\n\n  def testPolymorphicStaging2 = {\n    withOutFile(prefix + \"inference\") {\n      new RepDSL with ScalaOpsPkgExp { self =>\n        val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n        codegen.emitSource(inference, \"inference\", new PrintWriter(System.out))\n      }\n    }\n    //assertFileEqualsCheck(prefix + \"staging1\")\n  }\n\n  def testPolymorphicStaging3 = {\n    withOutFile(prefix + \"recursion\") {\n      new RepDSL with ScalaOpsPkgExp { self =>\n        val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n        codegen.emitSource(recursion, \"recursion\", new PrintWriter(System.out))\n      }\n    }\n    //assertFileEqualsCheck(prefix + \"staging1\")\n  }\n\n  def testPolymorphicStaging4 = {\n    withOutFile(prefix + \"whitelistOperations\") {\n      new RepDSL with ScalaOpsPkgExp { self =>\n        val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n        codegen.emitSource(whitelistOperations, \"whitelistOperations\", new PrintWriter(System.out))\n      }\n    }\n    //assertFileEqualsCheck(prefix + \"staging1\")\n  }\n\n  def testPolymorphicStaging5 = {\n    withOutFile(prefix + \"tuples\") {\n      new RepDSL with ScalaOpsPkgExp { self =>\n        val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n        codegen.emitSource(tuples, \"tuples\", new PrintWriter(System.out))\n      }\n    }\n    //assertFileEqualsCheck(prefix + \"staging1\")\n  }\n\n}\n\n// vim: set ts=2 sw=2 et:\n",
			"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-terrors/ErrorSamples.scala",
			"file_size": 10481,
			"file_write_time": 130891600580000000,
			"settings":
			{
				"buffer_size": 10481,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/reification/src/main/scala/DSLDefinition.scala",
			"settings":
			{
				"buffer_size": 101,
				"line_ending": "Unix",
				"name": "DSLDefinition.scala"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala",
			"settings":
			{
				"buffer_size": 6898,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Package Control Messages\n========================\n\nLaTeXTools\n----------\n\n  LaTeXTools Plugin version 2015-10-04 changelog:\n  \n  This release incorporates a cool user-contributed feature.\n  \n  New features (btstream, Ian Bacher):\n  \n  - Fill Helper feature: autocompletion of files and packages\n  \n  Bugs fixed:\n  \n  - README fixes\n\n  LaTeXTools Plugin version 2015-10-01 changelog:\n  \n  Sorry for the long hiatus. This is a quick-fix release for El Capitan. More is coming though!\n  \n  If you are NOT on a Mac running El Capitan, there is nothing you need to do, and no other news.\n  \n  NOTE: please check the README. I updated the default settings file, but some action is required on your part. The README has the details, which DO depend upon the version of MacTeX you are running.\n",
			"settings":
			{
				"buffer_size": 786,
				"line_ending": "Unix",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/BaseYinYang.scala",
			"settings":
			{
				"buffer_size": 761,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/CodeGenerator.scala",
			"settings":
			{
				"buffer_size": 896,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Executable.scala",
			"settings":
			{
				"buffer_size": 206,
				"line_ending": "Unix",
				"name": "Executable.scala"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Staged.scala",
			"settings":
			{
				"buffer_size": 465,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/StaticallyChecked.scala",
			"settings":
			{
				"buffer_size": 679,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/macros/blackbox/Context.scala",
			"settings":
			{
				"buffer_size": 4220,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/reporters/Reporter.scala",
			"settings":
			{
				"buffer_size": 2359,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/util/Position.scala",
			"settings":
			{
				"buffer_size": 10139,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/Positions.scala",
			"settings":
			{
				"buffer_size": 11925,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/library/scala/io/Position.scala",
			"settings":
			{
				"buffer_size": 3118,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/api/Position.scala",
			"settings":
			{
				"buffer_size": 8340,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/build/scaladoc/reflect/package.html",
			"settings":
			{
				"buffer_size": 3956,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/library/scala/reflect/package.scala",
			"settings":
			{
				"buffer_size": 3203,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/macros/package.scala",
			"settings":
			{
				"buffer_size": 1346,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/VirtualAny.scala",
			"settings":
			{
				"buffer_size": 2809,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/VirtualAnyRef.scala",
			"settings":
			{
				"buffer_size": 3472,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Staged.scala",
			"settings":
			{
				"buffer_size": 465,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package ch.epfl.yinyang\npackage api\n\nimport language.experimental.macros\nimport scala.reflect.macros.blackbox.Context\n\n/**\n * Member method-based virtualization of the `Any` API.\n *\n * This trait provides implementations of the infix methods\n * corresponding to the `Any` API that delegate to virtualized method\n * calls on the first argument of the infix method.\n *\n * Example: When faced with an expression of the form `x == y`, the\n * `ch.epfl.yinyang.transformers.LanguageVirtualization`\n * transformation (or the `@virtualized` macro annotation)\n * will generate a method call:\n * `infix_==(x, y)`.  This method call will be bound to an\n * implementation based on normal rules of scoping.  If it binds to\n * the one in this trait, the corresponding macro will rewrite it to\n * `x.__==(y)`.\n */\ntrait VirtualAny {\n\n  import VirtualAny._\n\n  // Poor man's infix methods for `Any` methods\n  def $infix_==(x1: Any, x2: Any): Any = macro any_==\n  def $infix_!=(x1: Any, x2: Any): Any = macro any_!=\n  def $infix_##(x: Any): Any = macro any_##\n  def $infix_equals(x1: Any, x2: Any): Any = macro any_equals\n  def $infix_hashCode(x: Any): Any = macro any_hashCode\n  def $infix_asInstanceOf[T](x: Any): Any = macro any_asInstanceOf[T]\n  def $infix_isInstanceOf[T](x: Any): Any = macro any_isInstanceOf[T]\n  def $infix_toString(x: Any): Any = macro any_toString\n  def $infix_getClass(x: Any): Any = macro any_getClass\n}\n\n/* VirtualAny companion object containing macro implementations. */\nprivate object VirtualAny {\n\n  def any_==(c: Context)(\n    x1: c.Expr[Any], x2: c.Expr[Any]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr(q\"$x1.__==($x2)\")\n  }\n\n  def any_!=(c: Context)(\n    x1: c.Expr[Any], x2: c.Expr[Any]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr(q\"$x1.__!=($x2)\")\n  }\n\n  def any_##(c: Context)(x: c.Expr[Any]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr(q\"$x.__##()\")\n  }\n\n  def any_equals(c: Context)(\n    x1: c.Expr[Any], x2: c.Expr[Any]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr(q\"$x1.__equals($x2)\")\n  }\n\n  def any_hashCode(c: Context)(x: c.Expr[Any]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr(q\"$x.__hashCode()\")\n  }\n\n  def any_asInstanceOf[T](c: Context)(x: c.Expr[Any])(\n    implicit tt: c.WeakTypeTag[T]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr[Any](q\"$x.__asInstanceOf[${tt.tpe}]\")\n  }\n\n  def any_isInstanceOf[T](c: Context)(x: c.Expr[Any])(\n    implicit tt: c.WeakTypeTag[T]): c.Expr[Boolean] = {\n\n    import c.universe._\n    c.Expr[Boolean](q\"$x.__isInstanceOf[${tt.tpe}]\")\n  }\n\n  def any_toString(c: Context)(x: c.Expr[Any]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr(q\"$x.__toString()\")\n  }\n\n  def any_getClass(c: Context)(x: c.Expr[Any]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr(q\"$x.__getClass()\")\n  }\n}\n",
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/old/VirtualAny.scala",
			"file_size": 2800,
			"file_write_time": 130879471930000000,
			"settings":
			{
				"buffer_size": 2809,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/annotation/Virtualize.scala",
			"settings":
			{
				"buffer_size": 1990,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/LanguageVirtualization.scala",
			"settings":
			{
				"buffer_size": 12381,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/analysis/FreeIdentAnalysis.scala",
			"settings":
			{
				"buffer_size": 2346,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/ScopeInjection.scala",
			"settings":
			{
				"buffer_size": 2189,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package mpde.vector.test\n\nimport org.scalatest._\nimport dsl.la._\nimport org.junit.runner.RunWith\nimport org.scalatest.junit.JUnitRunner\nimport reflect.runtime.universe._\nimport java.io.{ PrintStream, ByteArrayOutputStream }\n\n@RunWith(classOf[JUnitRunner])\nclass GenericTranslationSpec extends FlatSpec with ShouldMatchers {\n  \"Generic translation\" should \"work for val definitions\" in {\n    intercept[NotImplementedError] {\n      la {\n        val v = 1\n        v\n      }\n    }\n  }\n\n  it should \"work for vars\" in {\n    intercept[NotImplementedError] {\n      la {\n        var v = 1\n        v = 2\n        v\n      }\n    }\n  }\n\n  it should \"work for lambdas\" in {\n    intercept[NotImplementedError] {\n      la {\n        val id = (x: Int) => x\n        id\n      }\n    }\n  }\n\n  it should \"work for application\" in {\n    intercept[NotImplementedError] {\n      la {\n        val id = (x: Int) => x\n        id(1)\n      }\n    }\n  }\n\n  it should \"work for all types of application\" in {\n    intercept[NotImplementedError] {\n      la {\n        val id0 = () => 1\n        val id1 = (x: Int) => x\n        val id2 = (x: Int, y: Int) => x + y\n        id0()\n        id1(1)\n        id2(1, 2)\n      }\n    }\n  }\n\n  it should \"work for AnyRef functions\" in {\n    intercept[NotImplementedError] {\n      la {\n        val id0 = 1\n        val hash = 1.hashCode\n        val hash2 = 2.hashCode\n        hash != hash2\n      }\n    }\n  }\n\n  it should \"work for locally defined functions\" in {\n    intercept[NotImplementedError] {\n      val x: Int = la {\n        def id[T](x: T): T = x\n        def id2[T, U <: AnyRef](p1: T, p2: U): Unit = ()\n        id2[Int, String](1, \"string\")\n        id[Int](1)\n      }\n    }\n  }\n\n  it should \"work for type aliases\" in {\n    intercept[NotImplementedError] {\n      la {\n        type X = Int\n        type Y = dsl.la.Vector[X]\n        val x: Y = dsl.la.Vector(1, 2, 3)\n        x\n      }\n    }\n  }\n\n  it should \"work with captured variables\" in {\n    val captured = 1\n    val captured1 = 2\n    val captured2 = 3\n    intercept[NotImplementedError] {\n      la {\n        val x: Int = captured + captured1 + captured2\n        x + 1\n      }\n    }\n  }\n\n}\n",
			"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/test/GenericTranslationTest.scala",
			"file_size": 2154,
			"file_write_time": 130887830510000000,
			"settings":
			{
				"buffer_size": 2149,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/shallow/package.scala",
			"settings":
			{
				"buffer_size": 11838,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package failure\n\nimport scala.annotation.unchecked.uncheckedVariance\n\ntrait FailureCake {\n  //  type Rep[T] = Exp[T]\n  //\n  //  abstract class Exp[+T: Manifest] {\n  //    def tp: Manifest[T @uncheckedVariance] = manifest[T]\n  //  }\n\n  //  trait LiftEvidence[T, K]\n  implicit def liftAnyFails[T: Manifest]: Any = ???\n  // This one works\n  //  implicit def liftAny[T]: Any = ???\n  //    new LiftEvidence[T, Rep[T]] {\n  //      def lift(v: T): Rep[T] = ???\n  //    }\n\n}",
			"file": "/Users/vjovanov/code/scala-yinyang/components/delite-test/src/FailureCake.scala",
			"file_size": 466,
			"file_write_time": 130554137000000000,
			"settings":
			{
				"buffer_size": 466,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/HoleTransformation.scala",
			"settings":
			{
				"buffer_size": 2313,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/examples/test/GenericTranslationTest.scala",
			"settings":
			{
				"buffer_size": 2167,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/examples/src/la/package.scala",
			"settings":
			{
				"buffer_size": 1335,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<!DOCTYPE html >\n<html>\n        <head>\n          <title>TransformationUtils - ch.epfl.yinyang.TransformationUtils</title>\n          <meta name=\"description\" content=\"TransformationUtils - ch.epfl.yinyang.TransformationUtils\" />\n          <meta name=\"keywords\" content=\"TransformationUtils ch.epfl.yinyang.TransformationUtils\" />\n          <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\" />\n          \n      <link href=\"../../../lib/template.css\" media=\"screen\" type=\"text/css\" rel=\"stylesheet\" />\n      <link href=\"../../../lib/diagrams.css\" media=\"screen\" type=\"text/css\" rel=\"stylesheet\" id=\"diagrams-css\" />\n      <script type=\"text/javascript\" src=\"../../../lib/jquery.js\" id=\"jquery-js\"></script>\n      <script type=\"text/javascript\" src=\"../../../lib/jquery-ui.js\"></script>\n      <script type=\"text/javascript\" src=\"../../../lib/template.js\"></script>\n      <script type=\"text/javascript\" src=\"../../../lib/tools.tooltip.js\"></script>\n      \n      <script type=\"text/javascript\">\n         if(top === self) {\n            var url = '../../../index.html';\n            var hash = 'ch.epfl.yinyang.TransformationUtils';\n            var anchor = window.location.hash;\n            var anchor_opt = '';\n            if (anchor.length >= 1)\n              anchor_opt = '@' + anchor.substring(1);\n            window.location.href = url + '#' + hash + anchor_opt;\n         }\n   	  </script>\n    \n        </head>\n        <body class=\"type\">\n      <div id=\"definition\">\n        <img src=\"../../../lib/trait_big.png\" />\n        <p id=\"owner\"><a href=\"../../package.html\" class=\"extype\" name=\"ch\">ch</a>.<a href=\"../package.html\" class=\"extype\" name=\"ch.epfl\">epfl</a>.<a href=\"package.html\" class=\"extype\" name=\"ch.epfl.yinyang\">yinyang</a></p>\n        <h1>TransformationUtils</h1> <span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      </div>\n\n      <h4 id=\"signature\" class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">trait</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">TransformationUtils</span><span class=\"result\"> extends <a href=\"MacroModule.html\" class=\"extype\" name=\"ch.epfl.yinyang.MacroModule\">MacroModule</a></span>\n      </span>\n      </h4>\n      \n          <div id=\"comment\" class=\"fullcommenttop\"><div class=\"comment cmt\"><p>Common utilities for the Yin-Yang project.\n</p></div><div class=\"toggleContainer block\">\n          <span class=\"toggle\">Linear Supertypes</span>\n          <div class=\"superTypes hiddenContent\"><a href=\"MacroModule.html\" class=\"extype\" name=\"ch.epfl.yinyang.MacroModule\">MacroModule</a>, <span class=\"extype\" name=\"scala.AnyRef\">AnyRef</span>, <span class=\"extype\" name=\"scala.Any\">Any</span></div>\n        </div><div class=\"toggleContainer block\">\n            <span class=\"toggle\">Known Subclasses</span>\n            <div class=\"subClasses hiddenContent\"><a href=\"transformers/AscriptionTransformation.html\" class=\"extype\" name=\"ch.epfl.yinyang.transformers.AscriptionTransformation\">AscriptionTransformation</a>, <a href=\"analysis/FreeIdentAnalysis.html\" class=\"extype\" name=\"ch.epfl.yinyang.analysis.FreeIdentAnalysis\">FreeIdentAnalysis</a>, <a href=\"transformers/HoleTransformation.html\" class=\"extype\" name=\"ch.epfl.yinyang.transformers.HoleTransformation\">HoleTransformation</a>, <a href=\"transformers/LanguageVirtualization.html\" class=\"extype\" name=\"ch.epfl.yinyang.transformers.LanguageVirtualization\">LanguageVirtualization</a>, <a href=\"transformers/LiftLiteralTransformation.html\" class=\"extype\" name=\"ch.epfl.yinyang.transformers.LiftLiteralTransformation\">LiftLiteralTransformation</a>, <a href=\"transformers/NullPostProcessing.html\" class=\"extype\" name=\"ch.epfl.yinyang.transformers.NullPostProcessing\">NullPostProcessing</a>, <a href=\"transformers/PostProcessing.html\" class=\"extype\" name=\"ch.epfl.yinyang.transformers.PostProcessing\">PostProcessing</a>, <a href=\"transformers/ScopeInjection.html\" class=\"extype\" name=\"ch.epfl.yinyang.transformers.ScopeInjection\">ScopeInjection</a></div>\n          </div></div>\n        \n\n      <div id=\"mbrsel\">\n        <div id=\"textfilter\"><span class=\"pre\"></span><span class=\"input\"><input id=\"mbrsel-input\" type=\"text\" accesskey=\"/\" /></span><span class=\"post\"></span></div>\n        <div id=\"order\">\n              <span class=\"filtertype\">Ordering</span>\n              <ol>\n                \n                <li class=\"alpha in\"><span>Alphabetic</span></li>\n                <li class=\"inherit out\"><span>By inheritance</span></li>\n              </ol>\n            </div>\n        <div id=\"ancestors\">\n                <span class=\"filtertype\">Inherited<br />\n                </span>\n                <ol id=\"linearization\">\n                  <li class=\"in\" name=\"ch.epfl.yinyang.TransformationUtils\"><span>TransformationUtils</span></li><li class=\"in\" name=\"ch.epfl.yinyang.MacroModule\"><span>MacroModule</span></li><li class=\"in\" name=\"scala.AnyRef\"><span>AnyRef</span></li><li class=\"in\" name=\"scala.Any\"><span>Any</span></li>\n                </ol>\n              </div><div id=\"ancestors\">\n            <span class=\"filtertype\"></span>\n            <ol>\n              <li class=\"hideall out\"><span>Hide All</span></li>\n              <li class=\"showall in\"><span>Show all</span></li>\n            </ol>\n            <a href=\"http://docs.scala-lang.org/overviews/scaladoc/usage.html#members\" target=\"_blank\">Learn more about member selection</a>\n          </div>\n        <div id=\"visbl\">\n            <span class=\"filtertype\">Visibility</span>\n            <ol><li class=\"public in\"><span>Public</span></li><li class=\"all out\"><span>All</span></li></ol>\n          </div>\n      </div>\n\n      <div id=\"template\">\n        <div id=\"allMembers\">\n        \n\n        <div id=\"types\" class=\"types members\">\n              <h3>Type Members</h3>\n              <ol><li name=\"ch.epfl.yinyang.MacroModule.Ctx\" visbl=\"pub\" data-isabs=\"true\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"Ctx&lt;:scala.reflect.macros.blackbox.Context\"></a>\n      <a id=\"Ctx:Ctx\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">abstract </span>\n        <span class=\"kind\">type</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">Ctx</span><span class=\"result\"> &lt;: <span class=\"extype\" name=\"scala.reflect.macros.blackbox.Context\">Context</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@Ctx&lt;:scala.reflect.macros.blackbox.Context\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd><a href=\"MacroModule.html\" class=\"extype\" name=\"ch.epfl.yinyang.MacroModule\">MacroModule</a></dd></dl></div>\n    </li></ol>\n            </div>\n\n        <div id=\"values\" class=\"values members\">\n              <h3>Abstract Value Members</h3>\n              <ol><li name=\"ch.epfl.yinyang.MacroModule#c\" visbl=\"pub\" data-isabs=\"true\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"c:MacroModule.this.Ctx\"></a>\n      <a id=\"c:Ctx\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">abstract </span>\n        <span class=\"kind\">val</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">c</span><span class=\"result\">: <a href=\"#Ctx&lt;:scala.reflect.macros.blackbox.Context\" class=\"extmbr\" name=\"ch.epfl.yinyang.TransformationUtils.Ctx\">Ctx</a></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@c:MacroModule.this.Ctx\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd><a href=\"MacroModule.html\" class=\"extype\" name=\"ch.epfl.yinyang.MacroModule\">MacroModule</a></dd></dl></div>\n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#debugLevel\" visbl=\"pub\" data-isabs=\"true\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"debugLevel:Int\"></a>\n      <a id=\"debugLevel:Int\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">abstract </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">debugLevel</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Int\">Int</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@debugLevel:Int\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li></ol>\n            </div>\n\n        <div id=\"values\" class=\"values members\">\n              <h3>Concrete Value Members</h3>\n              <ol><li name=\"scala.AnyRef#!=\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"!=(x$1:Any):Boolean\"></a>\n      <a id=\"!=(Any):Boolean\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span title=\"gt4s: $bang$eq\" class=\"name\">!=</span><span class=\"params\">(<span name=\"arg0\">arg0: <span class=\"extype\" name=\"scala.Any\">Any</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Boolean\">Boolean</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@!=(x$1:Any):Boolean\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef → Any</dd></dl></div>\n    </li><li name=\"scala.AnyRef###\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"##():Int\"></a>\n      <a id=\"##():Int\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span title=\"gt4s: $hash$hash\" class=\"name\">##</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Int\">Int</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@##():Int\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef → Any</dd></dl></div>\n    </li><li name=\"scala.AnyRef#==\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"==(x$1:Any):Boolean\"></a>\n      <a id=\"==(Any):Boolean\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span title=\"gt4s: $eq$eq\" class=\"name\">==</span><span class=\"params\">(<span name=\"arg0\">arg0: <span class=\"extype\" name=\"scala.Any\">Any</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Boolean\">Boolean</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@==(x$1:Any):Boolean\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef → Any</dd></dl></div>\n    </li><li name=\"ch.epfl.yinyang.TransformationUtils.UnstageBlock\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"UnstageBlock\"></a>\n      <a id=\"UnstageBlock:UnstageBlock\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">object</span>\n      </span>\n      <span class=\"symbol\">\n        <a href=\"TransformationUtils$UnstageBlock$.html\"><span class=\"name\">UnstageBlock</span></a>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@UnstageBlock\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"scala.Any#asInstanceOf\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"asInstanceOf[T0]:T0\"></a>\n      <a id=\"asInstanceOf[T0]:T0\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">asInstanceOf</span><span class=\"tparams\">[<span name=\"T0\">T0</span>]</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Any.asInstanceOf.T0\">T0</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@asInstanceOf[T0]:T0\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>Any</dd></dl></div>\n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#className\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"className:String\"></a>\n      <a id=\"className:String\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">className</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Predef.String\">String</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@className:String\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"scala.AnyRef#clone\" visbl=\"prt\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"clone():Object\"></a>\n      <a id=\"clone():AnyRef\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">clone</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"scala.AnyRef\">AnyRef</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@clone():Object\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Attributes</dt><dd>protected[<a href=\"../../../java$lang.html\" class=\"extype\" name=\"java.lang\">java.lang</a>] </dd><dt>Definition Classes</dt><dd>AnyRef</dd><dt>Annotations</dt><dd>\n                <span class=\"name\">@throws</span><span class=\"args\">(<span>\n      \n      <span class=\"defval\" name=\"classOf[java.lang.CloneNotSupportedException]\">...</span>\n    </span>)</span>\n              \n        </dd></dl></div>\n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#code\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"code(tree:TransformationUtils.this.c.universe.Tree,shortenDSLNames:Boolean):String\"></a>\n      <a id=\"code(scala.reflect.macros.Universe.Tree,Boolean):String\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">code</span><span class=\"params\">(<span name=\"tree\">tree: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>, <span name=\"shortenDSLNames\">shortenDSLNames: <span class=\"extype\" name=\"scala.Boolean\">Boolean</span> = <span class=\"symbol\">true</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Predef.String\">String</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@code(tree:TransformationUtils.this.c.universe.Tree,shortenDSLNames:Boolean):String\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#copy\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"copy(orig:TransformationUtils.this.c.universe.Tree)(nev:TransformationUtils.this.c.universe.Tree):TransformationUtils.this.c.universe.Tree\"></a>\n      <a id=\"copy(scala.reflect.macros.Universe.Tree)(scala.reflect.macros.Universe.Tree):scala.reflect.macros.Universe.Tree\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">copy</span><span class=\"params\">(<span name=\"orig\">orig: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>)</span><span class=\"params\">(<span name=\"nev\">nev: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@copy(orig:TransformationUtils.this.c.universe.Tree)(nev:TransformationUtils.this.c.universe.Tree):TransformationUtils.this.c.universe.Tree\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#deepDealias\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"deepDealias(tpe:TransformationUtils.this.c.universe.Type):TransformationUtils.this.c.universe.Type\"></a>\n      <a id=\"deepDealias(scala.reflect.macros.Universe.Type):scala.reflect.macros.Universe.Type\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">deepDealias</span><span class=\"params\">(<span name=\"tpe\">tpe: <span class=\"extype\" name=\"scala.reflect.api.Types.Type\">scala.reflect.macros.Universe.Type</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.reflect.api.Types.Type\">scala.reflect.macros.Universe.Type</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@deepDealias(tpe:TransformationUtils.this.c.universe.Type):TransformationUtils.this.c.universe.Type\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"scala.AnyRef#eq\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"eq(x$1:AnyRef):Boolean\"></a>\n      <a id=\"eq(AnyRef):Boolean\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">eq</span><span class=\"params\">(<span name=\"arg0\">arg0: <span class=\"extype\" name=\"scala.AnyRef\">AnyRef</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Boolean\">Boolean</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@eq(x$1:AnyRef):Boolean\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd></dl></div>\n    </li><li name=\"scala.AnyRef#equals\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"equals(x$1:Any):Boolean\"></a>\n      <a id=\"equals(Any):Boolean\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">equals</span><span class=\"params\">(<span name=\"arg0\">arg0: <span class=\"extype\" name=\"scala.Any\">Any</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Boolean\">Boolean</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@equals(x$1:Any):Boolean\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef → Any</dd></dl></div>\n    </li><li name=\"scala.AnyRef#finalize\" visbl=\"prt\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"finalize():Unit\"></a>\n      <a id=\"finalize():Unit\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">finalize</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Unit\">Unit</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@finalize():Unit\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Attributes</dt><dd>protected[<a href=\"../../../java$lang.html\" class=\"extype\" name=\"java.lang\">java.lang</a>] </dd><dt>Definition Classes</dt><dd>AnyRef</dd><dt>Annotations</dt><dd>\n                <span class=\"name\">@throws</span><span class=\"args\">(<span>\n      \n      <span class=\"symbol\">classOf[java.lang.Throwable]</span>\n    </span>)</span>\n              \n        </dd></dl></div>\n    </li><li name=\"scala.AnyRef#getClass\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"getClass():Class[_]\"></a>\n      <a id=\"getClass():Class[_]\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">getClass</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"java.lang.Class\">Class</span>[_]</span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@getClass():Class[_]\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef → Any</dd></dl></div>\n    </li><li name=\"scala.AnyRef#hashCode\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"hashCode():Int\"></a>\n      <a id=\"hashCode():Int\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">hashCode</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Int\">Int</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@hashCode():Int\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef → Any</dd></dl></div>\n    </li><li name=\"scala.Any#isInstanceOf\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"isInstanceOf[T0]:Boolean\"></a>\n      <a id=\"isInstanceOf[T0]:Boolean\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">isInstanceOf</span><span class=\"tparams\">[<span name=\"T0\">T0</span>]</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Boolean\">Boolean</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@isInstanceOf[T0]:Boolean\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>Any</dd></dl></div>\n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#log\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"log(s:=&gt;String,level:Int):Unit\"></a>\n      <a id=\"log(⇒String,Int):Unit\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">log</span><span class=\"params\">(<span name=\"s\">s: ⇒ <span class=\"extype\" name=\"scala.Predef.String\">String</span></span>, <span name=\"level\">level: <span class=\"extype\" name=\"scala.Int\">Int</span> = <span class=\"symbol\">0</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Unit\">Unit</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@log(s:=&gt;String,level:Int):Unit\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#makeConstructor\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"makeConstructor(classname:String,arguments:List[TransformationUtils.this.c.universe.Tree]):TransformationUtils.this.c.universe.Tree\"></a>\n      <a id=\"makeConstructor(String,List[scala.reflect.macros.Universe.Tree]):scala.reflect.macros.Universe.Tree\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">makeConstructor</span><span class=\"params\">(<span name=\"classname\">classname: <span class=\"extype\" name=\"scala.Predef.String\">String</span></span>, <span name=\"arguments\">arguments: <span class=\"extype\" name=\"scala.List\">List</span>[<span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span>]</span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@makeConstructor(classname:String,arguments:List[TransformationUtils.this.c.universe.Tree]):TransformationUtils.this.c.universe.Tree\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#method\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"method(recOpt:Option[TransformationUtils.this.c.universe.Tree],methName:String,args:List[List[TransformationUtils.this.c.universe.Tree]],targs:List[TransformationUtils.this.c.universe.Tree]):TransformationUtils.this.c.universe.Tree\"></a>\n      <a id=\"method(Option[scala.reflect.macros.Universe.Tree],String,List[List[scala.reflect.macros.Universe.Tree]],List[scala.reflect.macros.Universe.Tree]):scala.reflect.macros.Universe.Tree\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">method</span><span class=\"params\">(<span name=\"recOpt\">recOpt: <span class=\"extype\" name=\"scala.Option\">Option</span>[<span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span>]</span>, <span name=\"methName\">methName: <span class=\"extype\" name=\"scala.Predef.String\">String</span></span>, <span name=\"args\">args: <span class=\"extype\" name=\"scala.List\">List</span>[<span class=\"extype\" name=\"scala.List\">List</span>[<span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span>]]</span>, <span name=\"targs\">targs: <span class=\"extype\" name=\"scala.List\">List</span>[<span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span>] = <span class=\"symbol\">Nil</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@method(recOpt:Option[TransformationUtils.this.c.universe.Tree],methName:String,args:List[List[TransformationUtils.this.c.universe.Tree]],targs:List[TransformationUtils.this.c.universe.Tree]):TransformationUtils.this.c.universe.Tree\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"scala.AnyRef#ne\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"ne(x$1:AnyRef):Boolean\"></a>\n      <a id=\"ne(AnyRef):Boolean\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">ne</span><span class=\"params\">(<span name=\"arg0\">arg0: <span class=\"extype\" name=\"scala.AnyRef\">AnyRef</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Boolean\">Boolean</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@ne(x$1:AnyRef):Boolean\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd></dl></div>\n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#newClass\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"newClass(classname:String):TransformationUtils.this.c.universe.New\"></a>\n      <a id=\"newClass(String):scala.reflect.macros.Universe.New\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">newClass</span><span class=\"params\">(<span name=\"classname\">classname: <span class=\"extype\" name=\"scala.Predef.String\">String</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.reflect.api.Trees.New\">scala.reflect.macros.Universe.New</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@newClass(classname:String):TransformationUtils.this.c.universe.New\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"scala.AnyRef#notify\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"notify():Unit\"></a>\n      <a id=\"notify():Unit\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">notify</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Unit\">Unit</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@notify():Unit\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd></dl></div>\n    </li><li name=\"scala.AnyRef#notifyAll\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"notifyAll():Unit\"></a>\n      <a id=\"notifyAll():Unit\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">notifyAll</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Unit\">Unit</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@notifyAll():Unit\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd></dl></div>\n    </li><li name=\"scala.AnyRef#synchronized\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"synchronized[T0](x$1:=&gt;T0):T0\"></a>\n      <a id=\"synchronized[T0](⇒T0):T0\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">synchronized</span><span class=\"tparams\">[<span name=\"T0\">T0</span>]</span><span class=\"params\">(<span name=\"arg0\">arg0: ⇒ <span class=\"extype\" name=\"java.lang.AnyRef.synchronized.T0\">T0</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"java.lang.AnyRef.synchronized.T0\">T0</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@synchronized[T0](x$1:=&gt;T0):T0\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd></dl></div>\n    </li><li name=\"scala.AnyRef#toString\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"toString():String\"></a>\n      <a id=\"toString():String\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">toString</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"java.lang.String\">String</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@toString():String\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef → Any</dd></dl></div>\n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#typeApply\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"typeApply(targs:List[TransformationUtils.this.c.universe.Tree])(select:TransformationUtils.this.c.universe.Tree):TransformationUtils.this.c.universe.Tree\"></a>\n      <a id=\"typeApply(List[scala.reflect.macros.Universe.Tree])(scala.reflect.macros.Universe.Tree):scala.reflect.macros.Universe.Tree\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">typeApply</span><span class=\"params\">(<span name=\"targs\">targs: <span class=\"extype\" name=\"scala.List\">List</span>[<span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span>]</span>)</span><span class=\"params\">(<span name=\"select\">select: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@typeApply(targs:List[TransformationUtils.this.c.universe.Tree])(select:TransformationUtils.this.c.universe.Tree):TransformationUtils.this.c.universe.Tree\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#typeRegex\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"typeRegex:scala.util.matching.Regex\"></a>\n      <a id=\"typeRegex:Regex\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">lazy val</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">typeRegex</span><span class=\"result\">: <span class=\"extype\" name=\"scala.util.matching.Regex\">Regex</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@typeRegex:scala.util.matching.Regex\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#typeToTree\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"typeToTree(tpe:TransformationUtils.this.c.universe.Type):TransformationUtils.this.c.universe.Tree\"></a>\n      <a id=\"typeToTree(scala.reflect.macros.Universe.Type):scala.reflect.macros.Universe.Tree\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">typeToTree</span><span class=\"params\">(<span name=\"tpe\">tpe: <span class=\"extype\" name=\"scala.reflect.api.Types.Type\">scala.reflect.macros.Universe.Type</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@typeToTree(tpe:TransformationUtils.this.c.universe.Type):TransformationUtils.this.c.universe.Tree\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#typetagRegex\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"typetagRegex:scala.util.matching.Regex\"></a>\n      <a id=\"typetagRegex:Regex\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">lazy val</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">typetagRegex</span><span class=\"result\">: <span class=\"extype\" name=\"scala.util.matching.Regex\">Regex</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@typetagRegex:scala.util.matching.Regex\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"scala.AnyRef#wait\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"wait():Unit\"></a>\n      <a id=\"wait():Unit\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">wait</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Unit\">Unit</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@wait():Unit\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd><dt>Annotations</dt><dd>\n                <span class=\"name\">@throws</span><span class=\"args\">(<span>\n      \n      <span class=\"defval\" name=\"classOf[java.lang.InterruptedException]\">...</span>\n    </span>)</span>\n              \n        </dd></dl></div>\n    </li><li name=\"scala.AnyRef#wait\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"wait(x$1:Long,x$2:Int):Unit\"></a>\n      <a id=\"wait(Long,Int):Unit\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">wait</span><span class=\"params\">(<span name=\"arg0\">arg0: <span class=\"extype\" name=\"scala.Long\">Long</span></span>, <span name=\"arg1\">arg1: <span class=\"extype\" name=\"scala.Int\">Int</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Unit\">Unit</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@wait(x$1:Long,x$2:Int):Unit\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd><dt>Annotations</dt><dd>\n                <span class=\"name\">@throws</span><span class=\"args\">(<span>\n      \n      <span class=\"defval\" name=\"classOf[java.lang.InterruptedException]\">...</span>\n    </span>)</span>\n              \n        </dd></dl></div>\n    </li><li name=\"scala.AnyRef#wait\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"wait(x$1:Long):Unit\"></a>\n      <a id=\"wait(Long):Unit\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">wait</span><span class=\"params\">(<span name=\"arg0\">arg0: <span class=\"extype\" name=\"scala.Long\">Long</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Unit\">Unit</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@wait(x$1:Long):Unit\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd><dt>Annotations</dt><dd>\n                <span class=\"name\">@throws</span><span class=\"args\">(<span>\n      \n      <span class=\"defval\" name=\"classOf[java.lang.InterruptedException]\">...</span>\n    </span>)</span>\n              \n        </dd></dl></div>\n    </li></ol>\n            </div>\n\n        \n\n        \n        </div>\n\n        <div id=\"inheritedMembers\">\n        <div class=\"parent\" name=\"ch.epfl.yinyang.MacroModule\">\n              <h3>Inherited from <a href=\"MacroModule.html\" class=\"extype\" name=\"ch.epfl.yinyang.MacroModule\">MacroModule</a></h3>\n            </div><div class=\"parent\" name=\"scala.AnyRef\">\n              <h3>Inherited from <span class=\"extype\" name=\"scala.AnyRef\">AnyRef</span></h3>\n            </div><div class=\"parent\" name=\"scala.Any\">\n              <h3>Inherited from <span class=\"extype\" name=\"scala.Any\">Any</span></h3>\n            </div>\n        \n        </div>\n\n        <div id=\"groupedMembers\">\n        <div class=\"group\" name=\"Ungrouped\">\n              <h3>Ungrouped</h3>\n              \n            </div>\n        </div>\n\n      </div>\n\n      <div id=\"tooltip\"></div>\n\n      <div id=\"footer\">  </div>\n\n\n    </body>\n      </html>",
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/target/scala-2.11/api/ch/epfl/yinyang/TransformationUtils.html",
			"file_size": 44835,
			"file_write_time": 130740071630000000,
			"settings":
			{
				"buffer_size": 44813,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "format version: 5\noutput mode:\n1 items\n0 -> single\noutput directories:\n1 items\noutput dir -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes\ncompile options:\n4 items\n0 -> -deprecation\n1 -> -feature\n2 -> -language:higherKinds\n3 -> -language:implicitConversions\njavac options:\n0 items\ncompiler version:\n1 items\n0 -> 2.11.1\ncompile order:\n1 items\n0 -> Mixed\nname hashing:\n1 items\n0 -> true\nproducts:\n142 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/Base.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/PolymorphicBase.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile$$anonfun$setupCompiler$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile$$anonfun$setupCompiler$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/VirtualControlsBase.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/VirtualFunctionsBase.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$$plus$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$$times$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$baseVectors$1$$anonfun$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$baseVectors$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$corresponds$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$dotProduct$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$length$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$negate$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$splice$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$$plus$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$$times$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$baseVectors$2$$anonfun$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$baseVectors$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$corresponds$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$dotProduct$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$length$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$negate$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$splice$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/TestObject$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/TestObject.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/Vector$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/Vector.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$Array$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$ArrayOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$ArrayOpsOf.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/BooleanDSL$LiftBoolean$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/BooleanDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/BooleanDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ClassTagOps$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ClassTagOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOpsOf.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOrdering$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOverloaded$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$LiftDouble$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$LiftString$$typecreator1$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$LiftString$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IfThenElseDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IfThenElseDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOpsOf.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOrdering$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOverloaded$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$LiftInt$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$LiftUnit$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$DoubleIsFractional$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$IntIsIntegral$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOps$Ops.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOps$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOpsOf$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOpsOf.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ScalaVirtualizationDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ScalaVirtualizationDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$DenseVector$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$SparseVector$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$Vector$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$VectorOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$VectorOpsOf.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package$implementations$$anon$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package$implementations$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BasePrintDSL$$anonfun$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BasePrintDSL$$anonfun$generateCode$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BasePrintDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanConst$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanConst.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanHole$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanHole.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanLess$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanLess.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanOps$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$LiftBoolean$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL$$anonfun$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL$$anonfun$compilationVars$3$$anonfun$apply$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL$$anonfun$compilationVars$3.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$CodeGeneratingStatement$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$CodeGeneratingStatement.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$Hole$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$Hole.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntConst$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntConst.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntEq$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntEq.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntMixed$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntMixed.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntOps$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntPlus$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntPlus.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntValue.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$LiftInt$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniUnitDSL$LiftUnit$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniUnitDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniUnitDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/OptimizedPrintDSL$$anonfun$compilationVars$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/OptimizedPrintDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/PrintCodeGenerator$BaseHole.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/PrintCodeGenerator$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/PrintCodeGenerator.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/ReturningPrintDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/StagedPrintDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/UnstagedPrintDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$3.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$4.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$5.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$6.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$7$$anonfun$apply$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$7.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$compilationVars$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/package$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/package.class\nbinary dependencies:\n22 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-compiler/jars/scala-compiler-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-compiler/jars/scala-compiler-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar\ndirect source dependencies:\n0 items\ndirect external dependencies:\n0 items\npublic inherited source dependencies:\n0 items\npublic inherited external dependencies:\n0 items\nmember reference internal dependencies:\n6 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala\nmember reference external dependencies:\n29 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> ch.epfl.yinyang.api.BaseYinYangTypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> ch.epfl.yinyang.api.CodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> ch.epfl.yinyang.api.CodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ch.epfl.yinyang.api.BaseYinYang\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ch.epfl.yinyang.api.FullyStaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ch.epfl.yinyang.api.Interpreted\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> ch.epfl.yinyang.YYTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> ch.epfl.yinyang.YYTransformer$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> ch.epfl.yinyang.typetransformers.GenericTypeTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.BaseYinYang\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.BaseYinYangTypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.CodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.CompVar$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.FullyStaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.FullyUnstaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.Interpreted\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.NonCompVar$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.OptionalDynamicCompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.OptionalDynamicCompVar$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.OptionalStaticCompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.OptionalStaticCompVar$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.RequiredDynamicCompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.RequiredDynamicCompVar$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.RequiredStaticCompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.VarType\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.VirtualAny\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> ch.epfl.yinyang.YYTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> ch.epfl.yinyang.YYTransformer$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> ch.epfl.yinyang.typetransformers.PolyTransformer\ninheritance internal dependencies:\n5 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala\ninheritance external dependencies:\n13 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> ch.epfl.yinyang.api.BaseYinYangTypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> ch.epfl.yinyang.api.CodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ch.epfl.yinyang.api.BaseYinYang\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ch.epfl.yinyang.api.FullyStaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ch.epfl.yinyang.api.Interpreted\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> ch.epfl.yinyang.typetransformers.GenericTypeTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.BaseYinYang\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.BaseYinYangTypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.CodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.FullyStaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.FullyUnstaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.Interpreted\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.VirtualAny\nclass names:\n142 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> base.Base\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> base.PolymorphicBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> base.ScalaCompile\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> base.ScalaCompile$$anonfun$setupCompiler$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> base.ScalaCompile$$anonfun$setupCompiler$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> base.ScalaCompile$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> base.VirtualControlsBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> base.VirtualFunctionsBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$$plus$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$$times$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$baseVectors$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$baseVectors$1$$anonfun$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$corresponds$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$dotProduct$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$length$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$negate$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$splice$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$$plus$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$$times$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$baseVectors$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$baseVectors$2$$anonfun$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$corresponds$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$dotProduct$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$length$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$negate$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$splice$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.TestObject\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.TestObject$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.Vector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.Vector$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ArrayDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ArrayDSL$Array$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ArrayDSL$ArrayOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ArrayDSL$ArrayOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ArrayDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.BooleanDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.BooleanDSL$LiftBoolean$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.BooleanDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ClassTagOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ClassTagOps$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$DoubleOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$DoubleOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$DoubleOrdering$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$DoubleOverloaded$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$LiftDouble$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$LiftString$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$LiftString$$typecreator1$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IfThenElseDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IfThenElseDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL$IntOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL$IntOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL$IntOrdering$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL$IntOverloaded$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL$LiftInt$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL$LiftUnit$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$DoubleIsFractional$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$IntIsIntegral$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$NumericOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$NumericOps$Ops\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$NumericOps$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$NumericOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$NumericOpsOf$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ScalaVirtualizationDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ScalaVirtualizationDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.VectorDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.VectorDSL$DenseVector$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.VectorDSL$SparseVector$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.VectorDSL$Vector$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.VectorDSL$VectorOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.VectorDSL$VectorOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.VectorDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> dsl.la.package\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> dsl.la.package$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> dsl.la.package$implementations$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> dsl.la.package$implementations$$anon$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BasePrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BasePrintDSL$$anonfun$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BasePrintDSL$$anonfun$generateCode$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanConst\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanConst$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanHole\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanHole$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanLess\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanLess$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanOps$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$LiftBoolean$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.EvenOddOptimizedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.EvenOddOptimizedPrintDSL$$anonfun$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.EvenOddOptimizedPrintDSL$$anonfun$compilationVars$3\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.EvenOddOptimizedPrintDSL$$anonfun$compilationVars$3$$anonfun$apply$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$CodeGeneratingStatement\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$CodeGeneratingStatement$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$Hole\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$Hole$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntConst\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntConst$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntEq\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntEq$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntMixed\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntMixed$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntOps$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntPlus\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntPlus$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntValue\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$LiftInt$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniUnitDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniUnitDSL$LiftUnit$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniUnitDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.OptimizedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.OptimizedPrintDSL$$anonfun$compilationVars$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.PrintCodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.PrintCodeGenerator$BaseHole\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.PrintCodeGenerator$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.ReturningPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.StagedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.UnstagedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL$$anonfun$3\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL$$anonfun$4\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL$$anonfun$5\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL$$anonfun$6\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL$$anonfun$7\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL$$anonfun$7$$anonfun$apply$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL$$anonfun$compilationVars$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> dsl.print.package\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> dsl.print.package$\nused names:\n583 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> Any\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> Base\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> BaseYinYangTypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> CodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> api\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> base\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> ch\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> epfl\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> yinyang\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> +\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> <init>\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> AbstractFileClassLoader\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> AnyRef\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Array\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> BatchSourceFile\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> COLON\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> ClassTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> ConsoleReporter\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Global\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Int\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> List\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> None\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Predef\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> PrintWriter\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Ret\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Run\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> ScalaCompile\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Set\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Settings\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> System\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> T\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> TypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> VirtualDirectory\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> api\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> apply\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> asInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> base\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> bootclasspath\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> canBuildFrom\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> ch\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> className\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> classpath\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> cls\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> collection\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> compileCount\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> compileCount_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> compileSources\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> compiler\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> compiler_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> dumpGeneratedCode\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> encoding\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> epfl\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> eq\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> extdirs\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> fileSystem\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> generateCode\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> getClass\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> getClassLoader\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> getConstructor\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> getPath\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> getProperty\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> getURLs\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> hasErrors\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> immutable\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> internal\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> io\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> isInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> java\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> lang\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> loadClass\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> loader\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> map\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> mkString\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> newInstance\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> nsc\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> out\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> outdir\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> outputDirs\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> package\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> printSummary\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> println\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> refArrayOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> reflect\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> reporter\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> reporter_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> reporters\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> reset\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> run\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> runtime\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> setSingleOutput\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> settings\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> setupCompiler\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> source\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> toString\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> tools\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> universe\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> unstableHoleIds\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> util\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> value_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> wrapString\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> yinyang\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> Any\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> Boolean\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> Function0\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> Function1\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> Function2\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> Nothing\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> R\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> PolymorphicBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> T\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> T_1\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> T_2\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> U\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> Unit\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> VirtualControlsBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> VirtualFunctionsBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> _root_\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> base\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> ++\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> <init>\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> <repeated>\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> ==\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> ???\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> A1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Any\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> AnyRef\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Array\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> B\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Boolean\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> ClassTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> DenseVector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Double\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Function1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Function2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> IndexedSeq\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Int\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> List\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> ListBuffer\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Map\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Numeric\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Ordering\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Predef\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Seq\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> SparseVector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> T\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> TestObject\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Tuple2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> U\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Vector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> WrappedArray\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> _1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> _2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> _root_\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> a\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> apply\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> asInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> canBuildFrom\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> collection\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> f\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> fill\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> flatMap\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> fn\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> forall\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> fun\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> genericWrapArray\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> head\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> i\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> implicitly\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> isInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> la\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> length\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> listBuffer\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> make\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> map\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> mas\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> math\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> mkString\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> mutable\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> ne\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> negate\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> num\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> p\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> package\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> partition\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> plus\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> reflect\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> seq\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> sqrt\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> sum\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> tail\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> that\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> times\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> toArray\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> toDouble\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> toList\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> toSeq\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> underlying\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> update\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> v\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> values\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> vs\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> x\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> z\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> zero\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> zip\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> zipWithIndex\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> $m\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> $m$untyped\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> $typecreator1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> $u\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> <byname>\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> <init>\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> <repeated>\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ???\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> A1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Any\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> AnyRef\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Array\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ArrayDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ArrayOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ArrayOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> B\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Base\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Boolean\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> BooleanDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ClassTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ClassTagOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> DenseVector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Double\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> DoubleDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> DoubleIsFractional\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> DoubleOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> DoubleOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> DoubleOrdering\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> DoubleOverloaded\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> FullyStaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Function0\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Function1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Function2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> IfThenElseDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Int\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> IntDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> IntIsIntegral\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> IntOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> IntOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> IntOrdering\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> IntOverloaded\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Interpreted\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> LiftBoolean\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> LiftDouble\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> LiftEvidence\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> LiftInt\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> LiftString\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> LiftUnit\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Map\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Mirror\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Nil\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Nothing\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Numeric\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> NumericOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> NumericOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Ops\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Ordering\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Predef\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> R\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> PolymorphicBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Ret\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ScalaVirtualizationDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Set\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> SingleType\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Singleton\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> SparseVector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> String\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> T\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> T_1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> T_2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ThisType\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Tuple2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Type\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> TypeCreator\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> TypeRef\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> TypeRep\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> TypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> U\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Unit\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Universe\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Vector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> VectorDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> VectorOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> VectorOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> VirtualControlsBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> VirtualFunctionsBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> _root_\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> api\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> apply\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> asInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> asModule\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> base\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ch\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> epfl\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> getClassLoader\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> immutable\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> internal\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> la\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> lhs\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> minus\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> moduleClass\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> negate\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> package\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> plus\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> reflect\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> reificationSupport\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> rep\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> rhs\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> runtime\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> runtimeMirror\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> selectType\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> staticModule\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> staticPackage\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> times\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> universe\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> v\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> x\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> yinyang\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> $anon\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> ->\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> <byname>\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> <init>\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> AnyRef\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> Context\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> Expr\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> GenericTypeTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> IRType\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> Map\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> None\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> Predef\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> T\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> YYTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> _root_\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> apply\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> blackbox\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> block\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> c\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> ch\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> dsl\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> epfl\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> experimental\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> implementations\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> la\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> language\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> liftRep\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> macros\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> package\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> reflect\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> typetransformers\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> yinyang\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> %\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> &&\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> *\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> +\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> +=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> <init>\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> <repeated>\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ==\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> A1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> AbstractFunction0\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> AbstractFunction1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> AbstractFunction2\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Any\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> AnyRef\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ArrayBuffer\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> B1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Base\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BaseHole\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BasePrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BaseYinYang\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BaseYinYangTypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Boolean\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BooleanConst\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BooleanHole\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BooleanLess\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BooleanOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ClassTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> CodeGeneratingStatement\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> CodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> CompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> EvenOddOptimizedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> FullyStaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> FullyUnstaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Function0\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Function1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Hole\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Int\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> IntConst\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> IntEq\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> IntIsIntegral\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> IntMixed\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> IntOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> IntPlus\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> IntValue\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Interpreted\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> LiftBoolean\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> LiftEvidence\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> LiftInt\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> LiftUnit\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> List\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Map\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> MiniIntDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> MiniUnitDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> None\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Numeric\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> OptimizedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> OptionalDynamicCompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> OptionalStaticCompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Predef\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> PrintCodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Product\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> RequiredDynamicCompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ReturningPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ScalaCompile\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ScalaRunTime\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Serializable\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Set\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> StagedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Statics\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> String\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> StringBuffer\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> StringContext\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Symbol\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> T\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> TypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Unit\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> UnstagedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> VarType\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> VarTypePrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> VirtualAny\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> _1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> _2\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> _hashCode\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> _root_\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> and\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> anyHash\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> api\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> append\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> apply\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> asInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> augmentString\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> base\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> canBuildFrom\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> className\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> clear\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> collect\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> collection\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> compilationHoles\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> compile\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> compiledCode\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> compiledCode_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> contains\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> distinct\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> distinctHoles\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> epfl\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> eq\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> equality\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> finalizeHash\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> generateCode\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> getOrElse\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> h\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> hole\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> holeId\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> holes\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> i\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> id\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> immutable\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> isInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> java\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> l\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> lang\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> length\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> main\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> map\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> math\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> mix\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> mkString\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> mod2GuardKey\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> mutable\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ne\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> optionalStatic\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> optionalStatic_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> package\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> print\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> put\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> r\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> range\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> reflect\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> res\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> reset\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> retType\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> runtime\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> s\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> sb\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> sb_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> size\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> sym\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> symbolId\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> symbols\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> that\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> toSet\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> toString\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> tpe\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> typeSignature\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> typedProductIterator\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> unchecked\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> universe\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> unstableHoleIds\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> unstableHoleIds_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> v\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> value\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> varType\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> varTypes\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> x\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> y\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> yinyang\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> zipWithIndex\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ||\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> +\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> ->\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> <byname>\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> <init>\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> ???\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> AnyRef\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> Context\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> Expr\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> Int\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> Map\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> None\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> PolyTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> Predef\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> T\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> ToolBoxFactory\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> Unit\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> WeakHashMap\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> YYTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _liftEvenOddOptimizedPrint\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _liftOptimizedPrint\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _liftReturningPrint\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _liftStagedPrint\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _liftUnstagedPrint\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _liftVarTypeInitiallyUnstableStab10Print\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _liftVarTypeStab10Print\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _root_\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> apply\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> blackbox\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> block\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> c\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> ch\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> collection\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> debug\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> dsl\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> epfl\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> experimental\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> language\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> macros\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> mutable\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> package\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> print\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> reflect\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> tools\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> typetransformers\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> x\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> yinyang\nproduct stamps:\n142 items\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/Base.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/PolymorphicBase.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile$$anonfun$setupCompiler$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile$$anonfun$setupCompiler$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/VirtualControlsBase.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/VirtualFunctionsBase.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$$plus$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$$times$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$baseVectors$1$$anonfun$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$baseVectors$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$corresponds$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$dotProduct$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$length$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$negate$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$splice$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$$plus$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$$times$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$baseVectors$2$$anonfun$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$baseVectors$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$corresponds$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$dotProduct$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$length$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$negate$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$splice$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/TestObject$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/TestObject.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/Vector$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/Vector.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package$implementations$$anon$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package$implementations$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$Array$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$ArrayOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$ArrayOpsOf.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/BooleanDSL$LiftBoolean$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/BooleanDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/BooleanDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ClassTagOps$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ClassTagOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOpsOf.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOrdering$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOverloaded$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$LiftDouble$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$LiftString$$typecreator1$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$LiftString$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IfThenElseDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IfThenElseDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOpsOf.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOrdering$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOverloaded$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$LiftInt$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$LiftUnit$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$DoubleIsFractional$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$IntIsIntegral$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOps$Ops.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOps$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOpsOf$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOpsOf.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ScalaVirtualizationDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ScalaVirtualizationDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$DenseVector$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$SparseVector$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$Vector$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$VectorOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$VectorOpsOf.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BasePrintDSL$$anonfun$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BasePrintDSL$$anonfun$generateCode$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BasePrintDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanConst$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanConst.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanHole$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanHole.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanLess$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanLess.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanOps$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$LiftBoolean$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL$$anonfun$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL$$anonfun$compilationVars$3$$anonfun$apply$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL$$anonfun$compilationVars$3.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$CodeGeneratingStatement$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$CodeGeneratingStatement.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$Hole$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$Hole.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntConst$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntConst.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntEq$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntEq.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntMixed$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntMixed.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntOps$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntPlus$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntPlus.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntValue.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$LiftInt$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniUnitDSL$LiftUnit$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniUnitDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniUnitDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/OptimizedPrintDSL$$anonfun$compilationVars$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/OptimizedPrintDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/PrintCodeGenerator$BaseHole.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/PrintCodeGenerator$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/PrintCodeGenerator.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/ReturningPrintDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/StagedPrintDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/UnstagedPrintDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$3.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$4.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$5.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$6.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$7$$anonfun$apply$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$7.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$compilationVars$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/package$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/package.class -> lastModified(1411684184000)\nsource stamps:\n8 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> hash(170e033f71cb044ba66272b60ea872eddf064ad5)\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> hash(379de8f99507c6c5aa724277ac89db0b1cf12c5d)\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> hash(8123ac1fe26fd6cb173144c1485bf6e4fedf4aac)\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> hash(f100fb82208122448309121b405b5b84bda0e821)\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> hash(7a8fcbba99ae62cc3df0ba79438708f8e80504e9)\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> hash(7a6db1b5a30ae5e6840a6bb0c051a58024223ced)\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> hash(a84d3c96113ecee59f5dc8eb2303c0e079be4024)\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> hash(e97db3427b24ab193d90364a0dd50535ff9a3688)\nbinary stamps:\n4 items\n/Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1387422821000)\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-compiler/jars/scala-compiler-2.11.1.jar -> lastModified(1400572986000)\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar -> lastModified(1400572938000)\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar -> lastModified(1400572965000)\nclass names:\n4 items\n/Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.Object\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-compiler/jars/scala-compiler-2.11.1.jar -> scala.tools.reflect.ToolBoxFactory\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar -> scala.None$\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar -> scala.reflect.api.Exprs\ninternal apis:\n8 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHA9rt5iAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAI3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cCa6gLZ0AAZub3RpZnlzcQB+AAyJ+7IRdAAEd2FpdHNxAH4ADELqco90AA0kYXNJbnN0YW5jZU9mc3EAfgAM83GdAnQAD2NvbXBpbGF0aW9uVmFyc3NxAH4ADBdmNcZ0AAZlcXVhbHNzcQB+AAwDw7vzdAAMZ2VuZXJhdGVDb2Rlc3EAfgAM7tKyZHQADGFzSW5zdGFuY2VPZnNxAH4ADJFGkvp0AAtydW50aW1lVHlwZXNxAH4ADP6i4S50AAdSZXBCYXNlc3EAfgAM859rJHQADHN5bmNocm9uaXplZHNxAH4ADKDzhbJ0AA0kaXNJbnN0YW5jZU9mc3EAfgAMbv4xK3QABG1haW5zcQB+AAwiAqkLdAAHY29tcGlsZXNxAH4ADBitIz50AARCYXNlc3EAfgAMHYtdWnQACW5vdGlmeUFsbHNxAH4ADORB9Vh0AAxpc0luc3RhbmNlT2ZzcQB+AAy/aarMdAAFbWl4ZWRzcQB+AAyeHTCPdAAGPGluaXQ+c3EAfgAMLo0H4nQADExpZnRFdmlkZW5jZXNxAH4ADDrEZ+F0AAI9PXNxAH4ADHnP9Zt0ABFjb21waWxlJGRlZmF1bHQkMXNxAH4ADITWqid0AAdUeXBlUmVwc3EAfgAM3s7i+HQABWNsb25lc3EAfgAM7hShIHQAFmdlbmVyYXRlQ29kZSRkZWZhdWx0JDJzcQB+AAz2kzOudAAIdG9TdHJpbmdzcQB+AAzAGFGVdAACIT1zcQB+AAyZ7VCZdAAIZ2V0Q2xhc3NzcQB+AAyK3LDJdAAEaG9sZXNxAH4ADGtytzV0AAFSc3EAfgAMlbwIx3QAAm5lc3EAfgAMUgj5+HQABGxpZnRzcQB+AAyQezbgdAACZXFzcQB+AAzFDEfRdAACIyNzcQB+AAyp+x/qdAAIZmluYWxpemVzcQB+AAwQKQBHdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBdeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAJYmFzZS5CYXNldXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHABc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHBzcQB+AHUBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AF1MAAlpbmhlcml0ZWRxAH4AXUwAB3BhcmVudHNxAH4AXXhxAH4AfHNxAH4AdQF1cQB+AFgAAAAAcHNxAH4AdQF1cQB+AFgAAAAAcHNxAH4AdQF1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAABnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AHt0AA1Db2RlR2VuZXJhdG9yc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB7c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAAFc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAJjaHNxAH4AlHQABGVwZmxzcQB+AJR0AAd5aW55YW5nc3EAfgCUdAADYXBpc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJVzcQB+AIh0ABJCYXNlWWluWWFuZ1R5cGVUYWdxAH4AjnNxAH4AiHQADFR5cGVUYWdCYXNlZHEAfgCOc3EAfgCIdAALQmFzZVlpbllhbmdxAH4AjnNxAH4AiHQABk9iamVjdHNxAH4AjHNxAH4Aj3VxAH4AkgAAAANzcQB+AJR0AARqYXZhc3EAfgCUdAAEbGFuZ3EAfgCfc3EAfgCIdAADQW55c3EAfgCMc3EAfgCPdXEAfgCSAAAAAnNxAH4AlHQABXNjYWxhcQB+AJ9wcHNxAH4AWnEAfgBndXEAfgBoAAAAAHNxAH4AagF0AAxiYXNlLlJlcEJhc2V1cQB+AG0AAAAAcQB+AHF1cQB+AHMAAAAAc3EAfgB1AXEAfgB9cHNxAH4AdQFzcQB+AH9zcQB+AHUBdXEAfgBYAAAAAHBzcQB+AHUBdXEAfgBYAAAAAHBzcQB+AHUBdXEAfgCGAAAAB3NxAH4AiHQABEJhc2VzcQB+AIxzcQB+AI91cQB+AJIAAAACc3EAfgCUdAAEYmFzZXEAfgCfc3EAfgCIdAANQ29kZUdlbmVyYXRvcnNxAH4AjHNxAH4Aj3VxAH4AkgAAAAVzcQB+AJR0AAJjaHNxAH4AlHQABGVwZmxzcQB+AJR0AAd5aW55YW5nc3EAfgCUcQB+AJ1xAH4An3NxAH4AiHQAEkJhc2VZaW5ZYW5nVHlwZVRhZ3EAfgDOc3EAfgCIdAAMVHlwZVRhZ0Jhc2VkcQB+AM5zcQB+AIh0AAtCYXNlWWluWWFuZ3EAfgDOc3EAfgCIcQB+AKdzcQB+AIxzcQB+AI91cQB+AJIAAAADc3EAfgCUcQB+AKxzcQB+AJRxAH4ArnEAfgCfc3EAfgCIcQB+ALBzcQB+AIxzcQB+AI91cQB+AJIAAAACc3EAfgCUcQB+ALVxAH4An3BwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAEYmFzZXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vKfd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABHL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy9kc2xzL3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQXDgM/ccsES6ZicrYOqHLt3wZK1Q==\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHAH610cAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAHXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cMID/XJ0AAZub3RpZnlzcQB+AAxl+WrAdAAEd2FpdHNxAH4ADPAYMFF0AA0kYXNJbnN0YW5jZU9mc3EAfgAMjuAlnXQABmVxdWFsc3NxAH4ADI492KZ0AAhyZXBvcnRlcnNxAH4ADD2eV5x0ABFkdW1wR2VuZXJhdGVkQ29kZXNxAH4ADLLjZXN0AAxhc0luc3RhbmNlT2ZzcQB+AAz/ftBQdAAIY29tcGlsZXJzcQB+AAzzxLy8dAAMc3luY2hyb25pemVkc3EAfgAMnDYuqHQADSRpc0luc3RhbmNlT2ZzcQB+AAxX3TXJdAAHY29tcGlsZXNxAH4ADDsMSKh0AAVDT0xPTnNxAH4ADIS72Fd0AAlub3RpZnlBbGxzcQB+AAzLSnvudAAMaXNJbnN0YW5jZU9mc3EAfgAMqKjC3HQADGNvbXBpbGVDb3VudHNxAH4ADH13BMF0AAI9PXNxAH4ADJbStSZ0ABFjb21waWxlJGRlZmF1bHQkMXNxAH4ADOA0c2Z0AAVjbG9uZXNxAH4ADIDfPxt0AAYkaW5pdCRzcQB+AAxdj/W5dAANc2V0dXBDb21waWxlcnNxAH4ADP//2Hx0AAh0b1N0cmluZ3NxAH4ADHHAU7N0AAIhPXNxAH4ADNH0NzZ0AAhnZXRDbGFzc3NxAH4ADHdHljR0AAJuZXNxAH4ADPrp5Nl0AAJlcXNxAH4ADGCWATB0AAIjI3NxAH4ADC5gX+N0AAhmaW5hbGl6ZXNxAH4ADDTM+mJ0AAhoYXNoQ29kZXNxAH4ADIHPXAB0AAxTY2FsYUNvbXBpbGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBReHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAARYmFzZS5TY2FsYUNvbXBpbGV1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAVUcmFpdHVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cAFzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwcHNxAH4AaQFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AUUwACWluaGVyaXRlZHEAfgBRTAAHcGFyZW50c3EAfgBReHEAfgBwc3EAfgBpAXVxAH4ATAAAAABwc3EAfgBpAXVxAH4ATAAAAABwc3EAfgBpAXVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4Ab3QABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4Ab3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AiHQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AiXNxAH4AfHQAA0FueXNxAH4AgHNxAH4Ag3VxAH4AhgAAAAJzcQB+AIh0AAVzY2FsYXEAfgCPcHB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AARiYXNlc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFIru8p93VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AEcvVXNlcnMvdmpvdmFub3YvY29kZS95aW4teWFuZy9jb21wb25lbnRzL2RzbHMvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFDed6PmVB8bFqnJCd6yJ2wsc8Sxd\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDtsbpQAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAALnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cC4LP8Z0AAlfX3JlYWRWYXJzcQB+AAxQMJKsdAAGbm90aWZ5c3EAfgAMwRCaY3QAE1ZpcnR1YWxDb250cm9sc0Jhc2VzcQB+AAzTw9m9dAAFX19hcHBzcQB+AAzx1opPdAAEd2FpdHNxAH4ADBYSecV0AA0kYXNJbnN0YW5jZU9mc3EAfgAMx3lQLHQADF9fbGF6eVZhbERlZnNxAH4ADNjUbj50AA9jb21waWxhdGlvblZhcnNzcQB+AAwNaxJ3dAAGZXF1YWxzc3EAfgAMGYeCxnQADGdlbmVyYXRlQ29kZXNxAH4ADDKd4El0AAxhc0luc3RhbmNlT2ZzcQB+AAwjmghhdAALcnVudGltZVR5cGVzcQB+AAxkhdHrdAAMc3luY2hyb25pemVkc3EAfgAMjnZ+gXQADSRpc0luc3RhbmNlT2ZzcQB+AAziZ9i1dAAIX19hc3NpZ25zcQB+AAyZXJhXdAAEbWFpbnNxAH4ADEORGIp0AAdjb21waWxlc3EAfgAMQadjNHQACW5vdGlmeUFsbHNxAH4ADMzI0KF0AAxpc0luc3RhbmNlT2ZzcQB+AAyGoXHSdAAFbWl4ZWRzcQB+AAwtnYWHdAAGPGluaXQ+c3EAfgAMDEjlGHQADExpZnRFdmlkZW5jZXNxAH4ADGJpvJd0AAlfX2RvV2hpbGVzcQB+AAy4MQOgdAACPT1zcQB+AAzmr1vHdAARY29tcGlsZSRkZWZhdWx0JDFzcQB+AAwraGp4dAAHVHlwZVJlcHNxAH4ADIEMTWh0AAVjbG9uZXNxAH4ADBvxvVl0AAhfX2xhbWJkYXNxAH4ADLHRAwB0AAlfX3doaWxlRG9zcQB+AAwArClkdAAIX192YWxEZWZzcQB+AAxBZrCkdAAMX19pZlRoZW5FbHNlc3EAfgAMCXU6iHQACF9fbmV3VmFyc3EAfgAMP8ELTnQAFmdlbmVyYXRlQ29kZSRkZWZhdWx0JDJzcQB+AAxOAnLFdAAIX19yZXR1cm5zcQB+AAx3yhw9dAAIdG9TdHJpbmdzcQB+AAySyvWKdAACIT1zcQB+AAxNIQc1dAAUVmlydHVhbEZ1bmN0aW9uc0Jhc2VzcQB+AAwQ1Lt/dAAIZ2V0Q2xhc3NzcQB+AAwHSEmWdAAEaG9sZXNxAH4ADK1ooHx0AAFSc3EAfgAMrHSs1XQAAm5lc3EAfgAMEIS2EHQABGxpZnRzcQB+AAxfXls5dAACZXFzcQB+AAxPlEQBdAACIyNzcQB+AAxJ43k3dAAIZmluYWxpemVzcQB+AAwjrJ2ddAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBzeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAYYmFzZS5WaXJ0dWFsQ29udHJvbHNCYXNldXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHABc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHBzcQB+AIsBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AHNMAAlpbmhlcml0ZWRxAH4Ac0wAB3BhcmVudHNxAH4Ac3hxAH4AknNxAH4AiwF1cQB+AG4AAAAAcHNxAH4AiwF1cQB+AG4AAAAAcHNxAH4AiwF1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAACHNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AJF0AAdSZXBCYXNlc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgCRc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARiYXNlc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AKtzcQB+AJ50AARCYXNlcQB+AKRzcQB+AJ50AA1Db2RlR2VuZXJhdG9yc3EAfgCic3EAfgCldXEAfgCoAAAABXNxAH4AqnQAAmNoc3EAfgCqdAAEZXBmbHNxAH4AqnQAB3lpbnlhbmdzcQB+AKp0AANhcGlxAH4Ar3NxAH4AnnQAEkJhc2VZaW5ZYW5nVHlwZVRhZ3EAfgC0c3EAfgCedAAMVHlwZVRhZ0Jhc2VkcQB+ALRzcQB+AJ50AAtCYXNlWWluWWFuZ3EAfgC0c3EAfgCedAAGT2JqZWN0c3EAfgCic3EAfgCldXEAfgCoAAAAA3NxAH4AqnQABGphdmFzcQB+AKp0AARsYW5ncQB+AK9zcQB+AJ50AANBbnlzcQB+AKJzcQB+AKV1cQB+AKgAAAACc3EAfgCqdAAFc2NhbGFxAH4Ar3Bwc3EAfgBwcQB+AH11cQB+AH4AAAAAc3EAfgCAAXQAGWJhc2UuVmlydHVhbEZ1bmN0aW9uc0Jhc2V1cQB+AIMAAAAAcQB+AId1cQB+AIkAAAAAc3EAfgCLAXEAfgCTcHNxAH4AiwFzcQB+AJVzcQB+AIsBdXEAfgBuAAAAAHBzcQB+AIsBdXEAfgBuAAAAAHBzcQB+AIsBdXEAfgCcAAAACHNxAH4AnnQAB1JlcEJhc2VzcQB+AKJzcQB+AKV1cQB+AKgAAAACc3EAfgCqdAAEYmFzZXEAfgCvc3EAfgCedAAEQmFzZXEAfgDmc3EAfgCedAANQ29kZUdlbmVyYXRvcnNxAH4AonNxAH4ApXVxAH4AqAAAAAVzcQB+AKp0AAJjaHNxAH4AqnQABGVwZmxzcQB+AKp0AAd5aW55YW5nc3EAfgCqcQB+AL5xAH4Ar3NxAH4AnnQAEkJhc2VZaW5ZYW5nVHlwZVRhZ3EAfgDvc3EAfgCedAAMVHlwZVRhZ0Jhc2VkcQB+AO9zcQB+AJ50AAtCYXNlWWluWWFuZ3EAfgDvc3EAfgCecQB+AMZzcQB+AKJzcQB+AKV1cQB+AKgAAAADc3EAfgCqcQB+AMtzcQB+AKpxAH4AzXEAfgCvc3EAfgCecQB+AM9zcQB+AKJzcQB+AKV1cQB+AKgAAAACc3EAfgCqcQB+ANRxAH4Ar3BwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAEYmFzZXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vKfd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABHL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy9kc2xzL3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSBI6wf4m/WyxcxRMFIW/bk/t9KrA==\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala ->\\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala ->\\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHBnMX0KAXNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAF3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cJvasI50AAZub3RpZnlzcQB+AAzHtbeGdAAHcGFja2FnZXNxAH4ADDvsuLl0AAR3YWl0c3EAfgAMIGgKXnQADSRhc0luc3RhbmNlT2ZzcQB+AAy/1MzMdAAGZXF1YWxzc3EAfgAML9oKcHQADGFzSW5zdGFuY2VPZnNxAH4ADA92TFd0AAxzeW5jaHJvbml6ZWRzcQB+AAwEe6fgdAANJGlzSW5zdGFuY2VPZnNxAH4ADClwQkZ0AA9pbXBsZW1lbnRhdGlvbnNzcQB+AAwdjIlfdAACbGFzcQB+AAxbWlx4dAAHbGlmdFJlcHNxAH4ADAjE+QF0AAlub3RpZnlBbGxzcQB+AAzDO7FCdAAMaXNJbnN0YW5jZU9mc3EAfgAMgmKqH3QAAj09c3EAfgAMT/guUnQABWNsb25lc3EAfgAMVMNiaHQACHRvU3RyaW5nc3EAfgAM/t4UZnQAAiE9c3EAfgAMl69tmXQACGdldENsYXNzc3EAfgAMydwyj3QAAm5lc3EAfgAM6WSVAHQAAmVxc3EAfgAMT8HwxHQAAiMjc3EAfgAMY/BRnXQACGZpbmFsaXplc3EAfgAMjy+R/HQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4ARXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQADmRzbC5sYS5wYWNrYWdldXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAXQAJ3NjYWxhLnJlZmxlY3QubWFjcm9zLmludGVybmFsLm1hY3JvSW1wbHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AX3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AXgBwc3EAfgBjc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AEVMAAlpbmhlcml0ZWRxAH4ARUwAB3BhcmVudHNxAH4ARXhxAH4AZ3NxAH4AXgBwc3EAfgBjdXEAfgBAAAAAAHNxAH4AXgBwc3EAfgBjdXEAfgBAAAAAAHNxAH4AXgBwc3EAfgBjdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBmdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBmc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCDdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCEc3EAfgB3dAADQW55c3EAfgB7c3EAfgB+dXEAfgCBAAAAAnNxAH4Ag3QABXNjYWxhcQB+AIp1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAnNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AANkc2xzcQB+AJR0AAZkc2wubGFzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAUiu7yn3dXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUem2xtaMK5eaECmuwwFGlgCQiPO0=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala ->\\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHCqoYMyAXNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAK3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cNUMtm90AAZub3RpZnlzcQB+AAzoY8IudAAMZXZlbk9kZFByaW50c3EAfgAMTjLAmHQAB3BhY2thZ2VzcQB+AAz6fyB5dAAaX2xpZnRFdmVuT2RkT3B0aW1pemVkUHJpbnRzcQB+AAwe8W4AdAAEd2FpdHNxAH4ADCuPpRh0ABlyZXR1cm5pbmdJbmNyZW1lbnRlZFByaW50c3EAfgAMezEdynQADSRhc0luc3RhbmNlT2ZzcQB+AAzvn8aJdAAPcmVxRHluYW1pY1ByaW50c3EAfgAMMmfD0XQAEF9saWZ0U3RhZ2VkUHJpbnRzcQB+AAwcpS/PdAAGZXF1YWxzc3EAfgAM86SEw3QAFG9wdGlvbmFsRHluYW1pY1ByaW50c3EAfgAMb+lZVXQADGFzSW5zdGFuY2VPZnNxAH4ADLkJjXZ0AAVwcmludHNxAH4ADDgmy7F0ABZsaWZ0VmFyVHlwZVN0YWIxMFByaW50c3EAfgAMXYWDzHQAGWxpZnRFdmVuT2RkT3B0aW1pemVkUHJpbnRzcQB+AAzh2jFfdAAMc3luY2hyb25pemVkc3EAfgAMdZvbMXQADSRpc0luc3RhbmNlT2ZzcQB+AAzlDDRfdAAoX2xpZnRWYXJUeXBlSW5pdGlhbGx5VW5zdGFibGVTdGFiMTBQcmludHNxAH4ADKAq64N0ABJsaWZ0UmV0dXJuaW5nUHJpbnRzcQB+AAyODTvqdAASX2xpZnRVbnN0YWdlZFByaW50c3EAfgAM/QFKrXQACW5vdGlmeUFsbHNxAH4ADBXsByp0AAVkZWJ1Z3NxAH4ADDaLjpx0AAxpc0luc3RhbmNlT2ZzcQB+AAzyOHuQdAAPb3B0aW1pemluZ1ByaW50c3EAfgAMpYmTLHQAE29wdGlvbmFsU3RhdGljUHJpbnRzcQB+AAxf98REdAACPT1zcQB+AAyOv1sPdAAPbGlmdFN0YWdlZFByaW50c3EAfgAMFHiwfHQABWNsb25lc3EAfgAMojRmgnQAJ2xpZnRWYXJUeXBlSW5pdGlhbGx5VW5zdGFibGVTdGFiMTBQcmludHNxAH4ADLLTc7J0ABNfbGlmdFJldHVybmluZ1ByaW50c3EAfgAMsAk9XXQAF19saWZ0VmFyVHlwZVN0YWIxMFByaW50c3EAfgAMZBDbMXQACHRvU3RyaW5nc3EAfgAMtVKtHHQAAiE9c3EAfgAMM1jdeXQADnJlcVN0YXRpY1ByaW50c3EAfgAMFmo+mnQACGdldENsYXNzc3EAfgAMVyZ2cHQAEmxpZnRPcHRpbWl6ZWRQcmludHNxAH4ADPar54t0ABFsaWZ0VW5zdGFnZWRQcmludHNxAH4ADMDgVDl0AAJuZXNxAH4ADCs11MF0AAJlcXNxAH4ADP5T/PF0AAIjI3NxAH4ADJHibUp0AAhmaW5hbGl6ZXNxAH4ADIQodQ10AAhoYXNoQ29kZXNxAH4ADGjxOTp0ABNfbGlmdE9wdGltaXplZFByaW50c3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AbXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAEWRzbC5wcmludC5wYWNrYWdldXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAXQAJ3NjYWxhLnJlZmxlY3QubWFjcm9zLmludGVybmFsLm1hY3JvSW1wbHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4Ah3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AhgBwc3EAfgCLc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AG1MAAlpbmhlcml0ZWRxAH4AbUwAB3BhcmVudHNxAH4AbXhxAH4Aj3NxAH4AhgBwc3EAfgCLdXEAfgBoAAAAAHNxAH4AhgBwc3EAfgCLdXEAfgBoAAAAAHNxAH4AhgBwc3EAfgCLdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgCOdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgCOc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCrdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCsc3EAfgCfdAADQW55c3EAfgCjc3EAfgCmdXEAfgCpAAAAAnNxAH4Aq3QABXNjYWxhcQB+ALJ1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAnNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AANkc2xzcQB+ALx0AAlkc2wucHJpbnRzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAUiu7yn3dXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAU6X2zQnskqxk9kDZKDdUFNf+aNog=\nexternal apis:\n21 items\nch.epfl.yinyang.YYTransformer ->\\nch.epfl.yinyang.YYTransformer$ ->\\nch.epfl.yinyang.api.BaseYinYang ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDIPVgbAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAIXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cHPVDmt0AAtCYXNlWWluWWFuZ3NxAH4ADDMcrNh0AAZub3RpZnlzcQB+AAz0UmTOdAAEd2FpdHNxAH4ADAMfzJJ0AA0kYXNJbnN0YW5jZU9mc3EAfgAMNe+sxHQAD2NvbXBpbGF0aW9uVmFyc3NxAH4ADBDHMZB0AAZlcXVhbHNzcQB+AAx6n2oJdAATQmFzZVlpbllhbmdNYW5pZmVzdHNxAH4ADH9MWOF0AAxhc0luc3RhbmNlT2ZzcQB+AAzBafwwdAALcnVudGltZVR5cGVzcQB+AAy242gYdAANTWFuaWZlc3RCYXNlZHNxAH4ADC9uhed0AAxzeW5jaHJvbml6ZWRzcQB+AAw9YleldAANJGlzSW5zdGFuY2VPZnNxAH4ADPwm6wZ0AAlub3RpZnlBbGxzcQB+AAzQnYoHdAASQmFzZVlpbllhbmdUeXBlVGFnc3EAfgAMKfpjaXQADGlzSW5zdGFuY2VPZnNxAH4ADJJ597V0AAVtaXhlZHNxAH4ADN0C+p50AAY8aW5pdD5zcQB+AAwHw3zKdAAMTGlmdEV2aWRlbmNlc3EAfgAMAlSSzXQAAj09c3EAfgAMLoWcDnQAB1R5cGVSZXBzcQB+AAzX50ZDdAAFY2xvbmVzcQB+AAwhqZ1KdAAGJGluaXQkc3EAfgAM6i1K6XQADFR5cGVUYWdCYXNlZHNxAH4ADGDhTdd0AAh0b1N0cmluZ3NxAH4ADNab8fh0AAIhPXNxAH4ADEczNpx0AAhnZXRDbGFzc3NxAH4ADJM+7tx0AARob2xlc3EAfgAMnGdU/nQAAm5lc3EAfgAM9kSTTnQABGxpZnRzcQB+AAxuj6JedAACZXFzcQB+AAxOGATGdAACIyNzcQB+AAyQ/8u5dAAIZmluYWxpemVzcQB+AAxx8d3ndAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAAFc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBZeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAfY2guZXBmbC55aW55YW5nLmFwaS5CYXNlWWluWWFuZ3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAXNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBwc3EAfgBxAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBZTAAJaW5oZXJpdGVkcQB+AFlMAAdwYXJlbnRzcQB+AFl4cQB+AHhzcQB+AHEBdXEAfgBUAAAAAHBzcQB+AHEBdXEAfgBUAAAAAHBzcQB+AHEBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB3dAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB3c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCQdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCRc3EAfgCEdAADQW55c3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHQABXNjYWxhcQB+AJdwcHNxAH4AVnEAfgBjdXEAfgBkAAAAAHNxAH4AZgF0ACBjaC5lcGZsLnlpbnlhbmcuYXBpLlR5cGVUYWdCYXNlZHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAACc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAIWNoLmVwZmwueWlueWFuZy5hcGkuTWFuaWZlc3RCYXNlZHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAACc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAJ2NoLmVwZmwueWlueWFuZy5hcGkuQmFzZVlpbllhbmdNYW5pZmVzdHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAAEc3EAfgCEdAANTWFuaWZlc3RCYXNlZHNxAH4AiHNxAH4Ai3VxAH4AjgAAAAVzcQB+AJB0AAJjaHNxAH4AkHQABGVwZmxzcQB+AJB0AAd5aW55YW5nc3EAfgCQdAADYXBpcQB+AJdzcQB+AIR0AAtCYXNlWWluWWFuZ3EAfgDkc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAJmNoLmVwZmwueWlueWFuZy5hcGkuQmFzZVlpbllhbmdUeXBlVGFndXEAfgBpAAAAAHEAfgBtdXEAfgBvAAAAAHNxAH4AcQFxAH4AeXBzcQB+AHEBc3EAfgB7c3EAfgBxAXVxAH4AVAAAAABwc3EAfgBxAXVxAH4AVAAAAABwc3EAfgBxAXVxAH4AggAAAARzcQB+AIR0AAxUeXBlVGFnQmFzZWRzcQB+AIhzcQB+AIt1cQB+AI4AAAAFc3EAfgCQdAACY2hzcQB+AJB0AARlcGZsc3EAfgCQdAAHeWlueWFuZ3NxAH4AkHEAfgDucQB+AJdzcQB+AIR0AAtCYXNlWWluWWFuZ3EAfgENc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3BwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAATY2guZXBmbC55aW55YW5nLmFwaXNxAH4BJnQAAmNoc3EAfgEmdAAHY2guZXBmbHNxAH4BJnQAD2NoLmVwZmwueWlueWFuZ3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vGeN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABLL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy95aW4teWFuZy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAULhD0NULP2AT6lYyuly5NjluMcAE=\nch.epfl.yinyang.api.BaseYinYangTypeTag ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDIPVgbAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAIXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cHPVDmt0AAtCYXNlWWluWWFuZ3NxAH4ADDMcrNh0AAZub3RpZnlzcQB+AAz0UmTOdAAEd2FpdHNxAH4ADAMfzJJ0AA0kYXNJbnN0YW5jZU9mc3EAfgAMNe+sxHQAD2NvbXBpbGF0aW9uVmFyc3NxAH4ADBDHMZB0AAZlcXVhbHNzcQB+AAx6n2oJdAATQmFzZVlpbllhbmdNYW5pZmVzdHNxAH4ADH9MWOF0AAxhc0luc3RhbmNlT2ZzcQB+AAzBafwwdAALcnVudGltZVR5cGVzcQB+AAy242gYdAANTWFuaWZlc3RCYXNlZHNxAH4ADC9uhed0AAxzeW5jaHJvbml6ZWRzcQB+AAw9YleldAANJGlzSW5zdGFuY2VPZnNxAH4ADPwm6wZ0AAlub3RpZnlBbGxzcQB+AAzQnYoHdAASQmFzZVlpbllhbmdUeXBlVGFnc3EAfgAMKfpjaXQADGlzSW5zdGFuY2VPZnNxAH4ADJJ597V0AAVtaXhlZHNxAH4ADN0C+p50AAY8aW5pdD5zcQB+AAwHw3zKdAAMTGlmdEV2aWRlbmNlc3EAfgAMAlSSzXQAAj09c3EAfgAMLoWcDnQAB1R5cGVSZXBzcQB+AAzX50ZDdAAFY2xvbmVzcQB+AAwhqZ1KdAAGJGluaXQkc3EAfgAM6i1K6XQADFR5cGVUYWdCYXNlZHNxAH4ADGDhTdd0AAh0b1N0cmluZ3NxAH4ADNab8fh0AAIhPXNxAH4ADEczNpx0AAhnZXRDbGFzc3NxAH4ADJM+7tx0AARob2xlc3EAfgAMnGdU/nQAAm5lc3EAfgAM9kSTTnQABGxpZnRzcQB+AAxuj6JedAACZXFzcQB+AAxOGATGdAACIyNzcQB+AAyQ/8u5dAAIZmluYWxpemVzcQB+AAxx8d3ndAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAAFc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBZeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAfY2guZXBmbC55aW55YW5nLmFwaS5CYXNlWWluWWFuZ3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAXNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBwc3EAfgBxAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBZTAAJaW5oZXJpdGVkcQB+AFlMAAdwYXJlbnRzcQB+AFl4cQB+AHhzcQB+AHEBdXEAfgBUAAAAAHBzcQB+AHEBdXEAfgBUAAAAAHBzcQB+AHEBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB3dAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB3c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCQdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCRc3EAfgCEdAADQW55c3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHQABXNjYWxhcQB+AJdwcHNxAH4AVnEAfgBjdXEAfgBkAAAAAHNxAH4AZgF0ACBjaC5lcGZsLnlpbnlhbmcuYXBpLlR5cGVUYWdCYXNlZHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAACc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAIWNoLmVwZmwueWlueWFuZy5hcGkuTWFuaWZlc3RCYXNlZHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAACc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAJ2NoLmVwZmwueWlueWFuZy5hcGkuQmFzZVlpbllhbmdNYW5pZmVzdHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAAEc3EAfgCEdAANTWFuaWZlc3RCYXNlZHNxAH4AiHNxAH4Ai3VxAH4AjgAAAAVzcQB+AJB0AAJjaHNxAH4AkHQABGVwZmxzcQB+AJB0AAd5aW55YW5nc3EAfgCQdAADYXBpcQB+AJdzcQB+AIR0AAtCYXNlWWluWWFuZ3EAfgDkc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAJmNoLmVwZmwueWlueWFuZy5hcGkuQmFzZVlpbllhbmdUeXBlVGFndXEAfgBpAAAAAHEAfgBtdXEAfgBvAAAAAHNxAH4AcQFxAH4AeXBzcQB+AHEBc3EAfgB7c3EAfgBxAXVxAH4AVAAAAABwc3EAfgBxAXVxAH4AVAAAAABwc3EAfgBxAXVxAH4AggAAAARzcQB+AIR0AAxUeXBlVGFnQmFzZWRzcQB+AIhzcQB+AIt1cQB+AI4AAAAFc3EAfgCQdAACY2hzcQB+AJB0AARlcGZsc3EAfgCQdAAHeWlueWFuZ3NxAH4AkHEAfgDucQB+AJdzcQB+AIR0AAtCYXNlWWluWWFuZ3EAfgENc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3BwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAATY2guZXBmbC55aW55YW5nLmFwaXNxAH4BJnQAAmNoc3EAfgEmdAAHY2guZXBmbHNxAH4BJnQAD2NoLmVwZmwueWlueWFuZ3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vGeN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABLL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy95aW4teWFuZy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAULhD0NULP2AT6lYyuly5NjluMcAE=\nch.epfl.yinyang.api.CodeGenerator ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHBABb5xAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAGHNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cOr06QR0AAZub3RpZnlzcQB+AAxHIiZgdAAEd2FpdHNxAH4ADIOYGkR0AA0kYXNJbnN0YW5jZU9mc3EAfgAMafb3y3QABmVxdWFsc3NxAH4ADOHRi7t0AA1Db2RlR2VuZXJhdG9yc3EAfgAMkAJlqnQADGdlbmVyYXRlQ29kZXNxAH4ADN8x4rl0AAxhc0luc3RhbmNlT2ZzcQB+AAyBFNtFdAAMc3luY2hyb25pemVkc3EAfgAMmaCcZnQADSRpc0luc3RhbmNlT2ZzcQB+AAw95unmdAAHY29tcGlsZXNxAH4ADLhzSet0AAlub3RpZnlBbGxzcQB+AAyr6uFadAAMaXNJbnN0YW5jZU9mc3EAfgAMYX2kGHQAAj09c3EAfgAM04FJLnQAEWNvbXBpbGUkZGVmYXVsdCQxc3EAfgAMldMdD3QABWNsb25lc3EAfgAMZRQ+8HQAFmdlbmVyYXRlQ29kZSRkZWZhdWx0JDJzcQB+AAx9ZGnSdAAIdG9TdHJpbmdzcQB+AAxmhIpydAACIT1zcQB+AAz5uQjedAAIZ2V0Q2xhc3NzcQB+AAzxOfbTdAACbmVzcQB+AAzChjDgdAACZXFzcQB+AAyOvpmVdAACIyNzcQB+AAw7dqZkdAAIZmluYWxpemVzcQB+AAwvdadvdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBHeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAhY2guZXBmbC55aW55YW5nLmFwaS5Db2RlR2VuZXJhdG9ydXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHABc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHBzcQB+AF8Bc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AEdMAAlpbmhlcml0ZWRxAH4AR0wAB3BhcmVudHNxAH4AR3hxAH4AZnNxAH4AXwF1cQB+AEIAAAAAcHNxAH4AXwF1cQB+AEIAAAAAcHNxAH4AXwF1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGV0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGVzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AH50AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AH9zcQB+AHJ0AANBbnlzcQB+AHZzcQB+AHl1cQB+AHwAAAACc3EAfgB+dAAFc2NhbGFxAH4AhXBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAATY2guZXBmbC55aW55YW5nLmFwaXNxAH4Aj3QAAmNoc3EAfgCPdAAHY2guZXBmbHNxAH4Aj3QAD2NoLmVwZmwueWlueWFuZ3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vGeN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABLL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy95aW4teWFuZy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUf17O2j08kyxCGH0x2K1ooiSiAFg=\nch.epfl.yinyang.api.CompVar$ ->\\nch.epfl.yinyang.api.FullyStaged ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHBlLE75AHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cJ2d6Yt0AAZub3RpZnlzcQB+AAzo9mswdAAEd2FpdHNxAH4ADAJAiZV0AA0kYXNJbnN0YW5jZU9mc3EAfgAMTh/LK3QAD2NvbXBpbGF0aW9uVmFyc3NxAH4ADC2Kt5N0AAZlcXVhbHNzcQB+AAwC+UlldAAMYXNJbnN0YW5jZU9mc3EAfgAMPDiaPnQADHN5bmNocm9uaXplZHNxAH4ADEoIrB10AA0kaXNJbnN0YW5jZU9mc3EAfgAMUxQcLXQACW5vdGlmeUFsbHNxAH4ADMSaFcp0AAxpc0luc3RhbmNlT2ZzcQB+AAwsRdIOdAACPT1zcQB+AAzykaTVdAALRnVsbHlTdGFnZWRzcQB+AAyL20eLdAAFY2xvbmVzcQB+AAxPd8ymdAAGJGluaXQkc3EAfgAMChkjd3QACHRvU3RyaW5nc3EAfgAMJgbWlHQAAiE9c3EAfgAMaePlcHQACGdldENsYXNzc3EAfgAMYWdDfnQAAm5lc3EAfgAMee5OPXQAAmVxc3EAfgAM1FYNynQAAiMjc3EAfgAMaCfLZXQACGZpbmFsaXplc3EAfgAMxRKJqXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQ3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAXQAH2NoLmVwZmwueWlueWFuZy5hcGkuRnVsbHlTdGFnZWR1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAVUcmFpdHVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cAFzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwcHNxAH4AWwFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQ0wACWluaGVyaXRlZHEAfgBDTAAHcGFyZW50c3EAfgBDeHEAfgBic3EAfgBbAXVxAH4APgAAAABwc3EAfgBbAXVxAH4APgAAAABwc3EAfgBbAXVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AYXQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AYXNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AenQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4Ae3NxAH4AbnQAA0FueXNxAH4AcnNxAH4AdXVxAH4AeAAAAAJzcQB+AHp0AAVzY2FsYXEAfgCBcHB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAABHNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0ABNjaC5lcGZsLnlpbnlhbmcuYXBpc3EAfgCLdAACY2hzcQB+AIt0AAdjaC5lcGZsc3EAfgCLdAAPY2guZXBmbC55aW55YW5nc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFIru8Z43VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AEsvVXNlcnMvdmpvdmFub3YvY29kZS95aW4teWFuZy9jb21wb25lbnRzL3lpbi15YW5nL3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABR33UBnIhwvncAGU/DNQwFTNnoVRA==\nch.epfl.yinyang.api.FullyUnstaged ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHBkNUJbAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cPBFg+h0AAZub3RpZnlzcQB+AAyqVzp4dAAEd2FpdHNxAH4ADAews1l0AA0kYXNJbnN0YW5jZU9mc3EAfgAMJENP7nQAD2NvbXBpbGF0aW9uVmFyc3NxAH4ADHto5w10AAZlcXVhbHNzcQB+AAzMfJm/dAAMYXNJbnN0YW5jZU9mc3EAfgAMJ6g99HQADHN5bmNocm9uaXplZHNxAH4ADFlSQsl0AA0kaXNJbnN0YW5jZU9mc3EAfgAM3w1La3QACW5vdGlmeUFsbHNxAH4ADIPOfmt0AAxpc0luc3RhbmNlT2ZzcQB+AAzDidzTdAANRnVsbHlVbnN0YWdlZHNxAH4ADCRt+UV0AAI9PXNxAH4ADD2dViR0AAVjbG9uZXNxAH4ADOcF21t0AAYkaW5pdCRzcQB+AAxFt0/WdAAIdG9TdHJpbmdzcQB+AAweGzJLdAACIT1zcQB+AAz70Ey3dAAIZ2V0Q2xhc3NzcQB+AAzKoc/idAACbmVzcQB+AAzPmkICdAACZXFzcQB+AAwA9kVqdAACIyNzcQB+AAyOASTydAAIZmluYWxpemVzcQB+AAxlZvF4dAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBDeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAhY2guZXBmbC55aW55YW5nLmFwaS5GdWxseVVuc3RhZ2VkdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHABc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHBzcQB+AFsBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AENMAAlpbmhlcml0ZWRxAH4AQ0wAB3BhcmVudHNxAH4AQ3hxAH4AYnNxAH4AWwF1cQB+AD4AAAAAcHNxAH4AWwF1cQB+AD4AAAAAcHNxAH4AWwF1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGF0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGFzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AHp0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AHtzcQB+AG50AANBbnlzcQB+AHJzcQB+AHV1cQB+AHgAAAACc3EAfgB6dAAFc2NhbGFxAH4AgXBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAATY2guZXBmbC55aW55YW5nLmFwaXNxAH4Ai3QAAmNoc3EAfgCLdAAHY2guZXBmbHNxAH4Ai3QAD2NoLmVwZmwueWlueWFuZ3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vGeN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABLL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy95aW4teWFuZy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUvZs+8UvT2QDarPXB1FQZQlteM1w=\nch.epfl.yinyang.api.Interpreted ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHC8IYWQAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cOu5t/J0AAZub3RpZnlzcQB+AAywIuqPdAAEd2FpdHNxAH4ADF7FFr90AA0kYXNJbnN0YW5jZU9mc3EAfgAMIuG5OHQABmVxdWFsc3NxAH4ADIgq/t90AAxhc0luc3RhbmNlT2ZzcQB+AAyrG3JpdAAMc3luY2hyb25pemVkc3EAfgAMvR8DjXQADSRpc0luc3RhbmNlT2ZzcQB+AAyAXtWrdAAJbm90aWZ5QWxsc3EAfgAMijFQqHQADGlzSW5zdGFuY2VPZnNxAH4ADCeskjF0AAtJbnRlcnByZXRlZHNxAH4ADPEDvyl0AAI9PXNxAH4ADEyc1g50AAVjbG9uZXNxAH4ADHiAUgJ0AAVyZXNldHNxAH4ADGLHBPF0AAh0b1N0cmluZ3NxAH4ADLYmcd10AAIhPXNxAH4ADFZ+MY50AAhnZXRDbGFzc3NxAH4ADB7AM810AAJuZXNxAH4ADMWNKyN0AAJlcXNxAH4ADBZUyKF0AAlpbnRlcnByZXRzcQB+AAwPHxF+dAACIyNzcQB+AAzy9ycTdAAIZmluYWxpemVzcQB+AAyWFqxrdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBDeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAfY2guZXBmbC55aW55YW5nLmFwaS5JbnRlcnByZXRlZHVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAXNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBwc3EAfgBbAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBDTAAJaW5oZXJpdGVkcQB+AENMAAdwYXJlbnRzcQB+AEN4cQB+AGJzcQB+AFsBdXEAfgA+AAAAAHBzcQB+AFsBdXEAfgA+AAAAAHBzcQB+AFsBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBhdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBhc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgB6dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB7c3EAfgBudAADQW55c3EAfgByc3EAfgB1dXEAfgB4AAAAAnNxAH4AenQABXNjYWxhcQB+AIFwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAEc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAE2NoLmVwZmwueWlueWFuZy5hcGlzcQB+AIt0AAJjaHNxAH4Ai3QAB2NoLmVwZmxzcQB+AIt0AA9jaC5lcGZsLnlpbnlhbmdzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAUiu7xnjdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQASy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMveWluLXlhbmcvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFLGKp5fxSoA/Tv84QDRAazMtz2FD\nch.epfl.yinyang.api.NonCompVar$ ->\\nch.epfl.yinyang.api.OptionalDynamicCompVar ->\\nch.epfl.yinyang.api.OptionalDynamicCompVar$ ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHBFNV8CAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAANHNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cCkNPoB0AAZub3RpZnlzcQB+AAyJHqiKdAAHdW5hcHBseXNxAH4ADLsTsFx0ABZSZXF1aXJlZER5bmFtaWNDb21wVmFyc3EAfgAMziQylXQABHdhaXRzcQB+AAxidQAedAAOY29weSRkZWZhdWx0JDJzcQB+AAzyuK8bdAANJGFzSW5zdGFuY2VPZnNxAH4ADEUL0F90AAlyZXFLZXlzJDFzcQB+AAyygOzwdAAHb3B0S2V5c3NxAH4ADPl+YQ50AAxwcm9kdWN0QXJpdHlzcQB+AAwg+x4sdAAGZXF1YWxzc3EAfgAMCVgP83QACE9wdGlvbmFsc3EAfgAMGj127XQACW9wdEtleXMkMXNxAH4ADGVRtFB0AAxhc0luc3RhbmNlT2ZzcQB+AAyX+UjedAAMc3luY2hyb25pemVkc3EAfgAMzu2kuHQAB0R5bmFtaWNzcQB+AAx75QMzdAAHQ29tcFZhcnNxAH4ADD1FG3t0ABVSZXF1aXJlZFN0YXRpY0NvbXBWYXJzcQB+AAyDU6lWdAANJGlzSW5zdGFuY2VPZnNxAH4ADMH7hJB0ABZPcHRpb25hbER5bmFtaWNDb21wVmFyc3EAfgAMhKgQ4HQACGNhbkVxdWFsc3EAfgAMr2LrynQACFJlcXVpcmVkc3EAfgAMpteEE3QADXByb2R1Y3RQcmVmaXhzcQB+AAyYBWMtdAAJbm90aWZ5QWxsc3EAfgAMXEUIoXQAC3JlYWRSZXNvbHZlc3EAfgAMNZQD7HQADGlzSW5zdGFuY2VPZnNxAH4ADPHgwVZ0AAZTdGF0aWNzcQB+AAxVBy2PdAAHVmFyVHlwZXNxAH4ADBldSuF0AAY8aW5pdD5zcQB+AAz+Et7TdAAKTm9uQ29tcFZhcnNxAH4ADE81pjZ0AAVhcHBseXNxAH4ADGivNO90AAI9PXNxAH4ADCBryut0AAhlcXVhbGl0eXNxAH4ADGT3VzZ0AAVjbG9uZXNxAH4ADBdN0m90AAVHdWFyZHNxAH4ADBHZKWF0AARjb3B5c3EAfgAMFGarBnQACmdldFJlcUtleXNzcQB+AAwbz2ujdAAIdG9TdHJpbmdzcQB+AAxoQ1SldAACIT1zcQB+AAymwyd/dAAIZ2V0Q2xhc3NzcQB+AAy4xe1ydAAHcmVxS2V5c3NxAH4ADB3eTE50AAVndWFyZHNxAH4ADHyAHdJ0AA5jb3B5JGRlZmF1bHQkMXNxAH4ADIcXWl90ABVPcHRpb25hbFN0YXRpY0NvbXBWYXJzcQB+AAzzxFEjdAACbmVzcQB+AAz6jXwldAACZXFzcQB+AAz6Vw4FdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMw6KEvnQAA2FuZHNxAH4ADO8F5fJ0AApnZXRPcHRLZXlzc3EAfgAMTT7wzXQAAiMjc3EAfgAM21VVdXQACGZpbmFsaXplc3EAfgAMYoCeaHQADnByb2R1Y3RFbGVtZW50c3EAfgAMuTYNtXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAEXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4Af3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAXQAG2NoLmVwZmwueWlueWFuZy5hcGkuVmFyVHlwZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAXNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBwc3EAfgCXAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgB/TAAJaW5oZXJpdGVkcQB+AH9MAAdwYXJlbnRzcQB+AH94cQB+AJ5zcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgCddAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgCdc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgC2dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgC3c3EAfgCqdAADQW55c3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnQABXNjYWxhcQB+AL1wcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAB0AB5jaC5lcGZsLnlpbnlhbmcuYXBpLk5vbkNvbXBWYXJ1cQB+AI8AAAAAcQB+AJN1cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAAB3NxAH4AqnQADFNlcmlhbGl6YWJsZXNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqdAAHUHJvZHVjdHEAfgDWc3EAfgCqdAAGRXF1YWxzcQB+ANZzcQB+AKp0AAdWYXJUeXBlc3EAfgCuc3EAfgCxdXEAfgC0AAAABXNxAH4AtnQAAmNoc3EAfgC2dAAEZXBmbHNxAH4AtnQAB3lpbnlhbmdzcQB+ALZ0AANhcGlxAH4AvXNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+ANZwcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAF0ABtjaC5lcGZsLnlpbnlhbmcuYXBpLkNvbXBWYXJ1cQB+AI8AAAAAfnEAfgCRdAAFVHJhaXR1cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAAA3NxAH4AqnQAB1ZhclR5cGVzcQB+AK5zcQB+ALF1cQB+ALQAAAAFc3EAfgC2dAACY2hzcQB+ALZ0AARlcGZsc3EAfgC2dAAHeWlueWFuZ3NxAH4AtnEAfgDxcQB+AL1zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3NxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9cHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwAdAAbY2guZXBmbC55aW55YW5nLmFwaS5Db21wVmFydXEAfgCPAAAAAH5xAH4AkXQABk1vZHVsZXVxAH4AlQAAAABzcQB+AJcBcQB+AJ9wc3EAfgCXAXNxAH4AoXNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AKgAAAACc3EAfgCqcQB+AK1zcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZxAH4Au3EAfgC9c3EAfgCqcQB+AL9zcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXBwc3EAfgB8cQB+AIl1cQB+AIoAAAAAc3EAfgCMAXQAHGNoLmVwZmwueWlueWFuZy5hcGkuT3B0aW9uYWx1cQB+AI8AAAAAcQB+AP51cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAAAnNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/c3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1wcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAF0ABxjaC5lcGZsLnlpbnlhbmcuYXBpLlJlcXVpcmVkdXEAfgCPAAAAAHEAfgD+dXEAfgCVAAAAAHNxAH4AlwFxAH4An3BzcQB+AJcBc3EAfgChc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AqAAAAAJzcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3NxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9cHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwBdAAaY2guZXBmbC55aW55YW5nLmFwaS5TdGF0aWN1cQB+AI8AAAAAcQB+AP51cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAAAnNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/c3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1wcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAF0ABtjaC5lcGZsLnlpbnlhbmcuYXBpLkR5bmFtaWN1cQB+AI8AAAAAcQB+AP51cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAAAnNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/c3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1wcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAB0ACljaC5lcGZsLnlpbnlhbmcuYXBpLk9wdGlvbmFsU3RhdGljQ29tcFZhcnVxAH4AjwAAAABxAH4Ak3VxAH4AlQAAAABzcQB+AJcBcQB+AJ9wc3EAfgCXAXNxAH4AoXNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AKgAAAAKc3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2dAACaW9xAH4AvXNxAH4AqnEAfgDicQB+AbVzcQB+AKp0AAZFcXVhbHNxAH4BtXNxAH4AqnQABlN0YXRpY3NxAH4ArnNxAH4AsXVxAH4AtAAAAAVzcQB+ALZ0AAJjaHNxAH4AtnQABGVwZmxzcQB+ALZ0AAd5aW55YW5nc3EAfgC2cQB+APFxAH4AvXNxAH4AqnQACE9wdGlvbmFscQB+AcVzcQB+AKp0AAdDb21wVmFycQB+AcVzcQB+AKp0AAdWYXJUeXBlcQB+AcVzcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgG1cHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwAdAApY2guZXBmbC55aW55YW5nLmFwaS5PcHRpb25hbFN0YXRpY0NvbXBWYXJ1cQB+AI8AAAAAcQB+ASZ1cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAABHNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1zcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnQAAmlvcQB+AL1zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgHscHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwAdAAqY2guZXBmbC55aW55YW5nLmFwaS5PcHRpb25hbER5bmFtaWNDb21wVmFydXEAfgCPAAAAAHEAfgCTdXEAfgCVAAAAAHNxAH4AlwFxAH4An3BzcQB+AJcBc3EAfgChc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AqAAAAApzcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqcQB+AOJxAH4CDnNxAH4AqnQABkVxdWFsc3EAfgIOc3EAfgCqdAAHRHluYW1pY3NxAH4ArnNxAH4AsXVxAH4AtAAAAAVzcQB+ALZ0AAJjaHNxAH4AtnQABGVwZmxzcQB+ALZ0AAd5aW55YW5nc3EAfgC2cQB+APFxAH4AvXNxAH4AqnQACE9wdGlvbmFscQB+Ah5zcQB+AKp0AAdDb21wVmFycQB+Ah5zcQB+AKp0AAdWYXJUeXBlcQB+Ah5zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgIOcHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwAdAAqY2guZXBmbC55aW55YW5nLmFwaS5PcHRpb25hbER5bmFtaWNDb21wVmFydXEAfgCPAAAAAHEAfgEmdXEAfgCVAAAAAHNxAH4AlwFxAH4An3BzcQB+AJcBc3EAfgChc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AqAAAAARzcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqcQB+AK1zcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZxAH4Au3EAfgC9c3EAfgCqcQB+AL9xAH4CRXBwc3EAfgB8cQB+AIl1cQB+AIoAAAAAc3EAfgCMAHQAKWNoLmVwZmwueWlueWFuZy5hcGkuUmVxdWlyZWRTdGF0aWNDb21wVmFydXEAfgCPAAAAAHEAfgCTdXEAfgCVAAAAAHNxAH4AlwFxAH4An3BzcQB+AJcBc3EAfgChc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AqAAAAApzcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqcQB+AOJxAH4CZ3NxAH4AqnQABkVxdWFsc3EAfgJnc3EAfgCqdAAGU3RhdGljc3EAfgCuc3EAfgCxdXEAfgC0AAAABXNxAH4AtnQAAmNoc3EAfgC2dAAEZXBmbHNxAH4AtnQAB3lpbnlhbmdzcQB+ALZxAH4A8XEAfgC9c3EAfgCqdAAIUmVxdWlyZWRxAH4Cd3NxAH4AqnQAB0NvbXBWYXJxAH4Cd3NxAH4AqnQAB1ZhclR5cGVxAH4Cd3NxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+AmdwcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAB0ACljaC5lcGZsLnlpbnlhbmcuYXBpLlJlcXVpcmVkU3RhdGljQ29tcFZhcnVxAH4AjwAAAABxAH4BJnVxAH4AlQAAAABzcQB+AJcBcQB+AJ9wc3EAfgCXAXNxAH4AoXNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AKgAAAAEc3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2dAACaW9xAH4AvXNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+Ap5wcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAB0ACpjaC5lcGZsLnlpbnlhbmcuYXBpLlJlcXVpcmVkRHluYW1pY0NvbXBWYXJ1cQB+AI8AAAAAcQB+AJN1cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAACnNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1zcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnQAAmlvcQB+AL1zcQB+AKpxAH4A4nEAfgLAc3EAfgCqdAAGRXF1YWxzcQB+AsBzcQB+AKp0AAdEeW5hbWljc3EAfgCuc3EAfgCxdXEAfgC0AAAABXNxAH4AtnQAAmNoc3EAfgC2dAAEZXBmbHNxAH4AtnQAB3lpbnlhbmdzcQB+ALZxAH4A8XEAfgC9c3EAfgCqdAAIUmVxdWlyZWRxAH4C0HNxAH4AqnQAB0NvbXBWYXJxAH4C0HNxAH4AqnQAB1ZhclR5cGVxAH4C0HNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+AsBwcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAB0ACpjaC5lcGZsLnlpbnlhbmcuYXBpLlJlcXVpcmVkRHluYW1pY0NvbXBWYXJ1cQB+AI8AAAAAcQB+ASZ1cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAABHNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1zcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnQAAmlvcQB+AL1zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgL3cHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwAdAAZY2guZXBmbC55aW55YW5nLmFwaS5HdWFyZHVxAH4AjwAAAABxAH4Ak3VxAH4AlQAAAABzcQB+AJcBcQB+AJ9wc3EAfgCXAXNxAH4AoXNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AKgAAAAGc3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2dAACaW9xAH4AvXNxAH4AqnEAfgDicQB+AxlzcQB+AKp0AAZFcXVhbHNxAH4DGXNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+AxlwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAEc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAE2NoLmVwZmwueWlueWFuZy5hcGlzcQB+AzB0AAJjaHNxAH4DMHQAB2NoLmVwZmxzcQB+AzB0AA9jaC5lcGZsLnlpbnlhbmdzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAUiu7xnjdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQASy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMveWluLXlhbmcvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFJtUrNrt8J5CknFPYXuL6bTfLvX4\nch.epfl.yinyang.api.OptionalStaticCompVar ->\\nch.epfl.yinyang.api.OptionalStaticCompVar$ ->\\nch.epfl.yinyang.api.RequiredDynamicCompVar ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHBFNV8CAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAANHNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cCkNPoB0AAZub3RpZnlzcQB+AAyJHqiKdAAHdW5hcHBseXNxAH4ADLsTsFx0ABZSZXF1aXJlZER5bmFtaWNDb21wVmFyc3EAfgAMziQylXQABHdhaXRzcQB+AAxidQAedAAOY29weSRkZWZhdWx0JDJzcQB+AAzyuK8bdAANJGFzSW5zdGFuY2VPZnNxAH4ADEUL0F90AAlyZXFLZXlzJDFzcQB+AAyygOzwdAAHb3B0S2V5c3NxAH4ADPl+YQ50AAxwcm9kdWN0QXJpdHlzcQB+AAwg+x4sdAAGZXF1YWxzc3EAfgAMCVgP83QACE9wdGlvbmFsc3EAfgAMGj127XQACW9wdEtleXMkMXNxAH4ADGVRtFB0AAxhc0luc3RhbmNlT2ZzcQB+AAyX+UjedAAMc3luY2hyb25pemVkc3EAfgAMzu2kuHQAB0R5bmFtaWNzcQB+AAx75QMzdAAHQ29tcFZhcnNxAH4ADD1FG3t0ABVSZXF1aXJlZFN0YXRpY0NvbXBWYXJzcQB+AAyDU6lWdAANJGlzSW5zdGFuY2VPZnNxAH4ADMH7hJB0ABZPcHRpb25hbER5bmFtaWNDb21wVmFyc3EAfgAMhKgQ4HQACGNhbkVxdWFsc3EAfgAMr2LrynQACFJlcXVpcmVkc3EAfgAMpteEE3QADXByb2R1Y3RQcmVmaXhzcQB+AAyYBWMtdAAJbm90aWZ5QWxsc3EAfgAMXEUIoXQAC3JlYWRSZXNvbHZlc3EAfgAMNZQD7HQADGlzSW5zdGFuY2VPZnNxAH4ADPHgwVZ0AAZTdGF0aWNzcQB+AAxVBy2PdAAHVmFyVHlwZXNxAH4ADBldSuF0AAY8aW5pdD5zcQB+AAz+Et7TdAAKTm9uQ29tcFZhcnNxAH4ADE81pjZ0AAVhcHBseXNxAH4ADGivNO90AAI9PXNxAH4ADCBryut0AAhlcXVhbGl0eXNxAH4ADGT3VzZ0AAVjbG9uZXNxAH4ADBdN0m90AAVHdWFyZHNxAH4ADBHZKWF0AARjb3B5c3EAfgAMFGarBnQACmdldFJlcUtleXNzcQB+AAwbz2ujdAAIdG9TdHJpbmdzcQB+AAxoQ1SldAACIT1zcQB+AAymwyd/dAAIZ2V0Q2xhc3NzcQB+AAy4xe1ydAAHcmVxS2V5c3NxAH4ADB3eTE50AAVndWFyZHNxAH4ADHyAHdJ0AA5jb3B5JGRlZmF1bHQkMXNxAH4ADIcXWl90ABVPcHRpb25hbFN0YXRpY0NvbXBWYXJzcQB+AAzzxFEjdAACbmVzcQB+AAz6jXwldAACZXFzcQB+AAz6Vw4FdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMw6KEvnQAA2FuZHNxAH4ADO8F5fJ0AApnZXRPcHRLZXlzc3EAfgAMTT7wzXQAAiMjc3EAfgAM21VVdXQACGZpbmFsaXplc3EAfgAMYoCeaHQADnByb2R1Y3RFbGVtZW50c3EAfgAMuTYNtXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAEXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4Af3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAXQAG2NoLmVwZmwueWlueWFuZy5hcGkuVmFyVHlwZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAXNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBwc3EAfgCXAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgB/TAAJaW5oZXJpdGVkcQB+AH9MAAdwYXJlbnRzcQB+AH94cQB+AJ5zcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgCddAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgCdc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgC2dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgC3c3EAfgCqdAADQW55c3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnQABXNjYWxhcQB+AL1wcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAB0AB5jaC5lcGZsLnlpbnlhbmcuYXBpLk5vbkNvbXBWYXJ1cQB+AI8AAAAAcQB+AJN1cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAAB3NxAH4AqnQADFNlcmlhbGl6YWJsZXNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqdAAHUHJvZHVjdHEAfgDWc3EAfgCqdAAGRXF1YWxzcQB+ANZzcQB+AKp0AAdWYXJUeXBlc3EAfgCuc3EAfgCxdXEAfgC0AAAABXNxAH4AtnQAAmNoc3EAfgC2dAAEZXBmbHNxAH4AtnQAB3lpbnlhbmdzcQB+ALZ0AANhcGlxAH4AvXNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+ANZwcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAF0ABtjaC5lcGZsLnlpbnlhbmcuYXBpLkNvbXBWYXJ1cQB+AI8AAAAAfnEAfgCRdAAFVHJhaXR1cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAAA3NxAH4AqnQAB1ZhclR5cGVzcQB+AK5zcQB+ALF1cQB+ALQAAAAFc3EAfgC2dAACY2hzcQB+ALZ0AARlcGZsc3EAfgC2dAAHeWlueWFuZ3NxAH4AtnEAfgDxcQB+AL1zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3NxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9cHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwAdAAbY2guZXBmbC55aW55YW5nLmFwaS5Db21wVmFydXEAfgCPAAAAAH5xAH4AkXQABk1vZHVsZXVxAH4AlQAAAABzcQB+AJcBcQB+AJ9wc3EAfgCXAXNxAH4AoXNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AKgAAAACc3EAfgCqcQB+AK1zcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZxAH4Au3EAfgC9c3EAfgCqcQB+AL9zcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXBwc3EAfgB8cQB+AIl1cQB+AIoAAAAAc3EAfgCMAXQAHGNoLmVwZmwueWlueWFuZy5hcGkuT3B0aW9uYWx1cQB+AI8AAAAAcQB+AP51cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAAAnNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/c3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1wcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAF0ABxjaC5lcGZsLnlpbnlhbmcuYXBpLlJlcXVpcmVkdXEAfgCPAAAAAHEAfgD+dXEAfgCVAAAAAHNxAH4AlwFxAH4An3BzcQB+AJcBc3EAfgChc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AqAAAAAJzcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3NxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9cHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwBdAAaY2guZXBmbC55aW55YW5nLmFwaS5TdGF0aWN1cQB+AI8AAAAAcQB+AP51cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAAAnNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/c3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1wcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAF0ABtjaC5lcGZsLnlpbnlhbmcuYXBpLkR5bmFtaWN1cQB+AI8AAAAAcQB+AP51cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAAAnNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/c3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1wcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAB0ACljaC5lcGZsLnlpbnlhbmcuYXBpLk9wdGlvbmFsU3RhdGljQ29tcFZhcnVxAH4AjwAAAABxAH4Ak3VxAH4AlQAAAABzcQB+AJcBcQB+AJ9wc3EAfgCXAXNxAH4AoXNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AKgAAAAKc3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2dAACaW9xAH4AvXNxAH4AqnEAfgDicQB+AbVzcQB+AKp0AAZFcXVhbHNxAH4BtXNxAH4AqnQABlN0YXRpY3NxAH4ArnNxAH4AsXVxAH4AtAAAAAVzcQB+ALZ0AAJjaHNxAH4AtnQABGVwZmxzcQB+ALZ0AAd5aW55YW5nc3EAfgC2cQB+APFxAH4AvXNxAH4AqnQACE9wdGlvbmFscQB+AcVzcQB+AKp0AAdDb21wVmFycQB+AcVzcQB+AKp0AAdWYXJUeXBlcQB+AcVzcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgG1cHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwAdAApY2guZXBmbC55aW55YW5nLmFwaS5PcHRpb25hbFN0YXRpY0NvbXBWYXJ1cQB+AI8AAAAAcQB+ASZ1cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAABHNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1zcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnQAAmlvcQB+AL1zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgHscHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwAdAAqY2guZXBmbC55aW55YW5nLmFwaS5PcHRpb25hbER5bmFtaWNDb21wVmFydXEAfgCPAAAAAHEAfgCTdXEAfgCVAAAAAHNxAH4AlwFxAH4An3BzcQB+AJcBc3EAfgChc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AqAAAAApzcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqcQB+AOJxAH4CDnNxAH4AqnQABkVxdWFsc3EAfgIOc3EAfgCqdAAHRHluYW1pY3NxAH4ArnNxAH4AsXVxAH4AtAAAAAVzcQB+ALZ0AAJjaHNxAH4AtnQABGVwZmxzcQB+ALZ0AAd5aW55YW5nc3EAfgC2cQB+APFxAH4AvXNxAH4AqnQACE9wdGlvbmFscQB+Ah5zcQB+AKp0AAdDb21wVmFycQB+Ah5zcQB+AKp0AAdWYXJUeXBlcQB+Ah5zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgIOcHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwAdAAqY2guZXBmbC55aW55YW5nLmFwaS5PcHRpb25hbER5bmFtaWNDb21wVmFydXEAfgCPAAAAAHEAfgEmdXEAfgCVAAAAAHNxAH4AlwFxAH4An3BzcQB+AJcBc3EAfgChc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AqAAAAARzcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqcQB+AK1zcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZxAH4Au3EAfgC9c3EAfgCqcQB+AL9xAH4CRXBwc3EAfgB8cQB+AIl1cQB+AIoAAAAAc3EAfgCMAHQAKWNoLmVwZmwueWlueWFuZy5hcGkuUmVxdWlyZWRTdGF0aWNDb21wVmFydXEAfgCPAAAAAHEAfgCTdXEAfgCVAAAAAHNxAH4AlwFxAH4An3BzcQB+AJcBc3EAfgChc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AqAAAAApzcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqcQB+AOJxAH4CZ3NxAH4AqnQABkVxdWFsc3EAfgJnc3EAfgCqdAAGU3RhdGljc3EAfgCuc3EAfgCxdXEAfgC0AAAABXNxAH4AtnQAAmNoc3EAfgC2dAAEZXBmbHNxAH4AtnQAB3lpbnlhbmdzcQB+ALZxAH4A8XEAfgC9c3EAfgCqdAAIUmVxdWlyZWRxAH4Cd3NxAH4AqnQAB0NvbXBWYXJxAH4Cd3NxAH4AqnQAB1ZhclR5cGVxAH4Cd3NxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+AmdwcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAB0ACljaC5lcGZsLnlpbnlhbmcuYXBpLlJlcXVpcmVkU3RhdGljQ29tcFZhcnVxAH4AjwAAAABxAH4BJnVxAH4AlQAAAABzcQB+AJcBcQB+AJ9wc3EAfgCXAXNxAH4AoXNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AKgAAAAEc3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2dAACaW9xAH4AvXNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+Ap5wcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAB0ACpjaC5lcGZsLnlpbnlhbmcuYXBpLlJlcXVpcmVkRHluYW1pY0NvbXBWYXJ1cQB+AI8AAAAAcQB+AJN1cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAACnNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1zcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnQAAmlvcQB+AL1zcQB+AKpxAH4A4nEAfgLAc3EAfgCqdAAGRXF1YWxzcQB+AsBzcQB+AKp0AAdEeW5hbWljc3EAfgCuc3EAfgCxdXEAfgC0AAAABXNxAH4AtnQAAmNoc3EAfgC2dAAEZXBmbHNxAH4AtnQAB3lpbnlhbmdzcQB+ALZxAH4A8XEAfgC9c3EAfgCqdAAIUmVxdWlyZWRxAH4C0HNxAH4AqnQAB0NvbXBWYXJxAH4C0HNxAH4AqnQAB1ZhclR5cGVxAH4C0HNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+AsBwcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAB0ACpjaC5lcGZsLnlpbnlhbmcuYXBpLlJlcXVpcmVkRHluYW1pY0NvbXBWYXJ1cQB+AI8AAAAAcQB+ASZ1cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAABHNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1zcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnQAAmlvcQB+AL1zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgL3cHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwAdAAZY2guZXBmbC55aW55YW5nLmFwaS5HdWFyZHVxAH4AjwAAAABxAH4Ak3VxAH4AlQAAAABzcQB+AJcBcQB+AJ9wc3EAfgCXAXNxAH4AoXNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AKgAAAAGc3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2dAACaW9xAH4AvXNxAH4AqnEAfgDicQB+AxlzcQB+AKp0AAZFcXVhbHNxAH4DGXNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+AxlwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAEc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAE2NoLmVwZmwueWlueWFuZy5hcGlzcQB+AzB0AAJjaHNxAH4DMHQAB2NoLmVwZmxzcQB+AzB0AA9jaC5lcGZsLnlpbnlhbmdzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAUiu7xnjdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQASy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMveWluLXlhbmcvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFJtUrNrt8J5CknFPYXuL6bTfLvX4\nch.epfl.yinyang.api.RequiredDynamicCompVar$ ->\\nch.epfl.yinyang.api.RequiredStaticCompVar ->\\nch.epfl.yinyang.api.VarType ->\\nch.epfl.yinyang.api.VirtualAny ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHB3rPWYAXNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAJ3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cB6yyc10AAZub3RpZnlzcQB+AAye4jt9dAAEd2FpdHNxAH4ADLVWkvh0ABJpbmZpeF9hc0luc3RhbmNlT2ZzcQB+AAztTSondAANJGFzSW5zdGFuY2VPZnNxAH4ADCkiIB50AApWaXJ0dWFsQW55c3EAfgAMxbNH33QACGluZml4XyMjc3EAfgAMOhkWDHQACmFueV9lcXVhbHNzcQB+AAzuVAOvdAAGZXF1YWxzc3EAfgAM5Iwvu3QADmluZml4X3RvU3RyaW5nc3EAfgAM1fZjo3QAEGFueV9pc0luc3RhbmNlT2ZzcQB+AAytxieNdAAOaW5maXhfaGFzaENvZGVzcQB+AAyviuThdAAMYXNJbnN0YW5jZU9mc3EAfgAMTc+KwXQADGFueV9oYXNoQ29kZXNxAH4ADLmxOKN0AAxzeW5jaHJvbml6ZWRzcQB+AAyCVpNtdAAGYW55XyMjc3EAfgAMVtU7Y3QADSRpc0luc3RhbmNlT2ZzcQB+AAxOzcltdAASaW5maXhfaXNJbnN0YW5jZU9mc3EAfgAM77np+XQADGFueV90b1N0cmluZ3NxAH4ADGGxsFl0AAlub3RpZnlBbGxzcQB+AAwgHiLgdAAMaXNJbnN0YW5jZU9mc3EAfgAMw+OYuXQABmFueV89PXNxAH4ADIp/Ge90AAZhbnlfIT1zcQB+AAzURNutdAACPT1zcQB+AAxSVDCWdAAFY2xvbmVzcQB+AAxecGnHdAAGJGluaXQkc3EAfgAMjYw1EHQACGluZml4Xz09c3EAfgAMUpXEo3QADGFueV9nZXRDbGFzc3NxAH4ADAfhxt10AA5pbmZpeF9nZXRDbGFzc3NxAH4ADKGhUSB0AAh0b1N0cmluZ3NxAH4ADFHRhJJ0AAIhPXNxAH4ADItfIy10AAhnZXRDbGFzc3NxAH4ADJ1LIRB0AAJuZXNxAH4ADDha1pl0AAxpbmZpeF9lcXVhbHNzcQB+AAwABrSVdAAQYW55X2FzSW5zdGFuY2VPZnNxAH4ADKT591l0AAhpbmZpeF8hPXNxAH4ADO8pcoV0AAJlcXNxAH4ADOSA7Fh0AAIjI3NxAH4ADFyW/k10AAhmaW5hbGl6ZXNxAH4ADLVQSj10AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAJzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AGV4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc8cREyFpnNwkAgABQgAFZmxhZ3N4cAF0AB5jaC5lcGZsLnlpbnlhbmcuYXBpLlZpcnR1YWxBbnl1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAVUcmFpdHVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0ACdzY2FsYS5yZWZsZWN0Lm1hY3Jvcy5pbnRlcm5hbC5tYWNyb0ltcGxzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cABwc3IAIHhzYnRpLlNhZmVMYXp5JCRhbm9uZnVuJHN0cmljdCQxAAAAAAAAAAACAAFMAAd2YWx1ZSQxcQB+AH94cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AH4AcHNxAH4Ag3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBlTAAJaW5oZXJpdGVkcQB+AGVMAAdwYXJlbnRzcQB+AGV4cQB+AIdzcQB+AH4AcHNxAH4Ag3VxAH4AYAAAAABzcQB+AH4AcHNxAH4Ag3VxAH4AYAAAAABzcQB+AH4AcHNxAH4Ag3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AhnQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AhnNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4Ao3QABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4ApHNxAH4Al3QAA0FueXNxAH4Am3NxAH4AnnVxAH4AoQAAAAJzcQB+AKN0AAVzY2FsYXEAfgCqc3EAfgBic3IAEXhzYnRpLmFwaS5Qcml2YXRlU6lggSbp1T4CAAB4cgATeHNidGkuYXBpLlF1YWxpZmllZKq0Xe9UsW0YAgABTAAJcXVhbGlmaWVydAAVTHhzYnRpL2FwaS9RdWFsaWZpZXI7eHEAfgBuc3IAFXhzYnRpLmFwaS5VbnF1YWxpZmllZNw2FLaeLoL1AgAAeHIAE3hzYnRpLmFwaS5RdWFsaWZpZXKzeJSp69ZbJwIAAHhwdXEAfgBwAAAAAHNxAH4AcgB0AB5jaC5lcGZsLnlpbnlhbmcuYXBpLlZpcnR1YWxBbnl1cQB+AHUAAAAAfnEAfgB3dAAGTW9kdWxldXEAfgB7AAAAAHNxAH4AfgBwc3EAfgCDcQB+AIhzcQB+AH4Bc3EAfgCLc3EAfgB+AXVxAH4AYAAAAABwc3EAfgB+AXVxAH4AYAAAAABwc3EAfgB+AHBzcQB+AIN1cQB+AJUAAAACc3EAfgCXcQB+AJpzcQB+AJtzcQB+AJ51cQB+AKEAAAADc3EAfgCjcQB+AKZzcQB+AKNxAH4AqHEAfgCqc3EAfgCXcQB+AKxzcQB+AJtzcQB+AJ51cQB+AKEAAAACc3EAfgCjcQB+ALFxAH4AqnB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAABHNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0ABNjaC5lcGZsLnlpbnlhbmcuYXBpc3EAfgDZdAACY2hzcQB+ANl0AAdjaC5lcGZsc3EAfgDZdAAPY2guZXBmbC55aW55YW5nc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFIru8Z43VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AEsvVXNlcnMvdmpvdmFub3YvY29kZS95aW4teWFuZy9jb21wb25lbnRzL3lpbi15YW5nL3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABS84I6yb5+BCkqJ0ovDCm4fWLnEvg==\nch.epfl.yinyang.typetransformers.GenericTypeTransformer ->\\nch.epfl.yinyang.typetransformers.PolyTransformer ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDRNWLLAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAALXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cJw+dc50AAZub3RpZnlzcQB+AAxyANdydAANcmV3aXJlZFRvVGhpc3NxAH4ADBLVzFt0AAR3YWl0c3EAfgAMD7VtVnQADSRhc0luc3RhbmNlT2ZzcQB+AAz0QxEwdAAMcHJvZHVjdEFyaXR5c3EAfgAM7x71UnQABmVxdWFsc3NxAH4ADPMi+eZ0AAxhc0luc3RhbmNlT2ZzcQB+AAxBRN4CdAAMc3luY2hyb25pemVkc3EAfgAMtUnBpnQADSRpc0luc3RhbmNlT2ZzcQB+AAxBmK0XdAAKVHlwZUFyZ0N0eHNxAH4ADEcWAGZ0AAtUeXBlQ29udGV4dHNxAH4ADODcRpN0AAhjYW5FcXVhbHNxAH4ADA992mR0ABBUeXBlUGFyYW1ldGVyQ3R4c3EAfgAM1YFyjHQADXByb2R1Y3RQcmVmaXhzcQB+AAyeUy1kdAAJbm90aWZ5QWxsc3EAfgAM1ZNTHHQAC3JlYWRSZXNvbHZlc3EAfgAMjxl/YHQABk5vdFZhcnNxAH4ADJld60R0AA5pc0Z1bmN0aW9uVHlwZXNxAH4ADJAoG8x0AAxpc0luc3RhbmNlT2ZzcQB+AAwL5eWudAAGdG9UeXBlc3EAfgAMjm6zqHQABjxpbml0PnNxAH4ADJ76LLx0AAVJc1ZhcnNxAH4ADFNyJkN0AAI9PXNxAH4ADCiox910AAVjbG9uZXNxAH4ADKNwGfx0AAljbGFzc05hbWVzcQB+AAyDRDNWdAAGdmFyQ3R4c3EAfgAMIKGIsHQABiRpbml0JHNxAH4ADE3c1Jh0AA9Qb2x5VHJhbnNmb3JtZXJzcQB+AAyUMkgNdAARY29uc3RydWN0UG9seVRyZWVzcQB+AAwscofJdAAIdG9TdHJpbmdzcQB+AAzi0C05dAACIT1zcQB+AAzDMvlCdAABY3NxAH4ADA6nHJJ0ABBNYXhGdW5jdGlvbkFyaXR5c3EAfgAM7JmDnXQACE90aGVyQ3R4c3EAfgAM0DuWcHQACGdldENsYXNzc3EAfgAMgr6Q0nQAAm5lc3EAfgAMEI8nlHQACXRyYW5zZm9ybXNxAH4ADHi1h/50AAJlcXNxAH4ADE7HiwZ0AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAzoAdkTdAACIyNzcQB+AAz6WuQGdAATUG9seVRyYW5zZm9ybWVyTGlrZXNxAH4ADHsTSyJ0AAhmaW5hbGl6ZXNxAH4ADOmBQL90AA5wcm9kdWN0RWxlbWVudHNxAH4ADIkFJhJ0AAhoYXNoQ29kZXNxAH4ADKksznZ0AApWYXJDb250ZXh0c3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AcXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAXQANGNoLmVwZmwueWlueWFuZy50eXBldHJhbnNmb3JtZXJzLlBvbHlUcmFuc2Zvcm1lckxpa2V1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcmdpVdvjcpBrAgAGWwALYW5ub3RhdGlvbnNxAH4AdkwAAmlkcQB+AA1MAApsb3dlckJvdW5kdAAQTHhzYnRpL2FwaS9UeXBlO1sADnR5cGVQYXJhbWV0ZXJzcQB+AHNMAAp1cHBlckJvdW5kcQB+AIRMAAh2YXJpYW5jZXQAFEx4c2J0aS9hcGkvVmFyaWFuY2U7eHB1cQB+AHwAAAAAdAA2Y2guZXBmbC55aW55YW5nLnR5cGV0cmFuc2Zvcm1lcnMuUG9seVRyYW5zZm9ybWVyTGlrZS5Dc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHQAB05vdGhpbmdzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AItzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAAJzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABXNjYWxhc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJh1cQB+AIEAAAAAc3EAfgCJdAAHQ29udGV4dHNxAH4Aj3NxAH4AknVxAH4AlQAAAAVzcQB+AJdxAH4AmnNxAH4Al3QAB3JlZmxlY3RzcQB+AJd0AAZtYWNyb3NzcQB+AJd0AAhibGFja2JveHEAfgCcfnIAEnhzYnRpLmFwaS5WYXJpYW5jZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACUludmFyaWFudH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhxAH4Aq3QABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAXNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cQB+AItwc3EAfgCzAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBxTAAJaW5oZXJpdGVkcQB+AHFMAAdwYXJlbnRzcQB+AHF4cQB+AIxzcQB+ALMBdXEAfgBsAAAAAHBzcQB+ALMBdXEAfgBsAAAAAHBzcQB+ALMBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcQB+AIl0AAZPYmplY3RzcQB+AI9zcQB+AJJ1cQB+AJUAAAADc3EAfgCXdAAEamF2YXNxAH4Al3QABGxhbmdxAH4AnHNxAH4AiXQAA0FueXNxAH4Aj3NxAH4AknVxAH4AlQAAAAJzcQB+AJdxAH4AmnEAfgCccHBzcQB+AG5xAH4Ae3VxAH4AfAAAAABzcQB+AH4AdAAwY2guZXBmbC55aW55YW5nLnR5cGV0cmFuc2Zvcm1lcnMuUG9seVRyYW5zZm9ybWVydXEAfgCBAAAAAXNxAH4Ag3VxAH4AfAAAAAB0ADJjaC5lcGZsLnlpbnlhbmcudHlwZXRyYW5zZm9ybWVycy5Qb2x5VHJhbnNmb3JtZXIuQ3EAfgCNdXEAfgCBAAAAAHEAfgCecQB+AKx+cQB+AK50AAhDbGFzc0RlZnVxAH4AsQAAAABzcQB+ALMBcQB+ALlwc3EAfgCzAXNxAH4Au3NxAH4AswF1cQB+AGwAAAAAcHNxAH4AswF1cQB+AGwAAAAAcHNxAH4AswF1cQB+AMIAAAAEc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJpemVkFmzuaQPJu38CAAJMAAhiYXNlVHlwZXEAfgCKWwANdHlwZUFyZ3VtZW50c3QAEVtMeHNidGkvYXBpL1R5cGU7eHEAfgCLc3EAfgCJdAATUG9seVRyYW5zZm9ybWVyTGlrZXNxAH4Aj3NxAH4AknVxAH4AlQAAAAVzcQB+AJd0AAJjaHNxAH4Al3QABGVwZmxzcQB+AJd0AAd5aW55YW5nc3EAfgCXdAAQdHlwZXRyYW5zZm9ybWVyc3EAfgCcdXEAfgDCAAAAAXNyABZ4c2J0aS5hcGkuUGFyYW1ldGVyUmVmP9jjOQAsc7ACAAFMAAJpZHEAfgANeHEAfgCLdAAyY2guZXBmbC55aW55YW5nLnR5cGV0cmFuc2Zvcm1lcnMuUG9seVRyYW5zZm9ybWVyLkNzcQB+AOhzcQB+AIl0AA9UeXBlVHJhbnNmb3JtZXJxAH4A7XVxAH4AwgAAAAFxAH4A+nNxAH4AiXEAfgDFc3EAfgCPc3EAfgCSdXEAfgCVAAAAA3NxAH4Al3EAfgDKc3EAfgCXcQB+AMxxAH4AnHNxAH4AiXEAfgDOc3EAfgCPc3EAfgCSdXEAfgCVAAAAAnNxAH4Al3EAfgCacQB+AJxwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAEc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAAmNoc3EAfgENdAAHY2guZXBmbHNxAH4BDXQAD2NoLmVwZmwueWlueWFuZ3NxAH4BDXQAIGNoLmVwZmwueWlueWFuZy50eXBldHJhbnNmb3JtZXJzc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFIru8Z43VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AEsvVXNlcnMvdmpvdmFub3YvY29kZS95aW4teWFuZy9jb21wb25lbnRzL3lpbi15YW5nL3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABRaH4+781TbGniOur8kSRjhzeqe0w==\nsource infos:\n8 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala ->\nAAAAAAAAAAA=\ncompilations:\n43 items\n00 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSILxBRZ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n01 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJU5rzl1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n02 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJVCsdB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n03 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJVCst11cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n04 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJVH/ll1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n05 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJVPDgt1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n06 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJVh05N1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n07 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJV99GN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n08 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJV+Nwp1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n09 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJV+OB91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n10 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJWC7j51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n11 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJWGSJV1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n12 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJ9nKsV1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n13 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJ9vPOR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n14 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJ94V011cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n15 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJ+Ewo51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n16 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJ+FLel1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n17 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJ+FLuJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n18 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJ+Fztt1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n19 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKdKHHN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n20 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKdKhEx1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n21 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKdPPjN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n22 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKfSo8l1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n23 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKfXm4h1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n24 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKfcP7R1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n25 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKjwwwd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n26 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKj3P0d1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n27 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKknQaB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n28 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKk4Jmp1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n29 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKk5RjR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n30 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKwoaHZ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n31 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKwsvxV1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n32 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKwt5I51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n33 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKwujcB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n34 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKwvOa51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n35 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKwwN9B1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n36 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKw0+tN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n37 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7fibh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n38 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7g/yB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n39 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7maaR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n40 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7qU7R1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n41 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7rEHZ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n42 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vKfd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n",
			"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/target/streams/compile/incCompileSetup/$global/streams/inc_compile",
			"file_size": 421535,
			"file_write_time": 130879470840000000,
			"settings":
			{
				"buffer_size": 421535,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "format version: 5\noutput mode:\n1 items\n0 -> single\noutput directories:\n1 items\noutput dir -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes\ncompile options:\n4 items\n0 -> -deprecation\n1 -> -feature\n2 -> -language:higherKinds\n3 -> -language:implicitConversions\njavac options:\n0 items\ncompiler version:\n1 items\n0 -> 2.11.1\ncompile order:\n1 items\n0 -> Mixed\nname hashing:\n1 items\n0 -> true\nproducts:\n72 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$$anonfun$9.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anonfun$10.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$generated$dsllarepVectorDSL1$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$$anonfun$11.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anonfun$12.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$generated$dsllarepVectorDSL2$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$$anonfun$14.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$$typecreator1$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anonfun$15.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$generated$dsllarepVectorDSL3$1$$anonfun$13.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$generated$dsllarepVectorDSL3$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$$anonfun$17.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anonfun$18.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$generated$dsllarepVectorDSL4$1$$anonfun$16.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$generated$dsllarepVectorDSL4$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$$anonfun$22.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anonfun$23.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$19.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$20.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$21.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$$anonfun$24.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anonfun$25.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$generated$dsllarepVectorDSL6$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$$anonfun$26.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anonfun$27.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$generated$dsllarepVectorDSL7$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$$anonfun$28.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$$typecreator2$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anonfun$29.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$generated$dsllarepVectorDSL8$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec.class\nbinary dependencies:\n5 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/.ivy2/cache/junit/junit/jars/junit-4.11.jar\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/.ivy2/cache/org.scalatest/scalatest_2.11/jars/scalatest_2.11-2.1.5.jar\ndirect source dependencies:\n0 items\ndirect external dependencies:\n0 items\npublic inherited source dependencies:\n0 items\npublic inherited external dependencies:\n0 items\nmember reference internal dependencies:\n0 items\nmember reference external dependencies:\n10 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> base.PolymorphicBase\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ch.epfl.yinyang.api.BaseYinYang\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ch.epfl.yinyang.runtime.YYCache\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ch.epfl.yinyang.runtime.YYStorage$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl.la.Vector\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl.la.rep.DoubleDSL\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl.la.rep.IntDSL\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl.la.rep.NumericOps\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl.la.rep.ScalaVirtualizationDSL\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl.la.rep.VectorDSL\ninheritance internal dependencies:\n0 items\ninheritance external dependencies:\n2 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ch.epfl.yinyang.runtime.YYCache\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl.la.rep.VectorDSL\nclass names:\n72 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$$anonfun$9\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anonfun$10\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$generated$dsllarepVectorDSL1$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$$anonfun$11\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anonfun$12\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$generated$dsllarepVectorDSL2$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$$anonfun$14\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$$typecreator1$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anonfun$15\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$generated$dsllarepVectorDSL3$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$generated$dsllarepVectorDSL3$1$$anonfun$13\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$$anonfun$17\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anonfun$18\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$generated$dsllarepVectorDSL4$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$generated$dsllarepVectorDSL4$1$$anonfun$16\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$$anonfun$22\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anonfun$23\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$19\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$20\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$21\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$$anonfun$24\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anonfun$25\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$generated$dsllarepVectorDSL6$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$$anonfun$26\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anonfun$27\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$generated$dsllarepVectorDSL7$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$$anonfun$28\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$$typecreator2$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anonfun$29\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$generated$dsllarepVectorDSL8$1\nused names:\n170 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> $anon\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> $m\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> $m$untyped\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> $typecreator1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> $typecreator2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> $u\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> &&\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> +\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> <\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> <init>\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ==\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ???\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> AbstractFunction2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Any\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Array\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Boolean\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ByteArrayOutputStream\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ClassTag\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> FlatSpec\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Function0\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Function1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> FunctionT\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> GenericTranslationSpec\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> HashMap\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Int\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> IntIsIntegral\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> JUnitRunner\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> LiftInt\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> LiftString\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> LiftUnit\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> List\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ManifestFactory\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Mirror\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> None\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> NotImplementedError\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Nothing\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Option\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Predef\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> PrintStream\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Product\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> R\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> RunWith\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ScalaRunTime\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Serializable\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Set\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ShouldMatchers\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Singleton\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> SortedSet\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Statics\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ThisType\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Type\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> TypeCreator\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> TypeRef\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> TypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> U\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Universe\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Vector\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> VectorDSL\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> YYCache\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> YYStorage\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> __app\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> __assign\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> __lambda\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> __newVar\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> __valDef\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> _root_\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> _toString\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> anyHash\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> apply\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> asInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> asModule\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> asType\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> cache\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ch\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> classType\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> collection\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> compilVars\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> compile\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> convertToInAndIgnoreMethods\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> convertToStringShouldWrapper\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> copyToArray\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> createAndStoreVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> epfl\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> eq\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> evictedCache\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> finalizeHash\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> function\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL3\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL4\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL5\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL6\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL7\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL8\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> genericArrayOps\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> get\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> getClassLoader\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> getOrElse\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> guardedLookup\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> hash\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> hash2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> hashes\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> id\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> id0\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> id1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> id2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> immutable\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> in\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> incrementRuntimeCompileCount\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> infix_!=\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> infix_hashCode\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> intercept\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> internal\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> io\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> isInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> it\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> java\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> junit\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> la\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> lift\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> lookup\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> lookupReq\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> minCount\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> minHashes\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> minSet\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mix\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> moduleClass\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde$vector$test$GenericTranslationSpec$$anon$$classInstance\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde$vector$test$GenericTranslationSpec$$anon$$recompile\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde$vector$test$GenericTranslationSpec$$anon$$variantCache\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde$vector$test$GenericTranslationSpec$$anon$$variantCache_=\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> next0\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> org\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> package\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> program\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> reflect\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> refs\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> reificationSupport\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> rep\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> runner\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> runtime\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> runtimeMirror\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> scalatest\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> set\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> shorthandTestRegistrationFunction\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> should\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> size\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> staticClass\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> staticPackage\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> test\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> toString\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> toTypeConstructor\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> typedProductIterator\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> universe\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> unsafeCounter\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> unsafeCounter_=\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> unstableSet\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> v\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> variant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> variantCount\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> vector\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> x\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> y\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> yinyang\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ||\nproduct stamps:\n72 items\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$$anonfun$9.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anonfun$10.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$generated$dsllarepVectorDSL1$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$$anonfun$11.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anonfun$12.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$generated$dsllarepVectorDSL2$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$$anonfun$14.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$$typecreator1$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anonfun$15.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$generated$dsllarepVectorDSL3$1$$anonfun$13.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$generated$dsllarepVectorDSL3$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$$anonfun$17.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anonfun$18.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$generated$dsllarepVectorDSL4$1$$anonfun$16.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$generated$dsllarepVectorDSL4$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$$anonfun$22.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anonfun$23.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$19.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$20.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$21.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$$anonfun$24.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anonfun$25.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$generated$dsllarepVectorDSL6$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$$anonfun$26.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anonfun$27.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$generated$dsllarepVectorDSL7$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$$anonfun$28.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$$typecreator2$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anonfun$29.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$generated$dsllarepVectorDSL8$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec.class -> lastModified(1411686084000)\nsource stamps:\n3 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/CodeGenBench.scala -> hash(8125d1c4365940d0e2346fa5d9922972bdcfd029)\n/Users/vjovanov/code/yin-yang/components/dsls/test/CodeGenSpec.scala -> hash(5a33cc1da99efe6953996cb6ccc05c5057dbcf49)\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> hash(30dd94f44ba26b274f7d0c7e25a39432cc33afc8)\nbinary stamps:\n5 items\n/Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1387422821000)\n/Users/vjovanov/.ivy2/cache/junit/junit/jars/junit-4.11.jar -> lastModified(1352920880000)\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar -> lastModified(1400572938000)\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar -> lastModified(1400572965000)\n/Users/vjovanov/.ivy2/cache/org.scalatest/scalatest_2.11/jars/scalatest_2.11-2.1.5.jar -> lastModified(1398726265000)\nclass names:\n5 items\n/Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.Object\n/Users/vjovanov/.ivy2/cache/junit/junit/jars/junit-4.11.jar -> org.junit.runner.RunWith\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar -> scala.runtime.AbstractFunction2\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar -> scala.reflect.api.TypeCreator\n/Users/vjovanov/.ivy2/cache/org.scalatest/scalatest_2.11/jars/scalatest_2.11-2.1.5.jar -> org.scalatest.FlatSpec\ninternal apis:\n3 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/CodeGenBench.scala ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHC4IVHqAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAAHNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7l6Dh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+ABp4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSBJdHENllA0OI0b6XZkilyvc/QKQ==\n/Users/vjovanov/code/yin-yang/components/dsls/test/CodeGenSpec.scala ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHC4IVHqAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAAHNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7l6Dh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+ABp4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABRaM8wdqZ7+aVOZbLbMwFxQV9vPSQ==\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala ->\\nexternal apis:\n10 items\nbase.PolymorphicBase ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHA9rt5iAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAI3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cCa6gLZ0AAZub3RpZnlzcQB+AAyJ+7IRdAAEd2FpdHNxAH4ADELqco90AA0kYXNJbnN0YW5jZU9mc3EAfgAM83GdAnQAD2NvbXBpbGF0aW9uVmFyc3NxAH4ADBdmNcZ0AAZlcXVhbHNzcQB+AAwDw7vzdAAMZ2VuZXJhdGVDb2Rlc3EAfgAM7tKyZHQADGFzSW5zdGFuY2VPZnNxAH4ADJFGkvp0AAtydW50aW1lVHlwZXNxAH4ADP6i4S50AAdSZXBCYXNlc3EAfgAM859rJHQADHN5bmNocm9uaXplZHNxAH4ADKDzhbJ0AA0kaXNJbnN0YW5jZU9mc3EAfgAMbv4xK3QABG1haW5zcQB+AAwiAqkLdAAHY29tcGlsZXNxAH4ADBitIz50AARCYXNlc3EAfgAMHYtdWnQACW5vdGlmeUFsbHNxAH4ADORB9Vh0AAxpc0luc3RhbmNlT2ZzcQB+AAy/aarMdAAFbWl4ZWRzcQB+AAyeHTCPdAAGPGluaXQ+c3EAfgAMLo0H4nQADExpZnRFdmlkZW5jZXNxAH4ADDrEZ+F0AAI9PXNxAH4ADHnP9Zt0ABFjb21waWxlJGRlZmF1bHQkMXNxAH4ADITWqid0AAdUeXBlUmVwc3EAfgAM3s7i+HQABWNsb25lc3EAfgAM7hShIHQAFmdlbmVyYXRlQ29kZSRkZWZhdWx0JDJzcQB+AAz2kzOudAAIdG9TdHJpbmdzcQB+AAzAGFGVdAACIT1zcQB+AAyZ7VCZdAAIZ2V0Q2xhc3NzcQB+AAyK3LDJdAAEaG9sZXNxAH4ADGtytzV0AAFSc3EAfgAMlbwIx3QAAm5lc3EAfgAMUgj5+HQABGxpZnRzcQB+AAyQezbgdAACZXFzcQB+AAzFDEfRdAACIyNzcQB+AAyp+x/qdAAIZmluYWxpemVzcQB+AAwQKQBHdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBdeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAJYmFzZS5CYXNldXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHABc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHBzcQB+AHUBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AF1MAAlpbmhlcml0ZWRxAH4AXUwAB3BhcmVudHNxAH4AXXhxAH4AfHNxAH4AdQF1cQB+AFgAAAAAcHNxAH4AdQF1cQB+AFgAAAAAcHNxAH4AdQF1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAABnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AHt0AA1Db2RlR2VuZXJhdG9yc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB7c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAAFc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAJjaHNxAH4AlHQABGVwZmxzcQB+AJR0AAd5aW55YW5nc3EAfgCUdAADYXBpc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJVzcQB+AIh0ABJCYXNlWWluWWFuZ1R5cGVUYWdxAH4AjnNxAH4AiHQADFR5cGVUYWdCYXNlZHEAfgCOc3EAfgCIdAALQmFzZVlpbllhbmdxAH4AjnNxAH4AiHQABk9iamVjdHNxAH4AjHNxAH4Aj3VxAH4AkgAAAANzcQB+AJR0AARqYXZhc3EAfgCUdAAEbGFuZ3EAfgCfc3EAfgCIdAADQW55c3EAfgCMc3EAfgCPdXEAfgCSAAAAAnNxAH4AlHQABXNjYWxhcQB+AJ9wcHNxAH4AWnEAfgBndXEAfgBoAAAAAHNxAH4AagF0AAxiYXNlLlJlcEJhc2V1cQB+AG0AAAAAcQB+AHF1cQB+AHMAAAAAc3EAfgB1AXEAfgB9cHNxAH4AdQFzcQB+AH9zcQB+AHUBdXEAfgBYAAAAAHBzcQB+AHUBdXEAfgBYAAAAAHBzcQB+AHUBdXEAfgCGAAAAB3NxAH4AiHQABEJhc2VzcQB+AIxzcQB+AI91cQB+AJIAAAACc3EAfgCUdAAEYmFzZXEAfgCfc3EAfgCIdAANQ29kZUdlbmVyYXRvcnNxAH4AjHNxAH4Aj3VxAH4AkgAAAAVzcQB+AJR0AAJjaHNxAH4AlHQABGVwZmxzcQB+AJR0AAd5aW55YW5nc3EAfgCUcQB+AJ1xAH4An3NxAH4AiHQAEkJhc2VZaW5ZYW5nVHlwZVRhZ3EAfgDOc3EAfgCIdAAMVHlwZVRhZ0Jhc2VkcQB+AM5zcQB+AIh0AAtCYXNlWWluWWFuZ3EAfgDOc3EAfgCIcQB+AKdzcQB+AIxzcQB+AI91cQB+AJIAAAADc3EAfgCUcQB+AKxzcQB+AJRxAH4ArnEAfgCfc3EAfgCIcQB+ALBzcQB+AIxzcQB+AI91cQB+AJIAAAACc3EAfgCUcQB+ALVxAH4An3BwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAEYmFzZXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vKfd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABHL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy9kc2xzL3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQXDgM/ccsES6ZicrYOqHLt3wZK1Q==\nch.epfl.yinyang.api.BaseYinYang ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDIPVgbAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAIXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cHPVDmt0AAtCYXNlWWluWWFuZ3NxAH4ADDMcrNh0AAZub3RpZnlzcQB+AAz0UmTOdAAEd2FpdHNxAH4ADAMfzJJ0AA0kYXNJbnN0YW5jZU9mc3EAfgAMNe+sxHQAD2NvbXBpbGF0aW9uVmFyc3NxAH4ADBDHMZB0AAZlcXVhbHNzcQB+AAx6n2oJdAATQmFzZVlpbllhbmdNYW5pZmVzdHNxAH4ADH9MWOF0AAxhc0luc3RhbmNlT2ZzcQB+AAzBafwwdAALcnVudGltZVR5cGVzcQB+AAy242gYdAANTWFuaWZlc3RCYXNlZHNxAH4ADC9uhed0AAxzeW5jaHJvbml6ZWRzcQB+AAw9YleldAANJGlzSW5zdGFuY2VPZnNxAH4ADPwm6wZ0AAlub3RpZnlBbGxzcQB+AAzQnYoHdAASQmFzZVlpbllhbmdUeXBlVGFnc3EAfgAMKfpjaXQADGlzSW5zdGFuY2VPZnNxAH4ADJJ597V0AAVtaXhlZHNxAH4ADN0C+p50AAY8aW5pdD5zcQB+AAwHw3zKdAAMTGlmdEV2aWRlbmNlc3EAfgAMAlSSzXQAAj09c3EAfgAMLoWcDnQAB1R5cGVSZXBzcQB+AAzX50ZDdAAFY2xvbmVzcQB+AAwhqZ1KdAAGJGluaXQkc3EAfgAM6i1K6XQADFR5cGVUYWdCYXNlZHNxAH4ADGDhTdd0AAh0b1N0cmluZ3NxAH4ADNab8fh0AAIhPXNxAH4ADEczNpx0AAhnZXRDbGFzc3NxAH4ADJM+7tx0AARob2xlc3EAfgAMnGdU/nQAAm5lc3EAfgAM9kSTTnQABGxpZnRzcQB+AAxuj6JedAACZXFzcQB+AAxOGATGdAACIyNzcQB+AAyQ/8u5dAAIZmluYWxpemVzcQB+AAxx8d3ndAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAAFc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBZeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAfY2guZXBmbC55aW55YW5nLmFwaS5CYXNlWWluWWFuZ3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAXNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBwc3EAfgBxAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBZTAAJaW5oZXJpdGVkcQB+AFlMAAdwYXJlbnRzcQB+AFl4cQB+AHhzcQB+AHEBdXEAfgBUAAAAAHBzcQB+AHEBdXEAfgBUAAAAAHBzcQB+AHEBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB3dAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB3c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCQdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCRc3EAfgCEdAADQW55c3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHQABXNjYWxhcQB+AJdwcHNxAH4AVnEAfgBjdXEAfgBkAAAAAHNxAH4AZgF0ACBjaC5lcGZsLnlpbnlhbmcuYXBpLlR5cGVUYWdCYXNlZHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAACc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAIWNoLmVwZmwueWlueWFuZy5hcGkuTWFuaWZlc3RCYXNlZHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAACc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAJ2NoLmVwZmwueWlueWFuZy5hcGkuQmFzZVlpbllhbmdNYW5pZmVzdHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAAEc3EAfgCEdAANTWFuaWZlc3RCYXNlZHNxAH4AiHNxAH4Ai3VxAH4AjgAAAAVzcQB+AJB0AAJjaHNxAH4AkHQABGVwZmxzcQB+AJB0AAd5aW55YW5nc3EAfgCQdAADYXBpcQB+AJdzcQB+AIR0AAtCYXNlWWluWWFuZ3EAfgDkc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAJmNoLmVwZmwueWlueWFuZy5hcGkuQmFzZVlpbllhbmdUeXBlVGFndXEAfgBpAAAAAHEAfgBtdXEAfgBvAAAAAHNxAH4AcQFxAH4AeXBzcQB+AHEBc3EAfgB7c3EAfgBxAXVxAH4AVAAAAABwc3EAfgBxAXVxAH4AVAAAAABwc3EAfgBxAXVxAH4AggAAAARzcQB+AIR0AAxUeXBlVGFnQmFzZWRzcQB+AIhzcQB+AIt1cQB+AI4AAAAFc3EAfgCQdAACY2hzcQB+AJB0AARlcGZsc3EAfgCQdAAHeWlueWFuZ3NxAH4AkHEAfgDucQB+AJdzcQB+AIR0AAtCYXNlWWluWWFuZ3EAfgENc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3BwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAATY2guZXBmbC55aW55YW5nLmFwaXNxAH4BJnQAAmNoc3EAfgEmdAAHY2guZXBmbHNxAH4BJnQAD2NoLmVwZmwueWlueWFuZ3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vGeN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABLL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy95aW4teWFuZy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAULhD0NULP2AT6lYyuly5NjluMcAE=\nch.epfl.yinyang.runtime.YYCache ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDBELbCAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAKXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cCxLI910AAZub3RpZnlzcQB+AAz272ANdAAWZ2V0Q29tcGlsZVRpbWVDb21waWxlZHNxAH4ADPNN24Z0ABNydW50aW1lQ29tcGlsZUNvdW50c3EAfgAMXJyJZnQAB1lZQ2FjaGVzcQB+AAx6D3ZvdAAEd2FpdHNxAH4ADPNs9VJ0AA0kYXNJbnN0YW5jZU9mc3EAfgAMYzJw5XQAFmdldFJ1bnRpbWVDb21waWxlQ291bnRzcQB+AAy3Xq1LdAAYcmVzZXRDb21waWxlVGltZUNvbXBpbGVkc3EAfgAMh1kbXHQAF2NvbXBpbGVUaW1lQ29tcGlsZUNvdW50c3EAfgAM+KaDMnQAEWdldEhhc2hMb29rdXBUaW1lc3EAfgAMtmbkQ3QABmVxdWFsc3NxAH4ADAkRbs50AA1ndWFyZGVkTG9va3Vwc3EAfgAMF5whOnQADGFzSW5zdGFuY2VPZnNxAH4ADLEYKSp0ABFnZXRDaGVja1RpbWVDb3VudHNxAH4ADOdgkzN0AAxzeW5jaHJvbml6ZWRzcQB+AAzKH1YEdAAWc2V0Q29tcGlsZVRpbWVDb21waWxlZHNxAH4ADOfLG3B0AA0kaXNJbnN0YW5jZU9mc3EAfgAM/vzi43QACW5vdGlmeUFsbHNxAH4ADPO2btF0AAxpc0luc3RhbmNlT2ZzcQB+AAxHLRegdAAXaW5jcmVtZW50Q2hlY2tUaW1lQ291bnRzcQB+AAxNE7UfdAAGPGluaXQ+c3EAfgAM7maHOnQABmNhY2hlc3NxAH4ADKI2brR0AAI9PXNxAH4ADI9M+050AB1hbHJlYWR5Q291bnRlZENvbXBpbGVUaW1lVUlEc3NxAH4ADBWcz890AAVjbG9uZXNxAH4ADPSVE2N0ABNjb21waWxlVGltZUNvbXBpbGVkc3EAfgAMXrPjGXQACGhhc2hUaW1lc3EAfgAMl9EEnXQAIGluY3JlbWVudENvbXBpbGVUaW1lQ29tcGlsZUNvdW50c3EAfgAMrpwZ6XQAGmdldENvbXBpbGVUaW1lQ29tcGlsZUNvdW50c3EAfgAMVSBs73QACWNoZWNrVGltZXNxAH4ADFLt5I90AAh0b1N0cmluZ3NxAH4ADKw9/tl0AAIhPXNxAH4ADEqkR/t0AApjaGVja0NvdW50c3EAfgAMd/3aTHQACGdldENsYXNzc3EAfgAMxSek8XQAAm5lc3EAfgAM3WyuIXQACVlZU3RvcmFnZXNxAH4ADLd7vLJ0AAJlcXNxAH4ADDVzQqd0ABxpbmNyZW1lbnRSdW50aW1lQ29tcGlsZUNvdW50c3EAfgAM7e1F33QAAiMjc3EAfgAMTi3Da3QACGZpbmFsaXplc3EAfgAMMo49x3QACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AaXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAIWNoLmVwZmwueWlueWFuZy5ydW50aW1lLllZU3RvcmFnZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS5pbmxpbmVzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cAFzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwcHNxAH4AggFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AaUwACWluaGVyaXRlZHEAfgBpTAAHcGFyZW50c3EAfgBpeHEAfgCJc3EAfgCCAXVxAH4AZAAAAABwc3EAfgCCAXVxAH4AZAAAAABwc3EAfgCCAXVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AiHQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AiHNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AoXQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AonNxAH4AlXQAA0FueXNxAH4AmXNxAH4AnHVxAH4AnwAAAAJzcQB+AKF0AAVzY2FsYXEAfgCocHBzcQB+AGZxAH4Ac3VxAH4AdAAAAABzcQB+AHYAdAAfY2guZXBmbC55aW55YW5nLnJ1bnRpbWUuWVlDYWNoZXVxAH4AeQAAAAB+cQB+AHt0AAhDbGFzc0RlZnVxAH4AfwAAAABzcQB+AIIBcQB+AIpwc3EAfgCCAXNxAH4AjHNxAH4AggF1cQB+AGQAAAAAcHNxAH4AggF1cQB+AGQAAAAAcHNxAH4AggF1cQB+AJMAAAACc3EAfgCVcQB+AJhzcQB+AJlzcQB+AJx1cQB+AJ8AAAADc3EAfgChcQB+AKRzcQB+AKFxAH4ApnEAfgCoc3EAfgCVcQB+AKpzcQB+AJlzcQB+AJx1cQB+AJ8AAAACc3EAfgChcQB+AK9xAH4AqHBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAACY2hzcQB+AM50AAdjaC5lcGZsc3EAfgDOdAAPY2guZXBmbC55aW55YW5nc3EAfgDOdAAXY2guZXBmbC55aW55YW5nLnJ1bnRpbWVzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAUiu7xnjdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQASy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMveWluLXlhbmcvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFG9RtvC0jgoFjUFVQ26qdXuoqX1d\nch.epfl.yinyang.runtime.YYStorage$ ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDBELbCAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAKXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cCxLI910AAZub3RpZnlzcQB+AAz272ANdAAWZ2V0Q29tcGlsZVRpbWVDb21waWxlZHNxAH4ADPNN24Z0ABNydW50aW1lQ29tcGlsZUNvdW50c3EAfgAMXJyJZnQAB1lZQ2FjaGVzcQB+AAx6D3ZvdAAEd2FpdHNxAH4ADPNs9VJ0AA0kYXNJbnN0YW5jZU9mc3EAfgAMYzJw5XQAFmdldFJ1bnRpbWVDb21waWxlQ291bnRzcQB+AAy3Xq1LdAAYcmVzZXRDb21waWxlVGltZUNvbXBpbGVkc3EAfgAMh1kbXHQAF2NvbXBpbGVUaW1lQ29tcGlsZUNvdW50c3EAfgAM+KaDMnQAEWdldEhhc2hMb29rdXBUaW1lc3EAfgAMtmbkQ3QABmVxdWFsc3NxAH4ADAkRbs50AA1ndWFyZGVkTG9va3Vwc3EAfgAMF5whOnQADGFzSW5zdGFuY2VPZnNxAH4ADLEYKSp0ABFnZXRDaGVja1RpbWVDb3VudHNxAH4ADOdgkzN0AAxzeW5jaHJvbml6ZWRzcQB+AAzKH1YEdAAWc2V0Q29tcGlsZVRpbWVDb21waWxlZHNxAH4ADOfLG3B0AA0kaXNJbnN0YW5jZU9mc3EAfgAM/vzi43QACW5vdGlmeUFsbHNxAH4ADPO2btF0AAxpc0luc3RhbmNlT2ZzcQB+AAxHLRegdAAXaW5jcmVtZW50Q2hlY2tUaW1lQ291bnRzcQB+AAxNE7UfdAAGPGluaXQ+c3EAfgAM7maHOnQABmNhY2hlc3NxAH4ADKI2brR0AAI9PXNxAH4ADI9M+050AB1hbHJlYWR5Q291bnRlZENvbXBpbGVUaW1lVUlEc3NxAH4ADBWcz890AAVjbG9uZXNxAH4ADPSVE2N0ABNjb21waWxlVGltZUNvbXBpbGVkc3EAfgAMXrPjGXQACGhhc2hUaW1lc3EAfgAMl9EEnXQAIGluY3JlbWVudENvbXBpbGVUaW1lQ29tcGlsZUNvdW50c3EAfgAMrpwZ6XQAGmdldENvbXBpbGVUaW1lQ29tcGlsZUNvdW50c3EAfgAMVSBs73QACWNoZWNrVGltZXNxAH4ADFLt5I90AAh0b1N0cmluZ3NxAH4ADKw9/tl0AAIhPXNxAH4ADEqkR/t0AApjaGVja0NvdW50c3EAfgAMd/3aTHQACGdldENsYXNzc3EAfgAMxSek8XQAAm5lc3EAfgAM3WyuIXQACVlZU3RvcmFnZXNxAH4ADLd7vLJ0AAJlcXNxAH4ADDVzQqd0ABxpbmNyZW1lbnRSdW50aW1lQ29tcGlsZUNvdW50c3EAfgAM7e1F33QAAiMjc3EAfgAMTi3Da3QACGZpbmFsaXplc3EAfgAMMo49x3QACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AaXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAIWNoLmVwZmwueWlueWFuZy5ydW50aW1lLllZU3RvcmFnZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS5pbmxpbmVzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cAFzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwcHNxAH4AggFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AaUwACWluaGVyaXRlZHEAfgBpTAAHcGFyZW50c3EAfgBpeHEAfgCJc3EAfgCCAXVxAH4AZAAAAABwc3EAfgCCAXVxAH4AZAAAAABwc3EAfgCCAXVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AiHQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AiHNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AoXQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AonNxAH4AlXQAA0FueXNxAH4AmXNxAH4AnHVxAH4AnwAAAAJzcQB+AKF0AAVzY2FsYXEAfgCocHBzcQB+AGZxAH4Ac3VxAH4AdAAAAABzcQB+AHYAdAAfY2guZXBmbC55aW55YW5nLnJ1bnRpbWUuWVlDYWNoZXVxAH4AeQAAAAB+cQB+AHt0AAhDbGFzc0RlZnVxAH4AfwAAAABzcQB+AIIBcQB+AIpwc3EAfgCCAXNxAH4AjHNxAH4AggF1cQB+AGQAAAAAcHNxAH4AggF1cQB+AGQAAAAAcHNxAH4AggF1cQB+AJMAAAACc3EAfgCVcQB+AJhzcQB+AJlzcQB+AJx1cQB+AJ8AAAADc3EAfgChcQB+AKRzcQB+AKFxAH4ApnEAfgCoc3EAfgCVcQB+AKpzcQB+AJlzcQB+AJx1cQB+AJ8AAAACc3EAfgChcQB+AK9xAH4AqHBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAACY2hzcQB+AM50AAdjaC5lcGZsc3EAfgDOdAAPY2guZXBmbC55aW55YW5nc3EAfgDOdAAXY2guZXBmbC55aW55YW5nLnJ1bnRpbWVzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAUiu7xnjdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQASy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMveWluLXlhbmcvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFG9RtvC0jgoFjUFVQ26qdXuoqX1d\ndsl.la.Vector ->\\ndsl.la.rep.DoubleDSL ->\\ndsl.la.rep.IntDSL ->\\ndsl.la.rep.NumericOps ->\\ndsl.la.rep.ScalaVirtualizationDSL ->\\ndsl.la.rep.VectorDSL ->\\nsource infos:\n3 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/CodeGenBench.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/test/CodeGenSpec.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala ->\nAAAAAAAAAAA=\ncompilations:\n6 items\n0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7l6Dh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv\n1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7mHSR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv\n2 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7mcQ11cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv\n3 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7sxE51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv\n4 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK71s0d1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv\n5 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK8MJml1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv\n",
			"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/target/streams/test/incCompileSetup/$global/streams/inc_compile",
			"file_size": 187621,
			"file_write_time": 130879470840000000,
			"settings":
			{
				"buffer_size": 187621,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package dsl\n\nimport ch.epfl.yinyang._\nimport ch.epfl.yinyang.typetransformers._\nimport scala.language.experimental.macros\nimport scala.reflect.macros.blackbox.Context\n\npackage object la {\n\n  def la[T](block: => T): T = macro implementations.liftRep[T]\n  def laDebug[T](block: => T): T = macro implementations.liftRepDebug[T]\n\n  object implementations {\n    def liftRep[T](c: Context)(block: c.Expr[T]): c.Expr[T] =\n      YYTransformer[c.type, T](c)(\n        \"dsl.la.rep.VectorDSL\",\n        new GenericTypeTransformer[c.type](c) {\n          override val IRType = \"R\"\n        },\n        None, None,\n        Map(\n          \"shallow\" -> false,\n          \"virtualizeFunctions\" -> true,\n          \"virtualizeValDef\" -> true,\n          \"debug\" -> 0,\n          \"featureAnalysing\" -> false,\n          \"ascriptionTransforming\" -> false))(block)\n\n    def liftRepDebug[T](c: Context)(block: c.Expr[T]): c.Expr[T] =\n      YYTransformer[c.type, T](c)(\n        \"dsl.la.rep.VectorDSL\",\n        new GenericTypeTransformer[c.type](c) {\n          override val IRType = \"R\"\n        },\n        None, None,\n        Map(\n          \"shallow\" -> false,\n          \"virtualizeFunctions\" -> true,\n          \"virtualizeValDef\" -> true,\n          \"debug\" -> 0,\n          \"featureAnalysing\" -> true,\n          \"ascriptionTransforming\" -> false))(block)\n  }\n}\n",
			"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/src/la/package.scala",
			"file_size": 1328,
			"file_write_time": 130879466040000000,
			"settings":
			{
				"buffer_size": 1328,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/TypeTransformation.scala",
			"settings":
			{
				"buffer_size": 2171,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/typetransformers/RepTransformer.scala",
			"settings":
			{
				"buffer_size": 2883,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/test/VirtualizeTest.scala",
			"settings":
			{
				"buffer_size": 4489,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/EmbeddedControls.scala",
			"settings":
			{
				"buffer_size": 8734,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/Utils.scala",
			"settings":
			{
				"buffer_size": 3951,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "",
			"file": "/Users/vjovanov/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/Library/Application Support/Sublime Text 3/Packages/LaTeXTools/Default (OSX).sublime-keymap",
			"settings":
			{
				"buffer_size": 15186,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dissertation.sublime-project",
			"settings":
			{
				"buffer_size": 541,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main/p0_introduction.tex",
			"settings":
			{
				"buffer_size": 30218,
				"line_ending": "Unix"
			}
		},
		{
			"file": "phd.tex",
			"settings":
			{
				"buffer_size": 1931,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tail/bibliography.bib",
			"settings":
			{
				"buffer_size": 98824,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/dissertation.sublime-build",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 47.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Migra",
				"LaTeXTools: Reconfigure and migrate settings"
			],
			[
				"pack in",
				"Package Control: Install Package"
			],
			[
				"Insta",
				"Package Control: Install Package"
			],
			[
				"kbu",
				"Preferences: Key Bindings - Default"
			],
			[
				"Preview",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"Previ",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"Gith",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"Mark",
				"Preferences: MarkdownEditing Settings – Default"
			],
			[
				"Packa",
				"Package Control: Remove Package"
			],
			[
				"Pacak",
				"Package Control: Disable Package"
			],
			[
				"Pref",
				"Preferences: Settings - User"
			],
			[
				"pref",
				"Preferences: Settings - Default"
			],
			[
				"User",
				"Preferences: Settings - User"
			],
			[
				"Setting",
				"Preferences: Settings - Default"
			],
			[
				"Prefere",
				"Preferences: Settings - User"
			],
			[
				"user",
				"Preferences: Settings - User"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/vjovanov/code/scala-yinyang",
		"/Users/vjovanov/code/scala-yinyang/project",
		"/Users/vjovanov/code/reification",
		"/Users/vjovanov/code/reification/src",
		"/Users/vjovanov/code/reification/src/main",
		"/Users/vjovanov/code/reification/src/test",
		"/Users/vjovanov/code/reification/src/test/scala"
	],
	"file_history":
	[
		"/Users/vjovanov/Library/Application Support/Sublime Text 3/Packages/User/LaTeXTools.sublime-settings",
		"/Users/vjovanov/code/virtualization-lms-core/src/common/Functions.scala",
		"/Users/vjovanov/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/vjovanov/code/scala-yinyang/.git/rebase-merge/git-rebase-todo",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/src/base/ScalaCompile.scala",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/target/streams/test/incCompileSetup/$global/streams/inc_compile_2.11",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/target/streams/compile/incCompileSetup/$global/streams/inc_compile_2.11",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/src/la/lifted/VectorOpsRep.scala",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/src/base/Base.scala",
		"/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/runtime/YYStorage.scala",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/src/print/LiftedPrint.scala",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/src/base/ScalaVirtualizedBase.scala",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/src/instrumentation.scala",
		"/Users/vjovanov/code/scala-yinyang/.git/COMMIT_EDITMSG",
		"/Users/vjovanov/code/scala-yinyang/components/delite-test/src/lifted/ScalaPkgTest.scala",
		"/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/HoleTransformation.scala",
		"/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/YYStorageFactory.scala",
		"/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/runtime/package.scala",
		"/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/FullyUnstaged.scala",
		"/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/HoleTypeAnalyser.scala",
		"/Users/vjovanov/dissertation/main/ch2_dsl_embedding.tex",
		"/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/VirtualAnyRef.scala",
		"/home/vjovanov/dissertation/.gitignore",
		"/home/vjovanov/dissertation/phd.pyg",
		"/home/vjovanov/dissertation/dissertation.sublime-project",
		"/home/vjovanov/dissertation/clean-make.sh",
		"/home/vjovanov/dissertation/Makefile",
		"/home/vjovanov/dissertation/head/abstracts.tex",
		"/home/vjovanov/dissertation/tail/biblio.tex",
		"/home/vjovanov/dissertation/head/settings_custom.tex",
		"/home/vjovanov/dissertation/tail/bibliography.bib",
		"/home/vjovanov/research/yy-pldi/deep_gen.tex",
		"/home/vjovanov/research/yy-pldi/evaluation.tex",
		"/home/vjovanov/research/yy-pldi/discussion.tex",
		"/home/vjovanov/research/yy-pldi/yy_macros.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/vjovanov-lib.bib",
		"/home/vjovanov/dissertation/main/ch1_introduction.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/partial-evaluator.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/case-studies.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/discussion.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/limitations.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/related.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/conclusion.tex",
		"/home/vjovanov/dissertation/main/ch2_dsl_embedding.tex",
		"/home/vjovanov/research/yy-pldi/motivation.tex",
		"/home/vjovanov/dissertation/phd.tex",
		"/home/vjovanov/dissertation/main/ch3_polyvariant_staging.tex",
		"/home/vjovanov/dissertation/main/ch5_conclusion.tex",
		"/home/vjovanov/dissertation/main/ch4_dynamic_compilation_of_staged_DSLs.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/macros.tex",
		"/home/vjovanov/.config/sublime-text-3/Packages/User/dissertation.sublime-build",
		"/home/vjovanov/research/papers/2015-scala-symposium/paper.tex",
		"/home/vjovanov/research/yy-pldi/background.tex",
		"/home/vjovanov/research/yy-pldi/core_translation.tex",
		"/home/vjovanov/research/yy-pldi/intro.tex",
		"/home/vjovanov/dissertation/head/preface.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/bcprules.sty",
		"/home/vjovanov/research/papers/2015-scala-symposium/Makefile",
		"/home/vjovanov/research/papers/2015-scala-symposium/math.sty",
		"/home/vjovanov/research/papers/2015-scala-symposium/calculus.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/intro.tex",
		"/home/vjovanov/research/yy-pldi/paper.tex",
		"/home/vjovanov/dissertation/head/settings_epfl_template.tex",
		"/home/vjovanov/research/yy-pldi/sigplanconf.cls",
		"/home/vjovanov/research/yy-pldi/paper.sublime-project",
		"/home/vjovanov/dissertation/head/acknowledgements.tex",
		"/home/vjovanov/dissertation/head/titlepage.tex",
		"/home/vjovanov/dissertation/lineno/SRCFILEs.txt",
		"/home/vjovanov/dissertation/phd.aux",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/ins_qdsl.html",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/contact.html",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/gettinghere.html",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/program.html",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/lausanne.html",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/index.html",
		"/home/vjovanov/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/photos.html",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/css/skel.css",
		"/home/vjovanov/Downloads/jssor/demos-no-jquery/image-gallery.source.html",
		"/home/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestHMM.scala",
		"/home/vjovanov/code/virtualization-lms-core/src/common/Base.scala",
		"/home/vjovanov/code/virtualization-lms-core/test-out/common/target/resolution-cache/reports/default-common_2.10-compile.xml",
		"/home/vjovanov/code/virtualization-lms-core/test-out/common/target/resolution-cache/reports/default-common_2.10-plugin.xml",
		"/home/vjovanov/code/virtualization-lms-core/test-out/common/target/resolution-cache/reports/default-common_2.10-optional.xml",
		"/home/vjovanov/code/virtualization-lms-core/project/target/resolution-cache/reports/default-virtualization-lms-core-build-compile.xml",
		"/home/vjovanov/code/virtualization-lms-core/src/internal/CudaDeviceTransfer.scala",
		"/home/vjovanov/code/virtualization-lms-core/src/common/DSLOps.scala",
		"/home/vjovanov/code/virtualization-lms-core/src/common/Structs.scala",
		"/home/vjovanov/code/virtualization-lms-core/src/internal/Exceptions.scala",
		"/home/vjovanov/code/virtualization-lms-core/src/common/Equal.scala",
		"/home/vjovanov/code/virtualization-lms-core/build.sbt",
		"/home/vjovanov/code/virtualization-lms-core/src/internal/Expressions.scala",
		"/home/vjovanov/code/virtualization-lms-core/.gitignore",
		"/home/vjovanov/papers/2015-scala-symposium/Makefile",
		"/home/vjovanov/papers/2015-scala-symposium/safe-commit.sh",
		"/home/vjovanov/papers/2015-scala-symposium/clean-make.sh",
		"/home/vjovanov/papers/2015-scala-symposium/case-studies.tex",
		"/home/vjovanov/papers/2015-scala-symposium/calculus.tex",
		"/home/vjovanov/papers/2015-scala-symposium/bcprules.sty",
		"/home/vjovanov/papers/2015-scala-symposium/prooftree.sty",
		"/home/vjovanov/papers/2015-scala-symposium/related.tex",
		"/home/vjovanov/papers/2015-scala-symposium/partial-evaluator.tex",
		"/home/vjovanov/papers/2015-scala-symposium/math.sty",
		"/home/vjovanov/papers/2015-scala-symposium/macros.tex",
		"/home/vjovanov/papers/2015-scala-symposium/limitations.tex",
		"/home/vjovanov/papers/2015-scala-symposium/evaluation.tex",
		"/home/vjovanov/papers/2015-scala-symposium/discussion.tex",
		"/home/vjovanov/papers/2015-scala-symposium/conclusion.tex",
		"/home/vjovanov/code/scala-ct/.project",
		"/home/vjovanov/code/scala-ct/interpreter-old/tests/src/test/scala/PrimitivesSuite.scala",
		"/home/vjovanov/code/scala-ct/target/streams/compile/unmanagedJars/$global/streams/export",
		"/home/vjovanov/code/scala-ct/src/ch/epfl/inline/Inline.scala",
		"/home/vjovanov/code/scala-ct/resources/scalac-plugin.xml",
		"/home/vjovanov/code/scala-ct/interpreter/project/plugins.sbt",
		"/home/vjovanov/code/scala-ct/project/plugins.sbt",
		"/home/vjovanov/code/scala-ct/project/target/resolution-cache/reports/default-scala-ct-build-compile-internal.xml",
		"/home/vjovanov/code/scala-ct/project/target/resolution-cache/reports/default-scala-ct-build-compile.xml",
		"/home/vjovanov/code/scala-ct/src/ch/epfl/inline/plugin/InlinePlugin.scala",
		"/home/vjovanov/code/scala-ct/test/InlineSpec.scala",
		"/home/vjovanov/code/scala-ct/src/ch/epfl/inline/examples/VarargsExample.scala",
		"/home/vjovanov/code/scala-ct/src/ch/epfl/package.scala",
		"/home/vjovanov/code/scala-ct/project/build.properties",
		"/home/vjovanov/code/scala-ct/project/Build.scala",
		"/home/vjovanov/code/scala-ct/README.md",
		"/home/vjovanov/code/scala-ct/LICENCE",
		"/home/vjovanov/code/scala-ct/.travis.yml",
		"/home/vjovanov/code/scala-ct/.gitmodules",
		"/home/vjovanov/code/scala-ct/.gitignore"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"/Users/vjovanov/code/scala/",
			"/Users/vjovanov/code/scala/src",
			"",
			"src/reflect",
			"reflect",
			"reflect/api",
			"",
			"/home/vjovanov/code/yin-yang/components/generator/src/types",
			"",
			"/home/vjovanov/code/yin-yang/components/backend/src",
			"",
			"voltdb/*",
			"voltdb",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"tradi",
			"latex",
			"\\n",
			"	",
			"execute}",
			"Statically",
			"diagrams/",
			"valDef",
			"value",
			"valDef",
			"new VectorDSL",
			"more than",
			"todo",
			"general-purpose ",
			"general purpose",
			"general-purpos",
			"todo",
			"consel1998tempo",
			"suganuma2001dynamic",
			"grant2000dyc",
			"auslander1996fast",
			"selinger1979access",
			"cormen2001introduction",
			"compilation",
			" ",
			"  ",
			" ",
			"\\n",
			"T18:52:07Z  ",
			"T18:52:07Z",
			"\\n",
			"2015-10-25",
			"def eval",
			"trait ScalaOpsPkg",
			"RepDSL",
			"ScalaOpsPkg",
			"ScalaPkg",
			"libraryDependencies",
			"libraryDependencies += \"org.scala-lang.lms\" %% \"lms-core\" % \"1.0.0-SNAPSHOT\"",
			"test",
			"priceLimit",
			"doLambda",
			"def fun",
			"Deep embedding",
			"todo",
			"TODO",
			"todod",
			"rompf_lightweight_2012",
			"Light",
			"Lig",
			"TODO",
			"PLDI",
			"dynamic ",
			"Arvind",
			"Arvi",
			"2013",
			"2013b",
			"todo",
			"Visser",
			"Software Lan",
			"todo",
			"Scripting the type",
			"todo",
			"cite",
			"MICR",
			"todo",
			"todod",
			"on Object-Oriented",
			"Conference on Object ",
			"International Conference on Object",
			"OOPSLA",
			"booktitle = {International Conference on Object-Oriented Programming Systems, Languages, and Applications ({OOPSLA})},",
			"{Object-Oriented Programming Systems, Languages, and Applications ({OOPSLA})},",
			"Object-Oriented Programming Systems, Languages, and Applications ({OOPSLA})",
			"OOPSLA",
			"todo",
			"Domain-",
			"def hole",
			"def lift",
			"Vector",
			"object Vector {",
			"todo",
			"Technical",
			"object Vector",
			"lift[Int]",
			"hole[Int]",
			"fig:t",
			"transformed_program",
			"translation_pogram",
			"\\$tpe",
			"ifThenElse",
			"runtimeType",
			"todo",
			"toimplement",
			"infix_wait",
			"default",
			"\"default",
			"infix\\_not",
			"infix_not",
			"domain knowledge",
			"pipeline",
			"latex",
			"sec:minimizing-compile-times",
			"inject",
			"injection",
			"Scope Inje",
			"sec:introdution-partial-evaluation",
			"yy",
			"Spiral",
			"sct:related-work",
			"sec:related-work",
			"SLE",
			"haller2009scala",
			"groenewegen2008webdsl",
			"X",
			"Abstraction leaks",
			"+",
			"Evaluation and Case Stud",
			"koomey2011growth",
			"\\newpage",
			"sec:deep-embedding-implementations",
			"new",
			"\\todo",
			"sec:deep-embedding-implementations",
			"newpage",
			"\\newpage",
			"Compil",
			"def map"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"rompf2012lightweight",
			"sec:related-work-staging",
			"PolymorphicBase",
			"\\end{listingtiny}",
			"\\begin{listingtiny}",
			"Nil"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 26,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main/p3_removing_abstraction_overheads_shallow_embedding.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41350,
						"regions":
						{
						},
						"selection":
						[
							[
								41350,
								41350
							]
						],
						"settings":
						{
							"syntax": "Packages/LaTeX/LaTeX.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12820.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "head/settings_epfl_template.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6740,
						"regions":
						{
						},
						"selection":
						[
							[
								1817,
								1817
							]
						],
						"settings":
						{
							"syntax": "Packages/LaTeX/LaTeX.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 335.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "head/settings_custom.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13199,
						"regions":
						{
						},
						"selection":
						[
							[
								272,
								272
							]
						],
						"settings":
						{
							"syntax": "Packages/LaTeX/LaTeX.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1202,
						"regions":
						{
						},
						"selection":
						[
							[
								1176,
								1176
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 80,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/YYTransformer.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12862,
						"regions":
						{
						},
						"selection":
						[
							[
								1043,
								1043
							]
						],
						"settings":
						{
							"spell_check": true,
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Reified.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 379,
						"regions":
						{
						},
						"selection":
						[
							[
								321,
								321
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/LiftLiteralsTransformation.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1373,
						"regions":
						{
						},
						"selection":
						[
							[
								1373,
								1373
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/Users/vjovanov/code/scala-yinyang/components/examples/src/base/Base.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1358,
						"regions":
						{
						},
						"selection":
						[
							[
								1272,
								1272
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/typetransformers/PolyTransformer.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2275,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/YYConfig.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 965,
						"regions":
						{
						},
						"selection":
						[
							[
								962,
								962
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/AscriptionTransformation.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2464,
						"regions":
						{
						},
						"selection":
						[
							[
								701,
								701
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 229.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/Users/vjovanov/code/scala-yinyang/project/Build.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6159,
						"regions":
						{
						},
						"selection":
						[
							[
								1586,
								1532
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 311.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/Users/vjovanov/code/reification/build.sbt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 585,
						"regions":
						{
						},
						"selection":
						[
							[
								24,
								24
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/Users/vjovanov/code/scala-yinyang/.travis.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 284,
						"regions":
						{
						},
						"selection":
						[
							[
								185,
								185
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/Users/vjovanov/code/scala-yinyang/components/examples/src/la/lifted/VectorOpsRep.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12905,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "main/p1_dsl_embedding.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 135816,
						"regions":
						{
						},
						"selection":
						[
							[
								126459,
								126459
							]
						],
						"settings":
						{
							"syntax": "Packages/LaTeX/LaTeX.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 47160.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/Users/vjovanov/Desktop/tmp/report/js/ScalaMeter/data.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 54928,
						"regions":
						{
						},
						"selection":
						[
							[
								38872,
								38872
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1564.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/Users/vjovanov/papers/2015-dsldi/paper.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7911,
						"regions":
						{
						},
						"selection":
						[
							[
								7814,
								3396
							]
						],
						"settings":
						{
							"syntax": "Packages/LaTeX/LaTeX.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2106.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "/Users/vjovanov/code/reification/src/test/scala/LMSReification.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 797,
						"regions":
						{
						},
						"selection":
						[
							[
								405,
								405
							]
						],
						"settings":
						{
							"auto_name": "LMSReification.scala",
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/Users/vjovanov/code/reification/tmp/report/js/ScalaMeter/data.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20872,
						"regions":
						{
						},
						"selection":
						[
							[
								81,
								81
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 36.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/Users/vjovanov/Desktop/Numbers.csv",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2466,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/Base.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3373,
						"regions":
						{
						},
						"selection":
						[
							[
								435,
								435
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 22,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 406298,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										177,
										188
									],
									[
										627,
										638
									],
									[
										859,
										870
									],
									[
										984,
										995
									],
									[
										1239,
										1250
									],
									[
										1443,
										1454
									],
									[
										1675,
										1686
									],
									[
										1800,
										1811
									],
									[
										2253,
										2275
									],
									[
										2645,
										2667
									],
									[
										3234,
										3256
									],
									[
										3786,
										3808
									],
									[
										4178,
										4200
									],
									[
										4767,
										4789
									],
									[
										5232,
										5239
									],
									[
										5508,
										5515
									],
									[
										5617,
										5624
									],
									[
										5804,
										5811
									],
									[
										6034,
										6041
									],
									[
										6307,
										6314
									],
									[
										6790,
										6797
									],
									[
										7056,
										7063
									],
									[
										7311,
										7318
									],
									[
										7408,
										7415
									],
									[
										7633,
										7640
									],
									[
										8035,
										8042
									],
									[
										8320,
										8327
									],
									[
										8564,
										8571
									],
									[
										8760,
										8767
									],
									[
										8916,
										8923
									],
									[
										9153,
										9160
									],
									[
										9391,
										9398
									],
									[
										9550,
										9557
									],
									[
										9961,
										9968
									],
									[
										10512,
										10519
									],
									[
										10687,
										10694
									],
									[
										11013,
										11020
									],
									[
										11229,
										11236
									],
									[
										11466,
										11473
									],
									[
										11772,
										11779
									],
									[
										11986,
										11993
									],
									[
										12317,
										12324
									],
									[
										12656,
										12663
									],
									[
										13041,
										13048
									],
									[
										13402,
										13409
									],
									[
										13703,
										13710
									],
									[
										13963,
										13970
									],
									[
										14208,
										14215
									],
									[
										14246,
										14253
									],
									[
										14525,
										14532
									],
									[
										14760,
										14767
									],
									[
										14899,
										14906
									],
									[
										15067,
										15074
									],
									[
										15264,
										15271
									],
									[
										15490,
										15497
									],
									[
										15745,
										15752
									],
									[
										16029,
										16036
									],
									[
										16342,
										16349
									],
									[
										16684,
										16691
									],
									[
										17181,
										17188
									],
									[
										17405,
										17412
									],
									[
										17612,
										17619
									],
									[
										17826,
										17833
									],
									[
										17892,
										17899
									],
									[
										18099,
										18106
									],
									[
										18293,
										18300
									],
									[
										18462,
										18469
									],
									[
										18576,
										18583
									],
									[
										18734,
										18741
									],
									[
										18873,
										18880
									],
									[
										19097,
										19104
									],
									[
										19138,
										19145
									],
									[
										19187,
										19194
									],
									[
										19228,
										19235
									],
									[
										19384,
										19391
									],
									[
										19557,
										19564
									],
									[
										19760,
										19767
									],
									[
										20101,
										20108
									],
									[
										20290,
										20297
									],
									[
										20321,
										20328
									],
									[
										20491,
										20498
									],
									[
										20656,
										20663
									],
									[
										20851,
										20858
									],
									[
										21070,
										21077
									],
									[
										21260,
										21267
									],
									[
										21485,
										21492
									],
									[
										21752,
										21759
									],
									[
										21933,
										21940
									],
									[
										22092,
										22099
									],
									[
										22288,
										22295
									],
									[
										22453,
										22460
									],
									[
										22665,
										22672
									],
									[
										22835,
										22842
									],
									[
										23065,
										23072
									],
									[
										23263,
										23270
									],
									[
										23425,
										23432
									],
									[
										23583,
										23590
									],
									[
										23750,
										23757
									],
									[
										23960,
										23967
									],
									[
										24114,
										24121
									],
									[
										24377,
										24384
									],
									[
										24602,
										24609
									],
									[
										24923,
										24930
									],
									[
										25156,
										25163
									],
									[
										25378,
										25385
									],
									[
										25641,
										25648
									],
									[
										25864,
										25871
									],
									[
										26398,
										26409
									],
									[
										26443,
										26454
									],
									[
										26786,
										26797
									],
									[
										26809,
										26820
									],
									[
										27249,
										27260
									],
									[
										27461,
										27472
									],
									[
										27701,
										27712
									],
									[
										27957,
										27968
									],
									[
										28646,
										28657
									],
									[
										28833,
										28844
									],
									[
										29585,
										29596
									],
									[
										29695,
										29706
									],
									[
										30235,
										30246
									],
									[
										30328,
										30339
									],
									[
										30932,
										30943
									],
									[
										31077,
										31088
									],
									[
										32221,
										32232
									],
									[
										32349,
										32360
									],
									[
										33035,
										33046
									],
									[
										33165,
										33176
									],
									[
										33821,
										33832
									],
									[
										33949,
										33960
									],
									[
										34633,
										34644
									],
									[
										34763,
										34774
									],
									[
										35370,
										35381
									],
									[
										35481,
										35492
									],
									[
										36047,
										36058
									],
									[
										36160,
										36171
									],
									[
										72010,
										72021
									],
									[
										136696,
										136707
									],
									[
										201580,
										201591
									],
									[
										201892,
										201903
									],
									[
										202326,
										202337
									],
									[
										202638,
										202649
									],
									[
										203077,
										203088
									],
									[
										203343,
										203354
									],
									[
										203637,
										203648
									],
									[
										203846,
										203857
									],
									[
										204208,
										204219
									],
									[
										204570,
										204581
									],
									[
										204942,
										204953
									],
									[
										205321,
										205332
									],
									[
										205829,
										205840
									],
									[
										205874,
										205885
									],
									[
										206217,
										206228
									],
									[
										206240,
										206251
									],
									[
										206680,
										206691
									],
									[
										206892,
										206903
									],
									[
										207132,
										207143
									],
									[
										207388,
										207399
									],
									[
										208077,
										208088
									],
									[
										208264,
										208275
									],
									[
										209016,
										209027
									],
									[
										209126,
										209137
									],
									[
										209666,
										209677
									],
									[
										209759,
										209770
									],
									[
										210363,
										210374
									],
									[
										210508,
										210519
									],
									[
										211652,
										211663
									],
									[
										211780,
										211791
									],
									[
										212466,
										212477
									],
									[
										212596,
										212607
									],
									[
										213252,
										213263
									],
									[
										213380,
										213391
									],
									[
										214064,
										214075
									],
									[
										214194,
										214205
									],
									[
										214801,
										214812
									],
									[
										214912,
										214923
									],
									[
										215478,
										215489
									],
									[
										215591,
										215602
									],
									[
										251441,
										251452
									],
									[
										316127,
										316138
									],
									[
										381011,
										381022
									],
									[
										381323,
										381334
									],
									[
										381757,
										381768
									],
									[
										382069,
										382080
									],
									[
										382508,
										382519
									],
									[
										382774,
										382785
									],
									[
										383068,
										383079
									],
									[
										383277,
										383288
									],
									[
										383639,
										383650
									],
									[
										384001,
										384012
									],
									[
										384373,
										384384
									],
									[
										384752,
										384763
									],
									[
										385175,
										385192
									],
									[
										385518,
										385535
									],
									[
										385983,
										385991
									],
									[
										386244,
										386252
									],
									[
										386436,
										386444
									],
									[
										386703,
										386711
									],
									[
										387011,
										387019
									],
									[
										387251,
										387259
									],
									[
										387429,
										387437
									],
									[
										387777,
										387785
									],
									[
										388092,
										388100
									],
									[
										388309,
										388317
									],
									[
										388692,
										388700
									],
									[
										389041,
										389049
									],
									[
										389201,
										389209
									],
									[
										389461,
										389469
									],
									[
										389790,
										389798
									],
									[
										390049,
										390057
									],
									[
										390266,
										390274
									],
									[
										390461,
										390469
									],
									[
										390689,
										390697
									],
									[
										390924,
										390932
									],
									[
										391141,
										391149
									],
									[
										391375,
										391383
									],
									[
										391687,
										391695
									],
									[
										391966,
										391974
									],
									[
										392107,
										392115
									],
									[
										392429,
										392437
									],
									[
										392655,
										392663
									],
									[
										392699,
										392707
									],
									[
										392765,
										392773
									],
									[
										392846,
										392854
									],
									[
										392982,
										392990
									],
									[
										393165,
										393173
									],
									[
										393235,
										393243
									],
									[
										393381,
										393389
									],
									[
										393517,
										393525
									],
									[
										393684,
										393692
									],
									[
										393754,
										393762
									],
									[
										393913,
										393921
									],
									[
										394095,
										394103
									],
									[
										394312,
										394320
									],
									[
										394530,
										394538
									],
									[
										394628,
										394636
									],
									[
										394755,
										394763
									],
									[
										394903,
										394911
									],
									[
										395018,
										395026
									],
									[
										395121,
										395129
									],
									[
										395290,
										395298
									],
									[
										395334,
										395342
									],
									[
										395400,
										395408
									],
									[
										395481,
										395489
									],
									[
										395617,
										395625
									],
									[
										395800,
										395808
									],
									[
										395870,
										395878
									],
									[
										396016,
										396024
									],
									[
										396152,
										396160
									],
									[
										396319,
										396327
									],
									[
										396389,
										396397
									],
									[
										396548,
										396556
									],
									[
										396718,
										396726
									],
									[
										396931,
										396939
									],
									[
										397105,
										397113
									],
									[
										397187,
										397195
									],
									[
										397282,
										397290
									],
									[
										397417,
										397425
									],
									[
										397581,
										397589
									],
									[
										397728,
										397736
									],
									[
										397892,
										397900
									],
									[
										398063,
										398071
									],
									[
										398314,
										398322
									],
									[
										398568,
										398576
									],
									[
										398877,
										398885
									],
									[
										399117,
										399125
									],
									[
										399348,
										399356
									],
									[
										399615,
										399623
									],
									[
										399811,
										399819
									],
									[
										400187,
										400195
									],
									[
										400558,
										400566
									],
									[
										400994,
										401002
									],
									[
										401369,
										401377
									],
									[
										401607,
										401615
									],
									[
										401852,
										401860
									],
									[
										402145,
										402153
									],
									[
										402474,
										402482
									],
									[
										402812,
										402820
									],
									[
										403161,
										403169
									],
									[
										403517,
										403525
									],
									[
										403869,
										403877
									],
									[
										404223,
										404231
									],
									[
										404556,
										404564
									],
									[
										404832,
										404840
									],
									[
										405130,
										405138
									],
									[
										405267,
										405275
									],
									[
										405435,
										405443
									],
									[
										405661,
										405669
									],
									[
										405894,
										405902
									],
									[
										406186,
										406194
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								387783,
								387783
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 11,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 82860.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Evals.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 714,
						"regions":
						{
						},
						"selection":
						[
							[
								287,
								310
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2932,
						"regions":
						{
						},
						"selection":
						[
							[
								258,
								258
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 16.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/Packages.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3976,
						"regions":
						{
						},
						"selection":
						[
							[
								483,
								483
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "main/p2_support_for_deep_embedding_development.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17355,
						"regions":
						{
						},
						"selection":
						[
							[
								172,
								172
							]
						],
						"settings":
						{
							"auto_name": "p2_support_for_deep_embedding_development.tex",
							"syntax": "Packages/LaTeX/LaTeX.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7180,
						"regions":
						{
						},
						"selection":
						[
							[
								809,
								809
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 290.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41708,
						"regions":
						{
						},
						"selection":
						[
							[
								24717,
								24717
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12848.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7163,
						"regions":
						{
						},
						"selection":
						[
							[
								6163,
								6163
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3984.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10094,
						"regions":
						{
						},
						"selection":
						[
							[
								806,
								806
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8759,
						"regions":
						{
						},
						"selection":
						[
							[
								1100,
								1100
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16174,
						"regions":
						{
						},
						"selection":
						[
							[
								115,
								149
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "/Users/vjovanov/code/virtualization-lms-core/build.sbt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2021,
						"regions":
						{
						},
						"selection":
						[
							[
								498,
								498
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-terrors/ErrorSamples.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10481,
						"regions":
						{
						},
						"selection":
						[
							[
								948,
								959
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 35,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "",
							"default_dir": "/Users/vjovanov/code/reification/src",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "/Users/vjovanov/code/reification/src/main/scala/DSLDefinition.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 101,
						"regions":
						{
						},
						"selection":
						[
							[
								67,
								67
							]
						],
						"settings":
						{
							"auto_name": "DSLDefinition.scala",
							"syntax": "Packages/Scala/Scala.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6898,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 38,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 786,
						"regions":
						{
						},
						"selection":
						[
							[
								232,
								232
							]
						],
						"settings":
						{
							"auto_indent": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"tab_width": 2,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/BaseYinYang.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 761,
						"regions":
						{
						},
						"selection":
						[
							[
								383,
								383
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/CodeGenerator.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 896,
						"regions":
						{
						},
						"selection":
						[
							[
								193,
								382
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Executable.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 206,
						"regions":
						{
						},
						"selection":
						[
							[
								176,
								176
							]
						],
						"settings":
						{
							"auto_name": "Executable.scala",
							"syntax": "Packages/Scala/Scala.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Staged.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 465,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/StaticallyChecked.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 679,
						"regions":
						{
						},
						"selection":
						[
							[
								191,
								191
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/macros/blackbox/Context.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4220,
						"regions":
						{
						},
						"selection":
						[
							[
								2938,
								2938
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/reporters/Reporter.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2359,
						"regions":
						{
						},
						"selection":
						[
							[
								192,
								192
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/util/Position.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10139,
						"regions":
						{
						},
						"selection":
						[
							[
								2142,
								2142
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/Positions.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11925,
						"regions":
						{
						},
						"selection":
						[
							[
								3552,
								3552
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 558.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "/Users/vjovanov/code/scala/src/library/scala/io/Position.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3118,
						"regions":
						{
						},
						"selection":
						[
							[
								1272,
								1272
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 558.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/api/Position.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8340,
						"regions":
						{
						},
						"selection":
						[
							[
								2702,
								2702
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 861.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "/Users/vjovanov/code/scala/build/scaladoc/reflect/package.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3956,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "/Users/vjovanov/code/scala/src/library/scala/reflect/package.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3203,
						"regions":
						{
						},
						"selection":
						[
							[
								2579,
								2579
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/macros/package.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1346,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/VirtualAny.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2809,
						"regions":
						{
						},
						"selection":
						[
							[
								2809,
								2809
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 1027.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/VirtualAnyRef.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3472,
						"regions":
						{
						},
						"selection":
						[
							[
								3472,
								3472
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1300.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Staged.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 465,
						"regions":
						{
						},
						"selection":
						[
							[
								199,
								199
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/old/VirtualAny.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2809,
						"regions":
						{
						},
						"selection":
						[
							[
								2809,
								2809
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1027.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/annotation/Virtualize.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1990,
						"regions":
						{
						},
						"selection":
						[
							[
								1929,
								1929
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 459.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/LanguageVirtualization.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12381,
						"regions":
						{
						},
						"selection":
						[
							[
								6257,
								6257
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/analysis/FreeIdentAnalysis.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2346,
						"regions":
						{
						},
						"selection":
						[
							[
								1175,
								1181
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/ScopeInjection.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2189,
						"regions":
						{
						},
						"selection":
						[
							[
								1709,
								1709
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 732.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/test/GenericTranslationTest.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2149,
						"regions":
						{
						},
						"selection":
						[
							[
								2057,
								2057
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1174.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/shallow/package.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11838,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "/Users/vjovanov/code/scala-yinyang/components/delite-test/src/FailureCake.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 466,
						"regions":
						{
						},
						"selection":
						[
							[
								464,
								464
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/HoleTransformation.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2313,
						"regions":
						{
						},
						"selection":
						[
							[
								2147,
								2147
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 334.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "/Users/vjovanov/code/scala-yinyang/components/examples/test/GenericTranslationTest.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2167,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								2167
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1146.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "/Users/vjovanov/code/scala-yinyang/components/examples/src/la/package.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1335,
						"regions":
						{
						},
						"selection":
						[
							[
								122,
								166
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/target/scala-2.11/api/ch/epfl/yinyang/TransformationUtils.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 44813,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/target/streams/compile/incCompileSetup/$global/streams/inc_compile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 421535,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/target/streams/test/incCompileSetup/$global/streams/inc_compile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 187621,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/src/la/package.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1328,
						"regions":
						{
						},
						"selection":
						[
							[
								835,
								835
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/TypeTransformation.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2171,
						"regions":
						{
						},
						"selection":
						[
							[
								929,
								929
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 72,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/typetransformers/RepTransformer.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2883,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"type": "text"
				},
				{
					"buffer": 73,
					"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/test/VirtualizeTest.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4489,
						"regions":
						{
						},
						"selection":
						[
							[
								4489,
								4489
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 74,
					"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/EmbeddedControls.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8734,
						"regions":
						{
						},
						"selection":
						[
							[
								2997,
								2997
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"type": "text"
				},
				{
					"buffer": 75,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/Utils.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3951,
						"regions":
						{
						},
						"selection":
						[
							[
								2931,
								2931
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1584.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 76,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "",
							"default_dir": "/Users/vjovanov/code/scala-yinyang/components/core/src",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 79,
					"type": "text"
				},
				{
					"buffer": 77,
					"file": "/Users/vjovanov/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 81,
					"type": "text"
				},
				{
					"buffer": 78,
					"file": "/Users/vjovanov/Library/Application Support/Sublime Text 3/Packages/LaTeXTools/Default (OSX).sublime-keymap",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15186,
						"regions":
						{
						},
						"selection":
						[
							[
								3235,
								3235
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 79,
					"file": "dissertation.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 541,
						"regions":
						{
						},
						"selection":
						[
							[
								143,
								143
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 82,
					"type": "text"
				},
				{
					"buffer": 80,
					"file": "main/p0_introduction.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30218,
						"regions":
						{
						},
						"selection":
						[
							[
								28855,
								28855
							]
						],
						"settings":
						{
							"syntax": "Packages/LaTeX/LaTeX.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8860.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 81,
					"file": "phd.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1931,
						"regions":
						{
						},
						"selection":
						[
							[
								1914,
								1914
							]
						],
						"settings":
						{
							"syntax": "Packages/LaTeX/LaTeX.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 274.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 82,
					"file": "tail/bibliography.bib",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 98824,
						"regions":
						{
						},
						"selection":
						[
							[
								98824,
								98824
							]
						],
						"settings":
						{
							"syntax": "Packages/LaTeX/Bibtex.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 37678.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 256.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 112.0
	},
	"pinned_build_system": "Packages/LaTeXTools/LaTeX.sublime-build",
	"project": "dissertation.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"dissertation/main/p2_support_for_deep_embedding_development.tex"
			],
			[
				"settin",
				"dissertation/head/settings_epfl_template.tex"
			],
			[
				"sett",
				"dissertation/head/settings_custom.tex"
			],
			[
				"p1_",
				"dissertation/main/p1_dsl_embedding.tex"
			],
			[
				"stag",
				"scala-yinyang/components/yin-yang/src/api/Staged.scala"
			],
			[
				"set",
				"dissertation/head/settings_epfl_template.tex"
			],
			[
				"bibli",
				"dissertation/tail/bibliography.bib"
			],
			[
				"phd.",
				"dissertation/phd.tex"
			],
			[
				"p1",
				"dissertation/main/p1_dsl_embedding.tex"
			],
			[
				"p3_",
				"dissertation/main/p3_removing_abstraction_overheads_shallow_embedding.tex"
			],
			[
				"p2_",
				"dissertation/main/p2_support_for_deep_embedding_development.tex"
			],
			[
				"p0",
				"dissertation/main/p0_introduction.tex"
			],
			[
				"bib",
				"dissertation/tail/bibliography.bib"
			],
			[
				"p2",
				"dissertation/main/p2_support_for_deep_embedding_development.tex"
			],
			[
				"base",
				"virtualization-lms-core/src/common/Base.scala"
			],
			[
				"build",
				"reification/build.sbt"
			],
			[
				"pacakges",
				"virtualization-lms-core/src/common/Packages.scala"
			],
			[
				"build.sbt",
				"reification/build.sbt"
			],
			[
				"build.scala",
				"scala-yinyang/project/Build.scala"
			],
			[
				"lmsre",
				"reification/src/test/scala/LMSReification.scala"
			],
			[
				"generictest",
				"scala-yinyang/components/examples/test/GenericTranslationTest.scala"
			],
			[
				"package.scal",
				"scala-yinyang/components/examples/src/la/package.scala"
			],
			[
				"codegene",
				"scala-yinyang/components/yin-yang/src/api/CodeGenerator.scala"
			],
			[
				"bibl",
				"dissertation/tail/bibliography.bib"
			],
			[
				"bi",
				"dissertation/tail/bibliography.bib"
			],
			[
				"bibi",
				"dissertation/tail/bibliography.bib"
			],
			[
				"bibil",
				"dissertation/tail/bibliography.bib"
			],
			[
				"p2_.tex",
				"dissertation/main/p2_support_for_deep_embedding_development.tex"
			],
			[
				"p1_te",
				"dissertation/main/p1_dsl_embedding.tex"
			],
			[
				"p2_tex",
				"dissertation/main/p2_support_for_deep_embedding_development.tex"
			],
			[
				"p1_int",
				"dissertation/main/p1_dsl_embedding.tex"
			],
			[
				"setting",
				"dissertation/head/settings_custom.tex"
			],
			[
				"ch2",
				"dissertation/main/ch2_dsl_embedding.tex"
			],
			[
				"ch3",
				"dissertation/main/ch3_polyvariant_staging.tex"
			],
			[
				"ch1",
				"dissertation/main/ch1_introduction.tex"
			],
			[
				"ch1_",
				"dissertation/main/ch1_introduction.tex"
			],
			[
				"langu",
				"scala-yinyang/components/core/src/transformers/LanguageVirtualization.scala"
			],
			[
				"settings",
				"dissertation/head/settings_custom.tex"
			],
			[
				"dataop",
				"virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala"
			],
			[
				"reporter.s",
				"scala/src/compiler/scala/tools/nsc/reporters/Reporter.scala"
			],
			[
				"context.scala",
				"scala/src/reflect/scala/reflect/macros/blackbox/Context.scala"
			],
			[
				"staticall",
				"scala-yinyang/components/yin-yang/src/api/StaticallyChecked.scala"
			],
			[
				"position.scala",
				"scala/src/reflect/scala/reflect/api/Position.scala"
			],
			[
				"position",
				"scala/src/reflect/scala/reflect/api/Position.scala"
			],
			[
				"position.s",
				"scala/src/library/scala/io/Position.scala"
			],
			[
				"statically",
				"scala-yinyang/components/yin-yang/src/api/StaticallyChecked.scala"
			],
			[
				"reflectpackage",
				"scala/src/library/scala/reflect/package.scala"
			],
			[
				"statica",
				"scala-yinyang/components/yin-yang/src/api/StaticallyChecked.scala"
			],
			[
				"package",
				"scala-yinyang/components/examples/src/la/package.scala"
			],
			[
				"yytra",
				"scala-yinyang/components/yin-yang/src/YYTransformer.scala"
			],
			[
				"yyconf",
				"scala-yinyang/components/yin-yang/src/YYConfig.scala"
			],
			[
				"scoe",
				"scala-yinyang/components/core/src/transformers/ScopeInjection.scala"
			],
			[
				"yycon",
				"scala-yinyang/components/yin-yang/src/YYConfig.scala"
			],
			[
				"vir.scal",
				"scala-yinyang/components/paradise/src/annotation/Virtualize.scala"
			],
			[
				"lag",
				"scala-yinyang/components/core/src/transformers/LanguageVirtualization.scala"
			],
			[
				"ch",
				"dissertation/main/ch2_dsl_embedding.tex"
			],
			[
				"ops.",
				"virtualization-lms-core/src/common/MathOps.scala"
			],
			[
				"mapo",
				"virtualization-lms-core/src/common/HashMapOps.scala"
			],
			[
				"listo",
				"virtualization-lms-core/src/common/ListOps.scala"
			],
			[
				"testo",
				"virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala"
			],
			[
				"erro",
				"virtualization-lms-core/test-src/epfl/test15-terrors/ErrorSamples.scala"
			],
			[
				"testda",
				"virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala"
			],
			[
				"test7-an",
				"virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala"
			],
			[
				"baseyin",
				"scala-yinyang/components/yin-yang/src/api/BaseYinYang.scala"
			],
			[
				"lif",
				"scala-yinyang/components/core/src/transformers/LiftLiteralsTransformation.scala"
			],
			[
				"hol",
				"scala-yinyang/components/core/src/transformers/HoleTransformation.scala"
			],
			[
				"yyt",
				"scala-yinyang/components/yin-yang/src/YYTransformer.scala"
			],
			[
				"scop",
				"scala-yinyang/components/core/src/transformers/ScopeInjection.scala"
			],
			[
				"y",
				"scala-yinyang/components/yin-yang/src/YYConfig.scala"
			],
			[
				"hole",
				"scala-yinyang/components/core/src/transformers/HoleTransformation.scala"
			],
			[
				"lift",
				"scala-yinyang/components/core/src/transformers/LiftLiteralsTransformation.scala"
			],
			[
				"vec",
				"scala-yinyang/components/examples/src/la/lifted/VectorOpsRep.scala"
			],
			[
				"shallo",
				"scala-yinyang/components/core/src/shallow/package.scala"
			],
			[
				"virtualte",
				"scala-yinyang/components/paradise/test/VirtualizeTest.scala"
			],
			[
				"virtua",
				"scala-yinyang/components/paradise/src/annotation/Virtualize.scala"
			],
			[
				"virtualany",
				"scala-yinyang/components/paradise/src/VirtualAnyRef.scala"
			],
			[
				"test.sc",
				"~/code/scala-yinyang/components/delite-test/src/lifted/ScalaPkgTest.scala"
			],
			[
				"test",
				"scala-yinyang/components/paradise/test/VirtualizeTest.scala"
			],
			[
				"yytr",
				"scala-yinyang/components/yin-yang/src/YYTransformer.scala"
			],
			[
				"travis",
				"scala-yinyang/.travis.yml"
			],
			[
				"failure",
				"scala-yinyang/components/delite-test/src/FailureCake.scala"
			],
			[
				"fai",
				"scala-yinyang/components/delite-test/src/FailureCake.scala"
			],
			[
				"yy",
				"scala-yinyang/components/yin-yang/src/YYTransformer.scala"
			],
			[
				"scope",
				"scala-yinyang/components/core/src/transformers/ScopeInjection.scala"
			],
			[
				"genet",
				"scala-yinyang/components/examples/test/GenericTranslationTest.scala"
			],
			[
				"shallw",
				"scala-yinyang/components/core/src/shallow/package.scala"
			],
			[
				"vecto",
				"scala-yinyang/components/examples/src/la/lifted/VectorOpsRep.scala"
			],
			[
				"shallow",
				"scala-yinyang/components/core/src/shallow/package.scala"
			],
			[
				"poly",
				"scala-yinyang/components/yin-yang/src/typetransformers/PolyTransformer.scala"
			],
			[
				"base.",
				"scala-yinyang/components/examples/src/base/Base.scala"
			],
			[
				"pack",
				"scala-yinyang/components/core/src/shallow/package.scala"
			],
			[
				"holetra",
				"scala-yinyang/components/core/src/transformers/HoleTransformation.scala"
			],
			[
				"vect",
				"scala-yinyang/components/examples/src/la/lifted/VectorOpsRep.scala"
			],
			[
				"package.s",
				"scala-yinyang/components/examples/src/la/package.scala"
			],
			[
				"packa",
				"scala-yinyang/components/core/src/shallow/package.scala"
			],
			[
				"build.s",
				"scala-yinyang/project/Build.scala"
			],
			[
				"asc",
				"scala-yinyang/components/core/src/transformers/AscriptionTransformation.scala"
			],
			[
				"yystra",
				"scala-yinyang/components/yin-yang/src/api/YYStorageFactory.scala"
			],
			[
				"shall",
				"scala-yinyang/components/core/src/shallow/package.scala"
			],
			[
				"generi",
				"scala-yinyang/components/dsls/test/GenericTranslationTest.scala"
			],
			[
				"vector",
				"scala-yinyang/components/dsls/src/la/lifted/VectorOpsRep.scala"
			],
			[
				"scopein",
				"scala-yinyang/components/core/src/transformers/ScopeInjection.scala"
			],
			[
				"liftliter",
				"scala-yinyang/components/core/src/transformers/LiftLiteralsTransformation.scala"
			],
			[
				"liftli",
				"scala-yinyang/components/core/src/transformers/LiftLiteralsTransformation.scala"
			],
			[
				"printdsl",
				"scala-yinyang/components/dsls/src/print/LiftedPrint.scala"
			],
			[
				"holet",
				"scala-yinyang/components/core/src/transformers/HoleTransformation.scala"
			],
			[
				"basey",
				"scala-yinyang/components/yin-yang/src/api/BaseYinYang.scala"
			],
			[
				".bib",
				"dissertation/tail/bibliography.bib"
			],
			[
				"utils",
				"scala-yinyang/components/core/src/Utils.scala"
			],
			[
				"lang",
				"scala-yinyang/components/core/src/transformers/LanguageVirtualization.scala"
			],
			[
				"feeid",
				"scala-yinyang/components/core/src/analysis/FreeIdentAnalysis.scala"
			],
			[
				"scvi",
				"scala-yinyang/components/dsls/src/base/ScalaVirtualizedBase.scala"
			],
			[
				"fr",
				"scala-yinyang/components/core/src/analysis/FreeIdentAnalysis.scala"
			],
			[
				"scoepe",
				"scala-yinyang/components/core/src/transformers/ScopeInjection.scala"
			],
			[
				"embed",
				"scala-yinyang/components/paradise/src/EmbeddedControls.scala"
			],
			[
				"virt",
				"scala-yinyang/components/paradise/test/VirtualizeTest.scala"
			],
			[
				"langauge",
				"scala-yinyang/components/core/src/transformers/LanguageVirtualization.scala"
			],
			[
				"test.sca",
				"scala-yinyang/components/dsls/test/GenericTranslationTest.scala"
			],
			[
				"virtul",
				"scala-yinyang/components/paradise/test/VirtualizeTest.scala"
			],
			[
				"gene",
				"scala-yinyang/components/dsls/test/GenericTranslationTest.scala"
			],
			[
				"specs",
				"scala-yinyang/components/paradise/src/EmbeddedControls.scala"
			],
			[
				"util",
				"scala-yinyang/components/core/src/Utils.scala"
			],
			[
				"generic",
				"scala-yinyang/components/dsls/test/GenericTranslationTest.scala"
			],
			[
				"pacakge.scal",
				"scala-yinyang/components/dsls/src/la/package.scala"
			],
			[
				"code",
				"scala-yinyang/components/yin-yang/src/api/CodeGenerator.scala"
			],
			[
				"s",
				"scala-yinyang/components/dsls/src/base/ScalaVirtualizedBase.scala"
			],
			[
				"embedd",
				"scala-yinyang/components/paradise/src/EmbeddedControls.scala"
			],
			[
				"liftd",
				"scala-yinyang/components/dsls/src/print/LiftedPrint.scala"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 1218.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 387.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
