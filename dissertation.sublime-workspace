{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"rom",
				"rom rompf_scala-virtualized:_2009: Scala-virtualized: Linguistic reuse for deep embeddings"
			],
			[
				"sec",
				"sec:motivation"
			],
			[
				"Matri",
				"MatrixMult"
			],
			[
				"matri",
				"MatrixCarrier"
			],
			[
				"Ordering",
				"ScalaGenOrderingOps"
			],
			[
				"Boolean",
				"BooleanOpsExp"
			],
			[
				"Dyn",
				"DynamicBase"
			],
			[
				"update",
				"updateAttachment"
			],
			[
				"Double",
				"DoubleNumeric"
			],
			[
				"App",
				"AppTpe"
			],
			[
				"expec",
				"expectedTp"
			],
			[
				"Type",
				"TypeVariant"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main/ch3_polyvariant_staging.tex",
			"settings":
			{
				"buffer_size": 41320,
				"line_ending": "Unix"
			}
		},
		{
			"file": "head/settings_epfl_template.tex",
			"settings":
			{
				"buffer_size": 6740,
				"line_ending": "Unix"
			}
		},
		{
			"file": "head/settings_custom.tex",
			"settings":
			{
				"buffer_size": 13000,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 1202,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/YYTransformer.scala",
			"settings":
			{
				"buffer_size": 12862,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Reified.scala",
			"settings":
			{
				"buffer_size": 379,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/LiftLiteralsTransformation.scala",
			"settings":
			{
				"buffer_size": 1373,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/examples/src/base/Base.scala",
			"settings":
			{
				"buffer_size": 1358,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/typetransformers/PolyTransformer.scala",
			"settings":
			{
				"buffer_size": 2275,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/YYConfig.scala",
			"settings":
			{
				"buffer_size": 965,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/AscriptionTransformation.scala",
			"settings":
			{
				"buffer_size": 2464,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/project/Build.scala",
			"settings":
			{
				"buffer_size": 6159,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/.travis.yml",
			"settings":
			{
				"buffer_size": 284,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/examples/src/la/lifted/VectorOpsRep.scala",
			"settings":
			{
				"buffer_size": 12905,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main/ch2_dsl_embedding.tex",
			"settings":
			{
				"buffer_size": 124184,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala",
			"settings":
			{
				"buffer_size": 6748,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala",
			"settings":
			{
				"buffer_size": 41708,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala",
			"settings":
			{
				"buffer_size": 7333,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala",
			"settings":
			{
				"buffer_size": 10224,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala",
			"settings":
			{
				"buffer_size": 8759,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala",
			"settings":
			{
				"buffer_size": 16199,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/build.sbt",
			"settings":
			{
				"buffer_size": 1518,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package scala.virtualization.lms\npackage epfl\npackage test15\n\nimport common._\nimport test1._\n\nimport scala.reflect.macros.Context\nimport language.experimental.macros\nimport util.OverloadHack\nimport java.io.{ PrintWriter, StringWriter, FileOutputStream }\nimport scala.reflect.SourceContext\n\n/**\n * Test that shows type system problems with Rep[T] DSL Interface. The test should flush out what is not good with Rep based approach:\n *   1) Type errors are not readable. There are many wierd errors that the developer can not reason about\n *   2) Requires invocation of the unit parameter in some occasions\n *      * Arithmetic operations\n *      * Tuples\n *   3) Does not allow recursion without annotations\n *   4) Does not prevent the user from using Scala language features\n *   5) Pollutes the method signatures\n *   6) Requires infix_method notation\n *   7) User code is not modular\n *   8) User code can not be debugged\n */\ntrait RepDSL extends ScalaOpsPkg with LiftPrimitives with LiftBoolean with LiftString {\n\n  /**\n   * Definitions of varialbes get the wrong type if unit is not used.\n   */\n  def valVarDef(u: Rep[Unit]): Rep[Unit] = {\n    def testMethod(a: Rep[Int], b: Rep[String], c: Rep[Boolean], d: Rep[Double]) = {\n      print(a)\n      print(b)\n      print(c)\n      print(d)\n    }\n\n    {\n      val i = 1\n      val s = \"y\"\n      val b = true\n      val d = 0.1\n\n      // this works because the implicit gets invoked on the method\n      testMethod(i, s, b, d)\n      // Users tend to write the following (see project stanford-ppl/Delite with grep -rn \"unit(\" .)\n      //      val i = unit(1)\n      //      val s = unit(\"y\")\n      //      val b = unit(true)\n      //      val d = unit(0.1)\n      // TODO investigate why is that? Try to remove them in Delite and see what fails.\n    }\n\n    // assignment to variables does not work properly\n    // we need to fix the scala-virtualized first and then reason about issues.\n    // FIXME one thing that will certainly fail is when we initialize variable with a constant.\n    {  // all var problems can be fixed by removing the bug in EmbeddedControls\n\n      /* FIXME This throws an exception at compilation time. Scala virtualized-bug.\n       var scala = 2\n       scala = 2.10\n       scala = \"perl\"\n       */\n\n      // BUG in Scala-Virtualized\n      // FIXME this throws a class cast exception\n      try {\n        var scala = 2\n        scala = \"perl\"\n        print(scala)\n      } catch {\n        case e: Throwable => ()\n      }\n\n      // BUG this throws a class cast exception and should fail at compile time.\n      try {\n        var scala = unit(2)\n        scala = unit(\"perl\")\n      } catch {\n        case e: Throwable => System.out.println(\"\")\n      }\n\n      // BUG this should work\n      {\n        var i: Rep[Int] = 1\n        var b: Rep[Boolean] = true\n        var d: Rep[Double] = 0.1\n        // BUG throws out of permgen space\n        //var s: Rep[String] = unit(\"y\")\n        //s = \"k\"\n        var s: Rep[String] = unit(\"y\")\n\n        testMethod(i, s, b, d)\n      }\n    }\n\n    // TODO see what happens with the code below. How does var definition work in nested scopes.\n    /* Why does this fail? TODO Investigate and try to fix if SourceContexts are broken. */\n    {\n      var scala = unit(\"scala 2\")\n      // FIXME if we remove the line below the compiler thinks that we are providing the manifest.\n      // Since the macro will also take care of the manifests we should not have this issue.\n\n      {\n          var scala = unit(\"dotty\")\n\n          print(scala)\n      }\n    }\n\n    ()\n  }\n\n  // TODO algebraic data types\n\n  /**\n   * This test shows how regular scala constructs can be mixed with DSL code. This can create confusion with non-proficient users.\n   */\n  def whitelistOperations(v: Rep[Unit]): Rep[Unit] = {\n    // there should be a whitelist of language features\n    // and a nice warning that notes that they are banned\n    {\n      // FIXME The following operations should not be allowd in the DSL code\n      val y = scala.collection.immutable.List(1 -> 3) match {\n        case scala.collection.immutable.List((1, 3)) => \"Nice DSL feature that does not exist\"\n      }\n\n      // This should not be allowed in the DSL\n      val z = try {\n        throw new RuntimeException(\"?????\")\n      } catch { case e: RuntimeException => () }\n\n      // This should be lifted\n      println(\"hey\")\n    }\n  }\n\n  /**\n   * The test that shows errors related to tuples.\n   *\n   * If we leave explicit control about the Rep types to the user we get a complex language that is hard to use.\n   * If the macro searches for the best match we can get into a very complex macro, or even exponential search space explosion.\n   * Check this on an example!!!\n   */\n  def tuples(v: Rep[Unit]): Rep[Unit] = {\n\n    def outer(t: Rep[(Int, Int)]): Unit = print(t)\n    def inner(t: Tuple2[Rep[Int], Rep[Int]]): Unit = print(t)\n\n    val x = (1, 2)\n    // outer(x) // does not compile\n    // outer((1,2)) // does not compile\n    // TODO can this be fixed by better implicits\n\n    val xa: (Rep[Int], Rep[Int]) = (1, 2)\n    //outer(xa)\n\n    val xu = unit((1, 2))\n    //outer(xu)\n\n    {\n      val v = unit(2)\n\n      // FIXME it should work without the unit\n      val z = (unit(1), v)\n      inner(z)\n\n      val x = (1, v)\n      //outer(x)\n    }\n\n    inner((1, 2))\n\n  }\n\n  def intop(x: Rep[Int]) = print(x)\n  def intmap(x: Rep[Int] => Rep[Int]) = x(1)\n\n  // TODO Type inference issues\n  // closure returns a constant: {x => 1} will be inferred as Rep[?] => Int.\n  // closure returns an conditional: if (passes > max_passes) unit(0) else max_passes - passes\n  /**\n   * This test finds the type inference related errors.\n   */\n  def inference(u: Rep[Unit]): Rep[Unit] = {\n\n\n    val number = unit(1)\n    val cond = unit(true)\n\n    // What will be the type of x? How is this achieved?\n    {\n      def m(x: Rep[Int]) = print(x.toString)\n\n      val x = if (cond) number else 1\n      // BUG\n      // m(x) // out of PermGen space TODO investigate\n//    intop(x)\n\n    }\n\n\n\n    {\n      // how does this work?\n      val x = if (unit(true)) if (unit(true)) { print(\"\"); 1 } else { print(\"\"); 2 } else 4\n      intop(x)\n    }\n\n    { // how does this work?\n      val v = unit(1)\n      intmap(x => if (unit(true)) 0 else v)\n    }\n\n    // FIXME methods does not have unit included if it is of type Rep[Unit]\n    {\n      // def m: Rep[Int] = 1\n    }\n    ()\n  }\n\n  /**\n   * This test shows how recursion must specially annotated. The macro based approach should allow recursion as in regular\n   * Scala.\n   */\n  def recursion(u: Rep[Unit]): Rep[Unit] = {\n\n    def gcd(x: Rep[Int], y: Rep[Int]): Rep[Int] =\n      if (y == 0) x\n      else gcd(x, x % y)\n\n    // FIXME this causes the stack overflow.\n    // gcd(1213, 898987)\n    //\n    // def gcd(x: Rep[Int], y: Rep[Int]): Rep[Int] = lam {\n    //   if (y == 0) x\n    //   else gcd(x, x % y) }\n    ()\n  }\n\n  /**\n   * This test shows examples of ugly error messages. This can be added later as we do the work.\n   * I have seen a lot of them so I know they exist.\n   */\n  def typeErrors(u: Rep[Unit]): Rep[Unit] = {\n    {\n     // val one: Rep[Int] = 1;\n     // val void: Rep[Unit] = ()\n     // one + void // ill typed term\n     // No implicit view available from RepDSL.this.Rep[Unit] => Int.\n    }\n\n\n    {\n      //val x: Rep[Array[Int]] = NewArray[Int](10)\n      //x foreach { x =>\n      //  x + \"a\"\n      //}\n      //[error] type mismatch;\n      //[error]  found   : RepDSL.this.Rep[String]\n      //[error]  required: RepDSL.this.Rep[Unit]\n    }\n\n    def abs(t: Int): Int = ???\n\n    {\n      // Rep types end up in non-rep types. This can have a nicer error.\n      // val x: Rep[Int] = 1\n      // val y = abs(x)\n      // [error] found   : RepDSL.this.Rep[Int]\n      // [error]  required: Int\n    }\n\n\n    {\n      // Ugly errors with virtualization\n      val x: Rep[Int] = 1\n      val z: Rep[Int] = x - \"1\"\n      //[error] /home/vjovanov/code/lms/test-src/epfl/test15-terrors/ErrorSamples.scala:280: [Suppressed for performance reasons (SI-6149). Compile with -DshowSuppressedErrors=true to show].\n    }\n\n    {\n      // Erasure is evil\n      // def m(x: Rep[Int]) = ???\n      // def m(x: Rep[String]) = ???\n      // method m is defined twice\n      // [error]   conflicting symbols both originated in file '/home/vjovanov/code/lms/test-src/epfl/test15-terrors/ErrorSamples.scala'\n      // [error]       def m(x: Rep[String]) = ???\n    }\n\n  }\n\n}\n\nclass TestRepTypesErrors extends FileDiffSuite {\n\n  val prefix = \"test-out/epfl/test14-\"\n\n  def testPolymorphicStaging1 = {\n    withOutFile(prefix + \"var-val\") {\n      new RepDSL with ScalaOpsPkgExp { self =>\n        val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n        codegen.emitSource(valVarDef, \"valVarDef\", new PrintWriter(System.out))\n      }\n    }\n    //assertFileEqualsCheck(prefix + \"staging1\")\n  }\n\n  def testPolymorphicStaging2 = {\n    withOutFile(prefix + \"inference\") {\n      new RepDSL with ScalaOpsPkgExp { self =>\n        val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n        codegen.emitSource(inference, \"inference\", new PrintWriter(System.out))\n      }\n    }\n    //assertFileEqualsCheck(prefix + \"staging1\")\n  }\n\n  def testPolymorphicStaging3 = {\n    withOutFile(prefix + \"recursion\") {\n      new RepDSL with ScalaOpsPkgExp { self =>\n        val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n        codegen.emitSource(recursion, \"recursion\", new PrintWriter(System.out))\n      }\n    }\n    //assertFileEqualsCheck(prefix + \"staging1\")\n  }\n\n  def testPolymorphicStaging4 = {\n    withOutFile(prefix + \"whitelistOperations\") {\n      new RepDSL with ScalaOpsPkgExp { self =>\n        val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n        codegen.emitSource(whitelistOperations, \"whitelistOperations\", new PrintWriter(System.out))\n      }\n    }\n    //assertFileEqualsCheck(prefix + \"staging1\")\n  }\n\n  def testPolymorphicStaging5 = {\n    withOutFile(prefix + \"tuples\") {\n      new RepDSL with ScalaOpsPkgExp { self =>\n        val codegen = new ScalaCodeGenPkg with ScalaGenIfThenElse with ScalaGenOrderingOps { val IR: self.type = self }\n        codegen.emitSource(tuples, \"tuples\", new PrintWriter(System.out))\n      }\n    }\n    //assertFileEqualsCheck(prefix + \"staging1\")\n  }\n\n}\n\n// vim: set ts=2 sw=2 et:\n",
			"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-terrors/ErrorSamples.scala",
			"file_size": 10481,
			"file_write_time": 130891600580000000,
			"settings":
			{
				"buffer_size": 10481,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala",
			"settings":
			{
				"buffer_size": 6885,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Package Control Messages\n========================\n\nLaTeXTools\n----------\n\n  LaTeXTools Plugin version 2015-10-04 changelog:\n  \n  This release incorporates a cool user-contributed feature.\n  \n  New features (btstream, Ian Bacher):\n  \n  - Fill Helper feature: autocompletion of files and packages\n  \n  Bugs fixed:\n  \n  - README fixes\n\n  LaTeXTools Plugin version 2015-10-01 changelog:\n  \n  Sorry for the long hiatus. This is a quick-fix release for El Capitan. More is coming though!\n  \n  If you are NOT on a Mac running El Capitan, there is nothing you need to do, and no other news.\n  \n  NOTE: please check the README. I updated the default settings file, but some action is required on your part. The README has the details, which DO depend upon the version of MacTeX you are running.\n",
			"settings":
			{
				"buffer_size": 786,
				"line_ending": "Unix",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/BaseYinYang.scala",
			"settings":
			{
				"buffer_size": 761,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/CodeGenerator.scala",
			"settings":
			{
				"buffer_size": 454,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Executable.scala",
			"settings":
			{
				"buffer_size": 206,
				"line_ending": "Unix",
				"name": "Executable.scala"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Staged.scala",
			"settings":
			{
				"buffer_size": 465,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/StaticallyChecked.scala",
			"settings":
			{
				"buffer_size": 679,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/macros/blackbox/Context.scala",
			"settings":
			{
				"buffer_size": 4220,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/reporters/Reporter.scala",
			"settings":
			{
				"buffer_size": 2359,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 1332 files for \"type Position\" (case sensitive)\n\n0 matches\n\nSearching 1332 files for \"type Position\" (case sensitive)\n\n0 matches\n\nSearching 1332 files for \"case classPosition\" (case sensitive)\n\n0 matches\n\nSearching 1332 files for \"case class Position\" (case sensitive)\n\n0 matches\n\nSearching 19189 files for \"case class Position\" (case sensitive)\n\n\n\nSearching 19189 files for \"type Position\" (case sensitive)\n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Aliases.scala:\n   11    override type TypeName = universe.TypeName\n   12    override type Tree = universe.Tree\n   13:   override type Position = universe.Position\n   14    override type Scope = universe.Scope\n   15    override type Modifiers = universe.Modifiers\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/ast/parser/MarkupParsers.scala:\n   46      import Tokens.{ LBRACE, RBRACE }\n   47  \n   48:     type PositionType = Position\n   49      type InputType    = CharArrayReader\n   50      type ElementType  = Tree\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/ast/parser/xml/MarkupParserCommon.scala:\n   19    protected def unreachable = scala.sys.error(\"Cannot be reached.\")\n   20  \n   21:   type PositionType     // Int, Position\n   22    type ElementType      // NodeSeq, Tree\n   23    type NamespaceType    // NamespaceBinding, Any\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/util/package.scala:\n  105    // the sbt 0.12.4 compiler interface.\n  106    @deprecated(\"Moved to scala.reflect.internal.util.Position\", \"2.10.0\")\n  107:   type Position = scala.reflect.internal.util.Position\n  108    @deprecated(\"Moved to scala.reflect.internal.util.NoPosition\", \"2.10.0\")\n  109    val NoPosition = scala.reflect.internal.util.NoPosition\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/api/Positions.scala:\n   20     *  @group Positions\n   21     */\n   22:   type Position >: Null <: AnyRef with scala.reflect.api.Position { type Pos = Position }\n   23  \n   24    /** A special \"missing\" position.\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/Positions.scala:\n   24   */\n   25  trait Positions extends api.Positions { self: SymbolTable =>\n   26:   type Position = scala.reflect.internal.util.Position\n   27    val NoPosition = scala.reflect.internal.util.NoPosition\n   28    implicit val PositionTag = ClassTag[Position](classOf[Position])\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/macros/Aliases.scala:\n   33  \n   34    /** Defines a universe-specific notion of positions. */\n   35:   type Position = universe.Position\n   36  \n   37    /** The base type of all scopes. */\n\n7 matches across 7 files\n\n\nFSearching 19189 files for \"case class Position\" (case sensitive)\n\n0 matches\n\nFSearching 19189 files for \"trait Position\" (case sensitive)\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/ast/Positions.scala:\n    2  package ast\n    3  \n    4: trait Positions extends scala.reflect.internal.Positions {\n    5    self: Global =>\n    6  \n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/api/Position.scala:\n   52   *  @group ReflectionAPI\n   53   */\n   54: trait Position extends Attachments {\n   55  \n   56    /** @inheritdoc */\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/api/Positions.scala:\n   13   * @group ReflectionAPI\n   14   */\n   15: trait Positions {\n   16    self: Universe =>\n   17  \n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/Positions.scala:\n   23   *   Otherwise, the singleton consisting of the node itself.\n   24   */\n   25: trait Positions extends api.Positions { self: SymbolTable =>\n   26    type Position = scala.reflect.internal.util.Position\n   27    val NoPosition = scala.reflect.internal.util.NoPosition\n\n/Users/vjovanov/code/scala/test/files/pos/patmat.scala:\n   77    val NEXT = new Dir {}\n   78  \n   79:   trait Position extends Core\n   80  \n   81    (null: Core, null: Dir) match {\n\n5 matches across 5 files\n\n\nSearching 19189 files for \"SourceContext\" (case sensitive)\n\n/Users/vjovanov/dissertation/main/ch2_dsl_embedding.tex:\n  249  \n  250  In the \\code{VectorDSL} interface every method has an additional implicit\n  251: parameter of type \\code{SourceContext} and every generic type requires an\n  252: additional \\code{TypeTag} type class. The \\code{SourceContext} contains information\n  253  about the current file name, line number, and character offset.\n  254: \\code{SourceContext}s are used for mapping generated code to the original\n  255  program source. \\code{TypeTag}s carry all information about the type of terms.\n  256  They are used to propagate run-time type information through the \\edsl{}\n  257  compilation for optimizations and generating code for statically typed target\n  258: languages. In the \\edsl definitions the \\code{SourceContext} is rarely used\n  259  explicitly (i.e., as an argument). It is provided ``behind the scenes'' by implicit\n  260  definitions that are provided in the DSL.\n  ...\n  265    object Vector {\n  266      def fromSeq[T:Numeric:TypeTag](seq: Rep[Seq[T]])\n  267:       (implicit sc: SourceContext): Rep[Vector[T]] =\n  268        vector_fromSeq(seq)\n  269      def fill[T:Numeric:TypeTag](value: Rep[T], size: Rep[Int])\n  270:       (implicit sc: SourceContext): Rep[Vector[T]] =\n  271        vector_fill(value, size)\n  272      def range(start: Rep[Int], end: Rep[Int])\n  273:       (implicit sc: SourceContext):Rep[Vector[Int]]=\n  274        vector_range(start, end)\n  275    }\n  ...\n  277    implicit class VectorRep[T:Numeric:TypeTag]\n  278      (v: Rep[Vector[T]]) {\n  279:     def data(implicit sc: SourceContext): Rep[Seq[T]] =\n  280        vector_data(v)\n  281      def +(that: Rep[Vector[T]])\n  282:       (implicit sc: SourceContext):Rep[Vector[T]] =\n  283        vector_plus(v, that)\n  284      def map[S:Numeric:TypeTag](f: Rep[T] => Rep[S])\n  285:       (implicit sc: SourceContext): Rep[Vector[S]] =\n  286        vector_map(v, f)\n  287    }\n  ...\n  289    // IR constructors for `map` and `plus` are elided\n  290    case class VectorFill[T:TypeTag](v: Rep[T], s: Rep[Int])\n  291:     (implicit sc: SourceContext)\n  292    def vector_fill[T:Numeric:TypeTag](v: Rep[T], size: Rep[Int])\n  293:     (implicit sc: SourceContext): Rep[Vector[T]] =\n  294      VectorFill(v, size) // IR node construction\n  295  }\n  ...\n  320  \n  321  In DSLs that use code generation, method signatures must be\n  322:  enriched with source code information for purposes of debugging~(\\code{SourceContext})\n  323   and type information for generating right types~(\\code{TypeTag}). This information also\n  324:  leaks in the DSL interface. In Scala \\code{TypeTag}s and \\code{SourceContext}s are\n  325   passed with implicit parameters. This makes the interface harder to understand as the user of\n  326   the \\edsl{}, who might not be an expert programmer, needs to understand concepts\n  327:  like \\code{TypeTag} and \\code{SourceContext}. A method \\code{map} from the introductory example~(\\S \\ref{sec:introduction-yy}) with source and type information has two additional implicit parameters:\\begin{lstparagraph}\n  328    def map[U](fn: Rep[T => U])\n  329:     (implicit sc: SourceContext, tpe: TypeTag[U]): Rep[Vector[U]]\n  330   \\end{lstparagraph}\n  331  \n  ...\n  373  val x = HashMap[Int, String](1 -> \"one\", 2 -> \"two\")\n  374  x.keys()\n  375: \\end{lstparagraph} yields an error message with \\code{SourceContext} parameters:\\begin{lstparagraph}\n  376  error: not enough arguments for method keys: (implicit pos\n  377: : scala.reflect.SourceContext)Prog.this.Rep[Iterable[Int]].\n  378  Unspecified value parameter pos.\n  379    x.keys()\n  ...\n 1215   are respectively translated to calls \\code{range} and \\code{pow} on\n 1216   \\code{this.Vector} and \\code{this.`package`}. For simplicity, passing source\n 1217:  information (\\code{SourceContext}) and type information \\code{TypeTag} is\n 1218   handled implicitly by the Scala compiler. In absence of implicit parameters\n 1219   they should be handled by the translation.\n ....\n 1416  \\code{$\\$$ifThenElse} method:\\begin{lstparagraph}\n 1417  def $\\$$ifThenElse[T](cond: Boolean, thn: => T, els: => T)(\n 1418:   implicit sc: SourceContext): T = {\n 1419    val (thnCnt: Long, elsCnt: Long) =\n 1420      globalProfiles.getOrElse(sc, (0, 0))\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/ArrayBufferOps.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  import scala.collection.mutable.ArrayBuffer\n    7  import scala.virtualization.lms.internal.GenericNestedCodegen\n    8  import collection.mutable.ArrayBuffer\n    9: import scala.reflect.SourceContext\n   10  \n   11  trait ArrayBufferOps extends Base {\n   ..\n   18    \n   19    class ArrayBufferOpsCls[A:Manifest](l: Rep[ArrayBuffer[A]]) {\n   20:     def +=(e: Rep[A])(implicit pos: SourceContext) = arraybuffer_append(l,e)\n   21:     def mkString(sep: Rep[String] = unit(\"\"))(implicit pos: SourceContext) = arraybuffer_mkstring(l,sep)\n   22:     def append(l: Rep[ArrayBuffer[A]], e: Rep[A])(implicit pos: SourceContext) = arraybuffer_append(l,e)\n   23      def clear() = arraybuffer_clear(l)\n   24:     def toArray(implicit pos: SourceContext) = arraybuffer_toarray(l)\n   25:     def toSeq(implicit pos: SourceContext) = arraybuffer_toseq(l)\n   26    }\n   27    \n   28:   def infix_+=[A:Manifest](l: Rep[ArrayBuffer[A]], e: Rep[A])(implicit pos: SourceContext) = arraybuffer_append(l, e)\n   29  \n   30    /* when mixed in with OptiML, one of these infix operations causes an NPE in the scala-virtualized compiler */ //TR: still the case?\n   31    /*\n   32:   def infix_mkString[A:Manifest](l: Rep[ArrayBuffer[A]], sep: Rep[String] = unit(\"\"))(implicit pos: SourceContext) = arraybuffer_mkstring(l, sep)\n   33:   def infix_+=[A:Manifest](l: Rep[ArrayBuffer[A]], e: Rep[A])(implicit pos: SourceContext) = arraybuffer_append(l, e)\n   34:   def infix_append[A:Manifest](l: Rep[ArrayBuffer[A]], e: Rep[A])(implicit pos: SourceContext) = arraybuffer_append(l, e)\n   35:   def infix_toArray[A:Manifest](l: Rep[ArrayBuffer[A]])(implicit pos: SourceContext) = arraybuffer_toarray(l)\n   36:   def infix_toSeq[A:Manifest](l: Rep[ArrayBuffer[A]])(implicit pos: SourceContext) = arraybuffer_toseq(l)\n   37    */\n   38    \n   39:   def arraybuffer_mkstring[A:Manifest](l: Rep[ArrayBuffer[A]], sep: Rep[String])(implicit pos: SourceContext): Rep[String]\n   40:   def arraybuffer_append[A:Manifest](l: Rep[ArrayBuffer[A]], e: Rep[A])(implicit pos: SourceContext): Rep[Unit]\n   41:   def arraybuffer_new[A:Manifest](xs: Seq[Rep[A]])(implicit pos: SourceContext): Rep[ArrayBuffer[A]]\n   42    def arraybuffer_clear[A:Manifest](l: Rep[ArrayBuffer[A]]): Rep[Unit]\n   43:   def arraybuffer_toarray[A:Manifest](x: Rep[ArrayBuffer[A]])(implicit pos: SourceContext): Rep[Array[A]]\n   44:   def arraybuffer_toseq[A:Manifest](x: Rep[ArrayBuffer[A]])(implicit pos: SourceContext): Rep[Seq[A]]\n   45  }\n   46  \n   ..\n   55    case class ArrayBufferToSeq[A:Manifest](x: Exp[ArrayBuffer[A]]) extends Def[Seq[A]]\n   56  \n   57:   def arraybuffer_new[A:Manifest](xs: Seq[Exp[A]])(implicit pos: SourceContext) = reflectMutable(ArrayBufferNew(xs))\n   58:   def arraybuffer_mkstring[A:Manifest](l: Exp[ArrayBuffer[A]], sep: Exp[String])(implicit pos: SourceContext) = ArrayBufferMkString(l, sep)\n   59:   def arraybuffer_append[A:Manifest](l: Exp[ArrayBuffer[A]], e: Exp[A])(implicit pos: SourceContext) = reflectWrite(l)(ArrayBufferAppend(l, e))\n   60    def arraybuffer_clear[A:Manifest](l: Exp[ArrayBuffer[A]]) = reflectWrite(l)(ArrayBufferClear(l))\n   61:   def arraybuffer_toarray[A:Manifest](x: Exp[ArrayBuffer[A]])(implicit pos: SourceContext) = ArrayBufferToArray(x)\n   62:   def arraybuffer_toseq[A:Manifest](x: Exp[ArrayBuffer[A]])(implicit pos: SourceContext) = ArrayBufferToSeq(x)\n   63  \n   64    //////////////\n   65    // mirroring\n   66  \n   67:   override def mirrorDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = (e match {\n   68      case ArrayBufferMkString(l,r) => ArrayBufferMkString(f(l),f(r))\n   69      case ArrayBufferAppend(l,r) => ArrayBufferAppend(f(l),f(r))\n   ..\n   72    \n   73  /*\n   74:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   75      case Reflect(ArrayBufferMkString(l,r), u, es) => reflectMirrored(Reflect(ArrayBufferMkString(f(l),f(r)), mapOver(f,u), f(es)))(mtype(manifest[A]))\n   76      case Reflect(ArrayBufferAppend(l,r), u, es) => reflectMirrored(Reflect(ArrayBufferAppend(f(l),f(r)), mapOver(f,u), f(es)))(mtype(manifest[A]))\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/ArrayOps.scala:\n    4  import java.io.PrintWriter\n    5  import internal._\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait ArrayOps extends Variables {\n    .\n   25  \n   26    class ArrayOpsCls[T:Manifest](a: Rep[Array[T]]){\n   27:     def apply(n: Rep[Int])(implicit pos: SourceContext) = array_apply(a, n)\n   28:     def update(n: Rep[Int], y: Rep[T])(implicit pos: SourceContext) = array_update(a,n,y)\n   29:     def length(implicit pos: SourceContext) = array_length(a)\n   30:     def foreach(block: Rep[T] => Rep[Unit])(implicit pos: SourceContext) = array_foreach(a, block)\n   31:     def sort(implicit pos: SourceContext) = array_sort(a)\n   32      def map[B:Manifest](f: Rep[T] => Rep[B]) = array_map(a,f)\n   33      def toSeq = array_toseq(a)\n   ..\n   37    def array_obj_new[T:Manifest](n: Rep[Int]): Rep[Array[T]]\n   38    def array_obj_fromseq[T:Manifest](xs: Seq[Rep[T]]): Rep[Array[T]]\n   39:   def array_apply[T:Manifest](x: Rep[Array[T]], n: Rep[Int])(implicit pos: SourceContext): Rep[T]\n   40:   def array_update[T:Manifest](x: Rep[Array[T]], n: Rep[Int], y: Rep[T])(implicit pos: SourceContext): Rep[Unit]\n   41:   def array_unsafe_update[T:Manifest](x: Rep[Array[T]], n: Rep[Int], y: Rep[T])(implicit pos: SourceContext): Rep[Unit]\n   42:   def array_length[T:Manifest](x: Rep[Array[T]])(implicit pos: SourceContext) : Rep[Int]\n   43:   def array_foreach[T:Manifest](x: Rep[Array[T]], block: Rep[T] => Rep[Unit])(implicit pos: SourceContext): Rep[Unit]\n   44:   def array_copy[T:Manifest](src: Rep[Array[T]], srcPos: Rep[Int], dest: Rep[Array[T]], destPos: Rep[Int], len: Rep[Int])(implicit pos: SourceContext): Rep[Unit]\n   45:   def array_unsafe_copy[T:Manifest](src: Rep[Array[T]], srcPos: Rep[Int], dest: Rep[Array[T]], destPos: Rep[Int], len: Rep[Int])(implicit pos: SourceContext): Rep[Unit]\n   46:   def array_sort[T:Manifest](x: Rep[Array[T]])(implicit pos: SourceContext): Rep[Array[T]]\n   47    def array_map[A:Manifest,B:Manifest](a: Rep[Array[A]], f: Rep[A] => Rep[B]): Rep[Array[B]]\n   48    def array_toseq[A:Manifest](a: Rep[Array[A]]): Rep[Seq[A]]\n   ..\n   77    def array_obj_new[T:Manifest](n: Exp[Int]) = reflectMutable(ArrayNew(n))\n   78    def array_obj_fromseq[T:Manifest](xs: Seq[Exp[T]]) = /*reflectMutable(*/ ArrayFromSeq(xs) /*)*/\n   79:   def array_apply[T:Manifest](x: Exp[Array[T]], n: Exp[Int])(implicit pos: SourceContext): Exp[T] = ArrayApply(x, n)\n   80:   def array_update[T:Manifest](x: Exp[Array[T]], n: Exp[Int], y: Exp[T])(implicit pos: SourceContext) = reflectWrite(x)(ArrayUpdate(x,n,y))\n   81:   def array_unsafe_update[T:Manifest](x: Rep[Array[T]], n: Rep[Int], y: Rep[T])(implicit pos: SourceContext) = ArrayUpdate(x,n,y)\n   82:   def array_length[T:Manifest](a: Exp[Array[T]])(implicit pos: SourceContext) : Rep[Int] = ArrayLength(a)\n   83:   def array_foreach[T:Manifest](a: Exp[Array[T]], block: Exp[T] => Exp[Unit])(implicit pos: SourceContext): Exp[Unit] = {\n   84      val x = fresh[T]\n   85      val b = reifyEffects(block(x))\n   86      reflectEffect(ArrayForeach(a, x, b), summarizeEffects(b).star)\n   87    }\n   88:   def array_copy[T:Manifest](src: Exp[Array[T]], srcPos: Exp[Int], dest: Exp[Array[T]], destPos: Exp[Int], len: Exp[Int])(implicit pos: SourceContext) = reflectWrite(dest)(ArrayCopy(src,srcPos,dest,destPos,len))\n   89:   def array_unsafe_copy[T:Manifest](src: Exp[Array[T]], srcPos: Exp[Int], dest: Exp[Array[T]], destPos: Exp[Int], len: Exp[Int])(implicit pos: SourceContext) = ArrayCopy(src,srcPos,dest,destPos,len)\n   90:   def array_sort[T:Manifest](x: Exp[Array[T]])(implicit pos: SourceContext) = ArraySort(x)\n   91    def array_map[A:Manifest,B:Manifest](a: Exp[Array[A]], f: Exp[A] => Exp[B]) = {\n   92      val x = fresh[A]\n   ..\n  100    // mirroring\n  101  \n  102:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  103      case ArrayApply(a,x) => array_apply(f(a),f(x))(mtype(manifest[A]),pos)\n  104      case ArrayLength(x) => array_length(f(x))\n  ...\n  139     * @author  Alen Stojanov (astojanov@inf.ethz.ch)\n  140     */\n  141:   override def array_length[T:Manifest](a: Exp[Array[T]])(implicit pos: SourceContext) : Rep[Int] = a match {\n  142      case Def(ArrayNew(n: Exp[Int])) => n\n  143      case Def(ArrayFromSeq(xs)) => Const(xs.size)\n  ...\n  151    }\n  152  \n  153:   override def array_apply[T:Manifest](x: Exp[Array[T]], n: Exp[Int])(implicit pos: SourceContext): Exp[T] = {\n  154      if (context ne null) {\n  155        // find the last modification of array x\n  ...\n  169    }\n  170  \n  171:   override def array_update[T:Manifest](x: Exp[Array[T]], n: Exp[Int], y: Exp[T])(implicit pos: SourceContext) = {\n  172      if (context ne null) {\n  173        // find the last modification of array x\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Base.scala:\n    3  \n    4  import internal._\n    5: import scala.reflect.SourceContext\n    6  \n    7  /**\n    .\n   52    }\n   53  \n   54:   override def mirrorDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = e match {\n   55      case Reflect(x, u, es) => Reflect(mirrorDef(x,f), mapOver(f,u), f(es))\n   56      case Reify(x, u, es) => Reify(f(x), mapOver(f,u), f(es))\n   ..\n   58    }\n   59  \n   60:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = e match {\n   61      case Reflect(x, u, es) => reflectMirrored(mirrorDef(e,f).asInstanceOf[Reflect[A]])\n   62      case Reify(x, u, es) => Reify(f(x), mapOver(f,u), f(es))\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/BooleanOps.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  \n    7  trait LiftBoolean {\n    .\n   12  \n   13  trait BooleanOps extends Variables {\n   14:   def infix_unary_!(x: Rep[Boolean])(implicit pos: SourceContext) = boolean_negate(x)\n   15:   def infix_&&(lhs: Rep[Boolean], rhs: =>Rep[Boolean])(implicit pos: SourceContext) = boolean_and(lhs,rhs)\n   16:   def infix_||(lhs: Rep[Boolean], rhs: =>Rep[Boolean])(implicit pos: SourceContext) = boolean_or(lhs,rhs)\n   17  \n   18    // TODO: short-circuit by default\n   19  \n   20:   def boolean_negate(lhs: Rep[Boolean])(implicit pos: SourceContext): Rep[Boolean]\n   21:   def boolean_and(lhs: Rep[Boolean], rhs: Rep[Boolean])(implicit pos: SourceContext): Rep[Boolean]\n   22:   def boolean_or(lhs: Rep[Boolean], rhs: Rep[Boolean])(implicit pos: SourceContext): Rep[Boolean]\n   23  }\n   24  \n   ..\n   28    case class BooleanOr(lhs: Exp[Boolean], rhs: Exp[Boolean]) extends Def[Boolean]\n   29  \n   30:   def boolean_negate(lhs: Exp[Boolean])(implicit pos: SourceContext) : Exp[Boolean] = BooleanNegate(lhs)\n   31:   def boolean_and(lhs: Exp[Boolean], rhs: Exp[Boolean])(implicit pos: SourceContext) : Exp[Boolean] = BooleanAnd(lhs,rhs)\n   32:   def boolean_or(lhs: Exp[Boolean], rhs: Exp[Boolean])(implicit pos: SourceContext) : Exp[Boolean] = BooleanOr(lhs,rhs)\n   33  \n   34:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   35      case BooleanNegate(x) => boolean_negate(f(x))\n   36      case BooleanAnd(x,y) => boolean_and(f(x),f(y))\n   ..\n   50  trait BooleanOpsExpOpt extends BooleanOpsExp {\n   51  \n   52:   override def boolean_negate(lhs: Exp[Boolean])(implicit pos: SourceContext) = lhs match {\n   53      case Def(BooleanNegate(x)) => x\n   54      case Const(a) => Const(!a)\n   ..\n   56    }\n   57  \n   58:   override def boolean_and(lhs: Exp[Boolean], rhs: Exp[Boolean])(implicit pos: SourceContext) : Exp[Boolean] = {\n   59      (lhs, rhs) match {\n   60        case (Const(false), _) => Const(false)\n   ..\n   66    }\n   67  \n   68:   override def boolean_or(lhs: Exp[Boolean], rhs: Exp[Boolean])(implicit pos: SourceContext) : Exp[Boolean] = {\n   69      (lhs, rhs) match {\n   70        case (Const(false), x) => x\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/CastingOps.scala:\n    4  import java.io.PrintWriter\n    5  import scala.virtualization.lms.util.OverloadHack\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait CastingOps extends Variables with OverloadHack {\n    .\n   14      \n   15    class CastingOpsCls[A:Manifest](lhs: Rep[A]){\n   16:     def IsInstanceOf[B:Manifest](implicit pos: SourceContext): Rep[Boolean] = rep_isinstanceof(lhs, manifest[A], manifest[B])\n   17:     def AsInstanceOf[B:Manifest](implicit pos: SourceContext): Rep[B] = rep_asinstanceof(lhs, manifest[A], manifest[B])\n   18    }\n   19  \n   20:   def rep_isinstanceof[A,B](lhs: Rep[A], mA: Manifest[A], mB: Manifest[B])(implicit pos: SourceContext) : Rep[Boolean]\n   21:   def rep_asinstanceof[A,B:Manifest](lhs: Rep[A], mA: Manifest[A], mB: Manifest[B])(implicit pos: SourceContext) : Rep[B]\n   22  }\n   23  \n   ..\n   28    case class RepAsInstanceOf[A,B:Manifest](lhs: Exp[A], mA: Manifest[A], mB: Manifest[B]) extends Def[B]\n   29  \n   30:   def rep_isinstanceof[A,B](lhs: Exp[A], mA: Manifest[A], mB: Manifest[B])(implicit pos: SourceContext) = RepIsInstanceOf(lhs,mA,mB)\n   31:   def rep_asinstanceof[A,B:Manifest](lhs: Exp[A], mA: Manifest[A], mB: Manifest[B])(implicit pos: SourceContext) : Exp[B] = toAtom(RepAsInstanceOf(lhs,mA,mB))(mB,pos)\n   32  \n   33:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   34      case RepAsInstanceOf(lhs, mA, mB) => rep_asinstanceof(f(lhs),mA,mB)(mtype(mB),pos)\n   35      case Reflect(e@RepAsInstanceOf(lhs, mA, mB), u, es) => reflectMirrored(Reflect(RepAsInstanceOf(f(lhs),mA,mB)(mtype(mB)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/DynamicBase.scala:\n    6  \n    7  import scala.reflect.macros.whitebox\n    8: import scala.reflect.SourceContext\n    9  \n   10  import collection._\n   ..\n  455    }\n  456  \n  457:   def __ifThenElse[T:Manifest](cond: Dyn[Boolean], thenp: => Dyn[T], elsep: => Dyn[T])(implicit pos: SourceContext): Dyn[T] = {\n  458      makeDecision(cond)\n  459      if (cond.static) thenp else elsep\n  460    }\n  461  \n  462:   def __ifThenElse[T:Manifest](cond: Dyn[Boolean], thenp: => Rep[T], elsep: => Rep[T])(implicit pos: SourceContext): Rep[T] = {2\n  463      makeDecision(cond)\n  464      if (cond.static) thenp else elsep\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Equal.scala:\n    4  import java.io.PrintWriter\n    5  import scala.virtualization.lms.util.OverloadHack\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait LiftEquals extends Base {\n    .\n   18    // this occurs because Rep is an object, so it has an == and != method defined by default,\n   19    // so there is no type error to force the implicit conversions\n   20:   def __equal[A,B](a: Rep[A], b: Rep[B])(implicit o: Overloaded1, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = equals(a,b)\n   21:   def __equal[A,B](a: Rep[A], b: Var[B])(implicit o: Overloaded2, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = equals(a, b)\n   22:   def __equal[A,B](a: Var[A], b: Rep[B])(implicit o: Overloaded3, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = equals(a, b)\n   23:   def __equal[A,B](a: Rep[A], b: B)(implicit o: Overloaded4, mA: Manifest[A], mB: Manifest[B], pos: SourceContext): Rep[Boolean] = equals(a, unit(b))\n   24:   def __equal[A,B](a: A, b: Rep[B])(implicit o: Overloaded5, mA: Manifest[A], mB: Manifest[B], pos: SourceContext): Rep[Boolean] = equals(unit(a), b)\n   25:   def __equal[A,B](a: Var[A], b: B)(implicit o: Overloaded6, mA: Manifest[A], mB: Manifest[B], pos: SourceContext): Rep[Boolean] = equals(a, unit(b))\n   26:   def __equal[A,B](a: A, b: Var[B])(implicit o: Overloaded7, mA: Manifest[A], mB: Manifest[B], pos: SourceContext): Rep[Boolean] = equals(unit(a), b)\n   27:   def __equal[A,B](a: Var[A], b: Var[B])(implicit o: Overloaded8, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = equals(a,b)\n   28  \n   29:   def infix_!=[A,B](a: Rep[A], b: Rep[B])(implicit o: Overloaded1, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(a,b)\n   30:   def infix_!=[A,B](a: Rep[A], b: Var[B])(implicit o: Overloaded2, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(a, b)\n   31:   def infix_!=[A,B](a: Var[A], b: Rep[B])(implicit o: Overloaded3, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(a, b)\n   32:   def infix_!=[A,B](a: Rep[A], b: B)(implicit o: Overloaded4, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(a, unit(b))\n   33:   def infix_!=[A,B](a: A, b: Rep[B])(implicit o: Overloaded5, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(unit(a), b)\n   34:   def infix_!=[A,B](a: Var[A], b: B)(implicit o: Overloaded6, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(a, unit(b))\n   35:   def infix_!=[A,B](a: A, b: Var[B])(implicit o: Overloaded7, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(unit(a), b)\n   36:   def infix_!=[A,B](a: Var[A], b: Var[B])(implicit o: Overloaded8, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(a,b)\n   37  \n   38:   def equals[A:Manifest,B:Manifest](a: Rep[A], b: Rep[B])(implicit pos: SourceContext) : Rep[Boolean]\n   39:   def notequals[A:Manifest,B:Manifest](a: Rep[A], b: Rep[B])(implicit pos: SourceContext) : Rep[Boolean]\n   40  }\n   41  \n   ..\n   45    case class NotEqual[A:Manifest,B:Manifest](a: Exp[A], b: Exp[B]) extends Def[Boolean]\n   46  \n   47:   def equals[A:Manifest,B:Manifest](a: Rep[A], b: Rep[B])(implicit pos: SourceContext): Rep[Boolean] = Equal(a,b)\n   48:   def notequals[A:Manifest,B:Manifest](a: Rep[A], b: Rep[B])(implicit pos: SourceContext): Rep[Boolean] = NotEqual(a,b)\n   49  \n   50:   override def mirrorDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = (e match {\n   51      case Equal(a, b) => Equal(f(a),f(b))\n   52      case NotEqual(a, b) => NotEqual(f(a),f(b))\n   ..\n   54    }).asInstanceOf[Def[A]]\n   55  \n   56:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   57      case Equal(a, b) => equals(f(a),f(b))\n   58      case NotEqual(a, b) => notequals(f(a),f(b))\n   ..\n   65  \n   66  trait EqualExpBridgeOpt extends EqualExpBridge {\n   67:   override def equals[A:Manifest,B:Manifest](a: Rep[A], b: Rep[B])(implicit pos: SourceContext): Rep[Boolean] = if (a == b) Const(true) else (a,b) match {\n   68      case (Const(a),Const(b)) => Const(a == b)\n   69      case _ => super.equals(a,b)\n   70    }\n   71  \n   72:   override def notequals[A:Manifest,B:Manifest](a: Rep[A], b: Rep[B])(implicit pos: SourceContext): Rep[Boolean] = if (a == b) Const(false) else (a,b) match {\n   73      case (Const(a),Const(b)) => Const(a != b)\n   74      case _ => super.notequals(a,b)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/ExceptionOps.scala:\n    4  import java.io.PrintWriter\n    5  import internal._\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait ExceptionOps extends Variables {\n    .\n   20    def throw_exception(m: Exp[String]) = reflectEffect(ThrowException(m), Global())    \n   21    \n   22:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   23      case Reflect(ThrowException(s), u, es) => reflectMirrored(Reflect(ThrowException(f(s)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)     \n   24      case _ => super.mirror(e,f)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/ForwardTransformer.scala:\n    3  \n    4  import scala.collection.{immutable,mutable}\n    5: import scala.reflect.SourceContext\n    6  \n    7  trait ForwardTransformer extends internal.AbstractSubstTransformer with internal.FatBlockTraversal { self =>\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/FractionalOps.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  \n    7  trait FractionalOps extends ImplicitOps {\n    8:   def infix_/[A,T](lhs: Rep[T], rhs: Rep[A])(implicit c: A => T, f: Fractional[T], mA: Manifest[A], mT: Manifest[T], pos: SourceContext) = fractional_divide(lhs,implicit_convert[A,T](rhs))\n    9  \n   10:   def fractional_divide[T:Fractional:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[T]\n   11  }\n   12  \n   ..\n   15    case class FractionalDivide[T](lhs: Exp[T], rhs: Exp[T])(implicit val f: Fractional[T], val mT: Manifest[T]) extends Def[T]\n   16  \n   17:   def fractional_divide[T:Fractional:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext) : Rep[T] = FractionalDivide(lhs, rhs)\n   18    \n   19:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   20      case e@FractionalDivide(a,b) => fractional_divide(f(a),f(b))(e.f.asInstanceOf[Fractional[A]],mtype(e.mT),pos)\n   21      case Reflect(e@FractionalDivide(a,b), u, es) => reflectMirrored(Reflect(FractionalDivide(f(a),f(b))(e.f.asInstanceOf[Fractional[A]],mtype(e.mT)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)        \n\n/Users/vjovanov/code/virtualization-lms-core/src/common/FunctionBlocks.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  import scala.virtualization.lms.internal.{Blocks, Effects, AbstractTransformer}\n    7  import scala.virtualization.lms.util.OverloadHack\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Functions.scala:\n    7  import scala.virtualization.lms.util.ClosureCompare\n    8  \n    9: import scala.reflect.SourceContext\n   10  \n   11  trait Functions extends Base {\n   12  \n   13:   def doLambda[A:Manifest,B:Manifest](fun: Rep[A] => Rep[B])(implicit pos: SourceContext): Rep[A => B]\n   14    implicit def fun[A:Manifest,B:Manifest](f: Rep[A] => Rep[B]): Rep[A=>B] = doLambda(f)\n   15  \n   ..\n   17  \n   18    class LambdaOps[A:Manifest,B:Manifest](f: Rep[A => B]) {\n   19:     def apply(x: Rep[A])(implicit pos: SourceContext): Rep[B] = doApply(f,x)\n   20    }\n   21  \n   22:   def doApply[A:Manifest,B:Manifest](fun: Rep[A => B], arg: Rep[A])(implicit pos: SourceContext): Rep[B]\n   23  }\n   24  \n   ..\n   74  \n   75    def unboxedFresh[A:Manifest] : Exp[A] = fresh[A]\n   76:   def unbox[A:Manifest](x : Exp[A])(implicit pos: SourceContext) : Exp[A] = x\n   77  \n   78    def doLambdaDef[A:Manifest,B:Manifest](f: Exp[A] => Exp[B]) : Def[A => B] = {\n   ..\n   83    }\n   84  \n   85:   override def doLambda[A:Manifest,B:Manifest](f: Exp[A] => Exp[B])(implicit pos: SourceContext): Exp[A => B] =\n   86      doLambdaDef(f)\n   87  \n   88:   override def doApply[A:Manifest,B:Manifest](f: Exp[A => B], x: Exp[A])(implicit pos: SourceContext): Exp[B] = {\n   89      val x1 = unbox(x)\n   90      f match {\n   ..\n   99    }\n  100  \n  101:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  102:     case e@Lambda(g,x,y) => toAtom(Lambda(f(g),f(x),f(y))(e.mA,e.mB))(mtype(manifest[A]),implicitly[SourceContext])\n  103:     case e@Apply(g,arg) => doApply(f(g), f(arg))(e.mA,mtype(e.mB),implicitly[SourceContext])\n  104      case Reflect(e@Apply(g,arg), u, es) => reflectMirrored(Reflect(Apply(f(g),f(arg))(e.mA,mtype(e.mB)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n  105      case _ => super.mirror(e,f)\n  ...\n  149    }\n  150  \n  151:   override def unbox[A:Manifest](x : Exp[A])(implicit pos: SourceContext) : Exp[A] = {\n  152      val mA = implicitly[Manifest[A]]\n  153      x match {\n  ...\n  194    }\n  195  \n  196:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  197:     case e@Lambda(g,UnboxedTuple(xs),y) => toAtom(Lambda(f(g),UnboxedTuple(f(xs))(e.mA),f(y))(e.mA,e.mB))(mtype(manifest[A]),implicitly[SourceContext])\n  198      case _ => super.mirror(e,f)\n  199    }).asInstanceOf[Exp[A]]\n  ...\n  202  trait FunctionsRecursiveExp extends FunctionsExp with ClosureCompare {\n  203    var funTable: List[(Sym[_], Any)] = List()\n  204:   override def doLambda[A:Manifest,B:Manifest](f: Exp[A] => Exp[B])(implicit pos: SourceContext): Exp[A => B] = {\n  205      val can = canonicalize(f)\n  206      funTable.find(_._2 == can) match {\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala:\n    6  import scala.collection.mutable.Set\n    7  import java.util.HashMap\n    8: import scala.reflect.SourceContext\n    9  \n   10  trait HashMapOps extends Base {\n   11    object HashMap {\n   12:     def apply[K:Manifest,V:Manifest]()(implicit pos: SourceContext) = hashmap_new[K,V]()\n   13    }\n   14  \n   ..\n   16  \n   17    class hashmapOpsCls[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]]) {\n   18:     def apply(k: Rep[K])(implicit pos: SourceContext) = hashmap_apply(m, k)\n   19:     def update(k: Rep[K], v: Rep[V])(implicit pos: SourceContext) = hashmap_update(m,k,v)\n   20:     def contains(k: Rep[K])(implicit pos: SourceContext) = hashmap_contains(m, k)\n   21:     def size(implicit pos: SourceContext) = hashmap_size(m)\n   22:     def values(implicit pos: SourceContext) = hashmap_values(m)\n   23:     def clear()(implicit pos: SourceContext) = hashmap_clear(m)\n   24:     def keySet(implicit pos: SourceContext) = hashmap_keyset(m)\n   25:     def keys(implicit pos: SourceContext) = hashmap_keys(m)\n   26    }\n   27  \n   28:   def hashmap_new[K:Manifest,V:Manifest]()(implicit pos: SourceContext) : Rep[HashMap[K,V]]\n   29:   def hashmap_apply[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]], k: Rep[K])(implicit pos: SourceContext): Rep[V]\n   30:   def hashmap_update[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]], k: Rep[K], v: Rep[V])(implicit pos: SourceContext): Rep[Unit]\n   31:   def hashmap_unsafe_update[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]], k: Rep[K], v: Rep[V])(implicit pos: SourceContext): Rep[Unit]\n   32:   def hashmap_contains[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]], i: Rep[K])(implicit pos: SourceContext): Rep[Boolean]\n   33:   def hashmap_size[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext): Rep[Int]\n   34:   def hashmap_values[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext): Rep[Iterable[V]]\n   35:   def hashmap_clear[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext): Rep[Unit]\n   36:   def hashmap_keyset[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext): Rep[Set[K]]\n   37:   def hashmap_keys[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext): Rep[Iterable[K]]\n   38  }\n   39  \n   ..\n   53    case class HashMapKeys[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]]) extends HashMapDef[K,V,Iterable[K]]\n   54  \n   55:   def hashmap_new[K:Manifest,V:Manifest]()(implicit pos: SourceContext) = reflectMutable(HashMapNew[K,V]())\n   56:   def hashmap_apply[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]], k: Exp[K])(implicit pos: SourceContext) = HashMapApply(m,k)\n   57:   def hashmap_update[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]], k: Exp[K], v: Exp[V])(implicit pos: SourceContext) = reflectWrite(m)(HashMapUpdate(m,k,v))\n   58:   def hashmap_unsafe_update[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]], k: Exp[K], v: Exp[V])(implicit pos: SourceContext) = reflectEffect(HashMapUpdate(m,k,v))\n   59:   def hashmap_contains[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]], i: Exp[K])(implicit pos: SourceContext) = HashMapContains(m, i)\n   60:   def hashmap_size[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]])(implicit pos: SourceContext) = HashMapSize(m)\n   61:   def hashmap_values[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]])(implicit pos: SourceContext) = HashMapValues(m)\n   62:   def hashmap_clear[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]])(implicit pos: SourceContext) = reflectWrite(m)(HashMapClear(m))\n   63:   def hashmap_keyset[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext) = HashMapKeySet(m)\n   64:   def hashmap_keys[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext) = HashMapKeys(m)\n   65    \n   66:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = {\n   67      (e match {\n   68        case e@HashMapApply(m,k) => hashmap_apply(f(m),f(k))(e.mK,e.mV,pos)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/IfThenElse.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  import scala.virtualization.lms.internal.{GenericNestedCodegen, GenericFatCodegen, GenerationFailedException}\n    7  \n    8  trait IfThenElse extends Base {\n    9:   def __ifThenElse[T:Manifest](cond: Rep[Boolean], thenp: => Rep[T], elsep: => Rep[T])(implicit pos: SourceContext): Rep[T]\n   10  \n   11    // HACK -- bug in scala-virtualized\n   ..\n   23    case class IfThenElse[T:Manifest](cond: Exp[Boolean], thenp: Exp[T], elsep: Exp[T]) extends Def[T]\n   24  \n   25:   def __ifThenElse[T:Manifest](cond: Rep[Boolean], thenp: => Rep[T], elsep: => Rep[T])(implicit pos: SourceContext) = IfThenElse(cond, thenp, elsep)\n   26  }\n   27  \n   ..\n   37    case class IfThenElse[T:Manifest](cond: Exp[Boolean], thenp: Block[T], elsep: Block[T]) extends AbstractIfThenElse[T]\n   38  \n   39:   override def __ifThenElse[T:Manifest](cond: Rep[Boolean], thenp: => Rep[T], elsep: => Rep[T])(implicit pos: SourceContext) = {\n   40      val a = reifyEffectsHere(thenp)\n   41      val b = reifyEffectsHere(elsep)\n   ..\n   44    }\n   45  \n   46:   def ifThenElse[T:Manifest](cond: Rep[Boolean], thenp: Block[T], elsep: Block[T])(implicit pos: SourceContext) = {\n   47      val ae = summarizeEffects(thenp)\n   48      val be = summarizeEffects(elsep)\n   ..\n   58    }\n   59    \n   60:   override def mirrorDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = e match {\n   61      case IfThenElse(c,a,b) => IfThenElse(f(c),f(a),f(b))\n   62      case _ => super.mirrorDef(e,f)\n   63    }\n   64    \n   65:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = e match {\n   66      case Reflect(IfThenElse(c,a,b), u, es) => \n   67        if (f.hasContext)\n   ..\n  191    // TODO: make reflect(Reify(..)) do the right thing\n  192    \n  193:   override def __ifThenElse[T:Manifest](cond: Rep[Boolean], thenp: => Rep[T], elsep: => Rep[T])(implicit pos: SourceContext) = cond match {\n  194      case Const(true) => thenp\n  195      case Const(false) => elsep\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/ImplicitOps.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  \n    7  trait ImplicitOps extends Base {\n    .\n   12     *  Code-gen for other platforms should implement the conversions.\n   13     **/\n   14:   def implicit_convert[X,Y](x: Rep[X])(implicit c: X => Y, mX: Manifest[X], mY: Manifest[Y], pos: SourceContext) : Rep[Y] // = x.asInstanceOf[Rep[Y]\n   15  }\n   16  \n   ..\n   18    case class ImplicitConvert[X,Y](x: Exp[X])(implicit val mX: Manifest[X], val mY: Manifest[Y]) extends Def[Y]\n   19  \n   20:   def implicit_convert[X,Y](x: Exp[X])(implicit c: X => Y, mX: Manifest[X], mY: Manifest[Y], pos: SourceContext) : Rep[Y] = {\n   21      if (mX == mY) x.asInstanceOf[Rep[Y]] else ImplicitConvert[X,Y](x)\n   22    }\n   23  \n   24:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   25      case im@ImplicitConvert(x) => toAtom(ImplicitConvert(f(x))(im.mX,im.mY))(mtype(manifest[A]),pos)\n   26      case _ => super.mirror(e,f)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/IOOps.scala:\n    5  import scala.virtualization.lms.internal.{GenerationFailedException}\n    6  import util.OverloadHack\n    7: import scala.reflect.SourceContext\n    8  \n    9  // TODO: fine grained effects\n   ..\n   15     */\n   16    object File {\n   17:     def apply(dir: Rep[String])(implicit pos: SourceContext) = obj_file_apply(dir)\n   18    }\n   19:   def infix_getCanonicalFile(f: Rep[File])(implicit pos: SourceContext) = file_getcanonicalfile(f)\n   20:   def infix_getPath(f: Rep[File])(implicit pos: SourceContext) = file_getpath(f)\n   21:   def infix_listFiles(f: Rep[File])(implicit pos: SourceContext) = file_listfiles(f)\n   22  \n   23:   def obj_file_apply(dir: Rep[String])(implicit pos: SourceContext): Rep[File]\n   24:   def file_getcanonicalfile(f: Rep[File])(implicit pos: SourceContext): Rep[File]\n   25:   def file_getpath(f: Rep[File])(implicit pos: SourceContext): Rep[String]\n   26:   def file_listfiles(f: Rep[File])(implicit pos: SourceContext): Rep[Array[File]]\n   27    \n   28    /**\n   ..\n   30     */\n   31    object BufferedReader {\n   32:     def apply(f: Rep[FileReader])(implicit pos: SourceContext) = obj_br_apply(f)\n   33    }\n   34:   def infix_readLine(b: Rep[BufferedReader])(implicit pos: SourceContext) = br_readline(b)\n   35:   def infix_close(b: Rep[BufferedReader])(implicit pos: SourceContext) = br_close(b)\n   36  \n   37:   def obj_br_apply(f: Rep[FileReader])(implicit pos: SourceContext): Rep[BufferedReader]\n   38:   def br_readline(b: Rep[BufferedReader])(implicit pos: SourceContext): Rep[String]\n   39:   def br_close(b: Rep[BufferedReader])(implicit pos: SourceContext): Rep[Unit]\n   40  \n   41    /**\n   ..\n   43     */\n   44    object BufferedWriter {\n   45:     def apply(f: Rep[FileWriter])(implicit pos: SourceContext) = obj_bw_apply(f)    \n   46    }\n   47  \n   48:   def infix_write(b: Rep[BufferedWriter], s: Rep[String])(implicit pos: SourceContext) = bw_write(b,s)\n   49:   def infix_close(b: Rep[BufferedWriter])(implicit o: Overloaded1, pos: SourceContext) = bw_close(b)\n   50  \n   51:   def obj_bw_apply(f: Rep[FileWriter])(implicit pos: SourceContext): Rep[BufferedWriter]\n   52:   def bw_write(b: Rep[BufferedWriter], s: Rep[String])(implicit pos: SourceContext): Rep[Unit]\n   53:   def bw_close(b: Rep[BufferedWriter])(implicit pos: SourceContext): Rep[Unit]\n   54  \n   55    /**\n   ..\n   57     */\n   58    object FileReader {\n   59:     def apply(s: Rep[String])(implicit pos: SourceContext) = obj_fr_apply(s)\n   60    }\n   61:   def obj_fr_apply(s: Rep[String])(implicit pos: SourceContext): Rep[FileReader]\n   62  \n   63    /**\n   ..\n   65     */\n   66    object FileWriter {\n   67:     def apply(s: Rep[String])(implicit pos: SourceContext) = obj_fw_apply(s)\n   68    }\n   69:   def obj_fw_apply(s: Rep[String])(implicit pos: SourceContext): Rep[FileWriter]\n   70  }\n   71  \n   ..\n   86    case class BrClose(b: Exp[BufferedReader]) extends Def[Unit]\n   87  \n   88:   def obj_file_apply(dir: Exp[String])(implicit pos: SourceContext): Exp[File] = reflectEffect(ObjFileApply(dir))\n   89:   def file_getcanonicalfile(f: Exp[File])(implicit pos: SourceContext) = FileGetCanonicalFile(f)\n   90:   def file_getpath(f: Exp[File])(implicit pos: SourceContext) = FileGetPath(f)\n   91:   def file_listfiles(f: Exp[File])(implicit pos: SourceContext) = FileListFiles(f)\n   92    \n   93:   def obj_br_apply(f: Exp[FileReader])(implicit pos: SourceContext): Exp[BufferedReader] = reflectEffect(ObjBrApply(f))\n   94:   def obj_bw_apply(f: Exp[FileWriter])(implicit pos: SourceContext): Exp[BufferedWriter] = reflectEffect(ObjBwApply(f))\n   95:   def obj_fr_apply(s: Exp[String])(implicit pos: SourceContext): Exp[FileReader] = reflectEffect(ObjFrApply(s))\n   96:   def obj_fw_apply(s: Exp[String])(implicit pos: SourceContext): Exp[FileWriter] = reflectEffect(ObjFwApply(s))\n   97  \n   98:   def bw_write(b: Exp[BufferedWriter], s: Exp[String])(implicit pos: SourceContext) = reflectEffect(BwWrite(b,s))\n   99:   def bw_close(b: Exp[BufferedWriter])(implicit pos: SourceContext) = reflectEffect(BwClose(b))\n  100:   def br_readline(b: Exp[BufferedReader])(implicit pos: SourceContext) : Exp[String] = reflectEffect(BrReadline(b))\n  101:   def br_close(b: Exp[BufferedReader])(implicit pos: SourceContext) : Exp[Unit] = reflectEffect(BrClose(b))\n  102    \n  103:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = ({\n  104      e match {\n  105        case Reflect(ObjFrApply(s), u, es) => reflectMirrored(Reflect(ObjFrApply(f(s)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/IterableOps.scala:\n    4  import java.io.PrintWriter\n    5  import internal._\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait IterableOps extends Variables {\n    .\n   15  \n   16    class IterableOpsCls[T:Manifest](a: Rep[Iterable[T]]){\n   17:     def foreach(block: Rep[T] => Rep[Unit])(implicit pos: SourceContext) = iterable_foreach(a, block)\n   18:     def toArray(implicit pos: SourceContext) = iterable_toarray(a)\n   19    }\n   20  \n   21:   def iterable_foreach[T:Manifest](x: Rep[Iterable[T]], block: Rep[T] => Rep[Unit])(implicit pos: SourceContext): Rep[Unit]\n   22:   def iterable_toarray[T:Manifest](x: Rep[Iterable[T]])(implicit pos: SourceContext): Rep[Array[T]]\n   23  }\n   24  \n   ..\n   30    }\n   31    \n   32:   def iterable_foreach[T:Manifest](a: Exp[Iterable[T]], block: Exp[T] => Exp[Unit])(implicit pos: SourceContext): Exp[Unit] = {\n   33      val x = fresh[T]\n   34      val b = reifyEffects(block(x))\n   35      reflectEffect(IterableForeach(a, x, b), summarizeEffects(b).star)\n   36    }\n   37:   def iterable_toarray[T:Manifest](a: Exp[Iterable[T]])(implicit pos: SourceContext) = IterableToArray(a)\n   38  \n   39:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = {\n   40      (e match {\n   41        case e@IterableToArray(x) => iterable_toarray(f(x))(e.m,pos)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala:\n    4  import java.io.PrintWriter\n    5  import scala.virtualization.lms.internal.GenericNestedCodegen\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait ListOps extends Variables {\n    9  \n   10    object List {\n   11:     def apply[A:Manifest](xs: Rep[A]*)(implicit pos: SourceContext) = list_new(xs)\n   12    }\n   13  \n   ..\n   32    }\n   33    \n   34:   def list_new[A:Manifest](xs: Seq[Rep[A]])(implicit pos: SourceContext): Rep[List[A]]\n   35:   def list_fromseq[A:Manifest](xs: Rep[Seq[A]])(implicit pos: SourceContext): Rep[List[A]]  \n   36:   def list_map[A:Manifest,B:Manifest](l: Rep[List[A]], f: Rep[A] => Rep[B])(implicit pos: SourceContext): Rep[List[B]]\n   37:   def list_flatMap[A : Manifest, B : Manifest](xs: Rep[List[A]], f: Rep[A] => Rep[List[B]])(implicit pos: SourceContext): Rep[List[B]]\n   38:   def list_filter[A : Manifest](l: Rep[List[A]], f: Rep[A] => Rep[Boolean])(implicit pos: SourceContext): Rep[List[A]]\n   39:   def list_sortby[A:Manifest,B:Manifest:Ordering](l: Rep[List[A]], f: Rep[A] => Rep[B])(implicit pos: SourceContext): Rep[List[A]]\n   40:   def list_prepend[A:Manifest](l: Rep[List[A]], e: Rep[A])(implicit pos: SourceContext): Rep[List[A]]\n   41:   def list_toarray[A:Manifest](l: Rep[List[A]])(implicit pos: SourceContext): Rep[Array[A]]\n   42:   def list_toseq[A:Manifest](l: Rep[List[A]])(implicit pos: SourceContext): Rep[Seq[A]]\n   43:   def list_concat[A:Manifest](xs: Rep[List[A]], ys: Rep[List[A]])(implicit pos: SourceContext): Rep[List[A]]\n   44:   def list_cons[A:Manifest](x: Rep[A], xs: Rep[List[A]])(implicit pos: SourceContext): Rep[List[A]] // FIXME remove?\n   45:   def list_mkString[A : Manifest](xs: Rep[List[A]])(implicit pos: SourceContext): Rep[String]\n   46:   def list_mkString2[A : Manifest](xs: Rep[List[A]], sep:Rep[String])(implicit pos: SourceContext): Rep[String]\n   47:   def list_head[A:Manifest](xs: Rep[List[A]])(implicit pos: SourceContext): Rep[A]\n   48:   def list_tail[A:Manifest](xs: Rep[List[A]])(implicit pos: SourceContext): Rep[List[A]]\n   49:   def list_isEmpty[A:Manifest](xs: Rep[List[A]])(implicit pos: SourceContext): Rep[Boolean]\n   50  }\n   51  \n   ..\n   68    case class ListIsEmpty[A:Manifest](xs: Rep[List[A]]) extends Def[Boolean]\n   69    \n   70:   def list_new[A:Manifest](xs: Seq[Rep[A]])(implicit pos: SourceContext) = ListNew(xs)\n   71:   def list_fromseq[A:Manifest](xs: Rep[Seq[A]])(implicit pos: SourceContext) = ListFromSeq(xs)\n   72:   def list_map[A:Manifest,B:Manifest](l: Exp[List[A]], f: Exp[A] => Exp[B])(implicit pos: SourceContext) = {\n   73      val a = fresh[A]\n   74      val b = reifyEffects(f(a))\n   75      reflectEffect(ListMap(l, a, b), summarizeEffects(b).star)\n   76    }\n   77:   def list_flatMap[A:Manifest, B:Manifest](l: Exp[List[A]], f: Exp[A] => Exp[List[B]])(implicit pos: SourceContext) = {\n   78      val a = fresh[A]\n   79      val b = reifyEffects(f(a))\n   80      reflectEffect(ListFlatMap(l, a, b), summarizeEffects(b).star)\n   81    }\n   82:   def list_filter[A : Manifest](l: Exp[List[A]], f: Exp[A] => Exp[Boolean])(implicit pos: SourceContext) = {\n   83      val a = fresh[A]\n   84      val b = reifyEffects(f(a))\n   85      reflectEffect(ListFilter(l, a, b), summarizeEffects(b).star)\n   86    }\n   87:   def list_sortby[A:Manifest,B:Manifest:Ordering](l: Exp[List[A]], f: Exp[A] => Exp[B])(implicit pos: SourceContext) = {\n   88      val a = fresh[A]\n   89      val b = reifyEffects(f(a))\n   90      reflectEffect(ListSortBy(l, a, b), summarizeEffects(b).star)\n   91    }\n   92:   def list_toarray[A:Manifest](l: Exp[List[A]])(implicit pos: SourceContext) = ListToArray(l)\n   93:   def list_toseq[A:Manifest](l: Exp[List[A]])(implicit pos: SourceContext) = ListToSeq(l)\n   94:   def list_prepend[A:Manifest](l: Exp[List[A]], e: Exp[A])(implicit pos: SourceContext) = ListPrepend(l,e)\n   95:   def list_concat[A:Manifest](xs: Rep[List[A]], ys: Rep[List[A]])(implicit pos: SourceContext) = ListConcat(xs,ys)\n   96:   def list_cons[A:Manifest](x: Rep[A], xs: Rep[List[A]])(implicit pos: SourceContext) = ListCons(x,xs)\n   97:   def list_mkString[A:Manifest](l: Exp[List[A]])(implicit pos: SourceContext) = ListMkString(l)\n   98:   def list_mkString2[A:Manifest](l: Rep[List[A]], sep:Rep[String])(implicit pos: SourceContext) = ListMkString2(l,sep)\n   99:   def list_head[A:Manifest](xs: Rep[List[A]])(implicit pos: SourceContext) = ListHead(xs)\n  100:   def list_tail[A:Manifest](xs: Rep[List[A]])(implicit pos: SourceContext) = ListTail(xs)\n  101:   def list_isEmpty[A:Manifest](xs: Rep[List[A]])(implicit pos: SourceContext) = ListIsEmpty(xs)\n  102    \n  103:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = {\n  104      (e match {\n  105        case ListNew(xs) => list_new(f(xs))\n  ...\n  134  \n  135  trait ListOpsExpOpt extends ListOpsExp {\n  136:   override def list_concat[A : Manifest](xs1: Exp[List[A]], xs2: Exp[List[A]])(implicit pos: SourceContext): Exp[List[A]] = (xs1, xs2) match {\n  137      case (Def(ListNew(xs1)), Def(ListNew(xs2))) => ListNew(xs1 ++ xs2)\n  138      case (Def(ListNew(Seq())), xs2) => xs2\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Loops.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  import scala.virtualization.lms.internal.{FatBlockTraversal,GenericNestedCodegen,GenericFatCodegen}\n    7  \n    .\n   20    case class SimpleLoop[A](val size: Exp[Int], val v: Sym[Int], val body: Def[A]) extends AbstractLoop[A]\n   21    \n   22:   def simpleLoop[A:Manifest](size: Exp[Int], v: Sym[Int], body: Def[A])(implicit pos: SourceContext): Exp[A] = SimpleLoop(size, v, body)\n   23  \n   24  \n   ..\n   47    // mirroring\n   48  \n   49:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   50      case SimpleLoop(s,v,body: Def[A]) => simpleLoop(f(s),f(v).asInstanceOf[Sym[Int]],mirrorFatDef(body,f))\n   51      case Reflect(SimpleLoop(s,v,body: Def[A]), u, es) if u == Control() => reflectMirrored(Reflect(SimpleLoop(f(s),f(v).asInstanceOf[Sym[Int]],mirrorFatDef(body,f)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos) \n\n/Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala:\n    4  import java.io.PrintWriter\n    5  import internal.{GenericNestedCodegen}\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait MathOps extends Base {\n    9  \n   10    object Math {\n   11:     def ceil(x: Rep[Double])(implicit pos: SourceContext) = math_ceil(x)\n   12:     def floor(x: Rep[Double])(implicit pos: SourceContext) = math_floor(x)\n   13:     def exp(x: Rep[Double])(implicit pos: SourceContext) = math_exp(x)\n   14:     def log(x: Rep[Double])(implicit pos: SourceContext) = math_log(x)\n   15:     def log10(x: Rep[Double])(implicit ctx: SourceContext) = math_log10(x)    \n   16:     def sqrt(x: Rep[Double])(implicit pos: SourceContext) = math_sqrt(x)\n   17:     def sin(x: Rep[Double])(implicit pos: SourceContext) = math_sin(x)\n   18:     def sinh(x: Rep[Double])(implicit ctx: SourceContext) = math_sinh(x)\n   19:     def asin(x: Rep[Double])(implicit ctx: SourceContext) = math_asin(x)\n   20:     def cos(x: Rep[Double])(implicit pos: SourceContext) = math_cos(x)\n   21:     def cosh(x: Rep[Double])(implicit ctx: SourceContext) = math_cosh(x)\n   22:     def acos(x: Rep[Double])(implicit pos: SourceContext) = math_acos(x)\n   23:     def tan(x: Rep[Double])(implicit ctx: SourceContext) = math_tan(x)\n   24:     def tanh(x: Rep[Double])(implicit ctx: SourceContext) = math_tanh(x)      \n   25:     def atan(x: Rep[Double])(implicit pos: SourceContext) = math_atan(x)\n   26:     def atan2(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext) = math_atan2(x,y)\n   27:     def pow(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext) = math_pow(x,y)\n   28:     def abs[A:Manifest:Numeric](x: Rep[A])(implicit pos: SourceContext) = math_abs(x)\n   29:     def max[A:Manifest:Numeric](x: Rep[A], y: Rep[A])(implicit pos: SourceContext) = math_max(x,y)\n   30:     def min[A:Manifest:Numeric](x: Rep[A], y: Rep[A])(implicit pos: SourceContext) = math_min(x,y)\n   31:     def Pi(implicit pos: SourceContext) = math_pi\n   32:     def E(implicit pos: SourceContext) = math_e\n   33    }\n   34  \n   35:   def math_ceil(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   36:   def math_floor(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   37:   def math_exp(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   38:   def math_log(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   39:   def math_log10(x: Rep[Double])(implicit ctx: SourceContext): Rep[Double]  \n   40:   def math_sqrt(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   41:   def math_sin(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   42:   def math_sinh(x: Rep[Double])(implicit ctx: SourceContext): Rep[Double]\n   43:   def math_asin(x: Rep[Double])(implicit ctx: SourceContext): Rep[Double]\n   44:   def math_cos(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   45:   def math_cosh(x: Rep[Double])(implicit ctx: SourceContext): Rep[Double]\n   46:   def math_acos(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   47:   def math_tan(x: Rep[Double])(implicit ctx: SourceContext): Rep[Double]\n   48:   def math_tanh(x: Rep[Double])(implicit ctx: SourceContext): Rep[Double]    \n   49:   def math_atan(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   50:   def math_atan2(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   51:   def math_pow(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n   52:   def math_abs[A:Manifest:Numeric](x: Rep[A])(implicit pos: SourceContext) : Rep[A]\n   53:   def math_max[A:Manifest:Numeric](x: Rep[A], y: Rep[A])(implicit pos: SourceContext): Rep[A]\n   54:   def math_min[A:Manifest:Numeric](x: Rep[A], y: Rep[A])(implicit pos: SourceContext): Rep[A]\n   55:   def math_pi(implicit pos: SourceContext): Rep[Double]\n   56:   def math_e(implicit pos: SourceContext): Rep[Double]\n   57  }\n   58  \n   ..\n   81    case class MathE() extends Def[Double]\n   82  \n   83:   def math_ceil(x: Exp[Double])(implicit pos: SourceContext) = MathCeil(x)\n   84:   def math_floor(x: Exp[Double])(implicit pos: SourceContext) = MathFloor(x)\n   85:   def math_exp(x: Exp[Double])(implicit pos: SourceContext) = MathExp(x)\n   86:   def math_log(x: Exp[Double])(implicit pos: SourceContext) = MathLog(x)\n   87:   def math_log10(x: Exp[Double])(implicit ctx: SourceContext) = MathLog10(x)\n   88:   def math_sqrt(x: Exp[Double])(implicit pos: SourceContext) = MathSqrt(x)\n   89:   def math_sin(x: Exp[Double])(implicit pos: SourceContext) = MathSin(x)\n   90:   def math_sinh(x: Exp[Double])(implicit ctx: SourceContext) = MathSinh(x)\n   91:   def math_asin(x: Exp[Double])(implicit ctx: SourceContext) = MathAsin(x)\n   92:   def math_cos(x: Exp[Double])(implicit pos: SourceContext) = MathCos(x)\n   93:   def math_cosh(x: Exp[Double])(implicit ctx: SourceContext) = MathCosh(x)\n   94:   def math_acos(x: Exp[Double])(implicit pos: SourceContext) = MathAcos(x)\n   95:   def math_tan(x: Exp[Double])(implicit ctx: SourceContext) = MathTan(x)\n   96:   def math_tanh(x: Exp[Double])(implicit ctx: SourceContext) = MathTanh(x)    \n   97:   def math_atan(x: Exp[Double])(implicit pos: SourceContext) = MathAtan(x)\n   98:   def math_atan2(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = MathAtan2(x,y)\n   99:   def math_pow(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = MathPow(x,y)\n  100:   def math_abs[A:Manifest:Numeric](x: Exp[A])(implicit pos: SourceContext) = MathAbs(x)\n  101:   def math_max[A:Manifest:Numeric](x: Exp[A], y: Exp[A])(implicit pos: SourceContext) = MathMax(x, y)\n  102:   def math_min[A:Manifest:Numeric](x: Exp[A], y: Exp[A])(implicit pos: SourceContext) = MathMin(x, y)\n  103:   def math_pi(implicit pos: SourceContext) = MathPi()\n  104:   def math_e(implicit pos: SourceContext) = MathE()  \n  105  \n  106:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = ({\n  107      implicit var a: Numeric[A] = null // hack!! need to store it in Def instances??\n  108      e match {\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/MiscOps.scala:\n    4  import java.io.PrintWriter\n    5  import scala.virtualization.lms.internal._\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait MiscOps extends Base {\n    .\n   12     */\n   13  \n   14:   def print(x: Rep[Any])(implicit pos: SourceContext): Rep[Unit]\n   15:   def println(x: Rep[Any])(implicit pos: SourceContext): Rep[Unit]\n   16:   def printf(f: String, x: Rep[Any]*)(implicit pos: SourceContext): Rep[Unit]\n   17  \n   18    // TODO: there is no way to override this behavior\n   19:   def exit(status: Int)(implicit pos: SourceContext): Rep[Nothing] = exit(unit(status))\n   20:   def exit()(implicit pos: SourceContext): Rep[Nothing] = exit(0)\n   21:   def exit(status: Rep[Int])(implicit pos: SourceContext): Rep[Nothing]\n   22:   def error(s: Rep[String])(implicit pos: SourceContext): Rep[Nothing]\n   23:   def returnL(x: Rep[Any])(implicit pos: SourceContext): Rep[Unit]\n   24  }\n   25  \n   ..\n   34    case class Return(x: Exp[Any]) extends Def[Unit]\n   35  \n   36:   def print(x: Exp[Any])(implicit pos: SourceContext) = reflectEffect(Print(x)) // TODO: simple effect\n   37:   def println(x: Exp[Any])(implicit pos: SourceContext) = reflectEffect(PrintLn(x)) // TODO: simple effect\n   38:   def printf(f: String, x: Rep[Any]*)(implicit pos: SourceContext): Rep[Unit] = reflectEffect(PrintF(f, x.toList))\n   39:   def exit(s: Exp[Int])(implicit pos: SourceContext) = reflectEffect(Exit(s))\n   40:   def error(s: Exp[String])(implicit pos: SourceContext) = reflectEffect(Error(s))\n   41:   def returnL(x: Exp[Any])(implicit pos: SourceContext) = {\n   42      printlog(\"warning: staged return statements are unlikely to work because the surrounding source method does not exist in the generated code.\")\n   43      printsrc(raw\"in ${quotePos(x)}\")\n   ..\n   45    }\n   46    \n   47:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   48      case Reflect(Error(x), u, es) => reflectMirrored(Reflect(Error(f(x)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n   49      case Reflect(Print(x), u, es) => reflectMirrored(Reflect(Print(f(x)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/NumericOps.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  \n    7  trait LiftNumeric {\n    .\n   20    \n   21    class NumericOpsCls[T:Numeric:Manifest](lhs: Rep[T]){\n   22:     def +[A](rhs: A)(implicit c: A => T, pos: SourceContext) = numeric_plus(lhs,unit(c(rhs)))\n   23:     def +(rhs: Rep[T])(implicit pos: SourceContext) = numeric_plus(lhs,rhs)\n   24:     def -(rhs: Rep[T])(implicit pos: SourceContext) = numeric_minus(lhs,rhs)\n   25:     def *(rhs: Rep[T])(implicit pos: SourceContext) = numeric_times(lhs,rhs)\n   26:     def /(rhs: Rep[T])(implicit pos: SourceContext) = numeric_divide(lhs,rhs)\n   27    }\n   28  \n   29:   def numeric_plus[T:Numeric:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[T]\n   30:   def numeric_minus[T:Numeric:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[T]\n   31:   def numeric_times[T:Numeric:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[T]\n   32:   def numeric_divide[T:Numeric:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[T]\n   33    //def numeric_negate[T:Numeric](x: T): Rep[T]\n   34    //def numeric_abs[T:Numeric](x: T): Rep[T]\n   ..\n   49    case class NumericDivide[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T]) extends DefMN[T]\n   50  \n   51:   def numeric_plus[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext) : Exp[T] = NumericPlus(lhs, rhs)\n   52:   def numeric_minus[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext) : Exp[T] = NumericMinus(lhs, rhs)\n   53:   def numeric_times[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext) : Exp[T] = NumericTimes(lhs, rhs)\n   54:   def numeric_divide[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext) : Exp[T] = NumericDivide(lhs, rhs)\n   55    \n   56:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   57      case e@NumericPlus(l,r) => numeric_plus(f(l), f(r))(e.aev.asInstanceOf[Numeric[A]], mtype(e.mev), pos)\n   58      case e@NumericMinus(l,r) => numeric_minus(f(l), f(r))(e.aev.asInstanceOf[Numeric[A]], mtype(e.mev), pos)\n   ..\n   68    this: PrimitiveOpsExp =>\n   69    \n   70:   override def numeric_plus[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[T] = (lhs,rhs) match {\n   71      case (Const(x), Const(y)) => Const(implicitly[Numeric[T]].plus(x,y))\n   72      case (Const(x), y) if x == implicitly[Numeric[T]].zero => y\n   ..\n   74      case _ => super.numeric_plus(lhs,rhs)\n   75    }\n   76:   override def numeric_minus[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[T] = (lhs,rhs) match {\n   77      case (Const(x), Const(y)) => Const(implicitly[Numeric[T]].minus(x,y))\n   78      case _ => super.numeric_minus(lhs,rhs)\n   79    }\n   80:   override def numeric_times[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[T] = (lhs,rhs) match {\n   81      case (Const(x), Const(y)) => Const(implicitly[Numeric[T]].times(x,y))\n   82      case (Const(x), y) if x == implicitly[Numeric[T]].zero => Const(x)\n   ..\n   86      case _ => super.numeric_times(lhs,rhs)\n   87    }\n   88:   override def numeric_divide[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[T] = (lhs,rhs) match {\n   89      // CAVEAT: Numeric doesn't have .div, Fractional has\n   90      case (Const(x), Const(y)) => Const(implicitly[Numeric[T]].asInstanceOf[Fractional[T]].div(x,y))\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/ObjectOps.scala:\n    5  import scala.virtualization.lms.util.OverloadHack\n    6  import scala.virtualization.lms.internal.{GenerationFailedException}\n    7: import scala.reflect.SourceContext\n    8  \n    9  trait ObjectOps extends Variables with OverloadHack {\n   10:   def infix_toString(lhs: Rep[Any])(implicit pos: SourceContext) = object_tostring(lhs)\n   11:   def infix_ToString(lhs: Rep[Any])(implicit pos: SourceContext) = object_tostring(lhs)\n   12:   def infix_unsafeImmutable[A:Manifest](lhs: Rep[A])(implicit pos: SourceContext) = object_unsafe_immutable(lhs)\n   13:   def infix_unsafeMutable[A:Manifest](lhs: Rep[A])(implicit pos: SourceContext) = object_unsafe_mutable(lhs)\n   14  \n   15:   def object_tostring(lhs: Rep[Any])(implicit pos: SourceContext): Rep[String]\n   16:   def object_unsafe_immutable[A:Manifest](lhs: Rep[A])(implicit pos: SourceContext): Rep[A]\n   17:   def object_unsafe_mutable[A:Manifest](lhs: Rep[A])(implicit pos: SourceContext): Rep[A]\n   18  }\n   19  \n   ..\n   27   }\n   28  \n   29:   def object_tostring(lhs: Exp[Any])(implicit pos: SourceContext) = ObjectToString(lhs)\n   30:   def object_unsafe_immutable[A:Manifest](lhs: Exp[A])(implicit pos: SourceContext) = lhs match {\n   31      // INVESTIGATE: there was an issue where Const(0).unsafeImmutable == Const(0.0). How is this possible? CSE with primitive widening?\n   32      case c@Const(x) => c\n   33      case _ => ObjectUnsafeImmutable(lhs)\n   34    }\n   35:   def object_unsafe_mutable[A:Manifest](lhs: Exp[A])(implicit pos: SourceContext) = reflectMutable(ObjectUnsafeMutable(lhs))\n   36  \n   37    //////////////\n   38    // mirroring\n   39  \n   40:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   41      case e@ObjectUnsafeImmutable(a) => object_unsafe_immutable(f(a))(mtype(e.m),pos)\n   42      case e@ObjectToString(a) => object_tostring(f(a))\n   ..\n   71  \n   72  trait ObjectOpsExpOpt extends ObjectOpsExp {\n   73:   override def object_tostring(lhs: Exp[Any])(implicit pos: SourceContext) = {\n   74      if (lhs.tp <:< manifest[String]) lhs.asInstanceOf[Exp[String]]\n   75      else super.object_tostring(lhs)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/OrderingOps.scala:\n    4  import java.io.PrintWriter\n    5  import scala.virtualization.lms.util.OverloadHack\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait OrderingOps extends Base with Variables with OverloadHack {\n    .\n   13  \n   14    class OrderingOpsCls[T:Ordering:Manifest](lhs: Rep[T]){\n   15:     def <       (rhs: Rep[T])(implicit pos: SourceContext) = ordering_lt(lhs, rhs)\n   16:     def <=      (rhs: Rep[T])(implicit pos: SourceContext) = ordering_lteq(lhs, rhs)\n   17:     def >       (rhs: Rep[T])(implicit pos: SourceContext) = ordering_gt(lhs, rhs)\n   18:     def >=      (rhs: Rep[T])(implicit pos: SourceContext) = ordering_gteq(lhs, rhs)\n   19:     def equiv   (rhs: Rep[T])(implicit pos: SourceContext) = ordering_equiv(lhs, rhs)\n   20:     def max     (rhs: Rep[T])(implicit pos: SourceContext) = ordering_max(lhs, rhs)\n   21:     def min     (rhs: Rep[T])(implicit pos: SourceContext) = ordering_min(lhs, rhs)\n   22:     def compare (rhs: Rep[T])(implicit pos: SourceContext) = ordering_compare(lhs, rhs)\n   23  \n   24:     def <       [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_lt(lhs, c(rhs))\n   25:     def <=      [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_lteq(lhs, c(rhs))\n   26:     def >       [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_gt(lhs, c(rhs))\n   27:     def >=      [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_gteq(lhs, c(rhs))\n   28:     def equiv   [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_equiv(lhs, c(rhs))\n   29:     def max     [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_max(lhs, c(rhs))\n   30:     def min     [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_min(lhs, c(rhs))\n   31:     def compare [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_compare(lhs, c(rhs))\n   32    }\n   33  \n   34:   def ordering_lt      [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Boolean]\n   35:   def ordering_lteq    [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Boolean]\n   36:   def ordering_gt      [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Boolean]\n   37:   def ordering_gteq    [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Boolean]\n   38:   def ordering_equiv   [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Boolean]\n   39:   def ordering_max     [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[T]\n   40:   def ordering_min     [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[T]\n   41:   def ordering_compare [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Int]\n   42  }\n   43  \n   ..\n   57    case class OrderingCompare [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T]) extends DefMN[T,Int]\n   58  \n   59:   def ordering_lt     [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = OrderingLT(lhs,rhs)\n   60:   def ordering_lteq   [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = OrderingLTEQ(lhs,rhs)\n   61:   def ordering_gt     [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = OrderingGT(lhs,rhs)\n   62:   def ordering_gteq   [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = OrderingGTEQ(lhs,rhs)\n   63:   def ordering_equiv  [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = OrderingEquiv(lhs,rhs)\n   64:   def ordering_max    [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[T]       = OrderingMax(lhs,rhs)\n   65:   def ordering_min    [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[T]       = OrderingMin(lhs,rhs)\n   66:   def ordering_compare[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Int]     = OrderingCompare(lhs,rhs)\n   67  \n   68:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   69      case e@OrderingLT(a,b)                      => ordering_lt(f(a),f(b))(e.aev,e.mev,pos)\n   70      case e@OrderingLTEQ(a,b)                    => ordering_lteq(f(a),f(b))(e.aev,e.mev,pos)\n   ..\n   92  trait OrderingOpsExpOpt extends OrderingOpsExp {\n   93  \n   94:   override def ordering_lt[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = (lhs, rhs) match {\n   95      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].lt(a, b))\n   96      case (a, b) if a.equals(b) => Const(false)\n   ..\n   98    }\n   99  \n  100:   override def ordering_lteq[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = (lhs, rhs) match {\n  101      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].lteq(a, b))\n  102      case (a, b) if a.equals(b) => Const(true)\n  ...\n  104    }\n  105  \n  106:   override def ordering_gt[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = (lhs, rhs) match {\n  107      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].gt(a, b))\n  108      case (a, b) if a.equals(b) => Const(false)\n  ...\n  110    }\n  111  \n  112:   override def ordering_gteq[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = (lhs, rhs) match {\n  113      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].gteq(a, b))\n  114      case (a, b) if a.equals(b) => Const(true)\n  ...\n  116    }\n  117  \n  118:   override def ordering_equiv[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = (lhs, rhs) match {\n  119      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].equiv(a, b))\n  120      case (a, b) if a.equals(b) => Const(true)\n  ...\n  122    }\n  123  \n  124:   override def ordering_max[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[T] = (lhs, rhs) match {\n  125      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].max(a, b))\n  126      case (a, b) if a.equals(b) => a\n  ...\n  128    }\n  129  \n  130:   override def ordering_min[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[T] = (lhs, rhs) match {\n  131      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].min(a, b))\n  132      case (a, b) if a.equals(b) => a\n  ...\n  134    }\n  135  \n  136:   override def ordering_compare[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Int] = (lhs, rhs) match {\n  137      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].compare(a, b))\n  138      case (a, b) if a.equals(b) => Const[Int](0)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala:\n    5  \n    6  import scala.virtualization.lms.util.OverloadHack\n    7: import scala.reflect.SourceContext\n    8  \n    9  trait LiftPrimitives {\n   ..\n   41     * Avoids certain fragile behavior, including compiler crashes and some erroneous or inaccessible type errors.\n   42     */  \n   43:   def infix_-(lhs: Int, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Int] = int_minus(unit(lhs), rhs)\n   44:   def infix_-(lhs: Int, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_minus(unit(lhs), rhs)\n   45:   def infix_-(lhs: Int, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_minus(unit(lhs), rhs)\n   46:   def infix_-(lhs: Float, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Float] = float_minus(unit(lhs),rhs)  \n   47:   def infix_-(lhs: Float, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_minus(unit(lhs), rhs)\n   48:   def infix_-(lhs: Float, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_minus(unit(lhs), rhs)\n   49:   def infix_-(lhs: Double, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Double] = double_minus(unit(lhs),rhs)  \n   50:   def infix_-(lhs: Double, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Double] = double_minus(unit(lhs),rhs)\n   51:   def infix_-(lhs: Double, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_minus(unit(lhs),rhs)\n   52:   def infix_-(lhs: Rep[Int], rhs: Int)(implicit ctx: SourceContext): Rep[Int] = int_minus(lhs, unit(rhs))  \n   53:   def infix_-(lhs: Rep[Int], rhs: Double)(implicit ctx: SourceContext): Rep[Double] = double_minus(lhs, unit(rhs))\n   54:   def infix_-(lhs: Rep[Int], rhs: Float)(implicit ctx: SourceContext): Rep[Float] = float_minus(lhs, unit(rhs))\n   55:   def infix_-(lhs: Rep[Float], rhs: Int)(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_minus(lhs, unit(rhs))\n   56:   def infix_-(lhs: Rep[Float], rhs: Float)(implicit o: Overloaded2, ctx: SourceContext): Rep[Float] = float_minus(lhs, unit(rhs))\n   57:   def infix_-(lhs: Rep[Float], rhs: Double)(implicit o: Overloaded3, ctx: SourceContext): Rep[Double] = double_minus(lhs, unit(rhs))\n   58:   def infix_-(lhs: Rep[Double], rhs: Int)(implicit o: Overloaded4, ctx: SourceContext): Rep[Double] = double_minus(lhs, unit(rhs))\n   59:   def infix_-(lhs: Rep[Double], rhs: Float)(implicit o: Overloaded5, ctx: SourceContext): Rep[Double] = double_minus(lhs, unit(rhs))\n   60:   def infix_-(lhs: Rep[Double], rhs: Double)(implicit o: Overloaded6, ctx: SourceContext): Rep[Double] = double_minus(lhs, unit(rhs))\n   61:   def infix_-(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, ctx: SourceContext): Rep[Int] = int_minus(lhs, rhs)\n   62:   def infix_-(lhs: Rep[Int], rhs: Rep[Float])(implicit o: Overloaded2, ctx: SourceContext): Rep[Float] = float_minus(repIntToRepFloat(lhs), rhs)\n   63:   def infix_-(lhs: Rep[Int], rhs: Rep[Double])(implicit o: Overloaded3, ctx: SourceContext): Rep[Double] = double_minus(repIntToRepDouble(lhs), rhs)\n   64:   def infix_-(lhs: Rep[Float], rhs: Rep[Int])(implicit o: Overloaded4, ctx: SourceContext): Rep[Float] = float_minus(lhs,repIntToRepFloat(rhs))  \n   65:   def infix_-(lhs: Rep[Float], rhs: Rep[Float])(implicit o: Overloaded5, ctx: SourceContext): Rep[Float] = float_minus(lhs, rhs)\n   66:   def infix_-(lhs: Rep[Float], rhs: Rep[Double])(implicit o: Overloaded6, ctx: SourceContext): Rep[Double] = double_minus(repFloatToRepDouble(lhs), rhs)\n   67:   def infix_-(lhs: Rep[Double], rhs: Rep[Int])(implicit o: Overloaded7, ctx: SourceContext): Rep[Double] = double_minus(lhs,repIntToRepDouble(rhs))  \n   68:   def infix_-(lhs: Rep[Double], rhs: Rep[Float])(implicit o: Overloaded8, ctx: SourceContext): Rep[Double] = double_minus(lhs,repFloatToRepDouble(rhs))\n   69:   def infix_-(lhs: Rep[Double], rhs: Rep[Double])(implicit o: Overloaded9, ctx: SourceContext): Rep[Double] = double_minus(lhs,rhs)    \n   70  \n   71:   def infix_+(lhs: Int, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Int] = int_plus(unit(lhs), rhs)\n   72:   def infix_+(lhs: Int, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_plus(unit(lhs), rhs)\n   73:   def infix_+(lhs: Int, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_plus(unit(lhs), rhs)\n   74:   def infix_+(lhs: Float, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Float] = float_plus(unit(lhs),rhs)  \n   75:   def infix_+(lhs: Float, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_plus(unit(lhs), rhs)\n   76:   def infix_+(lhs: Float, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_plus(unit(lhs), rhs)\n   77:   def infix_+(lhs: Double, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Double] = double_plus(unit(lhs),rhs)  \n   78:   def infix_+(lhs: Double, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Double] = double_plus(unit(lhs),rhs)\n   79:   def infix_+(lhs: Double, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_plus(unit(lhs),rhs)\n   80:   def infix_+(lhs: Rep[Int], rhs: Int)(implicit ctx: SourceContext): Rep[Int] = int_plus(lhs, unit(rhs))  \n   81:   def infix_+(lhs: Rep[Int], rhs: Double)(implicit ctx: SourceContext): Rep[Double] = double_plus(lhs, unit(rhs))\n   82:   def infix_+(lhs: Rep[Int], rhs: Float)(implicit ctx: SourceContext): Rep[Float] = float_plus(lhs, unit(rhs))\n   83:   def infix_+(lhs: Rep[Float], rhs: Int)(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_plus(lhs, unit(rhs))\n   84:   def infix_+(lhs: Rep[Float], rhs: Float)(implicit o: Overloaded2, ctx: SourceContext): Rep[Float] = float_plus(lhs, unit(rhs))\n   85:   def infix_+(lhs: Rep[Float], rhs: Double)(implicit o: Overloaded3, ctx: SourceContext): Rep[Double] = double_plus(lhs, unit(rhs))\n   86:   def infix_+(lhs: Rep[Double], rhs: Int)(implicit o: Overloaded4, ctx: SourceContext): Rep[Double] = double_plus(lhs, unit(rhs))\n   87:   def infix_+(lhs: Rep[Double], rhs: Float)(implicit o: Overloaded5, ctx: SourceContext): Rep[Double] = double_plus(lhs, unit(rhs))\n   88:   def infix_+(lhs: Rep[Double], rhs: Double)(implicit o: Overloaded6, ctx: SourceContext): Rep[Double] = double_plus(lhs, unit(rhs))\n   89:   def infix_+(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded15, ctx: SourceContext): Rep[Int] = int_plus(lhs, rhs)\n   90:   def infix_+(lhs: Rep[Int], rhs: Rep[Float])(implicit o: Overloaded16, ctx: SourceContext): Rep[Float] = float_plus(repIntToRepFloat(lhs), rhs)\n   91:   def infix_+(lhs: Rep[Int], rhs: Rep[Double])(implicit o: Overloaded17, ctx: SourceContext): Rep[Double] = double_plus(repIntToRepDouble(lhs), rhs)\n   92:   def infix_+(lhs: Rep[Float], rhs: Rep[Int])(implicit o: Overloaded18, ctx: SourceContext): Rep[Float] = float_plus(lhs,repIntToRepFloat(rhs))  \n   93:   def infix_+(lhs: Rep[Float], rhs: Rep[Float])(implicit o: Overloaded19, ctx: SourceContext): Rep[Float] = float_plus(lhs, rhs)\n   94:   def infix_+(lhs: Rep[Float], rhs: Rep[Double])(implicit o: Overloaded20, ctx: SourceContext): Rep[Double] = double_plus(repFloatToRepDouble(lhs), rhs)\n   95:   def infix_+(lhs: Rep[Double], rhs: Rep[Int])(implicit o: Overloaded21, ctx: SourceContext): Rep[Double] = double_plus(lhs,repIntToRepDouble(rhs))  \n   96:   def infix_+(lhs: Rep[Double], rhs: Rep[Float])(implicit o: Overloaded22, ctx: SourceContext): Rep[Double] = double_plus(lhs,repFloatToRepDouble(rhs))\n   97:   def infix_+(lhs: Rep[Double], rhs: Rep[Double])(implicit o: Overloaded23, ctx: SourceContext): Rep[Double] = double_plus(lhs,rhs)    \n   98  \n   99:   def infix_*(lhs: Int, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Int] = int_times(unit(lhs), rhs)\n  100:   def infix_*(lhs: Int, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_times(unit(lhs), rhs)\n  101:   def infix_*(lhs: Int, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_times(unit(lhs), rhs)\n  102:   def infix_*(lhs: Float, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Float] = float_times(unit(lhs),rhs)  \n  103:   def infix_*(lhs: Float, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_times(unit(lhs), rhs)\n  104:   def infix_*(lhs: Float, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_times(unit(lhs), rhs)\n  105:   def infix_*(lhs: Double, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Double] = double_times(unit(lhs),rhs)  \n  106:   def infix_*(lhs: Double, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Double] = double_times(unit(lhs),rhs)\n  107:   def infix_*(lhs: Double, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_times(unit(lhs),rhs)\n  108:   def infix_*(lhs: Rep[Int], rhs: Int)(implicit ctx: SourceContext): Rep[Int] = int_times(lhs, unit(rhs))  \n  109:   def infix_*(lhs: Rep[Int], rhs: Double)(implicit ctx: SourceContext): Rep[Double] = double_times(lhs, unit(rhs))\n  110:   def infix_*(lhs: Rep[Int], rhs: Float)(implicit ctx: SourceContext): Rep[Float] = float_times(lhs, unit(rhs))\n  111:   def infix_*(lhs: Rep[Float], rhs: Int)(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_times(lhs, unit(rhs))\n  112:   def infix_*(lhs: Rep[Float], rhs: Float)(implicit o: Overloaded2, ctx: SourceContext): Rep[Float] = float_times(lhs, unit(rhs))\n  113:   def infix_*(lhs: Rep[Float], rhs: Double)(implicit o: Overloaded3, ctx: SourceContext): Rep[Double] = double_times(lhs, unit(rhs))\n  114:   def infix_*(lhs: Rep[Double], rhs: Int)(implicit o: Overloaded4, ctx: SourceContext): Rep[Double] = double_times(lhs, unit(rhs))\n  115:   def infix_*(lhs: Rep[Double], rhs: Float)(implicit o: Overloaded5, ctx: SourceContext): Rep[Double] = double_times(lhs, unit(rhs))\n  116:   def infix_*(lhs: Rep[Double], rhs: Double)(implicit o: Overloaded6, ctx: SourceContext): Rep[Double] = double_times(lhs, unit(rhs))\n  117:   def infix_*(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, ctx: SourceContext): Rep[Int] = int_times(lhs, rhs)\n  118:   def infix_*(lhs: Rep[Int], rhs: Rep[Float])(implicit o: Overloaded2, ctx: SourceContext): Rep[Float] = float_times(repIntToRepFloat(lhs), rhs)\n  119:   def infix_*(lhs: Rep[Int], rhs: Rep[Double])(implicit o: Overloaded3, ctx: SourceContext): Rep[Double] = double_times(repIntToRepDouble(lhs), rhs)\n  120:   def infix_*(lhs: Rep[Float], rhs: Rep[Int])(implicit o: Overloaded4, ctx: SourceContext): Rep[Float] = float_times(lhs,repIntToRepFloat(rhs))  \n  121:   def infix_*(lhs: Rep[Float], rhs: Rep[Float])(implicit o: Overloaded5, ctx: SourceContext): Rep[Float] = float_times(lhs, rhs)\n  122:   def infix_*(lhs: Rep[Float], rhs: Rep[Double])(implicit o: Overloaded6, ctx: SourceContext): Rep[Double] = double_times(repFloatToRepDouble(lhs), rhs)\n  123:   def infix_*(lhs: Rep[Double], rhs: Rep[Int])(implicit o: Overloaded7, ctx: SourceContext): Rep[Double] = double_times(lhs,repIntToRepDouble(rhs))  \n  124:   def infix_*(lhs: Rep[Double], rhs: Rep[Float])(implicit o: Overloaded8, ctx: SourceContext): Rep[Double] = double_times(lhs,repFloatToRepDouble(rhs))\n  125:   def infix_*(lhs: Rep[Double], rhs: Rep[Double])(implicit o: Overloaded9, ctx: SourceContext): Rep[Double] = double_times(lhs,rhs)    \n  126  \n  127:   def infix_/(lhs: Int, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Int] = int_divide(unit(lhs), rhs)\n  128:   def infix_/(lhs: Int, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_divide(unit(lhs), rhs)\n  129:   def infix_/(lhs: Int, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_divide(unit(lhs), rhs)\n  130:   def infix_/(lhs: Float, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Float] = float_divide(unit(lhs),rhs)  \n  131:   def infix_/(lhs: Float, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_divide(unit(lhs), rhs)\n  132:   def infix_/(lhs: Float, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_divide(unit(lhs), rhs)\n  133:   def infix_/(lhs: Double, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Double] = double_divide(unit(lhs),rhs)  \n  134:   def infix_/(lhs: Double, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Double] = double_divide(unit(lhs),rhs)\n  135:   def infix_/(lhs: Double, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_divide(unit(lhs),rhs)\n  136:   def infix_/(lhs: Rep[Int], rhs: Int)(implicit ctx: SourceContext): Rep[Int] = int_divide(lhs, unit(rhs))  \n  137:   def infix_/(lhs: Rep[Int], rhs: Double)(implicit ctx: SourceContext): Rep[Double] = double_divide(lhs, unit(rhs))\n  138:   def infix_/(lhs: Rep[Int], rhs: Float)(implicit ctx: SourceContext): Rep[Float] = float_divide(lhs, unit(rhs))\n  139:   def infix_/(lhs: Rep[Float], rhs: Int)(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_divide(lhs, unit(rhs))\n  140:   def infix_/(lhs: Rep[Float], rhs: Float)(implicit o: Overloaded2, ctx: SourceContext): Rep[Float] = float_divide(lhs, unit(rhs))\n  141:   def infix_/(lhs: Rep[Float], rhs: Double)(implicit o: Overloaded3, ctx: SourceContext): Rep[Double] = double_divide(lhs, unit(rhs))\n  142:   def infix_/(lhs: Rep[Double], rhs: Int)(implicit o: Overloaded4, ctx: SourceContext): Rep[Double] = double_divide(lhs, unit(rhs))\n  143:   def infix_/(lhs: Rep[Double], rhs: Float)(implicit o: Overloaded5, ctx: SourceContext): Rep[Double] = double_divide(lhs, unit(rhs))\n  144:   def infix_/(lhs: Rep[Double], rhs: Double)(implicit o: Overloaded6, ctx: SourceContext): Rep[Double] = double_divide(lhs, unit(rhs))\n  145:   def infix_/(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, ctx: SourceContext): Rep[Int] = int_divide(lhs, rhs)\n  146:   def infix_/(lhs: Rep[Int], rhs: Rep[Float])(implicit o: Overloaded2, ctx: SourceContext): Rep[Float] = float_divide(repIntToRepFloat(lhs), rhs)\n  147:   def infix_/(lhs: Rep[Int], rhs: Rep[Double])(implicit o: Overloaded3, ctx: SourceContext): Rep[Double] = double_divide(repIntToRepDouble(lhs), rhs)\n  148:   def infix_/(lhs: Rep[Float], rhs: Rep[Int])(implicit o: Overloaded4, ctx: SourceContext): Rep[Float] = float_divide(lhs,repIntToRepFloat(rhs))  \n  149:   def infix_/(lhs: Rep[Float], rhs: Rep[Float])(implicit o: Overloaded5, ctx: SourceContext): Rep[Float] = float_divide(lhs, rhs)\n  150:   def infix_/(lhs: Rep[Float], rhs: Rep[Double])(implicit o: Overloaded6, ctx: SourceContext): Rep[Double] = double_divide(repFloatToRepDouble(lhs), rhs)\n  151:   def infix_/(lhs: Rep[Double], rhs: Rep[Int])(implicit o: Overloaded7, ctx: SourceContext): Rep[Double] = double_divide(lhs,repIntToRepDouble(rhs))  \n  152:   def infix_/(lhs: Rep[Double], rhs: Rep[Float])(implicit o: Overloaded8, ctx: SourceContext): Rep[Double] = double_divide(lhs,repFloatToRepDouble(rhs))\n  153:   def infix_/(lhs: Rep[Double], rhs: Rep[Double])(implicit o: Overloaded9, ctx: SourceContext): Rep[Double] = double_divide(lhs,rhs)      \n  154  \n  155    /**\n  ...\n  161    \n  162    object Double {\n  163:     def parseDouble(s: Rep[String])(implicit pos: SourceContext) = obj_double_parse_double(s)\n  164:     def PositiveInfinity(implicit pos: SourceContext) = obj_double_positive_infinity\n  165:     def NegativeInfinity(implicit pos: SourceContext) = obj_double_negative_infinity\n  166:     def MinValue(implicit pos: SourceContext) = obj_double_min_value\n  167:     def MaxValue(implicit pos: SourceContext) = obj_double_max_value\n  168    }\n  169  \n  170    class DoubleOpsCls(lhs: Rep[Double]){\n  171:     def floatValue()(implicit pos: SourceContext) = double_float_value(lhs)\n  172:     def toInt(implicit pos: SourceContext) = double_to_int(lhs)\n  173:     def toFloat(implicit pos: SourceContext) = double_to_float(lhs)\n  174    }\n  175  \n  176:   def obj_double_parse_double(s: Rep[String])(implicit pos: SourceContext): Rep[Double]\n  177:   def obj_double_positive_infinity(implicit pos: SourceContext): Rep[Double]\n  178:   def obj_double_negative_infinity(implicit pos: SourceContext): Rep[Double]\n  179:   def obj_double_min_value(implicit pos: SourceContext): Rep[Double]\n  180:   def obj_double_max_value(implicit pos: SourceContext): Rep[Double]\n  181:   def double_float_value(lhs: Rep[Double])(implicit pos: SourceContext): Rep[Float]\n  182:   def double_plus(lhs: Rep[Double], rhs: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n  183:   def double_minus(lhs: Rep[Double], rhs: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n  184:   def double_times(lhs: Rep[Double], rhs: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n  185:   def double_divide(lhs: Rep[Double], rhs: Rep[Double])(implicit pos: SourceContext): Rep[Double]  \n  186:   def double_to_int(lhs: Rep[Double])(implicit pos: SourceContext): Rep[Int]\n  187:   def double_to_float(lhs: Rep[Double])(implicit pos: SourceContext): Rep[Float]\n  188    \n  189    /**\n  ...\n  191     */\n  192    object Float {\n  193:     def parseFloat(s: Rep[String])(implicit pos: SourceContext) = obj_float_parse_float(s)\n  194    }\n  195  \n  196:   def infix_toInt(lhs: Rep[Float])(implicit o: Overloaded1, pos: SourceContext): Rep[Int] = float_to_int(lhs)\n  197:   def infix_toDouble(lhs: Rep[Float])(implicit o: Overloaded1, pos: SourceContext): Rep[Double] = float_to_double(lhs) \n  198    \n  199:   def obj_float_parse_float(s: Rep[String])(implicit pos: SourceContext): Rep[Float]\n  200:   def float_plus(lhs: Rep[Float], rhs: Rep[Float])(implicit pos: SourceContext): Rep[Float]\n  201:   def float_minus(lhs: Rep[Float], rhs: Rep[Float])(implicit pos: SourceContext): Rep[Float]\n  202:   def float_times(lhs: Rep[Float], rhs: Rep[Float])(implicit pos: SourceContext): Rep[Float]\n  203:   def float_divide(lhs: Rep[Float], rhs: Rep[Float])(implicit pos: SourceContext): Rep[Float]         \n  204:   def float_to_int(lhs: Rep[Float])(implicit pos: SourceContext): Rep[Int]\n  205:   def float_to_double(lhs: Rep[Float])(implicit pos: SourceContext): Rep[Double]\n  206    \n  207    /**\n  ...\n  209     */\n  210    object Integer {\n  211:     def parseInt(s: Rep[String])(implicit pos: SourceContext) = obj_integer_parse_int(s)\n  212    }\n  213  \n  214    object Int {\n  215:     def MaxValue(implicit pos: SourceContext) = obj_int_max_value\n  216:     def MinValue(implicit pos: SourceContext) = obj_int_min_value\n  217    }\n  218  \n  ...\n  226      //def /(rhs: Rep[Int]) = int_divide(lhs, rhs)\n  227      // TODO Something is wrong if we just use floatValue. implicits get confused\n  228:     def floatValueL()(implicit pos: SourceContext) = int_float_value(lhs)\n  229:     def doubleValue()(implicit pos: SourceContext) = int_double_value(lhs)\n  230:     def unary_~()(implicit pos: SourceContext) = int_bitwise_not(lhs)\n  231:     def toLong(implicit pos: SourceContext) = int_tolong(lhs)\n  232:     def toDouble(implicit pos: SourceContext) = int_to_double(lhs)\n  233:     def toFloat(implicit pos: SourceContext) = int_to_float(lhs)        \n  234    }\n  235  \n  236    \n  237:   def infix_%(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, pos: SourceContext) = int_mod(lhs, rhs)\n  238:   def infix_&(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, pos: SourceContext) = int_binaryand(lhs, rhs)\n  239:   def infix_|(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, pos: SourceContext) = int_binaryor(lhs, rhs)\n  240:   def infix_^(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, pos: SourceContext) = int_binaryxor(lhs, rhs)\n  241:   def infix_<<(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, pos: SourceContext) = int_leftshift(lhs, rhs)\n  242:   def infix_>>(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, pos: SourceContext) = int_rightshiftarith(lhs, rhs)\n  243:   def infix_>>>(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, pos: SourceContext) = int_rightshiftlogical(lhs, rhs)\n  244  \n  245:   def obj_integer_parse_int(s: Rep[String])(implicit pos: SourceContext): Rep[Int]\n  246:   def obj_int_max_value(implicit pos: SourceContext): Rep[Int]\n  247:   def obj_int_min_value(implicit pos: SourceContext): Rep[Int]\n  248:   def int_plus(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  249:   def int_minus(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  250:   def int_times(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  251:   // def int_divide_frac[A:Manifest:Fractional](lhs: Rep[Int], rhs: Rep[A])(implicit pos: SourceContext): Rep[A]\n  252:   def int_divide(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  253    \n  254:   def int_mod(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  255:   def int_binaryor(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  256:   def int_binaryand(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  257:   def int_binaryxor(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  258:   def int_float_value(lhs: Rep[Int])(implicit pos: SourceContext): Rep[Float]\n  259:   def int_double_value(lhs: Rep[Int])(implicit pos: SourceContext): Rep[Double]\n  260:   def int_bitwise_not(lhs: Rep[Int])(implicit pos: SourceContext) : Rep[Int]\n  261:   def int_tolong(lhs: Rep[Int])(implicit pos: SourceContext) : Rep[Long]\n  262:   def int_to_float(lhs: Rep[Int])(implicit pos: SourceContext) : Rep[Float]\n  263:   def int_to_double(lhs: Rep[Int])(implicit pos: SourceContext) : Rep[Double]\n  264:   def int_leftshift(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  265:   def int_rightshiftarith(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  266:   def int_rightshiftlogical(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  267  \n  268    /**\n  ...\n  270     */\n  271    object Long {\n  272:     def parseLong(s: Rep[String])(implicit pos: SourceContext) = obj_long_parse_long(s)\n  273    }\n  274  \n  275:   def infix_&(lhs: Rep[Long], rhs: Rep[Long])(implicit o: Overloaded2, pos: SourceContext) = long_binaryand(lhs, rhs)\n  276:   def infix_|(lhs: Rep[Long], rhs: Rep[Long])(implicit o: Overloaded2, pos: SourceContext) = long_binaryor(lhs, rhs)\n  277:   def infix_<<(lhs: Rep[Long], rhs: Rep[Int])(implicit o: Overloaded2, pos: SourceContext) = long_shiftleft(lhs, rhs)\n  278:   def infix_>>>(lhs: Rep[Long], rhs: Rep[Int])(implicit o: Overloaded2, pos: SourceContext) = long_shiftright_unsigned(lhs, rhs)\n  279:   def infix_toInt(lhs: Rep[Long])(implicit o: Overloaded2, pos: SourceContext) = long_toint(lhs)\n  280      \n  281:   def obj_long_parse_long(s: Rep[String])(implicit pos: SourceContext): Rep[Long]\n  282:   def long_binaryand(lhs: Rep[Long], rhs: Rep[Long])(implicit pos: SourceContext): Rep[Long]\n  283:   def long_binaryor(lhs: Rep[Long], rhs: Rep[Long])(implicit pos: SourceContext): Rep[Long]\n  284:   def long_shiftleft(lhs: Rep[Long], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Long]\n  285:   def long_shiftright_unsigned(lhs: Rep[Long], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Long]\n  286:   def long_toint(lhs: Rep[Long])(implicit pos: SourceContext): Rep[Int]\n  287  }\n  288  \n  ...\n  306    case class DoubleDivide(lhs: Exp[Double], rhs: Exp[Double]) extends Def[Double]  \n  307  \n  308:   def obj_double_parse_double(s: Exp[String])(implicit pos: SourceContext) = ObjDoubleParseDouble(s)\n  309:   def obj_double_positive_infinity(implicit pos: SourceContext) = ObjDoublePositiveInfinity()\n  310:   def obj_double_negative_infinity(implicit pos: SourceContext) = ObjDoubleNegativeInfinity()\n  311:   def obj_double_min_value(implicit pos: SourceContext) = ObjDoubleMinValue()\n  312:   def obj_double_max_value(implicit pos: SourceContext) = ObjDoubleMaxValue()\n  313:   def double_float_value(lhs: Exp[Double])(implicit pos: SourceContext) = DoubleFloatValue(lhs)\n  314:   def double_to_int(lhs: Exp[Double])(implicit pos: SourceContext) = DoubleToInt(lhs)\n  315:   def double_to_float(lhs: Exp[Double])(implicit pos: SourceContext) = DoubleToFloat(lhs)\n  316:   def double_plus(lhs: Exp[Double], rhs: Exp[Double])(implicit pos: SourceContext) : Exp[Double] = DoublePlus(lhs,rhs)\n  317:   def double_minus(lhs: Exp[Double], rhs: Exp[Double])(implicit pos: SourceContext) : Exp[Double] = DoubleMinus(lhs,rhs)\n  318:   def double_times(lhs: Exp[Double], rhs: Exp[Double])(implicit pos: SourceContext) : Exp[Double] = DoubleTimes(lhs,rhs)\n  319:   def double_divide(lhs: Exp[Double], rhs: Exp[Double])(implicit pos: SourceContext) : Exp[Double] = DoubleDivide(lhs,rhs)\n  320  \n  321    /**\n  ...\n  330    case class FloatDivide(lhs: Exp[Float], rhs: Exp[Float]) extends Def[Float]  \n  331    \n  332:   def obj_float_parse_float(s: Exp[String])(implicit pos: SourceContext) = ObjFloatParseFloat(s)\n  333:   def float_to_int(lhs: Exp[Float])(implicit pos: SourceContext) = FloatToInt(lhs)\n  334:   def float_to_double(lhs: Exp[Float])(implicit pos: SourceContext) = FloatToDouble(lhs)  \n  335:   def float_plus(lhs: Exp[Float], rhs: Exp[Float])(implicit pos: SourceContext) : Exp[Float] = FloatPlus(lhs,rhs)\n  336:   def float_minus(lhs: Exp[Float], rhs: Exp[Float])(implicit pos: SourceContext) : Exp[Float] = FloatMinus(lhs,rhs)\n  337:   def float_times(lhs: Exp[Float], rhs: Exp[Float])(implicit pos: SourceContext) : Exp[Float] = FloatTimes(lhs,rhs)\n  338:   def float_divide(lhs: Exp[Float], rhs: Exp[Float])(implicit pos: SourceContext) : Exp[Float] = FloatDivide(lhs,rhs)\n  339     \n  340    /**\n  ...\n  363    case class IntToDouble(lhs: Exp[Int]) extends Def[Double]\n  364  \n  365:   def obj_integer_parse_int(s: Rep[String])(implicit pos: SourceContext) = ObjIntegerParseInt(s)\n  366:   def obj_int_max_value(implicit pos: SourceContext) = ObjIntMaxValue()\n  367:   def obj_int_min_value(implicit pos: SourceContext) = ObjIntMinValue()\n  368:   def int_plus(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) : Exp[Int] = (lhs, rhs) match {\n  369      case (Const(0), r) => r\n  370      case (l, Const(0)) => l\n  ...\n  372      case _ => IntPlus(lhs,rhs)\n  373    }\n  374:   def int_minus(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) : Exp[Int] = (lhs, rhs) match {\n  375      case (l, Const(0)) => l\n  376      case (Const(x), Const(y)) => Const(x-y)\n  377      case _ => IntMinus(lhs, rhs)\n  378    }\n  379:   def int_times(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) : Exp[Int] = (lhs, rhs) match {\n  380      case (l@Const(0), r) => l\n  381      case (l, r@Const(0)) => r\n  ...\n  385      case _ => IntTimes(lhs, rhs)\n  386    }\n  387:   // def int_divide_frac[A:Manifest:Fractional](lhs: Exp[Int], rhs: Exp[A])(implicit pos: SourceContext) : Exp[A] = IntDivideFrac(lhs, rhs)\n  388:   def int_divide(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) : Exp[Int] = IntDivide(lhs, rhs)\n  389:   def int_mod(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) = IntMod(lhs, rhs)\n  390:   def int_binaryor(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) = IntBinaryOr(lhs, rhs)\n  391:   def int_binaryand(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) = IntBinaryAnd(lhs, rhs)\n  392:   def int_binaryxor(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) = IntBinaryXor(lhs, rhs)\n  393:   def int_double_value(lhs: Exp[Int])(implicit pos: SourceContext) = IntDoubleValue(lhs)\n  394:   def int_float_value(lhs: Exp[Int])(implicit pos: SourceContext) = IntFloatValue(lhs)\n  395:   def int_bitwise_not(lhs: Exp[Int])(implicit pos: SourceContext) = IntBitwiseNot(lhs)\n  396:   def int_tolong(lhs: Exp[Int])(implicit pos: SourceContext) = IntToLong(lhs)\n  397:   def int_to_float(lhs: Exp[Int])(implicit pos: SourceContext) = IntToFloat(lhs)\n  398:   def int_to_double(lhs: Exp[Int])(implicit pos: SourceContext) = IntToDouble(lhs)\n  399:   def int_leftshift(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) = IntShiftLeft(lhs, rhs)\n  400:   def int_rightshiftarith(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) = IntShiftRightArith(lhs, rhs)\n  401:   def int_rightshiftlogical(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) = IntShiftRightLogical(lhs, rhs)\n  402  \n  403  \n  ...\n  412    case class LongToInt(lhs: Exp[Long]) extends Def[Int]\n  413  \n  414:   def obj_long_parse_long(s: Exp[String])(implicit pos: SourceContext) = ObjLongParseLong(s)\n  415:   def long_binaryor(lhs: Exp[Long], rhs: Exp[Long])(implicit pos: SourceContext) = LongBinaryOr(lhs,rhs)\n  416:   def long_binaryand(lhs: Exp[Long], rhs: Exp[Long])(implicit pos: SourceContext) = LongBinaryAnd(lhs,rhs)  \n  417:   def long_shiftleft(lhs: Exp[Long], rhs: Exp[Int])(implicit pos: SourceContext) = LongShiftLeft(lhs,rhs)\n  418:   def long_shiftright_unsigned(lhs: Exp[Long], rhs: Exp[Int])(implicit pos: SourceContext) = LongShiftRightUnsigned(lhs,rhs)\n  419:   def long_toint(lhs: Exp[Long])(implicit pos: SourceContext) = LongToInt(lhs)\n  420      \n  421:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = ({\n  422      implicit var a: Numeric[A] = null // hack!! need to store it in Def instances??\n  423      e match {\n  ...\n  517  \n  518  trait PrimitiveOpsExpOpt extends PrimitiveOpsExp {\n  519:   override def int_plus(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) : Exp[Int] = (lhs,rhs) match {\n  520      case (Const(a),Const(b)) => unit(a+b)\n  521      case (Const(0),b) => b\n  ...\n  523      case _ => super.int_plus(lhs,rhs)\n  524    }\n  525:   override def int_minus(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) : Exp[Int] = (lhs,rhs) match {\n  526      case (Const(a),Const(b)) => unit(a-b)\n  527      case (a,Const(0)) => a\n  ...\n  529      case _ => super.int_minus(lhs,rhs)    \n  530    }\n  531:   override def int_times(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) : Exp[Int] = (lhs,rhs) match {\n  532      case (Const(a),Const(b)) => unit(a*b)\n  533      case (Const(0),b) => Const(0)\n  ...\n  537      case _ => super.int_times(lhs,rhs)    \n  538    }\n  539:   override def int_to_float(lhs: Rep[Int])(implicit pos: SourceContext): Rep[Float] = lhs match {\n  540      case Const(x) => Const(x.toFloat)\n  541      case _ => super.int_to_float(lhs)\n  542    }\n  543  \n  544:   override def int_to_double(lhs: Rep[Int])(implicit pos: SourceContext): Rep[Double] = lhs match {\n  545      case Const(x) => Const(x.toDouble)\n  546      case _ => super.int_to_double(lhs)\n  547    }\n  548  \n  549:   override def float_to_double(lhs: Rep[Float])(implicit pos: SourceContext): Rep[Double] = lhs match {\n  550      case Const(x) => Const(x.toDouble)\n  551      case Def(IntToFloat(x)) => int_to_double(x)\n  ...\n  553    }\n  554    \n  555:   override def double_to_int(lhs: Rep[Double])(implicit pos: SourceContext): Rep[Int] = lhs match {\n  556      case Const(x) => Const(x.toInt)\n  557      case Def(IntToDouble(x)) => x\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/RangeOps.scala:\n    5  \n    6  import scala.virtualization.lms.internal.{GenericNestedCodegen, GenerationFailedException}\n    7: import scala.reflect.SourceContext\n    8  \n    9  trait RangeOps extends Base {\n   ..\n   11    implicit def repRangeToRangeOps(r: Rep[Range]) = new rangeOpsCls(r)\n   12    class rangeOpsCls(r: Rep[Range]){\n   13:     def foreach(f: Rep[Int] => Rep[Unit])(implicit pos: SourceContext) = range_foreach(r, f)\n   14    }\n   15  \n   16:   def infix_until(start: Rep[Int], end: Rep[Int])(implicit pos: SourceContext) = range_until(start,end)\n   17:   def infix_start(r: Rep[Range])(implicit pos: SourceContext) = range_start(r)\n   18:   def infix_step(r: Rep[Range])(implicit pos: SourceContext) = range_step(r)\n   19:   def infix_end(r: Rep[Range])(implicit pos: SourceContext) = range_end(r)\n   20    //def infix_foreach(r: Rep[Range], f: Rep[Int] => Rep[Unit]) = range_foreach(r, f)\n   21  \n   22:   def range_until(start: Rep[Int], end: Rep[Int])(implicit pos: SourceContext): Rep[Range]\n   23:   def range_start(r: Rep[Range])(implicit pos: SourceContext) : Rep[Int]\n   24:   def range_step(r: Rep[Range])(implicit pos: SourceContext) : Rep[Int]\n   25:   def range_end(r: Rep[Range])(implicit pos: SourceContext) : Rep[Int]\n   26:   def range_foreach(r: Rep[Range], f: (Rep[Int]) => Rep[Unit])(implicit pos: SourceContext): Rep[Unit]\n   27  }\n   28  \n   ..\n   35    case class RangeForeach(start: Exp[Int], end: Exp[Int], i: Sym[Int], body: Block[Unit]) extends Def[Unit]\n   36  \n   37:   def range_until(start: Exp[Int], end: Exp[Int])(implicit pos: SourceContext) : Exp[Range] = Until(start, end)\n   38:   def range_start(r: Exp[Range])(implicit pos: SourceContext) : Exp[Int] = r match { \n   39      case Def(Until(start, end)) => start\n   40      case Def(Reflect(Until(start, end), u, es)) => start\n   41      case _ => RangeStart(r)\n   42    }\n   43:   def range_step(r: Exp[Range])(implicit pos: SourceContext) : Exp[Int] = RangeStep(r)\n   44:   def range_end(r: Exp[Range])(implicit pos: SourceContext) : Exp[Int] = r match { \n   45      case Def(Until(start, end)) => end\n   46      case Def(Reflect(Until(start, end), u, es)) => end\n   47      case _ => RangeEnd(r)\n   48    }\n   49:   def range_foreach(r: Exp[Range], block: Exp[Int] => Exp[Unit])(implicit pos: SourceContext) : Exp[Unit] = {\n   50      val i = fresh[Int]\n   51      val a = reifyEffects(block(i))\n   ..\n   53    }\n   54    \n   55:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   56      case Reflect(RangeForeach(s,e,i,b), u, es) => reflectMirrored(Reflect(RangeForeach(f(s),f(e),f(i).asInstanceOf[Sym[Int]],f(b)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)    \n   57      case Reflect(RangeStart(r), u, es) => reflectMirrored(Reflect(RangeStart(f(r)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/SeqOps.scala:\n    4  import java.io.PrintWriter\n    5  import internal._\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait SeqOps extends Variables {\n    9  \n   10    object Seq {\n   11:     def apply[A:Manifest](xs: Rep[A]*)(implicit pos: SourceContext) = seq_new(xs)\n   12    }\n   13    \n   ..\n   17  \n   18    class SeqOpsCls[T:Manifest](a: Rep[Seq[T]]){\n   19:     def apply(n: Rep[Int])(implicit pos: SourceContext) = seq_apply(a,n)\n   20:     def length(implicit pos: SourceContext) = seq_length(a)\n   21    }\n   22  \n   23:   def seq_new[A:Manifest](xs: Seq[Rep[A]])(implicit pos: SourceContext): Rep[Seq[A]]\n   24:   def seq_apply[T:Manifest](x: Rep[Seq[T]], n: Rep[Int])(implicit pos: SourceContext): Rep[T]\n   25:   def seq_length[T:Manifest](x: Rep[Seq[T]])(implicit pos: SourceContext): Rep[Int]\n   26  }\n   27  \n   ..\n   31    case class SeqApply[T:Manifest](x: Exp[Seq[T]], n: Exp[Int]) extends Def[T]\n   32    \n   33:   def seq_new[A:Manifest](xs: Seq[Rep[A]])(implicit pos: SourceContext) = SeqNew(xs.toList)\n   34:   def seq_apply[T:Manifest](x: Exp[Seq[T]], n: Exp[Int])(implicit pos: SourceContext): Exp[T] = SeqApply(x, n)\n   35:   def seq_length[T:Manifest](a: Exp[Seq[T]])(implicit pos: SourceContext): Exp[Int] = SeqLength(a)\n   36  \n   37:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   38      case SeqNew(xs) => seq_new(f(xs))\n   39      case _ => super.mirror(e,f)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/SetOps.scala:\n    5  import scala.virtualization.lms.internal._\n    6  import scala.collection.mutable.Set\n    7: import scala.reflect.SourceContext\n    8  \n    9  trait SetOps extends Base {\n   10    object Set {\n   11:     def apply[A:Manifest](xs: Rep[A]*)(implicit pos: SourceContext) = set_new[A](xs)\n   12    }\n   13  \n   ..\n   15  \n   16    class setOpsCls[A:Manifest](s: Rep[Set[A]]) {\n   17:     def contains(i: Rep[A])(implicit pos: SourceContext) = set_contains(s, i)\n   18:     def add(i: Rep[A])(implicit pos: SourceContext) = set_add(s, i)\n   19:     def remove(i: Rep[A])(implicit pos: SourceContext) = set_remove(s, i)\n   20:     def size(implicit pos: SourceContext) = set_size(s)\n   21:     def clear()(implicit pos: SourceContext) = set_clear(s)\n   22:     def toSeq(implicit pos: SourceContext) = set_toseq(s)\n   23:     def toArray(implicit pos: SourceContext) = set_toarray(s)\n   24    }\n   25  \n   26:   def set_new[A:Manifest](xs: Seq[Rep[A]])(implicit pos: SourceContext) : Rep[Set[A]]\n   27:   def set_contains[A:Manifest](s: Rep[Set[A]], i: Rep[A])(implicit pos: SourceContext) : Rep[Boolean]\n   28:   def set_add[A:Manifest](s: Rep[Set[A]], i: Rep[A])(implicit pos: SourceContext) : Rep[Unit]\n   29:   def set_remove[A:Manifest](s: Rep[Set[A]], i: Rep[A])(implicit pos: SourceContext) : Rep[Unit]\n   30:   def set_size[A:Manifest](s: Rep[Set[A]])(implicit pos: SourceContext) : Rep[Int]\n   31:   def set_clear[A:Manifest](s: Rep[Set[A]])(implicit pos: SourceContext) : Rep[Unit]\n   32:   def set_toseq[A:Manifest](s: Rep[Set[A]])(implicit pos: SourceContext): Rep[Seq[A]]\n   33:   def set_toarray[A:Manifest](s: Rep[Set[A]])(implicit pos: SourceContext): Rep[Array[A]]\n   34  }\n   35  \n   ..\n   47    }\n   48  \n   49:   def set_new[A:Manifest](xs: Seq[Exp[A]])(implicit pos: SourceContext) = reflectMutable(SetNew(xs, manifest[A]))\n   50:   def set_contains[A:Manifest](s: Exp[Set[A]], i: Exp[A])(implicit pos: SourceContext) = SetContains(s, i)\n   51:   def set_add[A:Manifest](s: Exp[Set[A]], i: Exp[A])(implicit pos: SourceContext) = reflectWrite(s)(SetAdd(s, i))\n   52:   def set_remove[A:Manifest](s: Exp[Set[A]], i: Exp[A])(implicit pos: SourceContext) = reflectWrite(s)(SetRemove(s, i))\n   53:   def set_size[A:Manifest](s: Exp[Set[A]])(implicit pos: SourceContext) = SetSize(s)\n   54:   def set_clear[A:Manifest](s: Exp[Set[A]])(implicit pos: SourceContext) = reflectWrite(s)(SetClear(s))\n   55:   def set_toseq[A:Manifest](s: Exp[Set[A]])(implicit pos: SourceContext) = SetToSeq(s)\n   56:   def set_toarray[A:Manifest](s: Exp[Set[A]])(implicit pos: SourceContext) = SetToArray(s)\n   57  }\n   58  \n\n/Users/vjovanov/code/virtualization-lms-core/src/common/SimplifyTransform.scala:\n    2  package common\n    3  \n    4: import scala.reflect.SourceContext\n    5  \n    6  \n\n/Users/vjovanov/code/virtualization-lms-core/src/common/SplitEffects.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  import scala.virtualization.lms.internal.{GenericNestedCodegen, GenericFatCodegen, GenerationFailedException}\n    7  \n    .\n   21    // (see test8-speculative6)\n   22  \n   23:   override def reflectEffectInternal[A:Manifest](x: Def[A], u: Summary)(implicit pos: SourceContext): Exp[A] = x match {\n   24      case IfThenElse(cond, thenp, elsep) =>\n   25        val affected = (u.mayRead ++ u.mayWrite).distinct\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/StaticData.scala:\n    4  import java.io.PrintWriter\n    5  import scala.virtualization.lms.internal.GenericNestedCodegen\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait StaticData extends Base {\n    .\n   15  \n   16    // StaticData doesn't play well with control dependencies.. looks like we somehow lose updates\n   17:   override implicit def toAtom[T:Manifest](d: Def[T])(implicit pos: SourceContext) = d match {\n   18      case StaticData(x) if addControlDeps =>\n   19        val save = conditionalScope\n   ..\n   30    }\n   31    \n   32:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   33      case StaticData(x) => staticData(x)(mtype(manifest[A]))        \n   34      case _ => super.mirror(e,f)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/StringOps.scala:\n    5  import scala.virtualization.lms.util.OverloadHack\n    6  import scala.virtualization.lms.internal.{GenerationFailedException}\n    7: import scala.reflect.SourceContext\n    8  \n    9  trait LiftString {\n   ..\n   17    //       since string concat is defined on all objects\n   18    \n   19:   def infix_+(s1: String, s2: Rep[Any])(implicit o: Overloaded1, pos: SourceContext) = string_plus(unit(s1), s2)\n   20:   def infix_+[T:Manifest](s1: String, s2: Var[T])(implicit o: Overloaded2, pos: SourceContext) = string_plus(unit(s1), readVar(s2))\n   21:   def infix_+(s1: Rep[String], s2: Rep[Any])(implicit o: Overloaded1, pos: SourceContext) = string_plus(s1, s2)\n   22:   def infix_+[T:Manifest](s1: Rep[String], s2: Var[T])(implicit o: Overloaded2, pos: SourceContext) = string_plus(s1, readVar(s2))\n   23:   def infix_+(s1: Rep[String], s2: Rep[String])(implicit o: Overloaded3, pos: SourceContext) = string_plus(s1, s2)\n   24:   def infix_+(s1: Rep[String], s2: Var[String])(implicit o: Overloaded4, pos: SourceContext) = string_plus(s1, readVar(s2))\n   25:   def infix_+(s1: Rep[Any], s2: Rep[String])(implicit o: Overloaded5, pos: SourceContext) = string_plus(s1, s2)\n   26:   def infix_+(s1: Rep[Any], s2: Var[String])(implicit o: Overloaded6, pos: SourceContext) = string_plus(s1, readVar(s2))\n   27:   def infix_+(s1: Rep[Any], s2: String)(implicit o: Overloaded7, pos: SourceContext) = string_plus(s1, unit(s2))\n   28    \n   29:   def infix_+(s1: Var[String], s2: Rep[Any])(implicit o: Overloaded8, pos: SourceContext) = string_plus(readVar(s1), s2)  \n   30:   def infix_+[T:Manifest](s1: Var[String], s2: Var[T])(implicit o: Overloaded9, pos: SourceContext) = string_plus(readVar(s1), readVar(s2))\n   31:   def infix_+(s1: Var[String], s2: Rep[String])(implicit o: Overloaded10, pos: SourceContext) = string_plus(readVar(s1), s2)    \n   32:   def infix_+(s1: Var[String], s2: Var[String])(implicit o: Overloaded11, pos: SourceContext) = string_plus(readVar(s1), readVar(s2))    \n   33:   def infix_+[T:Manifest](s1: Var[T], s2: Rep[String])(implicit o: Overloaded12, pos: SourceContext) = string_plus(readVar(s1), s2)\n   34:   def infix_+[T:Manifest](s1: Var[T], s2: Var[String])(implicit o: Overloaded13, pos: SourceContext) = string_plus(readVar(s1), readVar(s2))\n   35:   def infix_+[T:Manifest](s1: Var[T], s2: String)(implicit o: Overloaded14, pos: SourceContext) = string_plus(readVar(s1), unit(s2))\n   36    \n   37    // these are necessary to be more specific than arithmetic/numeric +. is there a more generic form of this that will work?\n   38:   //def infix_+[R:Manifest](s1: Rep[String], s2: R)(implicit c: R => Rep[Any], o: Overloaded15, pos: SourceContext) = string_plus(s1, c(s2))  \n   39:   def infix_+(s1: Rep[String], s2: Double)(implicit o: Overloaded15, pos: SourceContext) = string_plus(s1, unit(s2))\n   40:   def infix_+(s1: Rep[String], s2: Float)(implicit o: Overloaded16, pos: SourceContext) = string_plus(s1, unit(s2))\n   41:   def infix_+(s1: Rep[String], s2: Int)(implicit o: Overloaded17, pos: SourceContext) = string_plus(s1, unit(s2))\n   42:   def infix_+(s1: Rep[String], s2: Long)(implicit o: Overloaded18, pos: SourceContext) = string_plus(s1, unit(s2))\n   43:   def infix_+(s1: Rep[String], s2: Short)(implicit o: Overloaded19, pos: SourceContext) = string_plus(s1, unit(s2))  \n   44    \n   45:   def infix_startsWith(s1: Rep[String], s2: Rep[String])(implicit pos: SourceContext) = string_startswith(s1,s2)\n   46:   def infix_trim(s: Rep[String])(implicit pos: SourceContext) = string_trim(s)\n   47:   def infix_split(s: Rep[String], separators: Rep[String])(implicit pos: SourceContext) = string_split(s, separators, unit(0))\n   48:   def infix_split(s: Rep[String], separators: Rep[String], limit: Rep[Int])(implicit pos: SourceContext) = string_split(s, separators, limit)\n   49:   def infix_charAt(s: Rep[String], i: Rep[Int])(implicit pos: SourceContext) = string_charAt(s,i)\n   50:   def infix_endsWith(s: Rep[String], e: Rep[String])(implicit pos: SourceContext) = string_endsWith(s,e)\n   51:   def infix_contains(s1: Rep[String], s2: Rep[String])(implicit pos: SourceContext) = string_contains(s1,s2)\n   52:   def infix_toDouble(s: Rep[String])(implicit pos: SourceContext) = string_todouble(s)\n   53:   def infix_toFloat(s: Rep[String])(implicit pos: SourceContext) = string_tofloat(s)\n   54:   def infix_toInt(s: Rep[String])(implicit pos: SourceContext) = string_toint(s)\n   55:   def infix_toLong(s: Rep[String])(implicit pos: SourceContext) = string_tolong(s)\n   56:   def infix_substring(s: Rep[String], start: Rep[Int], end: Rep[Int])(implicit pos: SourceContext) = string_substring(s,start,end)\n   57  \n   58    // FIXME: enabling this causes trouble with DeliteOpSuite. investigate!!\n   59:   //def infix_length(s: Rep[String])(implicit pos: SourceContext) = string_length(s)\n   60  \n   61    object String {\n   62:     def valueOf(a: Rep[Any])(implicit pos: SourceContext) = string_valueof(a)\n   63    }\n   64  \n   65:   def string_plus(s: Rep[Any], o: Rep[Any])(implicit pos: SourceContext): Rep[String]\n   66:   def string_startswith(s1: Rep[String], s2: Rep[String])(implicit pos: SourceContext): Rep[Boolean]\n   67:   def string_trim(s: Rep[String])(implicit pos: SourceContext): Rep[String]\n   68:   def string_split(s: Rep[String], separators: Rep[String], limit: Rep[Int])(implicit pos: SourceContext): Rep[Array[String]]\n   69:   def string_valueof(d: Rep[Any])(implicit pos: SourceContext): Rep[String]\n   70:   def string_charAt(s: Rep[String], i: Rep[Int])(implicit pos: SourceContext): Rep[Char]\n   71:   def string_endsWith(s: Rep[String], e: Rep[String])(implicit pos: SourceContext): Rep[Boolean]\n   72:   def string_contains(s1: Rep[String], s2: Rep[String])(implicit pos: SourceContext): Rep[Boolean]\n   73:   def string_todouble(s: Rep[String])(implicit pos: SourceContext): Rep[Double]\n   74:   def string_tofloat(s: Rep[String])(implicit pos: SourceContext): Rep[Float]\n   75:   def string_toint(s: Rep[String])(implicit pos: SourceContext): Rep[Int]\n   76:   def string_tolong(s: Rep[String])(implicit pos: SourceContext): Rep[Long]\n   77:   def string_substring(s: Rep[String], start:Rep[Int], end:Rep[Int])(implicit pos: SourceContext): Rep[String]\n   78:   def string_length(s: Rep[String])(implicit pos: SourceContext): Rep[Int]\n   79  }\n   80  \n   ..\n   95    case class StringLength(s: Exp[String]) extends Def[Int]\n   96  \n   97:   def string_plus(s: Exp[Any], o: Exp[Any])(implicit pos: SourceContext): Rep[String] = StringPlus(s,o)\n   98:   def string_startswith(s1: Exp[String], s2: Exp[String])(implicit pos: SourceContext) = StringStartsWith(s1,s2)\n   99:   def string_trim(s: Exp[String])(implicit pos: SourceContext) : Rep[String] = StringTrim(s)\n  100:   def string_split(s: Exp[String], separators: Exp[String], limit: Exp[Int])(implicit pos: SourceContext) : Rep[Array[String]] = StringSplit(s, separators, limit)\n  101:   def string_valueof(a: Exp[Any])(implicit pos: SourceContext) = StringValueOf(a)\n  102:   def string_charAt(s: Exp[String], i: Exp[Int])(implicit pos: SourceContext) = StringCharAt(s,i)\n  103:   def string_endsWith(s: Exp[String], e: Exp[String])(implicit pos: SourceContext) = StringEndsWith(s,e)\n  104:   def string_contains(s1: Exp[String], s2: Exp[String])(implicit pos: SourceContext) = StringContains(s1,s2)\n  105:   def string_todouble(s: Rep[String])(implicit pos: SourceContext) = StringToDouble(s)\n  106:   def string_tofloat(s: Rep[String])(implicit pos: SourceContext) = StringToFloat(s)\n  107:   def string_toint(s: Rep[String])(implicit pos: SourceContext) = StringToInt(s)\n  108:   def string_tolong(s: Rep[String])(implicit pos: SourceContext) = StringToLong(s)\n  109:   def string_substring(s: Rep[String], start:Rep[Int], end:Rep[Int])(implicit pos: SourceContext) = StringSubstring(s,start,end)\n  110:   def string_length(s: Rep[String])(implicit pos: SourceContext) = StringLength(s)\n  111  \n  112:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  113      case StringPlus(a,b) => string_plus(f(a),f(b))\n  114      case StringStartsWith(s1, s2) => string_startswith(f(s1), f(s2))\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Structs.scala:\n    2  package common\n    3  \n    4: import reflect.{SourceContext, RefinedManifest}\n    5  import util.OverloadHack\n    6  import java.io.PrintWriter\n    .\n   24    def record_new[T : Manifest](fields: Seq[(String, Boolean, Rep[T] => Rep[_])]): Rep[T]\n   25    def record_select[T : Manifest](record: Rep[Record], field: String): Rep[T]\n   26:   def field[T:Manifest](struct: Rep[Any], index: String)(implicit pos: SourceContext): Rep[T]\n   27  }\n   28  \n   ..\n   78    case class FieldUpdate[T:Manifest](struct: Exp[Any], index: String, rhs: Exp[T]) extends Def[Unit]\n   79  \n   80:   def struct[T:Manifest](tag: StructTag[T], elems: (String, Rep[Any])*)(implicit o: Overloaded1, pos: SourceContext): Rep[T] = struct[T](tag, elems)\n   81:   def struct[T:Manifest](tag: StructTag[T], elems: Seq[(String, Rep[Any])])(implicit pos: SourceContext): Rep[T] = SimpleStruct(tag, elems)\n   82  \n   83:   def field[T:Manifest](struct: Rep[Any], index: String)(implicit pos: SourceContext): Rep[T] = FieldApply[T](struct, index)\n   84:   def var_field[T:Manifest](struct: Rep[Any], index: String)(implicit pos: SourceContext): Var[T] = Variable(FieldApply[Var[T]](struct, index))\n   85    def field_update[T:Manifest](struct: Exp[Any], index: String, rhs: Exp[T]): Exp[Unit] = reflectWrite(struct)(FieldUpdate(struct, index, rhs))\n   86  \n   ..\n   98    }\n   99  \n  100:   def imm_field(struct: Exp[Any], name: String, f: Exp[Any])(implicit pos: SourceContext): Exp[Any] = {\n  101      if (f.tp.erasure.getSimpleName == \"Variable\") {\n  102        field(struct,name)(mtype(f.tp.typeArguments(0)),pos)\n  ...\n  108  \n  109    // don't let unsafeImmutable hide struct-ness\n  110:   override def object_unsafe_immutable[A:Manifest](lhs: Exp[A])(implicit pos: SourceContext) = lhs match {\n  111      case Def(Struct(tag,elems)) => struct[A](tag, elems.map(t => (t._1, imm_field(lhs, t._1, t._2))))\n  112      case Def(d@Reflect(Struct(tag, elems), u, es)) => struct[A](tag, elems.map(t => (t._1, imm_field(lhs, t._1, t._2))))\n  ...\n  166    // TODO: read/write/copy summary\n  167  \n  168:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  169      case SimpleStruct(tag, elems) => struct(tag, elems map { case (k,v) => (k, f(v)) })(mtype(manifest[A]),pos)\n  170      case FieldApply(struct, key) => field(f(struct), key)(mtype(manifest[A]),pos)\n  ...\n  185    def classTag[T:Manifest] = ClassTag[T](structName(manifest[T]))\n  186  \n  187:   override def object_tostring(x: Exp[Any])(implicit pos: SourceContext): Exp[String] = x match {\n  188      case Def(s@Struct(tag, elems)) => //tag(elem1, elem2, ...)\n  189        val e = elems.map(e=>string_plus(unit(e._1 + \" = \"), object_tostring(e._2))).reduceLeft((l,r)=>string_plus(string_plus(l,unit(\", \")),r))\n  ...\n  213    }\n  214  \n  215:   override def field[T:Manifest](struct: Exp[Any], index: String)(implicit pos: SourceContext): Exp[T] = fieldLookup[T](struct, index) match {\n  216      // the two variable pattern matches each seem to miss certain cases, so both are needed. why?\n  217      case Some(Def(Reflect(NewVar(x),u,es))) => super.field(struct, index)\n  ...\n  223    //TODO: need to be careful unwrapping Structs of vars since partial unwrapping can result in reads & writes to two different memory locations in the generated code\n  224    //(the original var and the struct)\n  225:   /* override def var_field[T:Manifest](struct: Exp[Any], index: String)(implicit pos: SourceContext): Var[T] = fieldLookup(struct, index) match {\n  226      case Some(x: Exp[Var[T]]) if x.tp == manifest[Var[T]] => Variable(x)\n  227      case Some(x) => throw new RuntimeException(\"ERROR: \" + index + \" is not a variable field of type \" + struct.tp)\n  ...\n  238    }\n  239  \n  240:   override def var_new[T:Manifest](init: Exp[T])(implicit pos: SourceContext): Var[T] = init match {\n  241      case Def(Struct(tag, elems)) =>\n  242        //val r = Variable(struct(tag, elems.mapValues(e=>var_new(e).e))) // DON'T use mapValues!! <--lazy\n  ...\n  246    }\n  247  \n  248:   override def var_assign[T:Manifest](lhs: Var[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[Unit] = (lhs,rhs) match {\n  249      case (Variable(Def(Struct(NestClassTag(tagL),elemsL: Seq[(String,Exp[Variable[Any]])]))), Def(Struct(tagR, elemsR))) =>\n  250        assert(tagL == tagR)\n  ...\n  269    }\n  270  \n  271:   override def readVar[T:Manifest](v: Var[T])(implicit pos: SourceContext): Exp[T] = v match {\n  272      case Variable(Def(Struct(NestClassTag(tag), elems: Seq[(String,Exp[Variable[Any]])]))) =>\n  273        struct[T](tag, elems.map(p=>(p._1,readVar(Variable(p._2))(unwrap(p._2.tp), pos))))\n  ...\n  277    }\n  278  \n  279:   override def ifThenElse[T:Manifest](cond: Rep[Boolean], a: Block[T], b: Block[T])(implicit pos: SourceContext) = (a,b) match {\n  280      case (Block(Def(Struct(tagA,elemsA))), Block(Def(Struct(tagB, elemsB)))) =>\n  281        assert(tagA == tagB)\n  ...\n  320    }\n  321  \n  322:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = e match {\n  323      case p@Phi(c,a,u,b,v) => phiB(f(c),f(a),f(u),f(b),f(v))(f(p.parent))\n  324      case _ => super.mirror(e,f)\n  ...\n  331  \n  332  \n  333:   override def ifThenElse[T:Manifest](cond: Rep[Boolean], a: Block[T], b: Block[T])(implicit pos: SourceContext) = (deReify(a),deReify(b)) match {\n  334      case ((u, Def(Struct(tagA,elemsA))), (v, Def(Struct(tagB, elemsB)))) =>\n  335        //assert(tagA == tagB, tagA+\" !== \"+tagB)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/SynchronizedArrayBufferOps.scala:\n    5  import scala.virtualization.lms.internal.GenericNestedCodegen\n    6  import collection.mutable.ArrayBuffer\n    7: import scala.reflect.SourceContext\n    8  \n    9  trait SynchronizedArrayBufferOps extends ArrayBufferOps {\n   ..\n   11  /*\n   12    object SynchronizedArrayBuffer {\n   13:     def apply[A:Manifest](xs: Rep[A]*)(implicit pos: SourceContext) = arraybuffer_new(xs)\n   14    }\n   15  */\n   ..\n   24    // all array buffers are synchronized (nackward compat). TODO: separate constructor\n   25  \n   26:   override def arraybuffer_new[A:Manifest](xs: Seq[Exp[A]])(implicit pos: SourceContext) = reflectMutable(SyncArrayBufferNew(xs))\n   27  }\n   28  \n\n/Users/vjovanov/code/virtualization-lms-core/src/common/TupleOps.scala:\n    4  import scala.virtualization.lms.internal.GenericCodegen\n    5  import java.io.PrintWriter\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait TupleOps extends Base {\n    9:   implicit def make_tuple2[A:Manifest,B:Manifest](t: (Rep[A], Rep[B]))(implicit pos: SourceContext) : Rep[(A,B)]\n   10:   implicit def make_tuple3[A:Manifest,B:Manifest,C:Manifest](t: (Rep[A], Rep[B], Rep[C]))(implicit pos: SourceContext) : Rep[(A,B,C)]\n   11:   implicit def make_tuple4[A:Manifest,B:Manifest,C:Manifest,D:Manifest](t: (Rep[A], Rep[B], Rep[C], Rep[D]))(implicit pos: SourceContext) : Rep[(A,B,C,D)]\n   12:   implicit def make_tuple5[A:Manifest,B:Manifest,C:Manifest,D:Manifest,E:Manifest](t: (Rep[A], Rep[B], Rep[C], Rep[D], Rep[E]))(implicit pos: SourceContext) : Rep[(A,B,C,D,E)]\n   13  \n   14:   implicit def t2[A:Manifest,B:Manifest](t: Rep[(A,B)])(implicit pos: SourceContext) =\n   15      ((tuple2_get1(t),tuple2_get2(t)))\n   16:   implicit def t3[A:Manifest,B:Manifest,C:Manifest](t: Rep[(A,B,C)])(implicit pos: SourceContext) =\n   17      ((tuple3_get1(t),tuple3_get2(t),tuple3_get3(t)))\n   18:   implicit def t4[A:Manifest,B:Manifest,C:Manifest,D:Manifest](t: Rep[(A,B,C,D)])(implicit pos: SourceContext) =\n   19      ((tuple4_get1(t),tuple4_get2(t),tuple4_get3(t),tuple4_get4(t)))\n   20:   implicit def t5[A:Manifest,B:Manifest,C:Manifest,D:Manifest,E:Manifest](t: Rep[(A,B,C,D,E)])(implicit pos: SourceContext) =\n   21      ((tuple5_get1(t),tuple5_get2(t),tuple5_get3(t),tuple5_get4(t),tuple5_get5(t)))\n   22  \n   23:   def tuple2_get1[A:Manifest](t: Rep[(A,_)])(implicit pos: SourceContext) : Rep[A]\n   24:   def tuple2_get2[B:Manifest](t: Rep[(_,B)])(implicit pos: SourceContext) : Rep[B]\n   25  \n   26:   def tuple3_get1[A:Manifest](t: Rep[(A,_,_)])(implicit pos: SourceContext) : Rep[A]\n   27:   def tuple3_get2[B:Manifest](t: Rep[(_,B,_)])(implicit pos: SourceContext) : Rep[B]\n   28:   def tuple3_get3[C:Manifest](t: Rep[(_,_,C)])(implicit pos: SourceContext) : Rep[C]\n   29  \n   30:   def tuple4_get1[A:Manifest](t: Rep[(A,_,_,_)])(implicit pos: SourceContext) : Rep[A]\n   31:   def tuple4_get2[B:Manifest](t: Rep[(_,B,_,_)])(implicit pos: SourceContext) : Rep[B]\n   32:   def tuple4_get3[C:Manifest](t: Rep[(_,_,C,_)])(implicit pos: SourceContext) : Rep[C]\n   33:   def tuple4_get4[D:Manifest](t: Rep[(_,_,_,D)])(implicit pos: SourceContext) : Rep[D]\n   34  \n   35:   def tuple5_get1[A:Manifest](t: Rep[(A,_,_,_,_)])(implicit pos: SourceContext) : Rep[A]\n   36:   def tuple5_get2[B:Manifest](t: Rep[(_,B,_,_,_)])(implicit pos: SourceContext) : Rep[B]\n   37:   def tuple5_get3[C:Manifest](t: Rep[(_,_,C,_,_)])(implicit pos: SourceContext) : Rep[C]\n   38:   def tuple5_get4[D:Manifest](t: Rep[(_,_,_,D,_)])(implicit pos: SourceContext) : Rep[D]\n   39:   def tuple5_get5[E:Manifest](t: Rep[(_,_,_,_,E)])(implicit pos: SourceContext) : Rep[E]\n   40  }\n   41  \n   42  trait TupleOpsExp extends TupleOps with StructExpOpt {\n   43  \n   44:   implicit def make_tuple2[A:Manifest,B:Manifest](t: (Exp[A],Exp[B]))(implicit pos: SourceContext) : Exp[(A,B)] = struct(classTag[(A,B)], \"_1\" -> t._1, \"_2\" -> t._2)\n   45:   implicit def make_tuple3[A:Manifest,B:Manifest,C:Manifest](t: (Exp[A],Exp[B],Exp[C]))(implicit pos: SourceContext) : Exp[(A,B,C)] = struct(classTag[(A,B,C)], \"_1\" -> t._1, \"_2\" -> t._2, \"_3\" -> t._3)\n   46:   implicit def make_tuple4[A:Manifest,B:Manifest,C:Manifest,D:Manifest](t: (Exp[A],Exp[B],Exp[C],Exp[D]))(implicit pos: SourceContext) : Exp[(A,B,C,D)] = struct(classTag[(A,B,C,D)], \"_1\" -> t._1, \"_2\" -> t._2, \"_3\" -> t._3, \"_4\" -> t._4)  \n   47:   implicit def make_tuple5[A:Manifest,B:Manifest,C:Manifest,D:Manifest,E:Manifest](t: (Exp[A],Exp[B],Exp[C],Exp[D],Exp[E]))(implicit pos: SourceContext) : Exp[(A,B,C,D,E)] = struct(classTag[(A,B,C,D,E)], \"_1\" -> t._1, \"_2\" -> t._2, \"_3\" -> t._3, \"_4\" -> t._4, \"_5\" -> t._5) \n   48  \n   49:   def tuple2_get1[A:Manifest](t: Exp[(A,_)])(implicit pos: SourceContext) = field[A](t, \"_1\")\n   50:   def tuple2_get2[B:Manifest](t: Exp[(_,B)])(implicit pos: SourceContext) = field[B](t, \"_2\")\n   51  \n   52:   def tuple3_get1[A:Manifest](t: Exp[(A,_,_)])(implicit pos: SourceContext) = field[A](t, \"_1\")\n   53:   def tuple3_get2[B:Manifest](t: Exp[(_,B,_)])(implicit pos: SourceContext) = field[B](t, \"_2\")\n   54:   def tuple3_get3[C:Manifest](t: Exp[(_,_,C)])(implicit pos: SourceContext) = field[C](t, \"_3\")\n   55  \n   56:   def tuple4_get1[A:Manifest](t: Exp[(A,_,_,_)])(implicit pos: SourceContext) = field[A](t, \"_1\")\n   57:   def tuple4_get2[B:Manifest](t: Exp[(_,B,_,_)])(implicit pos: SourceContext) = field[B](t, \"_2\")\n   58:   def tuple4_get3[C:Manifest](t: Exp[(_,_,C,_)])(implicit pos: SourceContext) = field[C](t, \"_3\")\n   59:   def tuple4_get4[D:Manifest](t: Exp[(_,_,_,D)])(implicit pos: SourceContext) = field[D](t, \"_4\")\n   60  \n   61:   def tuple5_get1[A:Manifest](t: Exp[(A,_,_,_,_)])(implicit pos: SourceContext) = field[A](t, \"_1\")\n   62:   def tuple5_get2[B:Manifest](t: Exp[(_,B,_,_,_)])(implicit pos: SourceContext) = field[B](t, \"_2\")\n   63:   def tuple5_get3[C:Manifest](t: Exp[(_,_,C,_,_)])(implicit pos: SourceContext) = field[C](t, \"_3\")\n   64:   def tuple5_get4[D:Manifest](t: Exp[(_,_,_,D,_)])(implicit pos: SourceContext) = field[D](t, \"_4\")\n   65:   def tuple5_get5[E:Manifest](t: Exp[(_,_,_,_,E)])(implicit pos: SourceContext) = field[E](t, \"_5\")\n   66  \n   67    object Both { def unapply[T](x:T):Some[(T,T)] = Some((x,x)) }\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Unchecked.scala:\n    4  import java.io.PrintWriter\n    5  import internal._\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait UncheckedOps extends Base {\n    .\n   38    def uncheckedPure[T:Manifest](s: Any*): Rep[T] = toAtom[T](Unchecked(s.toList))\n   39  \n   40:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   41      //case Reflect(ThrowException(s), u, es) => reflectMirrored(Reflect(ThrowException(f(s)), mapOver(f,u), f(es)))(mtype(manifest[A]))\n   42      // TODO mirror Unchecked and Reflect(Unchecked)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Variables.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  import scala.virtualization.lms.util.OverloadHack\n    7: import scala.reflect.SourceContext\n    8  \n    9  trait LiftVariables extends Base {\n   10    this: Variables =>\n   11  \n   12:   def __newVar[T:Manifest](init: T)(implicit pos: SourceContext) = var_new(unit(init))\n   13:   def __newVar[T](init: Rep[T])(implicit o: Overloaded1, mT: Manifest[T], pos: SourceContext) = var_new(init)\n   14:   def __newVar[T](init: Var[T])(implicit o: Overloaded2, mT: Manifest[T], pos: SourceContext) = var_new(init)\n   15  }\n   16  \n   ..\n   20    this: Variables =>\n   21  \n   22:   implicit def readVar[T:Manifest](v: Var[T])(implicit pos: SourceContext) : Rep[T]\n   23  }\n   24  \n   ..\n   26    this: VariablesExp =>\n   27  \n   28:   implicit def readVar[T:Manifest](v: Var[T])(implicit pos: SourceContext) : Exp[T] = ReadVar(v)\n   29  }\n   30  \n   ..\n   32    this: Variables =>\n   33  \n   34:   implicit def varIntToRepDouble(x: Var[Int])(implicit pos: SourceContext): Rep[Double] = implicit_convert[Int,Double](readVar(x))\n   35:   implicit def varIntToRepFloat(x: Var[Int])(implicit pos: SourceContext): Rep[Float] = implicit_convert[Int,Float](readVar(x))\n   36:   implicit def varFloatToRepDouble(x: Var[Float])(implicit pos: SourceContext): Rep[Double] = implicit_convert[Float,Double](readVar(x))\n   37  }\n   38  \n   ..\n   41  \n   42    // we always want to prioritize a direct conversion if any Rep will do\n   43:   implicit def varIntToRepInt(v: Var[Int])(implicit pos: SourceContext): Rep[Int] = readVar(v)\n   44:   implicit def varFloatToRepFloat(v: Var[Float])(implicit pos: SourceContext): Rep[Float] = readVar(v)\n   45  }\n   46  \n   ..\n   49  \n   50    //implicit def chainReadVar[T,U](x: Var[T])(implicit f: Rep[T] => U): U = f(readVar(x))\n   51:   def var_new[T:Manifest](init: Rep[T])(implicit pos: SourceContext): Var[T]\n   52:   def var_assign[T:Manifest](lhs: Var[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Unit]\n   53:   def var_plusequals[T:Manifest](lhs: Var[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Unit]\n   54:   def var_minusequals[T:Manifest](lhs: Var[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Unit]\n   55:   def var_timesequals[T:Manifest](lhs: Var[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Unit]\n   56:   def var_divideequals[T:Manifest](lhs: Var[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Unit]\n   57    \n   58:   def __assign[T:Manifest](lhs: Var[T], rhs: T)(implicit pos: SourceContext) = var_assign(lhs, unit(rhs))\n   59:   def __assign[T](lhs: Var[T], rhs: Rep[T])(implicit o: Overloaded1, mT: Manifest[T], pos: SourceContext) = var_assign(lhs, rhs)\n   60:   def __assign[T](lhs: Var[T], rhs: Var[T])(implicit o: Overloaded2, mT: Manifest[T], pos: SourceContext) = var_assign(lhs, readVar(rhs))\n   61  /*\n   62    def __assign[T,U](lhs: Var[T], rhs: Rep[U])(implicit o: Overloaded2, mT: Manifest[T], mU: Manifest[U], conv: Rep[U]=>Rep[T]) = var_assign(lhs, conv(rhs))\n   ..\n   65    // TODO: why doesn't this implicit kick in automatically? <--- do they belong here? maybe better move to NumericOps\n   66    // we really need to refactor this. +=/-= shouldn't be here or in Arith, but in some other type class, which includes Numeric variables\n   67:   def infix_+=[T](lhs: Var[T], rhs: T)(implicit o: Overloaded1, mT: Manifest[T], pos: SourceContext) = var_plusequals(lhs, unit(rhs))\n   68:   def infix_+=[T](lhs: Var[T], rhs: Rep[T])(implicit o: Overloaded2, mT: Manifest[T], pos: SourceContext) = var_plusequals(lhs,rhs)\n   69:   def infix_+=[T](lhs: Var[T], rhs: Var[T])(implicit o: Overloaded3, mT: Manifest[T], pos: SourceContext) = var_plusequals(lhs,readVar(rhs))\n   70:   def infix_-=[T](lhs: Var[T], rhs: T)(implicit o: Overloaded1, mT: Manifest[T], pos: SourceContext) = var_minusequals(lhs, unit(rhs))\n   71:   def infix_-=[T](lhs: Var[T], rhs: Rep[T])(implicit o: Overloaded2, mT: Manifest[T], pos: SourceContext) = var_minusequals(lhs,rhs)\n   72:   def infix_-=[T](lhs: Var[T], rhs: Var[T])(implicit o: Overloaded3, mT: Manifest[T], pos: SourceContext) = var_minusequals(lhs,readVar(rhs))\n   73:   def infix_*=[T](lhs: Var[T], rhs: T)(implicit o: Overloaded1, mT: Manifest[T], pos: SourceContext) = var_timesequals(lhs, unit(rhs))\n   74:   def infix_*=[T](lhs: Var[T], rhs: Rep[T])(implicit o: Overloaded2, mT: Manifest[T], pos: SourceContext) = var_timesequals(lhs,rhs)\n   75:   def infix_*=[T](lhs: Var[T], rhs: Var[T])(implicit o: Overloaded3, mT: Manifest[T], pos: SourceContext) = var_timesequals(lhs,readVar(rhs))\n   76:   def infix_/=[T](lhs: Var[T], rhs: T)(implicit o: Overloaded1, mT: Manifest[T], pos: SourceContext) = var_divideequals(lhs, unit(rhs))\n   77:   def infix_/=[T](lhs: Var[T], rhs: Rep[T])(implicit o: Overloaded2, mT: Manifest[T], pos: SourceContext) = var_divideequals(lhs,rhs)\n   78:   def infix_/=[T](lhs: Var[T], rhs: Var[T])(implicit o: Overloaded3, mT: Manifest[T], pos: SourceContext) = var_divideequals(lhs,readVar(rhs))\n   79  }\n   80  \n   ..\n   97    case class VarDivideEquals[T:Manifest](lhs: Var[T], rhs: Exp[T]) extends Def[Unit]\n   98  \n   99:   def var_new[T:Manifest](init: Exp[T])(implicit pos: SourceContext): Var[T] = {\n  100      //reflectEffect(NewVar(init)).asInstanceOf[Var[T]]\n  101      Variable(reflectMutable(NewVar(init)))\n  102    }\n  103  \n  104:   def var_assign[T:Manifest](lhs: Var[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[Unit] = {\n  105      reflectWrite(lhs.e)(Assign(lhs, rhs))\n  106      Const()\n  107    }\n  108  \n  109:   def var_plusequals[T:Manifest](lhs: Var[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[Unit] = {\n  110      reflectWrite(lhs.e)(VarPlusEquals(lhs, rhs))\n  111      Const()\n  112    }\n  113  \n  114:   def var_minusequals[T:Manifest](lhs: Var[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[Unit] = {\n  115      reflectWrite(lhs.e)(VarMinusEquals(lhs, rhs))\n  116      Const()\n  117    }\n  118    \n  119:   def var_timesequals[T:Manifest](lhs: Var[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[Unit] = {\n  120      reflectWrite(lhs.e)(VarTimesEquals(lhs, rhs))\n  121      Const()\n  122    }\n  123    \n  124:   def var_divideequals[T:Manifest](lhs: Var[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[Unit] = {\n  125      reflectWrite(lhs.e)(VarDivideEquals(lhs, rhs))\n  126      Const()\n  ...\n  173  \n  174  \n  175:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  176      case ReadVar(Variable(a)) => readVar(Variable(f(a)))\n  177      case Reflect(NewVar(a), u, es) => reflectMirrored(Reflect(NewVar(f(a)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n  ...\n  190  trait VariablesExpOpt extends VariablesExp {\n  191  \n  192:   override implicit def readVar[T:Manifest](v: Var[T])(implicit pos: SourceContext) : Exp[T] = {\n  193      if (context ne null) {\n  194        // find the last modification of variable v\n  ...\n  211    // TODO: strong updates. overwriting a var makes previous stores unnecessary\n  212  \n  213:   override implicit def var_assign[T:Manifest](v: Var[T], e: Exp[T])(implicit pos: SourceContext) : Exp[Unit] = {\n  214      if (context ne null) {\n  215        // find the last modification of variable v\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/While.scala:\n    4  import java.io.PrintWriter\n    5  import scala.virtualization.lms.internal.GenericNestedCodegen\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait While extends Base {\n    9:   def __whileDo(cond: => Rep[Boolean], body: => Rep[Unit])(implicit pos: SourceContext): Rep[Unit]\n   10  }\n   11  \n   ..\n   14    case class While(cond: Block[Boolean], body: Block[Unit]) extends Def[Unit]\n   15  \n   16:   override def __whileDo(cond: => Exp[Boolean], body: => Rep[Unit])(implicit pos: SourceContext) = {\n   17      val c = reifyEffects(cond)\n   18      val a = reifyEffects(body)\n   ..\n   43  trait WhileExpOptSpeculative extends WhileExp with PreviousIterationDummyExp {\n   44    \n   45:   override def __whileDo(cond: => Exp[Boolean], body: => Rep[Unit])(implicit pos: SourceContext) = {\n   46  \n   47      val pc = fresh[Nothing]\n\n/Users/vjovanov/code/virtualization-lms-core/src/internal/Effects.scala:\n    2  package internal\n    3  \n    4: import scala.reflect.SourceContext\n    5  import util.GraphUtil\n    6  import scala.collection.mutable\n    .\n  342    */\n  343  \n  344:   protected override implicit def toAtom[T:Manifest](d: Def[T])(implicit pos: SourceContext): Exp[T] = {\n  345  /*\n  346      are we depending on a variable or mutable object? then we need to be serialized -> effect\n  ...\n  371    }\n  372  \n  373:   def reflectMirrored[A:Manifest](zd: Reflect[A])(implicit pos: SourceContext): Exp[A] = {\n  374      checkContext()\n  375      // warn if type is Any. TODO: make optional, sometimes Exp[Any] is fine\n  ...\n  406    }\n  407  \n  408:   def reflectMutable[A:Manifest](d: Def[A])(implicit pos: SourceContext): Exp[A] = {\n  409      val z = reflectEffect(d, Alloc())\n  410  \n  ...\n  414    }\n  415  \n  416:   def reflectWrite[A:Manifest](write0: Exp[Any]*)(d: Def[A])(implicit pos: SourceContext): Exp[A] = {\n  417      val write = write0.toList.asInstanceOf[List[Sym[Any]]] // should check...\n  418  \n  ...\n  424    }\n  425  \n  426:   def reflectEffect[A:Manifest](x: Def[A])(implicit pos: SourceContext): Exp[A] = reflectEffect(x, Simple()) // simple effect (serialized with respect to other simples)\n  427  \n  428:   def reflectEffect[A:Manifest](d: Def[A], u: Summary)(implicit pos: SourceContext): Exp[A] = {\n  429      // are we depending on a variable? then we need to be serialized -> effect\n  430      val mutableInputs = readMutableData(d)\n  ...\n  432    }\n  433  \n  434:   def reflectEffectInternal[A:Manifest](x: Def[A], u: Summary)(implicit pos: SourceContext): Exp[A] = {\n  435      if (mustPure(u)) super.toAtom(x) else {\n  436        checkContext()\n\n/Users/vjovanov/code/virtualization-lms-core/src/internal/Expressions.scala:\n    2  package internal\n    3  \n    4: import scala.reflect.SourceContext\n    5  import scala.annotation.unchecked.uncheckedVariance\n    6  import scala.collection.mutable.ListBuffer\n    .\n   18    abstract class Exp[+T:Manifest] { // constants/symbols (atomic)\n   19      def tp: Manifest[T @uncheckedVariance] = manifest[T] //invariant position! but hey...\n   20:     def pos: List[SourceContext] = Nil\n   21    }\n   22  \n   ..\n   26      val attributes: scala.collection.mutable.Map[Any,Any] = scala.collection.mutable.ListMap.empty\n   27      var sourceInfo = Thread.currentThread.getStackTrace // will go away\n   28:     var sourceContexts: List[SourceContext] = Nil\n   29      override def pos = sourceContexts\n   30:     def withPos(pos: List[SourceContext]) = { sourceContexts :::= pos; this }\n   31    }\n   32  \n   ..\n   36    def fresh[T:Manifest]: Sym[T] = Sym[T] { nVars += 1;  if (nVars%1000 == 0) printlog(\"nVars=\"+nVars);  nVars -1 }\n   37  \n   38:   def fresh[T:Manifest](pos: List[SourceContext]): Sym[T] = fresh[T].withPos(pos)\n   39  \n   40    def quotePos(e: Exp[Any]): String = e.pos match {\n   41      case Nil => \"<unknown>\"\n   42      case cs =>\n   43:       def all(cs: SourceContext): List[SourceContext] = cs.parent match {\n   44          case None => List(cs)\n   45          case Some(p) => cs::all(p)\n   ..\n  114      globalDefs.find(x => x.defines(d).nonEmpty)\n  115  \n  116:   def findOrCreateDefinition[T:Manifest](d: Def[T], pos: List[SourceContext]): Stm =\n  117      findDefinition[T](d) map { x => x.defines(d).foreach(_.withPos(pos)); x } getOrElse {\n  118        createDefinition(fresh[T](pos), d)\n  119      }\n  120  \n  121:   def findOrCreateDefinitionExp[T:Manifest](d: Def[T], pos: List[SourceContext]): Exp[T] =\n  122      findOrCreateDefinition(d, pos).defines(d).get\n  123  \n  ...\n  129  \n  130  \n  131:   protected implicit def toAtom[T:Manifest](d: Def[T])(implicit pos: SourceContext): Exp[T] = {\n  132      findOrCreateDefinitionExp(d, List(pos)) // TBD: return Const(()) if type is Unit??\n  133    }\n\n/Users/vjovanov/code/virtualization-lms-core/src/internal/GPUCodegen.scala:\n    4  import java.io.{StringWriter, PrintWriter, File}\n    5  import collection.immutable.List._\n    6: import scala.reflect.SourceContext\n    7  import collection.mutable.{HashMap, HashSet, ArrayBuffer, ListMap, ListBuffer}\n    8  \n    .\n  229  \n  230    def printDebug(sym: Sym[Any], msg: String) {\n  231:     def getFirstStack(cs: SourceContext): SourceContext = cs.parent match {\n  232        case None => cs\n  233        case Some(p) => getFirstStack(p)\n\n/Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaCodegen.scala:\n    4  import java.io.{File, FileWriter, PrintWriter}\n    5  \n    6: import scala.reflect.SourceContext\n    7  \n    8  trait ScalaCodegen extends GenericCodegen with Config {\n\n/Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaConciseCodegen.scala:\n    3  \n    4  import java.io.{File, FileWriter, PrintWriter}\n    5: import scala.reflect.SourceContext\n    6  \n    7  /**\n    .\n   90  }\n   91  \n   92: import scala.reflect.SourceContext\n   93  import scala.annotation.unchecked.uncheckedVariance\n   94  import scala.collection.mutable.ListBuffer\n\n/Users/vjovanov/code/virtualization-lms-core/src/internal/Transforming.scala:\n    4  import util.OverloadHack\n    5  import scala.collection.{immutable,mutable}\n    6: import scala.reflect.SourceContext\n    7  import scala.virtualization.lms.common.WorklistTransformer\n    8  \n    .\n   79  \n   80    def mtype[A,B](m:Manifest[A]): Manifest[B] = m.asInstanceOf[Manifest[B]] // hack: need to pass explicit manifest during mirroring\n   81:   def mpos(s: List[SourceContext]): SourceContext = if (s.nonEmpty) s.head else implicitly[SourceContext] // hack: got list of pos but need to pass single pos to mirror\n   82  \n   83  \n   84  \n   85:   def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = mirrorDef(e,f)\n   86  \n   87:   def mirrorDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = sys.error(\"don't know how to mirror \" + e)\n   88  \n   89:   def mirrorFatDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = sys.error(\"don't know how to mirror \" + e) //hm...\n   90  \n   91  }\n   ..\n   94  trait FatTransforming extends Transforming with FatExpressions {\n   95  \n   96:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   97      case Forward(x) => toAtom(Forward(f(x)))(mtype(manifest[A]),pos)\n   98      case _ => super.mirror(e,f)\n\n/Users/vjovanov/code/virtualization-lms-core/target/streams/compile/incCompileSetup/$global/streams/inc_compile_2.11:\n 5049  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayBufferOps.scala -> Seq\n 5050  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayBufferOps.scala -> Serializable\n 5051: /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayBufferOps.scala -> SourceContext\n 5052  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayBufferOps.scala -> String\n 5053  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayBufferOps.scala -> StringContext\n ....\n 5178  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayOps.scala -> Seq\n 5179  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayOps.scala -> Serializable\n 5180: /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayOps.scala -> SourceContext\n 5181  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayOps.scala -> StringContext\n 5182  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayOps.scala -> Sym\n ....\n 5365  /Users/vjovanov/code/virtualization-lms-core/src/common/Base.scala -> ScalaGenBase\n 5366  /Users/vjovanov/code/virtualization-lms-core/src/common/Base.scala -> ScalaNestedCodegen\n 5367: /Users/vjovanov/code/virtualization-lms-core/src/common/Base.scala -> SourceContext\n 5368  /Users/vjovanov/code/virtualization-lms-core/src/common/Base.scala -> Summary\n 5369  /Users/vjovanov/code/virtualization-lms-core/src/common/Base.scala -> T\n ....\n 5453  /Users/vjovanov/code/virtualization-lms-core/src/common/BooleanOps.scala -> ScalaRunTime\n 5454  /Users/vjovanov/code/virtualization-lms-core/src/common/BooleanOps.scala -> Serializable\n 5455: /Users/vjovanov/code/virtualization-lms-core/src/common/BooleanOps.scala -> SourceContext\n 5456  /Users/vjovanov/code/virtualization-lms-core/src/common/BooleanOps.scala -> StringContext\n 5457  /Users/vjovanov/code/virtualization-lms-core/src/common/BooleanOps.scala -> Sym\n ....\n 5551  /Users/vjovanov/code/virtualization-lms-core/src/common/CastingOps.scala -> ScalaRunTime\n 5552  /Users/vjovanov/code/virtualization-lms-core/src/common/CastingOps.scala -> Serializable\n 5553: /Users/vjovanov/code/virtualization-lms-core/src/common/CastingOps.scala -> SourceContext\n 5554  /Users/vjovanov/code/virtualization-lms-core/src/common/CastingOps.scala -> StringContext\n 5555  /Users/vjovanov/code/virtualization-lms-core/src/common/CastingOps.scala -> Sym\n ....\n 5746  /Users/vjovanov/code/virtualization-lms-core/src/common/DynamicBase.scala -> ScalaRunTime\n 5747  /Users/vjovanov/code/virtualization-lms-core/src/common/DynamicBase.scala -> Serializable\n 5748: /Users/vjovanov/code/virtualization-lms-core/src/common/DynamicBase.scala -> SourceContext\n 5749  /Users/vjovanov/code/virtualization-lms-core/src/common/DynamicBase.scala -> Statics\n 5750  /Users/vjovanov/code/virtualization-lms-core/src/common/DynamicBase.scala -> String\n ....\n 5987  /Users/vjovanov/code/virtualization-lms-core/src/common/Equal.scala -> ScalaRunTime\n 5988  /Users/vjovanov/code/virtualization-lms-core/src/common/Equal.scala -> Serializable\n 5989: /Users/vjovanov/code/virtualization-lms-core/src/common/Equal.scala -> SourceContext\n 5990  /Users/vjovanov/code/virtualization-lms-core/src/common/Equal.scala -> StringContext\n 5991  /Users/vjovanov/code/virtualization-lms-core/src/common/Equal.scala -> Sym\n ....\n 6079  /Users/vjovanov/code/virtualization-lms-core/src/common/ExceptionOps.scala -> ScalaRunTime\n 6080  /Users/vjovanov/code/virtualization-lms-core/src/common/ExceptionOps.scala -> Serializable\n 6081: /Users/vjovanov/code/virtualization-lms-core/src/common/ExceptionOps.scala -> SourceContext\n 6082  /Users/vjovanov/code/virtualization-lms-core/src/common/ExceptionOps.scala -> String\n 6083  /Users/vjovanov/code/virtualization-lms-core/src/common/ExceptionOps.scala -> StringContext\n ....\n 6174  /Users/vjovanov/code/virtualization-lms-core/src/common/ForwardTransformer.scala -> Predef\n 6175  /Users/vjovanov/code/virtualization-lms-core/src/common/ForwardTransformer.scala -> RecursiveTransformer\n 6176: /Users/vjovanov/code/virtualization-lms-core/src/common/ForwardTransformer.scala -> SourceContext\n 6177  /Users/vjovanov/code/virtualization-lms-core/src/common/ForwardTransformer.scala -> Stm\n 6178  /Users/vjovanov/code/virtualization-lms-core/src/common/ForwardTransformer.scala -> Sym\n ....\n 6283  /Users/vjovanov/code/virtualization-lms-core/src/common/FractionalOps.scala -> ScalaRunTime\n 6284  /Users/vjovanov/code/virtualization-lms-core/src/common/FractionalOps.scala -> Serializable\n 6285: /Users/vjovanov/code/virtualization-lms-core/src/common/FractionalOps.scala -> SourceContext\n 6286  /Users/vjovanov/code/virtualization-lms-core/src/common/FractionalOps.scala -> StringContext\n 6287  /Users/vjovanov/code/virtualization-lms-core/src/common/FractionalOps.scala -> Sym\n ....\n 6368  /Users/vjovanov/code/virtualization-lms-core/src/common/FunctionBlocks.scala -> ScalaRunTime\n 6369  /Users/vjovanov/code/virtualization-lms-core/src/common/FunctionBlocks.scala -> Serializable\n 6370: /Users/vjovanov/code/virtualization-lms-core/src/common/FunctionBlocks.scala -> SourceContext\n 6371  /Users/vjovanov/code/virtualization-lms-core/src/common/FunctionBlocks.scala -> Sym\n 6372  /Users/vjovanov/code/virtualization-lms-core/src/common/FunctionBlocks.scala -> T1\n ....\n 6499  /Users/vjovanov/code/virtualization-lms-core/src/common/Functions.scala -> ScalaRunTime\n 6500  /Users/vjovanov/code/virtualization-lms-core/src/common/Functions.scala -> Serializable\n 6501: /Users/vjovanov/code/virtualization-lms-core/src/common/Functions.scala -> SourceContext\n 6502  /Users/vjovanov/code/virtualization-lms-core/src/common/Functions.scala -> String\n 6503  /Users/vjovanov/code/virtualization-lms-core/src/common/Functions.scala -> Sym\n ....\n 6723  /Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala -> Serializable\n 6724  /Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala -> Set\n 6725: /Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala -> SourceContext\n 6726  /Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala -> Sym\n 6727  /Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala -> Transformer\n ....\n 6861  /Users/vjovanov/code/virtualization-lms-core/src/common/IOOps.scala -> ScalaRunTime\n 6862  /Users/vjovanov/code/virtualization-lms-core/src/common/IOOps.scala -> Serializable\n 6863: /Users/vjovanov/code/virtualization-lms-core/src/common/IOOps.scala -> SourceContext\n 6864  /Users/vjovanov/code/virtualization-lms-core/src/common/IOOps.scala -> String\n 6865  /Users/vjovanov/code/virtualization-lms-core/src/common/IOOps.scala -> StringContext\n ....\n 6990  /Users/vjovanov/code/virtualization-lms-core/src/common/IfThenElse.scala -> Serializable\n 6991  /Users/vjovanov/code/virtualization-lms-core/src/common/IfThenElse.scala -> SimpleFatIfThenElse\n 6992: /Users/vjovanov/code/virtualization-lms-core/src/common/IfThenElse.scala -> SourceContext\n 6993  /Users/vjovanov/code/virtualization-lms-core/src/common/IfThenElse.scala -> Stm\n 6994  /Users/vjovanov/code/virtualization-lms-core/src/common/IfThenElse.scala -> Sym\n ....\n 7138  /Users/vjovanov/code/virtualization-lms-core/src/common/ImplicitOps.scala -> ScalaRunTime\n 7139  /Users/vjovanov/code/virtualization-lms-core/src/common/ImplicitOps.scala -> Serializable\n 7140: /Users/vjovanov/code/virtualization-lms-core/src/common/ImplicitOps.scala -> SourceContext\n 7141  /Users/vjovanov/code/virtualization-lms-core/src/common/ImplicitOps.scala -> StringContext\n 7142  /Users/vjovanov/code/virtualization-lms-core/src/common/ImplicitOps.scala -> Sym\n ....\n 7220  /Users/vjovanov/code/virtualization-lms-core/src/common/IterableOps.scala -> ScalaRunTime\n 7221  /Users/vjovanov/code/virtualization-lms-core/src/common/IterableOps.scala -> Serializable\n 7222: /Users/vjovanov/code/virtualization-lms-core/src/common/IterableOps.scala -> SourceContext\n 7223  /Users/vjovanov/code/virtualization-lms-core/src/common/IterableOps.scala -> StringContext\n 7224  /Users/vjovanov/code/virtualization-lms-core/src/common/IterableOps.scala -> Sym\n ....\n 7360  /Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala -> Seq\n 7361  /Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala -> Serializable\n 7362: /Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala -> SourceContext\n 7363  /Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala -> String\n 7364  /Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala -> StringContext\n ....\n 7813  /Users/vjovanov/code/virtualization-lms-core/src/common/Loops.scala -> SimpleFatLoop\n 7814  /Users/vjovanov/code/virtualization-lms-core/src/common/Loops.scala -> SimpleLoop\n 7815: /Users/vjovanov/code/virtualization-lms-core/src/common/Loops.scala -> SourceContext\n 7816  /Users/vjovanov/code/virtualization-lms-core/src/common/Loops.scala -> Stm\n 7817  /Users/vjovanov/code/virtualization-lms-core/src/common/Loops.scala -> Sym\n ....\n 7950  /Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala -> ScalaRunTime\n 7951  /Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala -> Serializable\n 7952: /Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala -> SourceContext\n 7953  /Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala -> StringContext\n 7954  /Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala -> Sym\n ....\n 8070  /Users/vjovanov/code/virtualization-lms-core/src/common/MiscOps.scala -> ScalaRunTime\n 8071  /Users/vjovanov/code/virtualization-lms-core/src/common/MiscOps.scala -> Serializable\n 8072: /Users/vjovanov/code/virtualization-lms-core/src/common/MiscOps.scala -> SourceContext\n 8073  /Users/vjovanov/code/virtualization-lms-core/src/common/MiscOps.scala -> String\n 8074  /Users/vjovanov/code/virtualization-lms-core/src/common/MiscOps.scala -> StringContext\n ....\n 8181  /Users/vjovanov/code/virtualization-lms-core/src/common/NumericOps.scala -> ScalaRunTime\n 8182  /Users/vjovanov/code/virtualization-lms-core/src/common/NumericOps.scala -> Serializable\n 8183: /Users/vjovanov/code/virtualization-lms-core/src/common/NumericOps.scala -> SourceContext\n 8184  /Users/vjovanov/code/virtualization-lms-core/src/common/NumericOps.scala -> StringContext\n 8185  /Users/vjovanov/code/virtualization-lms-core/src/common/NumericOps.scala -> Sym\n ....\n 8299  /Users/vjovanov/code/virtualization-lms-core/src/common/ObjectOps.scala -> ScalaRunTime\n 8300  /Users/vjovanov/code/virtualization-lms-core/src/common/ObjectOps.scala -> Serializable\n 8301: /Users/vjovanov/code/virtualization-lms-core/src/common/ObjectOps.scala -> SourceContext\n 8302  /Users/vjovanov/code/virtualization-lms-core/src/common/ObjectOps.scala -> String\n 8303  /Users/vjovanov/code/virtualization-lms-core/src/common/ObjectOps.scala -> StringContext\n ....\n 8419  /Users/vjovanov/code/virtualization-lms-core/src/common/OrderingOps.scala -> Serializable\n 8420  /Users/vjovanov/code/virtualization-lms-core/src/common/OrderingOps.scala -> Short\n 8421: /Users/vjovanov/code/virtualization-lms-core/src/common/OrderingOps.scala -> SourceContext\n 8422  /Users/vjovanov/code/virtualization-lms-core/src/common/OrderingOps.scala -> StringContext\n 8423  /Users/vjovanov/code/virtualization-lms-core/src/common/OrderingOps.scala -> Sym\n ....\n 8793  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> ScalaRunTime\n 8794  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> Serializable\n 8795: /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> SourceContext\n 8796  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> String\n 8797  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> StringContext\n ....\n 8974  /Users/vjovanov/code/virtualization-lms-core/src/common/RangeOps.scala -> ScalaRunTime\n 8975  /Users/vjovanov/code/virtualization-lms-core/src/common/RangeOps.scala -> Serializable\n 8976: /Users/vjovanov/code/virtualization-lms-core/src/common/RangeOps.scala -> SourceContext\n 8977  /Users/vjovanov/code/virtualization-lms-core/src/common/RangeOps.scala -> StringContext\n 8978  /Users/vjovanov/code/virtualization-lms-core/src/common/RangeOps.scala -> Sym\n ....\n 9101  /Users/vjovanov/code/virtualization-lms-core/src/common/SeqOps.scala -> SeqOpsExp\n 9102  /Users/vjovanov/code/virtualization-lms-core/src/common/SeqOps.scala -> Serializable\n 9103: /Users/vjovanov/code/virtualization-lms-core/src/common/SeqOps.scala -> SourceContext\n 9104  /Users/vjovanov/code/virtualization-lms-core/src/common/SeqOps.scala -> StringContext\n 9105  /Users/vjovanov/code/virtualization-lms-core/src/common/SeqOps.scala -> Sym\n ....\n 9209  /Users/vjovanov/code/virtualization-lms-core/src/common/SetOps.scala -> SetToArray\n 9210  /Users/vjovanov/code/virtualization-lms-core/src/common/SetOps.scala -> SetToSeq\n 9211: /Users/vjovanov/code/virtualization-lms-core/src/common/SetOps.scala -> SourceContext\n 9212  /Users/vjovanov/code/virtualization-lms-core/src/common/SetOps.scala -> StringContext\n 9213  /Users/vjovanov/code/virtualization-lms-core/src/common/SetOps.scala -> Sym\n ....\n 9302  /Users/vjovanov/code/virtualization-lms-core/src/common/SimplifyTransform.scala -> Predef\n 9303  /Users/vjovanov/code/virtualization-lms-core/src/common/SimplifyTransform.scala -> SimplifyTransform\n 9304: /Users/vjovanov/code/virtualization-lms-core/src/common/SimplifyTransform.scala -> SourceContext\n 9305  /Users/vjovanov/code/virtualization-lms-core/src/common/SimplifyTransform.scala -> Stm\n 9306  /Users/vjovanov/code/virtualization-lms-core/src/common/SimplifyTransform.scala -> SubstTransformer\n ....\n 9494  /Users/vjovanov/code/virtualization-lms-core/src/common/SplitEffects.scala -> SimpleFatPrevious\n 9495  /Users/vjovanov/code/virtualization-lms-core/src/common/SplitEffects.scala -> SimpleFatWhile\n 9496: /Users/vjovanov/code/virtualization-lms-core/src/common/SplitEffects.scala -> SourceContext\n 9497  /Users/vjovanov/code/virtualization-lms-core/src/common/SplitEffects.scala -> SplitEffectsExpFat\n 9498  /Users/vjovanov/code/virtualization-lms-core/src/common/SplitEffects.scala -> Stm\n ....\n 9692  /Users/vjovanov/code/virtualization-lms-core/src/common/StaticData.scala -> ScalaRunTime\n 9693  /Users/vjovanov/code/virtualization-lms-core/src/common/StaticData.scala -> Serializable\n 9694: /Users/vjovanov/code/virtualization-lms-core/src/common/StaticData.scala -> SourceContext\n 9695  /Users/vjovanov/code/virtualization-lms-core/src/common/StaticData.scala -> StaticData\n 9696  /Users/vjovanov/code/virtualization-lms-core/src/common/StaticData.scala -> StaticDataExp\n ....\n 9819  /Users/vjovanov/code/virtualization-lms-core/src/common/StringOps.scala -> Serializable\n 9820  /Users/vjovanov/code/virtualization-lms-core/src/common/StringOps.scala -> Short\n 9821: /Users/vjovanov/code/virtualization-lms-core/src/common/StringOps.scala -> SourceContext\n 9822  /Users/vjovanov/code/virtualization-lms-core/src/common/StringOps.scala -> String\n 9823  /Users/vjovanov/code/virtualization-lms-core/src/common/StringOps.scala -> StringCharAt\n ....\n 9993  /Users/vjovanov/code/virtualization-lms-core/src/common/Structs.scala -> Serializable\n 9994  /Users/vjovanov/code/virtualization-lms-core/src/common/Structs.scala -> SimpleStruct\n 9995: /Users/vjovanov/code/virtualization-lms-core/src/common/Structs.scala -> SourceContext\n 9996  /Users/vjovanov/code/virtualization-lms-core/src/common/Structs.scala -> Stm\n 9997  /Users/vjovanov/code/virtualization-lms-core/src/common/Structs.scala -> String\n ....\n 10249  /Users/vjovanov/code/virtualization-lms-core/src/common/SynchronizedArrayBufferOps.scala -> Seq\n 10250  /Users/vjovanov/code/virtualization-lms-core/src/common/SynchronizedArrayBufferOps.scala -> Serializable\n 10251: /Users/vjovanov/code/virtualization-lms-core/src/common/SynchronizedArrayBufferOps.scala -> SourceContext\n 10252  /Users/vjovanov/code/virtualization-lms-core/src/common/SynchronizedArrayBufferOps.scala -> StringContext\n 10253  /Users/vjovanov/code/virtualization-lms-core/src/common/SynchronizedArrayBufferOps.scala -> Sym\n .....\n 10323  /Users/vjovanov/code/virtualization-lms-core/src/common/TupleOps.scala -> ScalaGenStruct\n 10324  /Users/vjovanov/code/virtualization-lms-core/src/common/TupleOps.scala -> Some\n 10325: /Users/vjovanov/code/virtualization-lms-core/src/common/TupleOps.scala -> SourceContext\n 10326  /Users/vjovanov/code/virtualization-lms-core/src/common/TupleOps.scala -> StructExpOpt\n 10327  /Users/vjovanov/code/virtualization-lms-core/src/common/TupleOps.scala -> T\n .....\n 10408  /Users/vjovanov/code/virtualization-lms-core/src/common/Unchecked.scala -> ScalaRunTime\n 10409  /Users/vjovanov/code/virtualization-lms-core/src/common/Unchecked.scala -> Serializable\n 10410: /Users/vjovanov/code/virtualization-lms-core/src/common/Unchecked.scala -> SourceContext\n 10411  /Users/vjovanov/code/virtualization-lms-core/src/common/Unchecked.scala -> StringContext\n 10412  /Users/vjovanov/code/virtualization-lms-core/src/common/Unchecked.scala -> Sym\n .....\n 10516  /Users/vjovanov/code/virtualization-lms-core/src/common/Variables.scala -> ScalaRunTime\n 10517  /Users/vjovanov/code/virtualization-lms-core/src/common/Variables.scala -> Serializable\n 10518: /Users/vjovanov/code/virtualization-lms-core/src/common/Variables.scala -> SourceContext\n 10519  /Users/vjovanov/code/virtualization-lms-core/src/common/Variables.scala -> Sym\n 10520  /Users/vjovanov/code/virtualization-lms-core/src/common/Variables.scala -> T\n .....\n 10662  /Users/vjovanov/code/virtualization-lms-core/src/common/While.scala -> ScalaRunTime\n 10663  /Users/vjovanov/code/virtualization-lms-core/src/common/While.scala -> Serializable\n 10664: /Users/vjovanov/code/virtualization-lms-core/src/common/While.scala -> SourceContext\n 10665  /Users/vjovanov/code/virtualization-lms-core/src/common/While.scala -> Sym\n 10666  /Users/vjovanov/code/virtualization-lms-core/src/common/While.scala -> Tuple2\n .....\n 11426  /Users/vjovanov/code/virtualization-lms-core/src/internal/Effects.scala -> Serializable\n 11427  /Users/vjovanov/code/virtualization-lms-core/src/internal/Effects.scala -> Simple\n 11428: /Users/vjovanov/code/virtualization-lms-core/src/internal/Effects.scala -> SourceContext\n 11429  /Users/vjovanov/code/virtualization-lms-core/src/internal/Effects.scala -> State\n 11430  /Users/vjovanov/code/virtualization-lms-core/src/internal/Effects.scala -> Statics\n .....\n 11712  /Users/vjovanov/code/virtualization-lms-core/src/internal/Expressions.scala -> ScalaRunTime\n 11713  /Users/vjovanov/code/virtualization-lms-core/src/internal/Expressions.scala -> Serializable\n 11714: /Users/vjovanov/code/virtualization-lms-core/src/internal/Expressions.scala -> SourceContext\n 11715  /Users/vjovanov/code/virtualization-lms-core/src/internal/Expressions.scala -> StackTraceElement\n 11716  /Users/vjovanov/code/virtualization-lms-core/src/internal/Expressions.scala -> Statics\n .....\n 12047  /Users/vjovanov/code/virtualization-lms-core/src/internal/GPUCodegen.scala -> ScalaRunTime\n 12048  /Users/vjovanov/code/virtualization-lms-core/src/internal/GPUCodegen.scala -> Serializable\n 12049: /Users/vjovanov/code/virtualization-lms-core/src/internal/GPUCodegen.scala -> SourceContext\n 12050  /Users/vjovanov/code/virtualization-lms-core/src/internal/GPUCodegen.scala -> String\n 12051  /Users/vjovanov/code/virtualization-lms-core/src/internal/GPUCodegen.scala -> StringBuilder\n .....\n 12564  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaCodegen.scala -> ScalaFatCodegen\n 12565  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaCodegen.scala -> ScalaNestedCodegen\n 12566: /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaCodegen.scala -> SourceContext\n 12567  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaCodegen.scala -> Stm\n 12568  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaCodegen.scala -> String\n .....\n 12787  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaConciseCodegen.scala -> ScalaNestedCodegen\n 12788  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaConciseCodegen.scala -> Seq\n 12789: /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaConciseCodegen.scala -> SourceContext\n 12790  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaConciseCodegen.scala -> StackTraceElement\n 12791  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaConciseCodegen.scala -> Stm\n .....\n 13100  /Users/vjovanov/code/virtualization-lms-core/src/internal/Transforming.scala -> Predef\n 13101  /Users/vjovanov/code/virtualization-lms-core/src/internal/Transforming.scala -> Seq\n 13102: /Users/vjovanov/code/virtualization-lms-core/src/internal/Transforming.scala -> SourceContext\n 13103  /Users/vjovanov/code/virtualization-lms-core/src/internal/Transforming.scala -> Stm\n 13104  /Users/vjovanov/code/virtualization-lms-core/src/internal/Transforming.scala -> SubstTransformer\n\n~/code/virtualization-lms-core/target/streams/test/compile/$global/streams/out:\n    <binary>\n\n/Users/vjovanov/code/virtualization-lms-core/target/streams/test/incCompileSetup/$global/streams/inc_compile_2.11:\n 6195  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arith.scala -> ScalaRunTime\n 6196  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arith.scala -> Serializable\n 6197: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arith.scala -> SourceContext\n 6198  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arith.scala -> Sym\n 6199  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arith.scala -> T\n ....\n 6279  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arrays.scala -> ScalaRunTime\n 6280  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arrays.scala -> Serializable\n 6281: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arrays.scala -> SourceContext\n 6282  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arrays.scala -> Sym\n 6283  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arrays.scala -> T\n ....\n 6338  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Relat.scala -> ScalaRunTime\n 6339  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Relat.scala -> Serializable\n 6340: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Relat.scala -> SourceContext\n 6341  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Relat.scala -> _1\n 6342  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Relat.scala -> _2\n ....\n 6387  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/TestNumeric.scala -> Prog\n 6388  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/TestNumeric.scala -> Rep\n 6389: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/TestNumeric.scala -> SourceContext\n 6390  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/TestNumeric.scala -> StringOps\n 6391  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/TestNumeric.scala -> StructOps\n ....\n 6432  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Trig.scala -> Serializable\n 6433  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Trig.scala -> Sin\n 6434: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Trig.scala -> SourceContext\n 6435  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Trig.scala -> Trig\n 6436  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Trig.scala -> TrigExp\n ....\n 6500  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestBackward.scala -> ScalaRunTime\n 6501  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestBackward.scala -> Serializable\n 6502: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestBackward.scala -> SourceContext\n 6503  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestBackward.scala -> Stm\n 6504  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestBackward.scala -> String\n ....\n 6616  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestEffect.scala -> ScalaGenArrayLoops\n 6617  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestEffect.scala -> ScalaGenPrint\n 6618: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestEffect.scala -> SourceContext\n 6619  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestEffect.scala -> StringWriter\n 6620  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestEffect.scala -> common\n ....\n 6641  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestMiscTransform.scala -> ScalaGenArrayLoops\n 6642  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestMiscTransform.scala -> ScalaGenPrint\n 6643: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestMiscTransform.scala -> SourceContext\n 6644  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestMiscTransform.scala -> StringWriter\n 6645  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestMiscTransform.scala -> common\n ....\n 6666  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransform.scala -> ScalaGenArrayLoops\n 6667  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransform.scala -> ScalaGenPrint\n 6668: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransform.scala -> SourceContext\n 6669  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransform.scala -> StringWriter\n 6670  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransform.scala -> common\n ....\n 6736  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransformRec.scala -> ScalaRunTime\n 6737  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransformRec.scala -> Serializable\n 6738: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransformRec.scala -> SourceContext\n 6739  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransformRec.scala -> StringWriter\n 6740  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransformRec.scala -> Sym\n ....\n 6840  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform.scala -> ScalaGenArrayLoops\n 6841  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform.scala -> ScalaGenPrint\n 6842: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform.scala -> SourceContext\n 6843  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform.scala -> StringWriter\n 6844  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform.scala -> common\n ....\n 6866  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform2.scala -> ScalaGenArrayLoops\n 6867  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform2.scala -> ScalaGenPrint\n 6868: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform2.scala -> SourceContext\n 6869  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform2.scala -> StringWriter\n 6870  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform2.scala -> common\n ....\n 6918  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/Vectors.scala -> ScalaRunTime\n 6919  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/Vectors.scala -> Serializable\n 6920: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/Vectors.scala -> SourceContext\n 6921  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/Vectors.scala -> StringWriter\n 6922  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/Vectors.scala -> Sym\n ....\n 7065  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestHMM.scala -> ScalaGenVariables\n 7066  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestHMM.scala -> ScalaRunTime\n 7067: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestHMM.scala -> SourceContext\n 7068  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestHMM.scala -> StaticDataExp\n 7069  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestHMM.scala -> StringWriter\n ....\n 7225  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestStencil.scala -> Sliding\n 7226  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestStencil.scala -> SlidingExp\n 7227: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestStencil.scala -> SourceContext\n 7228  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestStencil.scala -> StaticDataExp\n 7229  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestStencil.scala -> StringWriter\n ....\n 7403  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestArrayOps.scala -> ScalaGenArrayOps\n 7404  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestArrayOps.scala -> ScalaGenMiscOps\n 7405: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestArrayOps.scala -> SourceContext\n 7406  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestArrayOps.scala -> System\n 7407  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestArrayOps.scala -> TestArrayOps\n ....\n 7462  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestList.scala -> ScalaGenOrderingOps\n 7463  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestList.scala -> ScalaGenPrimitiveOps\n 7464: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestList.scala -> SourceContext\n 7465  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestList.scala -> String\n 7466  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestList.scala -> System\n ....\n 7514  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestInterpret.scala -> ScalaGenArrayLoops\n 7515  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestInterpret.scala -> ScalaGenPrint\n 7516: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestInterpret.scala -> SourceContext\n 7517  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestInterpret.scala -> StringWriter\n 7518  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestInterpret.scala -> common\n ....\n 7540  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestStable.scala -> ScalaGenArrayLoops\n 7541  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestStable.scala -> ScalaGenPrint\n 7542: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestStable.scala -> SourceContext\n 7543  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestStable.scala -> StringWriter\n 7544  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestStable.scala -> common\n ....\n 7601  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> ScalaRunTime\n 7602  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> Serializable\n 7603: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> SourceContext\n 7604  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> String\n 7605  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> StringWriter\n ....\n 7767  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> Seq\n 7768  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> Serializable\n 7769: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> SourceContext\n 7770  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> String\n 7771  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> StringContext\n ....\n 8019  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestQueries.scala -> Serializable\n 8020  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestQueries.scala -> Shallow\n 8021: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestQueries.scala -> SourceContext\n 8022  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestQueries.scala -> Staged\n 8023  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestQueries.scala -> StagedExp\n ....\n 8413  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala -> Serializable\n 8414  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala -> Settings\n 8415: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala -> SourceContext\n 8416  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala -> StaticDataExp\n 8417  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala -> Statics\n ....\n 8825  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestFFT.scala -> ScalaRunTime\n 8826  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestFFT.scala -> Serializable\n 8827: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestFFT.scala -> SourceContext\n 8828  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestFFT.scala -> System\n 8829  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestFFT.scala -> T\n ....\n 8980  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestPower.scala -> ScalaGenArith\n 8981  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestPower.scala -> ScalaGenFlat\n 8982: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestPower.scala -> SourceContext\n 8983  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestPower.scala -> String\n 8984  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestPower.scala -> System\n ....\n 9146  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Effects.scala -> ScalaRunTime\n 9147  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Effects.scala -> Serializable\n 9148: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Effects.scala -> SourceContext\n 9149  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Effects.scala -> State\n 9150  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Effects.scala -> _hashCode\n ....\n 9253  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Functions.scala -> ScalaRunTime\n 9254  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Functions.scala -> Serializable\n 9255: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Functions.scala -> SourceContext\n 9256  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Functions.scala -> _root_\n 9257  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Functions.scala -> _toString\n ....\n 9340  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Matching.scala -> Second\n 9341  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Matching.scala -> Serializable\n 9342: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Matching.scala -> SourceContext\n 9343  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Matching.scala -> Switchable\n 9344  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Matching.scala -> Test\n ....\n 9741  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Automata.scala -> ScalaRunTime\n 9742  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Automata.scala -> Serializable\n 9743: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Automata.scala -> SourceContext\n 9744  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Automata.scala -> Stepper2\n 9745  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Automata.scala -> StepperOps\n ....\n 9983  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Functions.scala -> ScalaRunTime\n 9984  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Functions.scala -> Serializable\n 9985: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Functions.scala -> SourceContext\n 9986  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Functions.scala -> Sym\n 9987  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Functions.scala -> Tuple2\n ....\n 10124  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestAckermann.scala -> ScalaGenFunctionsExternal\n 10125  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestAckermann.scala -> ScalaGenIfThenElse\n 10126: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestAckermann.scala -> SourceContext\n 10127  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestAckermann.scala -> System\n 10128  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestAckermann.scala -> TestAck\n .....\n 10211  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestFac.scala -> ScalaGenFunctionsExternal\n 10212  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestFac.scala -> ScalaGenIfThenElse\n 10213: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestFac.scala -> SourceContext\n 10214  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestFac.scala -> System\n 10215  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestFac.scala -> TestFac\n .....\n 10480  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestMatcherNew.scala -> Seq\n 10481  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestMatcherNew.scala -> Serializable\n 10482: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestMatcherNew.scala -> SourceContext\n 10483  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestMatcherNew.scala -> SplitEffectsExpFat\n 10484  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestMatcherNew.scala -> Stepper2\n .....\n 10875  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestConditional.scala -> ScalaRunTime\n 10876  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestConditional.scala -> Serializable\n 10877: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestConditional.scala -> SourceContext\n 10878  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestConditional.scala -> String\n 10879  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestConditional.scala -> Sym\n .....\n 10984  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestFunctions.scala -> SchedFunProg\n 10985  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestFunctions.scala -> Seq\n 10986: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestFunctions.scala -> SourceContext\n 10987  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestFunctions.scala -> String\n 10988  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestFunctions.scala -> Struct\n .....\n 11138  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test6-layered/Test.scala -> ScalaRunTime\n 11139  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test6-layered/Test.scala -> Serializable\n 11140: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test6-layered/Test.scala -> SourceContext\n 11141  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test6-layered/Test.scala -> StrCat\n 11142  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test6-layered/Test.scala -> String\n .....\n 11301  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/Arrays.scala -> ScalaRunTime\n 11302  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/Arrays.scala -> Serializable\n 11303: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/Arrays.scala -> SourceContext\n 11304  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/Arrays.scala -> StringWriter\n 11305  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/Arrays.scala -> Sym\n .....\n 11425  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala -> ScalaRunTime\n 11426  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala -> Serializable\n 11427: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala -> SourceContext\n 11428  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala -> String\n 11429  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala -> StringWriter\n .....\n 11519  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestCodeMotion.scala -> ScalaGenOrderingOps\n 11520  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestCodeMotion.scala -> ScalaGenPrint\n 11521: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestCodeMotion.scala -> SourceContext\n 11522  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestCodeMotion.scala -> StringWriter\n 11523  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestCodeMotion.scala -> System\n .....\n 11614  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion.scala -> ScalaGenOrderingOps\n 11615  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion.scala -> ScalaGenPrint\n 11616: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion.scala -> SourceContext\n 11617  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion.scala -> Stm\n 11618  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion.scala -> StringWriter\n .....\n 11732  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala -> ScalaGenOrderingOps\n 11733  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala -> ScalaGenPrint\n 11734: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala -> SourceContext\n 11735  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala -> Stm\n 11736  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala -> StringWriter\n .....\n 12064  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestMutation.scala -> ScalaRunTime\n 12065  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestMutation.scala -> Serializable\n 12066: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestMutation.scala -> SourceContext\n 12067  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestMutation.scala -> StringWriter\n 12068  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestMutation.scala -> Sym\n .....\n 12219  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestSpeculative.scala -> ScalaGenVariables\n 12220  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestSpeculative.scala -> ScalaGenWhileOptSpeculative\n 12221: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestSpeculative.scala -> SourceContext\n 12222  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestSpeculative.scala -> SplitEffectsExpFat\n 12223  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestSpeculative.scala -> StringWriter\n .....\n 12333  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestCrossStage.scala -> ScalaGenStaticData\n 12334  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestCrossStage.scala -> ScalaGenVariables\n 12335: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestCrossStage.scala -> SourceContext\n 12336  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestCrossStage.scala -> StaticDataExp\n 12337  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestCrossStage.scala -> StringWriter\n .....\n 12457  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestStruct.scala -> Seq\n 12458  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestStruct.scala -> Serializable\n 12459: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestStruct.scala -> SourceContext\n 12460  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestStruct.scala -> Stm\n 12461  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestStruct.scala -> StringWriter\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arith.scala:\n    5  import common._\n    6  \n    7: import scala.reflect.SourceContext\n    8  import java.io.PrintWriter\n    9  \n   ..\n   30    }\n   31  \n   32:   def infix_+(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n   33:   def infix_-(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n   34:   def infix_*(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n   35:   def infix_/(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n   36  }\n   37  \n   ..\n   46    case class Div(x: Exp[Double], y: Exp[Double]) extends Def[Double]\n   47  \n   48:   def infix_+(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = Plus(x, y)\n   49:   def infix_-(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = Minus(x, y)\n   50:   def infix_*(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = Times(x, y)\n   51:   def infix_/(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = Div(x, y)\n   52    \n   53:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   54      case Plus(x,y) => f(x) + f(y)\n   55      case Minus(x,y) => f(x) - f(y)\n   ..\n   62  trait ArithExpOpt extends ArithExp {\n   63  \n   64:   override def infix_+(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n   65      case (Const(x), Const(y)) => Const(x + y)\n   66      case (x, Const(0.0) | Const(-0.0)) => x\n   ..\n   69    }\n   70  \n   71:   override def infix_-(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n   72      case (Const(x), Const(y)) => Const(x - y)\n   73      case (x, Const(0.0) | Const(-0.0)) => x\n   ..\n   75    }\n   76  \n   77:   override def infix_*(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n   78      case (Const(x), Const(y)) => Const(x * y)\n   79      case (x, Const(1.0)) => x\n   ..\n   84    }\n   85  \n   86:   override def infix_/(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n   87      case (Const(x), Const(y)) => Const(x / y)\n   88      case (x, Const(1.0)) => x\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/TestNumeric.scala:\n    6  import internal._\n    7  \n    8: import scala.reflect.SourceContext\n    9  \n   10  \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestBackward.scala:\n    6  import internal._\n    7  \n    8: import scala.reflect.SourceContext\n    9  \n   10  // investigate backward analysis -- these are preliminary ideas ...\n   ..\n  120  \n  121    def reflect[T](d: Def[T]): Exp[T] = {\n  122:     val sym = fresh[T](List(implicitly[SourceContext]))(mtype(manifest[Any]))\n  123      curStms = curStms :+ createDefinition(sym,d)\n  124      sym\n  ...\n  165      \n  166      val block1 = reifyBlock {\n  167:       f(fresh[A](List(implicitly[SourceContext]))(mtype(manifest[Any])))\n  168      }\n  169      \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestEffect.scala:\n   13  \n   14  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   15: import scala.reflect.SourceContext\n   16  \n   17  \n   ..\n   64    case class Multi(as: List[Def[Any]]) extends FatDef\n   65  \n   66:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   67      case Mutate(a,b) => toAtom(Mutate(f(a),f(b)))\n   68      case Copy(a) => toAtom(Copy(f(a)))\n   ..\n   95    // ergo, need to save original Defs (or have a way to reconstruct them).\n   96  \n   97:   override implicit def toAtom[A:Manifest](d: Def[A])(implicit pos: SourceContext): Exp[A] = {\n   98      val in = syms(d)\n   99      val actual = in map (s => subst.getOrElse(s,s))\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestMiscTransform.scala:\n   13  \n   14  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   15: import scala.reflect.SourceContext\n   16  \n   17  \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransform.scala:\n   13  \n   14  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   15: import scala.reflect.SourceContext\n   16  \n   17  \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransformRec.scala:\n   10  \n   11  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   12: import scala.reflect.SourceContext\n   13  \n   14  class TestTransformRec extends FileDiffSuite {\n   ..\n   36      }\n   37  \n   38:     override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   39        case Apply(x,y) => toAtom(Apply(f(x),f(y)))\n   40        case g@DefineFun(y) => toAtom(DefineFun(f(y))(g.arg))\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform.scala:\n   13  \n   14  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   15: import scala.reflect.SourceContext\n   16  \n   17  /*// investigate worklist transform phases (separate from optimization).\n   ..\n   52    // Foo(x) atPhase(t) { bar(x) }   <--- x in bar(x)  will refer to a sym that may have been replaced itself\n   53  \n   54:   protected override implicit def toAtom[A:Manifest](d: Def[A])(implicit pos: SourceContext): Exp[A] = { // override createDefinition instead?\n   55      val in = syms(d)\n   56      val actual = xform(in)\n   ..\n  115    }\n  116  \n  117:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  118      case VectorFromArray(a) => vfromarray(f(a))\n  119      case VectorToArray(a) => vtoarray(f(a))\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform2.scala:\n   13  \n   14  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   15: import scala.reflect.SourceContext\n   16  \n   17  // investigate worklist transform phases (separate from optimization).\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/Vectors.scala:\n   13  \n   14  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   15: import scala.reflect.SourceContext\n   16  \n   17  /*\n   ..\n   54    def vlength[T:Manifest](a: Rep[Vector[T]]): Rep[Int] = VectorLength(a)\n   55  \n   56:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   57      case VectorZeros(n) => vzeros(f(n))\n   58      case VectorLiteral(a) => vliteral(f(a))\n   ..\n   64    }).asInstanceOf[Exp[A]] // why??\n   65  \n   66:   override def mirrorDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = (e match {\n   67      case VectorZeros(n) => VectorZeros(f(n))\n   68      case VectorLiteral(a) => VectorLiteral(f(a))\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestHMM.scala:\n    9  \n   10  import util.OverloadHack\n   11: import scala.reflect.SourceContext\n   12  \n   13  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   14: import scala.reflect.SourceContext\n   15  \n   16  \n   ..\n  138        }\n  139        new Prog with Impl {\n  140:         override def array_apply[T:Manifest](x: Exp[Array[T]], n: Exp[Int])(implicit pos: SourceContext): Exp[T] = (x,n) match {\n  141            case (Def(StaticData(x:Array[T])), Const(n)) => Const(x(n))\n  142            case _ => super.array_apply(x,n)\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestStencil.scala:\n    9  \n   10  import util.OverloadHack\n   11: import scala.reflect.SourceContext\n   12  \n   13  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   14: import scala.reflect.SourceContext\n   15  \n   16  \n   ..\n   77      \n   78      // some arithemetic rewrites\n   79:     override def int_plus(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext): Exp[Int] = ((lhs,rhs) match {\n   80        case (Def(IntPlus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => int_plus(x, unit(y+z)) // (x+y)+z --> x+(y+z)\n   81        case (Def(IntMinus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => int_minus(x, unit(y-z)) // (x-y)+z --> x-(y-z)\n   ..\n   84      }).asInstanceOf[Exp[Int]]\n   85  \n   86:     override def int_minus(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext): Exp[Int] = ((lhs,rhs) match {\n   87        case (Def(IntMinus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => int_minus(x, unit(y+z)) // (x-y)-z --> x-(y+z)\n   88        case (Def(IntPlus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => int_plus(x, unit(y-z)) // (x+y)-z --> x+(y-z)\n   ..\n   91      }).asInstanceOf[Exp[Int]]\n   92  \n   93:     override def numeric_plus[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[T] = ((lhs,rhs) match {\n   94        case (Def(NumericPlus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => numeric_plus(x, unit(y+z)) // (x+y)+z --> x+(y+z)\n   95        case (Def(NumericMinus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => numeric_minus(x, unit(y-z)) // (x-y)+z --> x-(y-z)\n   ..\n   97      }).asInstanceOf[Exp[T]]\n   98  \n   99:     override def numeric_minus[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[T] = ((lhs,rhs) match {\n  100        case (Def(NumericMinus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => numeric_minus(x, unit(y+z)) // (x-y)-z --> x-(y+z)\n  101        case (Def(NumericPlus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => numeric_plus(x, unit(y-z)) // (x+y)-z --> x+(y-z)\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestInterpret.scala:\n   14  \n   15  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   16: import scala.reflect.SourceContext\n   17  \n   18  \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestStable.scala:\n   14  \n   15  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   16: import scala.reflect.SourceContext\n   17  \n   18  /*case class RCell[T](tag: String) {\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestQueries.scala:\n    9  \n   10  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   11: import scala.reflect.SourceContext\n   12  \n   13  /*\n   ..\n  758    // implement smart constructor for DBFor nodes; perform normalization.\n  759    // note that we map IR nodes to staged code, not directly to other IR nodes.\n  760:   def dbfor[A:Manifest,B:Manifest](l: Exp[List[A]], f: Exp[A] => Exp[List[B]])(implicit pos: SourceContext): Exp[List[B]] = l match {\n  761  /*\n  762               for x in (yield Q)do R --> R[x:=Q]\n  ...\n  791  \n  792    // override `if (c) a else b` smart constructor to add rewrites\n  793:   override def ifThenElse[T:Manifest](cond: Rep[Boolean], thenp: Block[T], elsep: Block[T])(implicit pos: SourceContext) = ((thenp.res,elsep.res) match {\n  794  /*\n  795                    if P then (Q @ R) --> (if P then Q) @ (if P then R)\n  ...\n  809  \n  810    // override Rep[List[T]] methods to create For nodes\n  811:   override def list_flatMap[A:Manifest,B:Manifest](l: Exp[List[A]], f: Exp[A] => Exp[List[B]])(implicit pos: SourceContext) = {\n  812      dbfor[A,B](l,f)\n  813    }\n  814:   override def list_map[A:Manifest,B:Manifest](l: Exp[List[A]], f: Exp[A] => Exp[B])(implicit pos: SourceContext) = {\n  815      list_flatMap[A,B](l, x => List(f(x)))\n  816    }\n  817:   override def list_filter[A : Manifest](l: Exp[List[A]], f: Exp[A] => Exp[Boolean])(implicit pos: SourceContext) = {\n  818      list_flatMap[A,A](l, x => if (f(x)) List(x) else List())\n  819    }\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala:\n   10  \n   11  import util.OverloadHack\n   12: import scala.reflect.SourceContext\n   13  \n   14  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   15: import scala.reflect.SourceContext\n   16  import scala.collection.mutable\n   17  \n   ..\n  452      def matrix_n(l: Rep[DenseMatrix[Double]]): Rep[Int] = MatrixN(l)\n  453  \n  454:     override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  455         case MatrixMult(l, r) => matrix_*(f(l), f(r))\n  456         case MatrixN(l) => matrix_n(f(l))\n  ...\n  514        }\n  515  \n  516:       override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  517         case DMatrix(l, r, matrix) => toSDAtom(DMatrix(Both(l.static, f(l.dynamic)), Both(r.static, f(r.dynamic)), f(matrix)))\n  518         case _ => super.mirror(e,f)\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestFFT.scala:\n    5  import common._\n    6  import test1._\n    7: import reflect.SourceContext\n    8  \n    9  import java.io.PrintWriter\n   ..\n   63  trait ArithExpOptFFT extends ArithExpOpt {\n   64  \n   65:   override def infix_+(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n   66      case (x, Def(Minus(Const(0.0) | Const(-0.0), y))) => infix_-(x, y)\n   67      case _ => super.infix_+(x, y)\n   68    }\n   69  \n   70:   override def infix_-(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n   71      case (x, Def(Minus(Const(0.0) | Const(-0.0), y))) => infix_+(x, y)\n   72      case _ => super.infix_-(x, y)\n   73    }\n   74  \n   75:   override def infix_*(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n   76      case (x, Const(-1.0)) => infix_-(0.0, x)\n   77      case (Const(-1.0), y) => infix_-(0.0, y)\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestPower.scala:\n    5  import common._\n    6  import test1._\n    7: import reflect.SourceContext\n    8  \n    9  import java.io.PrintWriter\n   ..\n   15  \n   16  trait Power2 { this: Arith =>\n   17:   def power(b: Rep[Double], x: Int)(implicit pos: SourceContext): Rep[Double] = {\n   18      if (x == 0) 1.0\n   19      else if ((x&1) == 0) { val y = power(b, x/2); y * y }\n   ..\n   33    //implicit def unit(x: Double) = x.toString\n   34  \n   35:   def infix_+(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext) = \"(%s+%s)\".format(x,y)\n   36:   def infix_-(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext) = \"(%s-%s)\".format(x,y)\n   37:   def infix_*(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext) = \"(%s*%s)\".format(x,y)\n   38:   def infix_/(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext) = \"(%s/%s)\".format(x,y)\n   39  }\n   40  \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Functions.scala:\n    7  import test2._\n    8  \n    9: import scala.reflect.SourceContext\n   10  \n   11  \n   ..\n   19    case class Apply2[A1:Manifest,A2:Manifest,B:Manifest](fun: Exp[(A1,A2) => B], arg1: Exp[A1], arg2: Exp[A2]) extends Def[B]\n   20    \n   21:   def doLambda[A:Manifest,B:Manifest](fun: Exp[A] => Exp[B])(implicit pos: SourceContext): Exp[A => B] = Lambda(fun)\n   22:   def doLambda2[A1:Manifest,A2:Manifest,B:Manifest](fun: (Exp[A1],Exp[A2]) => Exp[B])(implicit pos: SourceContext) : Exp[(A1,A2) => B] = Lambda2(fun)\n   23:   def doApply[A:Manifest,B:Manifest](fun: Exp[A => B], arg: Exp[A])(implicit pos: SourceContext): Exp[B] = Apply(fun, arg)\n   24:   def doApply2[A1:Manifest,A2:Manifest,B:Manifest](fun: Exp[(A1,A2) => B], arg1: Exp[A1], arg2: Exp[A2])(implicit pos: SourceContext): Exp[B] = Apply2(fun, arg1, arg2)\n   25  }\n   26  \n   27  trait FunctionsExpUnfoldAll extends FunctionsExp {\n   28  \n   29:   override def doApply[A:Manifest,B:Manifest](fun: Exp[A => B], arg: Exp[A])(implicit pos: SourceContext): Exp[B] = fun match {\n   30      case Def(Lambda(fun)) => fun(arg)\n   31      case _ => super.doApply(fun, arg)\n   32    }\n   33:   override def doApply2[A1:Manifest,A2:Manifest,B:Manifest](fun: Exp[(A1,A2) => B], arg1: Exp[A1], arg2: Exp[A2])(implicit pos: SourceContext): Exp[B] = fun match {\n   34      case Def(Lambda2(fun)) => fun(arg1, arg2)\n   35      case _ => super.doApply2(fun, arg1, arg2)\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Functions.scala:\n    8  import test3._\n    9  import util.ClosureCompare\n   10: import scala.reflect.SourceContext\n   11  \n   12  import scala.collection.{immutable, mutable}\n   ..\n   16    def exec[A:Manifest,B:Manifest](fun: Exp[A]=>Exp[B], arg: Exp[A]): Exp[B]\n   17  \n   18:   override def doApply[A:Manifest,B:Manifest](fun: Exp[A => B], arg: Exp[A])(implicit pos: SourceContext): Exp[B] = fun match {\n   19      case Def(Lambda(fun)) => \n   20        exec(fun, arg)\n   ..\n   97  \n   98  \n   99:   override def doLambda[A:Manifest,B:Manifest](fun: Exp[A]=>Exp[B])(implicit pos: SourceContext) = {\n  100      super.doLambda(lookupFun(fun))\n  101    }\n  ...\n  121  trait FunctionsExternalDef01 extends FunctionsExternalDef0 { // not used\n  122  \n  123:   override def doLambda[A:Manifest,B:Manifest](f: Exp[A]=>Exp[B])(implicit pos: SourceContext): Exp[A=>B] = {\n  124      var funSym = fresh[A=>B]\n  125      var argSym = fresh[A]//Sym(-1)\n  ...\n  135    var funTable: List[(Function[_,_], Any, Sym[_])] = List()\n  136    \n  137:   override def doLambda[A:Manifest,B:Manifest](f: Exp[A]=>Exp[B])(implicit pos: SourceContext): Exp[A=>B] = {\n  138      var can = canonicalize(f)\n  139  \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/Arrays.scala:\n   10  \n   11  import util.OverloadHack\n   12: import scala.reflect.SourceContext\n   13  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   14  \n   ..\n   91  \n   92  \n   93:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   94      case SimpleLoop(s,i, ArrayElem(y)) if f.hasContext => \n   95        array(f(s)) { j => f.asInstanceOf[AbstractSubstTransformer{val IR:ArrayLoopsExp.this.type}].withSubstScope(i -> j) { f.reflectBlock(y) } }\n   ..\n   99    }).asInstanceOf[Exp[A]]\n  100  \n  101:   override def mirrorFatDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = (e match {\n  102      case ArrayElem(y) => ArrayElem(f(y))\n  103      case ReduceElem(y) => ReduceElem(f(y))\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala:\n    9  \n   10  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   11: import scala.reflect.SourceContext\n   12  \n   13  trait Print extends Base {\n   ..\n   20    case class Print(s: Rep[Any]) extends Def[Unit]\n   21    def print(s: Rep[Any]) = reflectEffect(Print(s))\n   22:   override def mirrorDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = (e match {\n   23      case Print(s) => Print(f(s))\n   24      case _ => super.mirrorDef(e,f)\n   25    }).asInstanceOf[Def[A]] // why??\n   26:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   27      case Reflect(Print(s), u, es) => reflectMirrored(Reflect(Print(f(s)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n   28      case _ => super.mirror(e,f)\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion.scala:\n    7  \n    8  import util.OverloadHack\n    9: import scala.reflect.SourceContext\n   10  \n   11  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   12: import scala.reflect.SourceContext\n   13  \n   14  \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala:\n    7  \n    8  import util.OverloadHack\n    9: import scala.reflect.SourceContext\n   10  \n   11  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   ..\n  211         new FusionProg24 with ArithExp with ArrayLoopsFatExp with IfThenElseFatExp with PrintExp with IfThenElseExp with OrderingOpsExp  { self =>\n  212  \n  213:          override def infix_-(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = if (x == y) {\n  214             println(\"*** removing self subtraction \" + x + \" - \" + y)\n  215             0\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestSpeculative.scala:\n   12  \n   13  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   14: import scala.reflect.SourceContext\n   15  \n   16  class TestSpeculative extends FileDiffSuite {\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestStruct.scala:\n   10  import test7.{Print,PrintExp,ScalaGenPrint}\n   11  import test7.{ArrayLoops,ArrayLoopsExp,ArrayLoopsFatExp,ScalaGenArrayLoops,ScalaGenFatArrayLoopsFusionOpt}\n   12: import scala.reflect.SourceContext\n   13  \n   14  import util.OverloadHack\n   ..\n   36    case class ArraySoaTag[T](base: StructTag[T], len: Exp[Int]) extends StructTag[T]\n   37    \n   38:   override def simpleLoop[A:Manifest](size: Exp[Int], v: Sym[Int], body: Def[A])(implicit pos: SourceContext): Exp[A] = body match {\n   39      case ArrayElem(Block(Def(Struct(tag:StructTag[A], elems)))) => \n   40        struct[A](ArraySoaTag[A](tag,size), elems.map(p=>(p._1,simpleLoop(size, v, ArrayElem(Block(p._2)))(p._2.tp.arrayManifest, pos))))\n   ..\n  216        new Prog with ImplFused {\n  217          // TODO: use a generic Opt trait instead of defining rewrites here...\n  218:         override def infix_-(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n  219            case (x, Def(Minus(Const(0.0),y))) => infix_+(x,y)\n  220            case _ => super.infix_-(x,y)\n  221          }\n  222:         override def infix_+(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n  223            case (Const(0.0), y) => y\n  224            case _ => super.infix_+(x,y)\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-terrors/ErrorSamples.scala:\n   10  import util.OverloadHack\n   11  import java.io.{ PrintWriter, StringWriter, FileOutputStream }\n   12: import scala.reflect.SourceContext\n   13  \n   14  /**\n   ..\n   98  \n   99      // TODO see what happens with the code below. How does var definition work in nested scopes.\n  100:     /* Why does this fail? TODO Investigate and try to fix if SourceContexts are broken. */\n  101      {\n  102        var scala = unit(\"scala 2\")\n\n1124 matches across 75 files\n\n\nSearching 19189 files for \"trait SourceContext\" (case sensitive)\n\n0 matches\n\nSearching 19189 files for \"case class SourceContext\" (case sensitive)\n\n0 matches\n\nSearching 19189 files for \"class SourceContext\" (case sensitive)\n\n0 matches\n\nSearching 753 files for \"SourceContext\" (case sensitive)\n\n0 matches\n\nSearching 0 files for \"SourceContext\" (case sensitive)\n\n0 matches\n\nSearching 158 files for \"SourceContext\" (case sensitive)\n\n0 matches\n\nSearching 19189 files for \"SourceContext\" (case sensitive)\n\n/Users/vjovanov/dissertation/main/ch2_dsl_embedding.tex:\n  249  \n  250  In the \\code{VectorDSL} interface every method has an additional implicit\n  251: parameter of type \\code{SourceContext} and every generic type requires an\n  252: additional \\code{TypeTag} type class. The \\code{SourceContext} contains information\n  253  about the current file name, line number, and character offset.\n  254: \\code{SourceContext}s are used for mapping generated code to the original\n  255  program source. \\code{TypeTag}s carry all information about the type of terms.\n  256  They are used to propagate run-time type information through the \\edsl{}\n  257  compilation for optimizations and generating code for statically typed target\n  258: languages. In the \\edsl definitions the \\code{SourceContext} is rarely used\n  259  explicitly (i.e., as an argument). It is provided ``behind the scenes'' by implicit\n  260  definitions that are provided in the DSL.\n  ...\n  265    object Vector {\n  266      def fromSeq[T:Numeric:TypeTag](seq: Rep[Seq[T]])\n  267:       (implicit sc: SourceContext): Rep[Vector[T]] =\n  268        vector_fromSeq(seq)\n  269      def fill[T:Numeric:TypeTag](value: Rep[T], size: Rep[Int])\n  270:       (implicit sc: SourceContext): Rep[Vector[T]] =\n  271        vector_fill(value, size)\n  272      def range(start: Rep[Int], end: Rep[Int])\n  273:       (implicit sc: SourceContext):Rep[Vector[Int]]=\n  274        vector_range(start, end)\n  275    }\n  ...\n  277    implicit class VectorRep[T:Numeric:TypeTag]\n  278      (v: Rep[Vector[T]]) {\n  279:     def data(implicit sc: SourceContext): Rep[Seq[T]] =\n  280        vector_data(v)\n  281      def +(that: Rep[Vector[T]])\n  282:       (implicit sc: SourceContext):Rep[Vector[T]] =\n  283        vector_plus(v, that)\n  284      def map[S:Numeric:TypeTag](f: Rep[T] => Rep[S])\n  285:       (implicit sc: SourceContext): Rep[Vector[S]] =\n  286        vector_map(v, f)\n  287    }\n  ...\n  289    // IR constructors for `map` and `plus` are elided\n  290    case class VectorFill[T:TypeTag](v: Rep[T], s: Rep[Int])\n  291:     (implicit sc: SourceContext)\n  292    def vector_fill[T:Numeric:TypeTag](v: Rep[T], size: Rep[Int])\n  293:     (implicit sc: SourceContext): Rep[Vector[T]] =\n  294      VectorFill(v, size) // IR node construction\n  295  }\n  ...\n  320  \n  321  In DSLs that use code generation, method signatures must be\n  322:  enriched with source code information for purposes of debugging~(\\code{SourceContext})\n  323   and type information for generating right types~(\\code{TypeTag}). This information also\n  324:  leaks in the DSL interface. In Scala \\code{TypeTag}s and \\code{SourceContext}s are\n  325   passed with implicit parameters. This makes the interface harder to understand as the user of\n  326   the \\edsl{}, who might not be an expert programmer, needs to understand concepts\n  327:  like \\code{TypeTag} and \\code{SourceContext}. A method \\code{map} from the introductory example~(\\S \\ref{sec:introduction-yy}) with source and type information has two additional implicit parameters:\\begin{lstparagraph}\n  328    def map[U](fn: Rep[T => U])\n  329:     (implicit sc: SourceContext, tpe: TypeTag[U]): Rep[Vector[U]]\n  330   \\end{lstparagraph}\n  331  \n  ...\n  373  val x = HashMap[Int, String](1 -> \"one\", 2 -> \"two\")\n  374  x.keys()\n  375: \\end{lstparagraph} yields an error message with \\code{SourceContext} parameters:\\begin{lstparagraph}\n  376  error: not enough arguments for method keys: (implicit pos\n  377: : scala.reflect.SourceContext)Prog.this.Rep[Iterable[Int]].\n  378  Unspecified value parameter pos.\n  379    x.keys()\n  ...\n 1215   are respectively translated to calls \\code{range} and \\code{pow} on\n 1216   \\code{this.Vector} and \\code{this.`package`}. For simplicity, passing source\n 1217:  information (\\code{SourceContext}) and type information \\code{TypeTag} is\n 1218   handled implicitly by the Scala compiler. In absence of implicit parameters\n 1219   they should be handled by the translation.\n ....\n 1416  \\code{$\\$$ifThenElse} method:\\begin{lstparagraph}\n 1417  def $\\$$ifThenElse[T](cond: Boolean, thn: => T, els: => T)(\n 1418:   implicit sc: SourceContext): T = {\n 1419    val (thnCnt: Long, elsCnt: Long) =\n 1420      globalProfiles.getOrElse(sc, (0, 0))\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/ArrayBufferOps.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  import scala.collection.mutable.ArrayBuffer\n    7  import scala.virtualization.lms.internal.GenericNestedCodegen\n    8  import collection.mutable.ArrayBuffer\n    9: import scala.reflect.SourceContext\n   10  \n   11  trait ArrayBufferOps extends Base {\n   ..\n   18    \n   19    class ArrayBufferOpsCls[A:Manifest](l: Rep[ArrayBuffer[A]]) {\n   20:     def +=(e: Rep[A])(implicit pos: SourceContext) = arraybuffer_append(l,e)\n   21:     def mkString(sep: Rep[String] = unit(\"\"))(implicit pos: SourceContext) = arraybuffer_mkstring(l,sep)\n   22:     def append(l: Rep[ArrayBuffer[A]], e: Rep[A])(implicit pos: SourceContext) = arraybuffer_append(l,e)\n   23      def clear() = arraybuffer_clear(l)\n   24:     def toArray(implicit pos: SourceContext) = arraybuffer_toarray(l)\n   25:     def toSeq(implicit pos: SourceContext) = arraybuffer_toseq(l)\n   26    }\n   27    \n   28:   def infix_+=[A:Manifest](l: Rep[ArrayBuffer[A]], e: Rep[A])(implicit pos: SourceContext) = arraybuffer_append(l, e)\n   29  \n   30    /* when mixed in with OptiML, one of these infix operations causes an NPE in the scala-virtualized compiler */ //TR: still the case?\n   31    /*\n   32:   def infix_mkString[A:Manifest](l: Rep[ArrayBuffer[A]], sep: Rep[String] = unit(\"\"))(implicit pos: SourceContext) = arraybuffer_mkstring(l, sep)\n   33:   def infix_+=[A:Manifest](l: Rep[ArrayBuffer[A]], e: Rep[A])(implicit pos: SourceContext) = arraybuffer_append(l, e)\n   34:   def infix_append[A:Manifest](l: Rep[ArrayBuffer[A]], e: Rep[A])(implicit pos: SourceContext) = arraybuffer_append(l, e)\n   35:   def infix_toArray[A:Manifest](l: Rep[ArrayBuffer[A]])(implicit pos: SourceContext) = arraybuffer_toarray(l)\n   36:   def infix_toSeq[A:Manifest](l: Rep[ArrayBuffer[A]])(implicit pos: SourceContext) = arraybuffer_toseq(l)\n   37    */\n   38    \n   39:   def arraybuffer_mkstring[A:Manifest](l: Rep[ArrayBuffer[A]], sep: Rep[String])(implicit pos: SourceContext): Rep[String]\n   40:   def arraybuffer_append[A:Manifest](l: Rep[ArrayBuffer[A]], e: Rep[A])(implicit pos: SourceContext): Rep[Unit]\n   41:   def arraybuffer_new[A:Manifest](xs: Seq[Rep[A]])(implicit pos: SourceContext): Rep[ArrayBuffer[A]]\n   42    def arraybuffer_clear[A:Manifest](l: Rep[ArrayBuffer[A]]): Rep[Unit]\n   43:   def arraybuffer_toarray[A:Manifest](x: Rep[ArrayBuffer[A]])(implicit pos: SourceContext): Rep[Array[A]]\n   44:   def arraybuffer_toseq[A:Manifest](x: Rep[ArrayBuffer[A]])(implicit pos: SourceContext): Rep[Seq[A]]\n   45  }\n   46  \n   ..\n   55    case class ArrayBufferToSeq[A:Manifest](x: Exp[ArrayBuffer[A]]) extends Def[Seq[A]]\n   56  \n   57:   def arraybuffer_new[A:Manifest](xs: Seq[Exp[A]])(implicit pos: SourceContext) = reflectMutable(ArrayBufferNew(xs))\n   58:   def arraybuffer_mkstring[A:Manifest](l: Exp[ArrayBuffer[A]], sep: Exp[String])(implicit pos: SourceContext) = ArrayBufferMkString(l, sep)\n   59:   def arraybuffer_append[A:Manifest](l: Exp[ArrayBuffer[A]], e: Exp[A])(implicit pos: SourceContext) = reflectWrite(l)(ArrayBufferAppend(l, e))\n   60    def arraybuffer_clear[A:Manifest](l: Exp[ArrayBuffer[A]]) = reflectWrite(l)(ArrayBufferClear(l))\n   61:   def arraybuffer_toarray[A:Manifest](x: Exp[ArrayBuffer[A]])(implicit pos: SourceContext) = ArrayBufferToArray(x)\n   62:   def arraybuffer_toseq[A:Manifest](x: Exp[ArrayBuffer[A]])(implicit pos: SourceContext) = ArrayBufferToSeq(x)\n   63  \n   64    //////////////\n   65    // mirroring\n   66  \n   67:   override def mirrorDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = (e match {\n   68      case ArrayBufferMkString(l,r) => ArrayBufferMkString(f(l),f(r))\n   69      case ArrayBufferAppend(l,r) => ArrayBufferAppend(f(l),f(r))\n   ..\n   72    \n   73  /*\n   74:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   75      case Reflect(ArrayBufferMkString(l,r), u, es) => reflectMirrored(Reflect(ArrayBufferMkString(f(l),f(r)), mapOver(f,u), f(es)))(mtype(manifest[A]))\n   76      case Reflect(ArrayBufferAppend(l,r), u, es) => reflectMirrored(Reflect(ArrayBufferAppend(f(l),f(r)), mapOver(f,u), f(es)))(mtype(manifest[A]))\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/ArrayOps.scala:\n    4  import java.io.PrintWriter\n    5  import internal._\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait ArrayOps extends Variables {\n    .\n   25  \n   26    class ArrayOpsCls[T:Manifest](a: Rep[Array[T]]){\n   27:     def apply(n: Rep[Int])(implicit pos: SourceContext) = array_apply(a, n)\n   28:     def update(n: Rep[Int], y: Rep[T])(implicit pos: SourceContext) = array_update(a,n,y)\n   29:     def length(implicit pos: SourceContext) = array_length(a)\n   30:     def foreach(block: Rep[T] => Rep[Unit])(implicit pos: SourceContext) = array_foreach(a, block)\n   31:     def sort(implicit pos: SourceContext) = array_sort(a)\n   32      def map[B:Manifest](f: Rep[T] => Rep[B]) = array_map(a,f)\n   33      def toSeq = array_toseq(a)\n   ..\n   37    def array_obj_new[T:Manifest](n: Rep[Int]): Rep[Array[T]]\n   38    def array_obj_fromseq[T:Manifest](xs: Seq[Rep[T]]): Rep[Array[T]]\n   39:   def array_apply[T:Manifest](x: Rep[Array[T]], n: Rep[Int])(implicit pos: SourceContext): Rep[T]\n   40:   def array_update[T:Manifest](x: Rep[Array[T]], n: Rep[Int], y: Rep[T])(implicit pos: SourceContext): Rep[Unit]\n   41:   def array_unsafe_update[T:Manifest](x: Rep[Array[T]], n: Rep[Int], y: Rep[T])(implicit pos: SourceContext): Rep[Unit]\n   42:   def array_length[T:Manifest](x: Rep[Array[T]])(implicit pos: SourceContext) : Rep[Int]\n   43:   def array_foreach[T:Manifest](x: Rep[Array[T]], block: Rep[T] => Rep[Unit])(implicit pos: SourceContext): Rep[Unit]\n   44:   def array_copy[T:Manifest](src: Rep[Array[T]], srcPos: Rep[Int], dest: Rep[Array[T]], destPos: Rep[Int], len: Rep[Int])(implicit pos: SourceContext): Rep[Unit]\n   45:   def array_unsafe_copy[T:Manifest](src: Rep[Array[T]], srcPos: Rep[Int], dest: Rep[Array[T]], destPos: Rep[Int], len: Rep[Int])(implicit pos: SourceContext): Rep[Unit]\n   46:   def array_sort[T:Manifest](x: Rep[Array[T]])(implicit pos: SourceContext): Rep[Array[T]]\n   47    def array_map[A:Manifest,B:Manifest](a: Rep[Array[A]], f: Rep[A] => Rep[B]): Rep[Array[B]]\n   48    def array_toseq[A:Manifest](a: Rep[Array[A]]): Rep[Seq[A]]\n   ..\n   77    def array_obj_new[T:Manifest](n: Exp[Int]) = reflectMutable(ArrayNew(n))\n   78    def array_obj_fromseq[T:Manifest](xs: Seq[Exp[T]]) = /*reflectMutable(*/ ArrayFromSeq(xs) /*)*/\n   79:   def array_apply[T:Manifest](x: Exp[Array[T]], n: Exp[Int])(implicit pos: SourceContext): Exp[T] = ArrayApply(x, n)\n   80:   def array_update[T:Manifest](x: Exp[Array[T]], n: Exp[Int], y: Exp[T])(implicit pos: SourceContext) = reflectWrite(x)(ArrayUpdate(x,n,y))\n   81:   def array_unsafe_update[T:Manifest](x: Rep[Array[T]], n: Rep[Int], y: Rep[T])(implicit pos: SourceContext) = ArrayUpdate(x,n,y)\n   82:   def array_length[T:Manifest](a: Exp[Array[T]])(implicit pos: SourceContext) : Rep[Int] = ArrayLength(a)\n   83:   def array_foreach[T:Manifest](a: Exp[Array[T]], block: Exp[T] => Exp[Unit])(implicit pos: SourceContext): Exp[Unit] = {\n   84      val x = fresh[T]\n   85      val b = reifyEffects(block(x))\n   86      reflectEffect(ArrayForeach(a, x, b), summarizeEffects(b).star)\n   87    }\n   88:   def array_copy[T:Manifest](src: Exp[Array[T]], srcPos: Exp[Int], dest: Exp[Array[T]], destPos: Exp[Int], len: Exp[Int])(implicit pos: SourceContext) = reflectWrite(dest)(ArrayCopy(src,srcPos,dest,destPos,len))\n   89:   def array_unsafe_copy[T:Manifest](src: Exp[Array[T]], srcPos: Exp[Int], dest: Exp[Array[T]], destPos: Exp[Int], len: Exp[Int])(implicit pos: SourceContext) = ArrayCopy(src,srcPos,dest,destPos,len)\n   90:   def array_sort[T:Manifest](x: Exp[Array[T]])(implicit pos: SourceContext) = ArraySort(x)\n   91    def array_map[A:Manifest,B:Manifest](a: Exp[Array[A]], f: Exp[A] => Exp[B]) = {\n   92      val x = fresh[A]\n   ..\n  100    // mirroring\n  101  \n  102:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  103      case ArrayApply(a,x) => array_apply(f(a),f(x))(mtype(manifest[A]),pos)\n  104      case ArrayLength(x) => array_length(f(x))\n  ...\n  139     * @author  Alen Stojanov (astojanov@inf.ethz.ch)\n  140     */\n  141:   override def array_length[T:Manifest](a: Exp[Array[T]])(implicit pos: SourceContext) : Rep[Int] = a match {\n  142      case Def(ArrayNew(n: Exp[Int])) => n\n  143      case Def(ArrayFromSeq(xs)) => Const(xs.size)\n  ...\n  151    }\n  152  \n  153:   override def array_apply[T:Manifest](x: Exp[Array[T]], n: Exp[Int])(implicit pos: SourceContext): Exp[T] = {\n  154      if (context ne null) {\n  155        // find the last modification of array x\n  ...\n  169    }\n  170  \n  171:   override def array_update[T:Manifest](x: Exp[Array[T]], n: Exp[Int], y: Exp[T])(implicit pos: SourceContext) = {\n  172      if (context ne null) {\n  173        // find the last modification of array x\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Base.scala:\n    3  \n    4  import internal._\n    5: import scala.reflect.SourceContext\n    6  \n    7  /**\n    .\n   52    }\n   53  \n   54:   override def mirrorDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = e match {\n   55      case Reflect(x, u, es) => Reflect(mirrorDef(x,f), mapOver(f,u), f(es))\n   56      case Reify(x, u, es) => Reify(f(x), mapOver(f,u), f(es))\n   ..\n   58    }\n   59  \n   60:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = e match {\n   61      case Reflect(x, u, es) => reflectMirrored(mirrorDef(e,f).asInstanceOf[Reflect[A]])\n   62      case Reify(x, u, es) => Reify(f(x), mapOver(f,u), f(es))\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/BooleanOps.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  \n    7  trait LiftBoolean {\n    .\n   12  \n   13  trait BooleanOps extends Variables {\n   14:   def infix_unary_!(x: Rep[Boolean])(implicit pos: SourceContext) = boolean_negate(x)\n   15:   def infix_&&(lhs: Rep[Boolean], rhs: =>Rep[Boolean])(implicit pos: SourceContext) = boolean_and(lhs,rhs)\n   16:   def infix_||(lhs: Rep[Boolean], rhs: =>Rep[Boolean])(implicit pos: SourceContext) = boolean_or(lhs,rhs)\n   17  \n   18    // TODO: short-circuit by default\n   19  \n   20:   def boolean_negate(lhs: Rep[Boolean])(implicit pos: SourceContext): Rep[Boolean]\n   21:   def boolean_and(lhs: Rep[Boolean], rhs: Rep[Boolean])(implicit pos: SourceContext): Rep[Boolean]\n   22:   def boolean_or(lhs: Rep[Boolean], rhs: Rep[Boolean])(implicit pos: SourceContext): Rep[Boolean]\n   23  }\n   24  \n   ..\n   28    case class BooleanOr(lhs: Exp[Boolean], rhs: Exp[Boolean]) extends Def[Boolean]\n   29  \n   30:   def boolean_negate(lhs: Exp[Boolean])(implicit pos: SourceContext) : Exp[Boolean] = BooleanNegate(lhs)\n   31:   def boolean_and(lhs: Exp[Boolean], rhs: Exp[Boolean])(implicit pos: SourceContext) : Exp[Boolean] = BooleanAnd(lhs,rhs)\n   32:   def boolean_or(lhs: Exp[Boolean], rhs: Exp[Boolean])(implicit pos: SourceContext) : Exp[Boolean] = BooleanOr(lhs,rhs)\n   33  \n   34:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   35      case BooleanNegate(x) => boolean_negate(f(x))\n   36      case BooleanAnd(x,y) => boolean_and(f(x),f(y))\n   ..\n   50  trait BooleanOpsExpOpt extends BooleanOpsExp {\n   51  \n   52:   override def boolean_negate(lhs: Exp[Boolean])(implicit pos: SourceContext) = lhs match {\n   53      case Def(BooleanNegate(x)) => x\n   54      case Const(a) => Const(!a)\n   ..\n   56    }\n   57  \n   58:   override def boolean_and(lhs: Exp[Boolean], rhs: Exp[Boolean])(implicit pos: SourceContext) : Exp[Boolean] = {\n   59      (lhs, rhs) match {\n   60        case (Const(false), _) => Const(false)\n   ..\n   66    }\n   67  \n   68:   override def boolean_or(lhs: Exp[Boolean], rhs: Exp[Boolean])(implicit pos: SourceContext) : Exp[Boolean] = {\n   69      (lhs, rhs) match {\n   70        case (Const(false), x) => x\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/CastingOps.scala:\n    4  import java.io.PrintWriter\n    5  import scala.virtualization.lms.util.OverloadHack\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait CastingOps extends Variables with OverloadHack {\n    .\n   14      \n   15    class CastingOpsCls[A:Manifest](lhs: Rep[A]){\n   16:     def IsInstanceOf[B:Manifest](implicit pos: SourceContext): Rep[Boolean] = rep_isinstanceof(lhs, manifest[A], manifest[B])\n   17:     def AsInstanceOf[B:Manifest](implicit pos: SourceContext): Rep[B] = rep_asinstanceof(lhs, manifest[A], manifest[B])\n   18    }\n   19  \n   20:   def rep_isinstanceof[A,B](lhs: Rep[A], mA: Manifest[A], mB: Manifest[B])(implicit pos: SourceContext) : Rep[Boolean]\n   21:   def rep_asinstanceof[A,B:Manifest](lhs: Rep[A], mA: Manifest[A], mB: Manifest[B])(implicit pos: SourceContext) : Rep[B]\n   22  }\n   23  \n   ..\n   28    case class RepAsInstanceOf[A,B:Manifest](lhs: Exp[A], mA: Manifest[A], mB: Manifest[B]) extends Def[B]\n   29  \n   30:   def rep_isinstanceof[A,B](lhs: Exp[A], mA: Manifest[A], mB: Manifest[B])(implicit pos: SourceContext) = RepIsInstanceOf(lhs,mA,mB)\n   31:   def rep_asinstanceof[A,B:Manifest](lhs: Exp[A], mA: Manifest[A], mB: Manifest[B])(implicit pos: SourceContext) : Exp[B] = toAtom(RepAsInstanceOf(lhs,mA,mB))(mB,pos)\n   32  \n   33:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   34      case RepAsInstanceOf(lhs, mA, mB) => rep_asinstanceof(f(lhs),mA,mB)(mtype(mB),pos)\n   35      case Reflect(e@RepAsInstanceOf(lhs, mA, mB), u, es) => reflectMirrored(Reflect(RepAsInstanceOf(f(lhs),mA,mB)(mtype(mB)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/DynamicBase.scala:\n    6  \n    7  import scala.reflect.macros.whitebox\n    8: import scala.reflect.SourceContext\n    9  \n   10  import collection._\n   ..\n  455    }\n  456  \n  457:   def __ifThenElse[T:Manifest](cond: Dyn[Boolean], thenp: => Dyn[T], elsep: => Dyn[T])(implicit pos: SourceContext): Dyn[T] = {\n  458      makeDecision(cond)\n  459      if (cond.static) thenp else elsep\n  460    }\n  461  \n  462:   def __ifThenElse[T:Manifest](cond: Dyn[Boolean], thenp: => Rep[T], elsep: => Rep[T])(implicit pos: SourceContext): Rep[T] = {2\n  463      makeDecision(cond)\n  464      if (cond.static) thenp else elsep\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Equal.scala:\n    4  import java.io.PrintWriter\n    5  import scala.virtualization.lms.util.OverloadHack\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait LiftEquals extends Base {\n    .\n   18    // this occurs because Rep is an object, so it has an == and != method defined by default,\n   19    // so there is no type error to force the implicit conversions\n   20:   def __equal[A,B](a: Rep[A], b: Rep[B])(implicit o: Overloaded1, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = equals(a,b)\n   21:   def __equal[A,B](a: Rep[A], b: Var[B])(implicit o: Overloaded2, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = equals(a, b)\n   22:   def __equal[A,B](a: Var[A], b: Rep[B])(implicit o: Overloaded3, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = equals(a, b)\n   23:   def __equal[A,B](a: Rep[A], b: B)(implicit o: Overloaded4, mA: Manifest[A], mB: Manifest[B], pos: SourceContext): Rep[Boolean] = equals(a, unit(b))\n   24:   def __equal[A,B](a: A, b: Rep[B])(implicit o: Overloaded5, mA: Manifest[A], mB: Manifest[B], pos: SourceContext): Rep[Boolean] = equals(unit(a), b)\n   25:   def __equal[A,B](a: Var[A], b: B)(implicit o: Overloaded6, mA: Manifest[A], mB: Manifest[B], pos: SourceContext): Rep[Boolean] = equals(a, unit(b))\n   26:   def __equal[A,B](a: A, b: Var[B])(implicit o: Overloaded7, mA: Manifest[A], mB: Manifest[B], pos: SourceContext): Rep[Boolean] = equals(unit(a), b)\n   27:   def __equal[A,B](a: Var[A], b: Var[B])(implicit o: Overloaded8, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = equals(a,b)\n   28  \n   29:   def infix_!=[A,B](a: Rep[A], b: Rep[B])(implicit o: Overloaded1, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(a,b)\n   30:   def infix_!=[A,B](a: Rep[A], b: Var[B])(implicit o: Overloaded2, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(a, b)\n   31:   def infix_!=[A,B](a: Var[A], b: Rep[B])(implicit o: Overloaded3, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(a, b)\n   32:   def infix_!=[A,B](a: Rep[A], b: B)(implicit o: Overloaded4, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(a, unit(b))\n   33:   def infix_!=[A,B](a: A, b: Rep[B])(implicit o: Overloaded5, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(unit(a), b)\n   34:   def infix_!=[A,B](a: Var[A], b: B)(implicit o: Overloaded6, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(a, unit(b))\n   35:   def infix_!=[A,B](a: A, b: Var[B])(implicit o: Overloaded7, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(unit(a), b)\n   36:   def infix_!=[A,B](a: Var[A], b: Var[B])(implicit o: Overloaded8, mA: Manifest[A], mB: Manifest[B], pos: SourceContext) : Rep[Boolean] = notequals(a,b)\n   37  \n   38:   def equals[A:Manifest,B:Manifest](a: Rep[A], b: Rep[B])(implicit pos: SourceContext) : Rep[Boolean]\n   39:   def notequals[A:Manifest,B:Manifest](a: Rep[A], b: Rep[B])(implicit pos: SourceContext) : Rep[Boolean]\n   40  }\n   41  \n   ..\n   45    case class NotEqual[A:Manifest,B:Manifest](a: Exp[A], b: Exp[B]) extends Def[Boolean]\n   46  \n   47:   def equals[A:Manifest,B:Manifest](a: Rep[A], b: Rep[B])(implicit pos: SourceContext): Rep[Boolean] = Equal(a,b)\n   48:   def notequals[A:Manifest,B:Manifest](a: Rep[A], b: Rep[B])(implicit pos: SourceContext): Rep[Boolean] = NotEqual(a,b)\n   49  \n   50:   override def mirrorDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = (e match {\n   51      case Equal(a, b) => Equal(f(a),f(b))\n   52      case NotEqual(a, b) => NotEqual(f(a),f(b))\n   ..\n   54    }).asInstanceOf[Def[A]]\n   55  \n   56:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   57      case Equal(a, b) => equals(f(a),f(b))\n   58      case NotEqual(a, b) => notequals(f(a),f(b))\n   ..\n   65  \n   66  trait EqualExpBridgeOpt extends EqualExpBridge {\n   67:   override def equals[A:Manifest,B:Manifest](a: Rep[A], b: Rep[B])(implicit pos: SourceContext): Rep[Boolean] = if (a == b) Const(true) else (a,b) match {\n   68      case (Const(a),Const(b)) => Const(a == b)\n   69      case _ => super.equals(a,b)\n   70    }\n   71  \n   72:   override def notequals[A:Manifest,B:Manifest](a: Rep[A], b: Rep[B])(implicit pos: SourceContext): Rep[Boolean] = if (a == b) Const(false) else (a,b) match {\n   73      case (Const(a),Const(b)) => Const(a != b)\n   74      case _ => super.notequals(a,b)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/ExceptionOps.scala:\n    4  import java.io.PrintWriter\n    5  import internal._\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait ExceptionOps extends Variables {\n    .\n   20    def throw_exception(m: Exp[String]) = reflectEffect(ThrowException(m), Global())    \n   21    \n   22:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   23      case Reflect(ThrowException(s), u, es) => reflectMirrored(Reflect(ThrowException(f(s)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)     \n   24      case _ => super.mirror(e,f)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/ForwardTransformer.scala:\n    3  \n    4  import scala.collection.{immutable,mutable}\n    5: import scala.reflect.SourceContext\n    6  \n    7  trait ForwardTransformer extends internal.AbstractSubstTransformer with internal.FatBlockTraversal { self =>\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/FractionalOps.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  \n    7  trait FractionalOps extends ImplicitOps {\n    8:   def infix_/[A,T](lhs: Rep[T], rhs: Rep[A])(implicit c: A => T, f: Fractional[T], mA: Manifest[A], mT: Manifest[T], pos: SourceContext) = fractional_divide(lhs,implicit_convert[A,T](rhs))\n    9  \n   10:   def fractional_divide[T:Fractional:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[T]\n   11  }\n   12  \n   ..\n   15    case class FractionalDivide[T](lhs: Exp[T], rhs: Exp[T])(implicit val f: Fractional[T], val mT: Manifest[T]) extends Def[T]\n   16  \n   17:   def fractional_divide[T:Fractional:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext) : Rep[T] = FractionalDivide(lhs, rhs)\n   18    \n   19:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   20      case e@FractionalDivide(a,b) => fractional_divide(f(a),f(b))(e.f.asInstanceOf[Fractional[A]],mtype(e.mT),pos)\n   21      case Reflect(e@FractionalDivide(a,b), u, es) => reflectMirrored(Reflect(FractionalDivide(f(a),f(b))(e.f.asInstanceOf[Fractional[A]],mtype(e.mT)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)        \n\n/Users/vjovanov/code/virtualization-lms-core/src/common/FunctionBlocks.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  import scala.virtualization.lms.internal.{Blocks, Effects, AbstractTransformer}\n    7  import scala.virtualization.lms.util.OverloadHack\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Functions.scala:\n    7  import scala.virtualization.lms.util.ClosureCompare\n    8  \n    9: import scala.reflect.SourceContext\n   10  \n   11  trait Functions extends Base {\n   12  \n   13:   def doLambda[A:Manifest,B:Manifest](fun: Rep[A] => Rep[B])(implicit pos: SourceContext): Rep[A => B]\n   14    implicit def fun[A:Manifest,B:Manifest](f: Rep[A] => Rep[B]): Rep[A=>B] = doLambda(f)\n   15  \n   ..\n   17  \n   18    class LambdaOps[A:Manifest,B:Manifest](f: Rep[A => B]) {\n   19:     def apply(x: Rep[A])(implicit pos: SourceContext): Rep[B] = doApply(f,x)\n   20    }\n   21  \n   22:   def doApply[A:Manifest,B:Manifest](fun: Rep[A => B], arg: Rep[A])(implicit pos: SourceContext): Rep[B]\n   23  }\n   24  \n   ..\n   74  \n   75    def unboxedFresh[A:Manifest] : Exp[A] = fresh[A]\n   76:   def unbox[A:Manifest](x : Exp[A])(implicit pos: SourceContext) : Exp[A] = x\n   77  \n   78    def doLambdaDef[A:Manifest,B:Manifest](f: Exp[A] => Exp[B]) : Def[A => B] = {\n   ..\n   83    }\n   84  \n   85:   override def doLambda[A:Manifest,B:Manifest](f: Exp[A] => Exp[B])(implicit pos: SourceContext): Exp[A => B] =\n   86      doLambdaDef(f)\n   87  \n   88:   override def doApply[A:Manifest,B:Manifest](f: Exp[A => B], x: Exp[A])(implicit pos: SourceContext): Exp[B] = {\n   89      val x1 = unbox(x)\n   90      f match {\n   ..\n   99    }\n  100  \n  101:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  102:     case e@Lambda(g,x,y) => toAtom(Lambda(f(g),f(x),f(y))(e.mA,e.mB))(mtype(manifest[A]),implicitly[SourceContext])\n  103:     case e@Apply(g,arg) => doApply(f(g), f(arg))(e.mA,mtype(e.mB),implicitly[SourceContext])\n  104      case Reflect(e@Apply(g,arg), u, es) => reflectMirrored(Reflect(Apply(f(g),f(arg))(e.mA,mtype(e.mB)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n  105      case _ => super.mirror(e,f)\n  ...\n  149    }\n  150  \n  151:   override def unbox[A:Manifest](x : Exp[A])(implicit pos: SourceContext) : Exp[A] = {\n  152      val mA = implicitly[Manifest[A]]\n  153      x match {\n  ...\n  194    }\n  195  \n  196:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  197:     case e@Lambda(g,UnboxedTuple(xs),y) => toAtom(Lambda(f(g),UnboxedTuple(f(xs))(e.mA),f(y))(e.mA,e.mB))(mtype(manifest[A]),implicitly[SourceContext])\n  198      case _ => super.mirror(e,f)\n  199    }).asInstanceOf[Exp[A]]\n  ...\n  202  trait FunctionsRecursiveExp extends FunctionsExp with ClosureCompare {\n  203    var funTable: List[(Sym[_], Any)] = List()\n  204:   override def doLambda[A:Manifest,B:Manifest](f: Exp[A] => Exp[B])(implicit pos: SourceContext): Exp[A => B] = {\n  205      val can = canonicalize(f)\n  206      funTable.find(_._2 == can) match {\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala:\n    6  import scala.collection.mutable.Set\n    7  import java.util.HashMap\n    8: import scala.reflect.SourceContext\n    9  \n   10  trait HashMapOps extends Base {\n   11    object HashMap {\n   12:     def apply[K:Manifest,V:Manifest]()(implicit pos: SourceContext) = hashmap_new[K,V]()\n   13    }\n   14  \n   ..\n   16  \n   17    class hashmapOpsCls[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]]) {\n   18:     def apply(k: Rep[K])(implicit pos: SourceContext) = hashmap_apply(m, k)\n   19:     def update(k: Rep[K], v: Rep[V])(implicit pos: SourceContext) = hashmap_update(m,k,v)\n   20:     def contains(k: Rep[K])(implicit pos: SourceContext) = hashmap_contains(m, k)\n   21:     def size(implicit pos: SourceContext) = hashmap_size(m)\n   22:     def values(implicit pos: SourceContext) = hashmap_values(m)\n   23:     def clear()(implicit pos: SourceContext) = hashmap_clear(m)\n   24:     def keySet(implicit pos: SourceContext) = hashmap_keyset(m)\n   25:     def keys(implicit pos: SourceContext) = hashmap_keys(m)\n   26    }\n   27  \n   28:   def hashmap_new[K:Manifest,V:Manifest]()(implicit pos: SourceContext) : Rep[HashMap[K,V]]\n   29:   def hashmap_apply[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]], k: Rep[K])(implicit pos: SourceContext): Rep[V]\n   30:   def hashmap_update[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]], k: Rep[K], v: Rep[V])(implicit pos: SourceContext): Rep[Unit]\n   31:   def hashmap_unsafe_update[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]], k: Rep[K], v: Rep[V])(implicit pos: SourceContext): Rep[Unit]\n   32:   def hashmap_contains[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]], i: Rep[K])(implicit pos: SourceContext): Rep[Boolean]\n   33:   def hashmap_size[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext): Rep[Int]\n   34:   def hashmap_values[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext): Rep[Iterable[V]]\n   35:   def hashmap_clear[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext): Rep[Unit]\n   36:   def hashmap_keyset[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext): Rep[Set[K]]\n   37:   def hashmap_keys[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext): Rep[Iterable[K]]\n   38  }\n   39  \n   ..\n   53    case class HashMapKeys[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]]) extends HashMapDef[K,V,Iterable[K]]\n   54  \n   55:   def hashmap_new[K:Manifest,V:Manifest]()(implicit pos: SourceContext) = reflectMutable(HashMapNew[K,V]())\n   56:   def hashmap_apply[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]], k: Exp[K])(implicit pos: SourceContext) = HashMapApply(m,k)\n   57:   def hashmap_update[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]], k: Exp[K], v: Exp[V])(implicit pos: SourceContext) = reflectWrite(m)(HashMapUpdate(m,k,v))\n   58:   def hashmap_unsafe_update[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]], k: Exp[K], v: Exp[V])(implicit pos: SourceContext) = reflectEffect(HashMapUpdate(m,k,v))\n   59:   def hashmap_contains[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]], i: Exp[K])(implicit pos: SourceContext) = HashMapContains(m, i)\n   60:   def hashmap_size[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]])(implicit pos: SourceContext) = HashMapSize(m)\n   61:   def hashmap_values[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]])(implicit pos: SourceContext) = HashMapValues(m)\n   62:   def hashmap_clear[K:Manifest,V:Manifest](m: Exp[HashMap[K,V]])(implicit pos: SourceContext) = reflectWrite(m)(HashMapClear(m))\n   63:   def hashmap_keyset[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext) = HashMapKeySet(m)\n   64:   def hashmap_keys[K:Manifest,V:Manifest](m: Rep[HashMap[K,V]])(implicit pos: SourceContext) = HashMapKeys(m)\n   65    \n   66:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = {\n   67      (e match {\n   68        case e@HashMapApply(m,k) => hashmap_apply(f(m),f(k))(e.mK,e.mV,pos)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/IfThenElse.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  import scala.virtualization.lms.internal.{GenericNestedCodegen, GenericFatCodegen, GenerationFailedException}\n    7  \n    8  trait IfThenElse extends Base {\n    9:   def __ifThenElse[T:Manifest](cond: Rep[Boolean], thenp: => Rep[T], elsep: => Rep[T])(implicit pos: SourceContext): Rep[T]\n   10  \n   11    // HACK -- bug in scala-virtualized\n   ..\n   23    case class IfThenElse[T:Manifest](cond: Exp[Boolean], thenp: Exp[T], elsep: Exp[T]) extends Def[T]\n   24  \n   25:   def __ifThenElse[T:Manifest](cond: Rep[Boolean], thenp: => Rep[T], elsep: => Rep[T])(implicit pos: SourceContext) = IfThenElse(cond, thenp, elsep)\n   26  }\n   27  \n   ..\n   37    case class IfThenElse[T:Manifest](cond: Exp[Boolean], thenp: Block[T], elsep: Block[T]) extends AbstractIfThenElse[T]\n   38  \n   39:   override def __ifThenElse[T:Manifest](cond: Rep[Boolean], thenp: => Rep[T], elsep: => Rep[T])(implicit pos: SourceContext) = {\n   40      val a = reifyEffectsHere(thenp)\n   41      val b = reifyEffectsHere(elsep)\n   ..\n   44    }\n   45  \n   46:   def ifThenElse[T:Manifest](cond: Rep[Boolean], thenp: Block[T], elsep: Block[T])(implicit pos: SourceContext) = {\n   47      val ae = summarizeEffects(thenp)\n   48      val be = summarizeEffects(elsep)\n   ..\n   58    }\n   59    \n   60:   override def mirrorDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = e match {\n   61      case IfThenElse(c,a,b) => IfThenElse(f(c),f(a),f(b))\n   62      case _ => super.mirrorDef(e,f)\n   63    }\n   64    \n   65:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = e match {\n   66      case Reflect(IfThenElse(c,a,b), u, es) => \n   67        if (f.hasContext)\n   ..\n  191    // TODO: make reflect(Reify(..)) do the right thing\n  192    \n  193:   override def __ifThenElse[T:Manifest](cond: Rep[Boolean], thenp: => Rep[T], elsep: => Rep[T])(implicit pos: SourceContext) = cond match {\n  194      case Const(true) => thenp\n  195      case Const(false) => elsep\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/ImplicitOps.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  \n    7  trait ImplicitOps extends Base {\n    .\n   12     *  Code-gen for other platforms should implement the conversions.\n   13     **/\n   14:   def implicit_convert[X,Y](x: Rep[X])(implicit c: X => Y, mX: Manifest[X], mY: Manifest[Y], pos: SourceContext) : Rep[Y] // = x.asInstanceOf[Rep[Y]\n   15  }\n   16  \n   ..\n   18    case class ImplicitConvert[X,Y](x: Exp[X])(implicit val mX: Manifest[X], val mY: Manifest[Y]) extends Def[Y]\n   19  \n   20:   def implicit_convert[X,Y](x: Exp[X])(implicit c: X => Y, mX: Manifest[X], mY: Manifest[Y], pos: SourceContext) : Rep[Y] = {\n   21      if (mX == mY) x.asInstanceOf[Rep[Y]] else ImplicitConvert[X,Y](x)\n   22    }\n   23  \n   24:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   25      case im@ImplicitConvert(x) => toAtom(ImplicitConvert(f(x))(im.mX,im.mY))(mtype(manifest[A]),pos)\n   26      case _ => super.mirror(e,f)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/IOOps.scala:\n    5  import scala.virtualization.lms.internal.{GenerationFailedException}\n    6  import util.OverloadHack\n    7: import scala.reflect.SourceContext\n    8  \n    9  // TODO: fine grained effects\n   ..\n   15     */\n   16    object File {\n   17:     def apply(dir: Rep[String])(implicit pos: SourceContext) = obj_file_apply(dir)\n   18    }\n   19:   def infix_getCanonicalFile(f: Rep[File])(implicit pos: SourceContext) = file_getcanonicalfile(f)\n   20:   def infix_getPath(f: Rep[File])(implicit pos: SourceContext) = file_getpath(f)\n   21:   def infix_listFiles(f: Rep[File])(implicit pos: SourceContext) = file_listfiles(f)\n   22  \n   23:   def obj_file_apply(dir: Rep[String])(implicit pos: SourceContext): Rep[File]\n   24:   def file_getcanonicalfile(f: Rep[File])(implicit pos: SourceContext): Rep[File]\n   25:   def file_getpath(f: Rep[File])(implicit pos: SourceContext): Rep[String]\n   26:   def file_listfiles(f: Rep[File])(implicit pos: SourceContext): Rep[Array[File]]\n   27    \n   28    /**\n   ..\n   30     */\n   31    object BufferedReader {\n   32:     def apply(f: Rep[FileReader])(implicit pos: SourceContext) = obj_br_apply(f)\n   33    }\n   34:   def infix_readLine(b: Rep[BufferedReader])(implicit pos: SourceContext) = br_readline(b)\n   35:   def infix_close(b: Rep[BufferedReader])(implicit pos: SourceContext) = br_close(b)\n   36  \n   37:   def obj_br_apply(f: Rep[FileReader])(implicit pos: SourceContext): Rep[BufferedReader]\n   38:   def br_readline(b: Rep[BufferedReader])(implicit pos: SourceContext): Rep[String]\n   39:   def br_close(b: Rep[BufferedReader])(implicit pos: SourceContext): Rep[Unit]\n   40  \n   41    /**\n   ..\n   43     */\n   44    object BufferedWriter {\n   45:     def apply(f: Rep[FileWriter])(implicit pos: SourceContext) = obj_bw_apply(f)    \n   46    }\n   47  \n   48:   def infix_write(b: Rep[BufferedWriter], s: Rep[String])(implicit pos: SourceContext) = bw_write(b,s)\n   49:   def infix_close(b: Rep[BufferedWriter])(implicit o: Overloaded1, pos: SourceContext) = bw_close(b)\n   50  \n   51:   def obj_bw_apply(f: Rep[FileWriter])(implicit pos: SourceContext): Rep[BufferedWriter]\n   52:   def bw_write(b: Rep[BufferedWriter], s: Rep[String])(implicit pos: SourceContext): Rep[Unit]\n   53:   def bw_close(b: Rep[BufferedWriter])(implicit pos: SourceContext): Rep[Unit]\n   54  \n   55    /**\n   ..\n   57     */\n   58    object FileReader {\n   59:     def apply(s: Rep[String])(implicit pos: SourceContext) = obj_fr_apply(s)\n   60    }\n   61:   def obj_fr_apply(s: Rep[String])(implicit pos: SourceContext): Rep[FileReader]\n   62  \n   63    /**\n   ..\n   65     */\n   66    object FileWriter {\n   67:     def apply(s: Rep[String])(implicit pos: SourceContext) = obj_fw_apply(s)\n   68    }\n   69:   def obj_fw_apply(s: Rep[String])(implicit pos: SourceContext): Rep[FileWriter]\n   70  }\n   71  \n   ..\n   86    case class BrClose(b: Exp[BufferedReader]) extends Def[Unit]\n   87  \n   88:   def obj_file_apply(dir: Exp[String])(implicit pos: SourceContext): Exp[File] = reflectEffect(ObjFileApply(dir))\n   89:   def file_getcanonicalfile(f: Exp[File])(implicit pos: SourceContext) = FileGetCanonicalFile(f)\n   90:   def file_getpath(f: Exp[File])(implicit pos: SourceContext) = FileGetPath(f)\n   91:   def file_listfiles(f: Exp[File])(implicit pos: SourceContext) = FileListFiles(f)\n   92    \n   93:   def obj_br_apply(f: Exp[FileReader])(implicit pos: SourceContext): Exp[BufferedReader] = reflectEffect(ObjBrApply(f))\n   94:   def obj_bw_apply(f: Exp[FileWriter])(implicit pos: SourceContext): Exp[BufferedWriter] = reflectEffect(ObjBwApply(f))\n   95:   def obj_fr_apply(s: Exp[String])(implicit pos: SourceContext): Exp[FileReader] = reflectEffect(ObjFrApply(s))\n   96:   def obj_fw_apply(s: Exp[String])(implicit pos: SourceContext): Exp[FileWriter] = reflectEffect(ObjFwApply(s))\n   97  \n   98:   def bw_write(b: Exp[BufferedWriter], s: Exp[String])(implicit pos: SourceContext) = reflectEffect(BwWrite(b,s))\n   99:   def bw_close(b: Exp[BufferedWriter])(implicit pos: SourceContext) = reflectEffect(BwClose(b))\n  100:   def br_readline(b: Exp[BufferedReader])(implicit pos: SourceContext) : Exp[String] = reflectEffect(BrReadline(b))\n  101:   def br_close(b: Exp[BufferedReader])(implicit pos: SourceContext) : Exp[Unit] = reflectEffect(BrClose(b))\n  102    \n  103:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = ({\n  104      e match {\n  105        case Reflect(ObjFrApply(s), u, es) => reflectMirrored(Reflect(ObjFrApply(f(s)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/IterableOps.scala:\n    4  import java.io.PrintWriter\n    5  import internal._\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait IterableOps extends Variables {\n    .\n   15  \n   16    class IterableOpsCls[T:Manifest](a: Rep[Iterable[T]]){\n   17:     def foreach(block: Rep[T] => Rep[Unit])(implicit pos: SourceContext) = iterable_foreach(a, block)\n   18:     def toArray(implicit pos: SourceContext) = iterable_toarray(a)\n   19    }\n   20  \n   21:   def iterable_foreach[T:Manifest](x: Rep[Iterable[T]], block: Rep[T] => Rep[Unit])(implicit pos: SourceContext): Rep[Unit]\n   22:   def iterable_toarray[T:Manifest](x: Rep[Iterable[T]])(implicit pos: SourceContext): Rep[Array[T]]\n   23  }\n   24  \n   ..\n   30    }\n   31    \n   32:   def iterable_foreach[T:Manifest](a: Exp[Iterable[T]], block: Exp[T] => Exp[Unit])(implicit pos: SourceContext): Exp[Unit] = {\n   33      val x = fresh[T]\n   34      val b = reifyEffects(block(x))\n   35      reflectEffect(IterableForeach(a, x, b), summarizeEffects(b).star)\n   36    }\n   37:   def iterable_toarray[T:Manifest](a: Exp[Iterable[T]])(implicit pos: SourceContext) = IterableToArray(a)\n   38  \n   39:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = {\n   40      (e match {\n   41        case e@IterableToArray(x) => iterable_toarray(f(x))(e.m,pos)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala:\n    4  import java.io.PrintWriter\n    5  import scala.virtualization.lms.internal.GenericNestedCodegen\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait ListOps extends Variables {\n    9  \n   10    object List {\n   11:     def apply[A:Manifest](xs: Rep[A]*)(implicit pos: SourceContext) = list_new(xs)\n   12    }\n   13  \n   ..\n   32    }\n   33    \n   34:   def list_new[A:Manifest](xs: Seq[Rep[A]])(implicit pos: SourceContext): Rep[List[A]]\n   35:   def list_fromseq[A:Manifest](xs: Rep[Seq[A]])(implicit pos: SourceContext): Rep[List[A]]  \n   36:   def list_map[A:Manifest,B:Manifest](l: Rep[List[A]], f: Rep[A] => Rep[B])(implicit pos: SourceContext): Rep[List[B]]\n   37:   def list_flatMap[A : Manifest, B : Manifest](xs: Rep[List[A]], f: Rep[A] => Rep[List[B]])(implicit pos: SourceContext): Rep[List[B]]\n   38:   def list_filter[A : Manifest](l: Rep[List[A]], f: Rep[A] => Rep[Boolean])(implicit pos: SourceContext): Rep[List[A]]\n   39:   def list_sortby[A:Manifest,B:Manifest:Ordering](l: Rep[List[A]], f: Rep[A] => Rep[B])(implicit pos: SourceContext): Rep[List[A]]\n   40:   def list_prepend[A:Manifest](l: Rep[List[A]], e: Rep[A])(implicit pos: SourceContext): Rep[List[A]]\n   41:   def list_toarray[A:Manifest](l: Rep[List[A]])(implicit pos: SourceContext): Rep[Array[A]]\n   42:   def list_toseq[A:Manifest](l: Rep[List[A]])(implicit pos: SourceContext): Rep[Seq[A]]\n   43:   def list_concat[A:Manifest](xs: Rep[List[A]], ys: Rep[List[A]])(implicit pos: SourceContext): Rep[List[A]]\n   44:   def list_cons[A:Manifest](x: Rep[A], xs: Rep[List[A]])(implicit pos: SourceContext): Rep[List[A]] // FIXME remove?\n   45:   def list_mkString[A : Manifest](xs: Rep[List[A]])(implicit pos: SourceContext): Rep[String]\n   46:   def list_mkString2[A : Manifest](xs: Rep[List[A]], sep:Rep[String])(implicit pos: SourceContext): Rep[String]\n   47:   def list_head[A:Manifest](xs: Rep[List[A]])(implicit pos: SourceContext): Rep[A]\n   48:   def list_tail[A:Manifest](xs: Rep[List[A]])(implicit pos: SourceContext): Rep[List[A]]\n   49:   def list_isEmpty[A:Manifest](xs: Rep[List[A]])(implicit pos: SourceContext): Rep[Boolean]\n   50  }\n   51  \n   ..\n   68    case class ListIsEmpty[A:Manifest](xs: Rep[List[A]]) extends Def[Boolean]\n   69    \n   70:   def list_new[A:Manifest](xs: Seq[Rep[A]])(implicit pos: SourceContext) = ListNew(xs)\n   71:   def list_fromseq[A:Manifest](xs: Rep[Seq[A]])(implicit pos: SourceContext) = ListFromSeq(xs)\n   72:   def list_map[A:Manifest,B:Manifest](l: Exp[List[A]], f: Exp[A] => Exp[B])(implicit pos: SourceContext) = {\n   73      val a = fresh[A]\n   74      val b = reifyEffects(f(a))\n   75      reflectEffect(ListMap(l, a, b), summarizeEffects(b).star)\n   76    }\n   77:   def list_flatMap[A:Manifest, B:Manifest](l: Exp[List[A]], f: Exp[A] => Exp[List[B]])(implicit pos: SourceContext) = {\n   78      val a = fresh[A]\n   79      val b = reifyEffects(f(a))\n   80      reflectEffect(ListFlatMap(l, a, b), summarizeEffects(b).star)\n   81    }\n   82:   def list_filter[A : Manifest](l: Exp[List[A]], f: Exp[A] => Exp[Boolean])(implicit pos: SourceContext) = {\n   83      val a = fresh[A]\n   84      val b = reifyEffects(f(a))\n   85      reflectEffect(ListFilter(l, a, b), summarizeEffects(b).star)\n   86    }\n   87:   def list_sortby[A:Manifest,B:Manifest:Ordering](l: Exp[List[A]], f: Exp[A] => Exp[B])(implicit pos: SourceContext) = {\n   88      val a = fresh[A]\n   89      val b = reifyEffects(f(a))\n   90      reflectEffect(ListSortBy(l, a, b), summarizeEffects(b).star)\n   91    }\n   92:   def list_toarray[A:Manifest](l: Exp[List[A]])(implicit pos: SourceContext) = ListToArray(l)\n   93:   def list_toseq[A:Manifest](l: Exp[List[A]])(implicit pos: SourceContext) = ListToSeq(l)\n   94:   def list_prepend[A:Manifest](l: Exp[List[A]], e: Exp[A])(implicit pos: SourceContext) = ListPrepend(l,e)\n   95:   def list_concat[A:Manifest](xs: Rep[List[A]], ys: Rep[List[A]])(implicit pos: SourceContext) = ListConcat(xs,ys)\n   96:   def list_cons[A:Manifest](x: Rep[A], xs: Rep[List[A]])(implicit pos: SourceContext) = ListCons(x,xs)\n   97:   def list_mkString[A:Manifest](l: Exp[List[A]])(implicit pos: SourceContext) = ListMkString(l)\n   98:   def list_mkString2[A:Manifest](l: Rep[List[A]], sep:Rep[String])(implicit pos: SourceContext) = ListMkString2(l,sep)\n   99:   def list_head[A:Manifest](xs: Rep[List[A]])(implicit pos: SourceContext) = ListHead(xs)\n  100:   def list_tail[A:Manifest](xs: Rep[List[A]])(implicit pos: SourceContext) = ListTail(xs)\n  101:   def list_isEmpty[A:Manifest](xs: Rep[List[A]])(implicit pos: SourceContext) = ListIsEmpty(xs)\n  102    \n  103:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = {\n  104      (e match {\n  105        case ListNew(xs) => list_new(f(xs))\n  ...\n  134  \n  135  trait ListOpsExpOpt extends ListOpsExp {\n  136:   override def list_concat[A : Manifest](xs1: Exp[List[A]], xs2: Exp[List[A]])(implicit pos: SourceContext): Exp[List[A]] = (xs1, xs2) match {\n  137      case (Def(ListNew(xs1)), Def(ListNew(xs2))) => ListNew(xs1 ++ xs2)\n  138      case (Def(ListNew(Seq())), xs2) => xs2\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Loops.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  import scala.virtualization.lms.internal.{FatBlockTraversal,GenericNestedCodegen,GenericFatCodegen}\n    7  \n    .\n   20    case class SimpleLoop[A](val size: Exp[Int], val v: Sym[Int], val body: Def[A]) extends AbstractLoop[A]\n   21    \n   22:   def simpleLoop[A:Manifest](size: Exp[Int], v: Sym[Int], body: Def[A])(implicit pos: SourceContext): Exp[A] = SimpleLoop(size, v, body)\n   23  \n   24  \n   ..\n   47    // mirroring\n   48  \n   49:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   50      case SimpleLoop(s,v,body: Def[A]) => simpleLoop(f(s),f(v).asInstanceOf[Sym[Int]],mirrorFatDef(body,f))\n   51      case Reflect(SimpleLoop(s,v,body: Def[A]), u, es) if u == Control() => reflectMirrored(Reflect(SimpleLoop(f(s),f(v).asInstanceOf[Sym[Int]],mirrorFatDef(body,f)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos) \n\n/Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala:\n    4  import java.io.PrintWriter\n    5  import internal.{GenericNestedCodegen}\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait MathOps extends Base {\n    9  \n   10    object Math {\n   11:     def ceil(x: Rep[Double])(implicit pos: SourceContext) = math_ceil(x)\n   12:     def floor(x: Rep[Double])(implicit pos: SourceContext) = math_floor(x)\n   13:     def exp(x: Rep[Double])(implicit pos: SourceContext) = math_exp(x)\n   14:     def log(x: Rep[Double])(implicit pos: SourceContext) = math_log(x)\n   15:     def log10(x: Rep[Double])(implicit ctx: SourceContext) = math_log10(x)    \n   16:     def sqrt(x: Rep[Double])(implicit pos: SourceContext) = math_sqrt(x)\n   17:     def sin(x: Rep[Double])(implicit pos: SourceContext) = math_sin(x)\n   18:     def sinh(x: Rep[Double])(implicit ctx: SourceContext) = math_sinh(x)\n   19:     def asin(x: Rep[Double])(implicit ctx: SourceContext) = math_asin(x)\n   20:     def cos(x: Rep[Double])(implicit pos: SourceContext) = math_cos(x)\n   21:     def cosh(x: Rep[Double])(implicit ctx: SourceContext) = math_cosh(x)\n   22:     def acos(x: Rep[Double])(implicit pos: SourceContext) = math_acos(x)\n   23:     def tan(x: Rep[Double])(implicit ctx: SourceContext) = math_tan(x)\n   24:     def tanh(x: Rep[Double])(implicit ctx: SourceContext) = math_tanh(x)      \n   25:     def atan(x: Rep[Double])(implicit pos: SourceContext) = math_atan(x)\n   26:     def atan2(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext) = math_atan2(x,y)\n   27:     def pow(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext) = math_pow(x,y)\n   28:     def abs[A:Manifest:Numeric](x: Rep[A])(implicit pos: SourceContext) = math_abs(x)\n   29:     def max[A:Manifest:Numeric](x: Rep[A], y: Rep[A])(implicit pos: SourceContext) = math_max(x,y)\n   30:     def min[A:Manifest:Numeric](x: Rep[A], y: Rep[A])(implicit pos: SourceContext) = math_min(x,y)\n   31:     def Pi(implicit pos: SourceContext) = math_pi\n   32:     def E(implicit pos: SourceContext) = math_e\n   33    }\n   34  \n   35:   def math_ceil(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   36:   def math_floor(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   37:   def math_exp(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   38:   def math_log(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   39:   def math_log10(x: Rep[Double])(implicit ctx: SourceContext): Rep[Double]  \n   40:   def math_sqrt(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   41:   def math_sin(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   42:   def math_sinh(x: Rep[Double])(implicit ctx: SourceContext): Rep[Double]\n   43:   def math_asin(x: Rep[Double])(implicit ctx: SourceContext): Rep[Double]\n   44:   def math_cos(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   45:   def math_cosh(x: Rep[Double])(implicit ctx: SourceContext): Rep[Double]\n   46:   def math_acos(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   47:   def math_tan(x: Rep[Double])(implicit ctx: SourceContext): Rep[Double]\n   48:   def math_tanh(x: Rep[Double])(implicit ctx: SourceContext): Rep[Double]    \n   49:   def math_atan(x: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   50:   def math_atan2(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext) : Rep[Double]\n   51:   def math_pow(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n   52:   def math_abs[A:Manifest:Numeric](x: Rep[A])(implicit pos: SourceContext) : Rep[A]\n   53:   def math_max[A:Manifest:Numeric](x: Rep[A], y: Rep[A])(implicit pos: SourceContext): Rep[A]\n   54:   def math_min[A:Manifest:Numeric](x: Rep[A], y: Rep[A])(implicit pos: SourceContext): Rep[A]\n   55:   def math_pi(implicit pos: SourceContext): Rep[Double]\n   56:   def math_e(implicit pos: SourceContext): Rep[Double]\n   57  }\n   58  \n   ..\n   81    case class MathE() extends Def[Double]\n   82  \n   83:   def math_ceil(x: Exp[Double])(implicit pos: SourceContext) = MathCeil(x)\n   84:   def math_floor(x: Exp[Double])(implicit pos: SourceContext) = MathFloor(x)\n   85:   def math_exp(x: Exp[Double])(implicit pos: SourceContext) = MathExp(x)\n   86:   def math_log(x: Exp[Double])(implicit pos: SourceContext) = MathLog(x)\n   87:   def math_log10(x: Exp[Double])(implicit ctx: SourceContext) = MathLog10(x)\n   88:   def math_sqrt(x: Exp[Double])(implicit pos: SourceContext) = MathSqrt(x)\n   89:   def math_sin(x: Exp[Double])(implicit pos: SourceContext) = MathSin(x)\n   90:   def math_sinh(x: Exp[Double])(implicit ctx: SourceContext) = MathSinh(x)\n   91:   def math_asin(x: Exp[Double])(implicit ctx: SourceContext) = MathAsin(x)\n   92:   def math_cos(x: Exp[Double])(implicit pos: SourceContext) = MathCos(x)\n   93:   def math_cosh(x: Exp[Double])(implicit ctx: SourceContext) = MathCosh(x)\n   94:   def math_acos(x: Exp[Double])(implicit pos: SourceContext) = MathAcos(x)\n   95:   def math_tan(x: Exp[Double])(implicit ctx: SourceContext) = MathTan(x)\n   96:   def math_tanh(x: Exp[Double])(implicit ctx: SourceContext) = MathTanh(x)    \n   97:   def math_atan(x: Exp[Double])(implicit pos: SourceContext) = MathAtan(x)\n   98:   def math_atan2(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = MathAtan2(x,y)\n   99:   def math_pow(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = MathPow(x,y)\n  100:   def math_abs[A:Manifest:Numeric](x: Exp[A])(implicit pos: SourceContext) = MathAbs(x)\n  101:   def math_max[A:Manifest:Numeric](x: Exp[A], y: Exp[A])(implicit pos: SourceContext) = MathMax(x, y)\n  102:   def math_min[A:Manifest:Numeric](x: Exp[A], y: Exp[A])(implicit pos: SourceContext) = MathMin(x, y)\n  103:   def math_pi(implicit pos: SourceContext) = MathPi()\n  104:   def math_e(implicit pos: SourceContext) = MathE()  \n  105  \n  106:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = ({\n  107      implicit var a: Numeric[A] = null // hack!! need to store it in Def instances??\n  108      e match {\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/MiscOps.scala:\n    4  import java.io.PrintWriter\n    5  import scala.virtualization.lms.internal._\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait MiscOps extends Base {\n    .\n   12     */\n   13  \n   14:   def print(x: Rep[Any])(implicit pos: SourceContext): Rep[Unit]\n   15:   def println(x: Rep[Any])(implicit pos: SourceContext): Rep[Unit]\n   16:   def printf(f: String, x: Rep[Any]*)(implicit pos: SourceContext): Rep[Unit]\n   17  \n   18    // TODO: there is no way to override this behavior\n   19:   def exit(status: Int)(implicit pos: SourceContext): Rep[Nothing] = exit(unit(status))\n   20:   def exit()(implicit pos: SourceContext): Rep[Nothing] = exit(0)\n   21:   def exit(status: Rep[Int])(implicit pos: SourceContext): Rep[Nothing]\n   22:   def error(s: Rep[String])(implicit pos: SourceContext): Rep[Nothing]\n   23:   def returnL(x: Rep[Any])(implicit pos: SourceContext): Rep[Unit]\n   24  }\n   25  \n   ..\n   34    case class Return(x: Exp[Any]) extends Def[Unit]\n   35  \n   36:   def print(x: Exp[Any])(implicit pos: SourceContext) = reflectEffect(Print(x)) // TODO: simple effect\n   37:   def println(x: Exp[Any])(implicit pos: SourceContext) = reflectEffect(PrintLn(x)) // TODO: simple effect\n   38:   def printf(f: String, x: Rep[Any]*)(implicit pos: SourceContext): Rep[Unit] = reflectEffect(PrintF(f, x.toList))\n   39:   def exit(s: Exp[Int])(implicit pos: SourceContext) = reflectEffect(Exit(s))\n   40:   def error(s: Exp[String])(implicit pos: SourceContext) = reflectEffect(Error(s))\n   41:   def returnL(x: Exp[Any])(implicit pos: SourceContext) = {\n   42      printlog(\"warning: staged return statements are unlikely to work because the surrounding source method does not exist in the generated code.\")\n   43      printsrc(raw\"in ${quotePos(x)}\")\n   ..\n   45    }\n   46    \n   47:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   48      case Reflect(Error(x), u, es) => reflectMirrored(Reflect(Error(f(x)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n   49      case Reflect(Print(x), u, es) => reflectMirrored(Reflect(Print(f(x)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/NumericOps.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  \n    7  trait LiftNumeric {\n    .\n   20    \n   21    class NumericOpsCls[T:Numeric:Manifest](lhs: Rep[T]){\n   22:     def +[A](rhs: A)(implicit c: A => T, pos: SourceContext) = numeric_plus(lhs,unit(c(rhs)))\n   23:     def +(rhs: Rep[T])(implicit pos: SourceContext) = numeric_plus(lhs,rhs)\n   24:     def -(rhs: Rep[T])(implicit pos: SourceContext) = numeric_minus(lhs,rhs)\n   25:     def *(rhs: Rep[T])(implicit pos: SourceContext) = numeric_times(lhs,rhs)\n   26:     def /(rhs: Rep[T])(implicit pos: SourceContext) = numeric_divide(lhs,rhs)\n   27    }\n   28  \n   29:   def numeric_plus[T:Numeric:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[T]\n   30:   def numeric_minus[T:Numeric:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[T]\n   31:   def numeric_times[T:Numeric:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[T]\n   32:   def numeric_divide[T:Numeric:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[T]\n   33    //def numeric_negate[T:Numeric](x: T): Rep[T]\n   34    //def numeric_abs[T:Numeric](x: T): Rep[T]\n   ..\n   49    case class NumericDivide[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T]) extends DefMN[T]\n   50  \n   51:   def numeric_plus[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext) : Exp[T] = NumericPlus(lhs, rhs)\n   52:   def numeric_minus[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext) : Exp[T] = NumericMinus(lhs, rhs)\n   53:   def numeric_times[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext) : Exp[T] = NumericTimes(lhs, rhs)\n   54:   def numeric_divide[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext) : Exp[T] = NumericDivide(lhs, rhs)\n   55    \n   56:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   57      case e@NumericPlus(l,r) => numeric_plus(f(l), f(r))(e.aev.asInstanceOf[Numeric[A]], mtype(e.mev), pos)\n   58      case e@NumericMinus(l,r) => numeric_minus(f(l), f(r))(e.aev.asInstanceOf[Numeric[A]], mtype(e.mev), pos)\n   ..\n   68    this: PrimitiveOpsExp =>\n   69    \n   70:   override def numeric_plus[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[T] = (lhs,rhs) match {\n   71      case (Const(x), Const(y)) => Const(implicitly[Numeric[T]].plus(x,y))\n   72      case (Const(x), y) if x == implicitly[Numeric[T]].zero => y\n   ..\n   74      case _ => super.numeric_plus(lhs,rhs)\n   75    }\n   76:   override def numeric_minus[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[T] = (lhs,rhs) match {\n   77      case (Const(x), Const(y)) => Const(implicitly[Numeric[T]].minus(x,y))\n   78      case _ => super.numeric_minus(lhs,rhs)\n   79    }\n   80:   override def numeric_times[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[T] = (lhs,rhs) match {\n   81      case (Const(x), Const(y)) => Const(implicitly[Numeric[T]].times(x,y))\n   82      case (Const(x), y) if x == implicitly[Numeric[T]].zero => Const(x)\n   ..\n   86      case _ => super.numeric_times(lhs,rhs)\n   87    }\n   88:   override def numeric_divide[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[T] = (lhs,rhs) match {\n   89      // CAVEAT: Numeric doesn't have .div, Fractional has\n   90      case (Const(x), Const(y)) => Const(implicitly[Numeric[T]].asInstanceOf[Fractional[T]].div(x,y))\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/ObjectOps.scala:\n    5  import scala.virtualization.lms.util.OverloadHack\n    6  import scala.virtualization.lms.internal.{GenerationFailedException}\n    7: import scala.reflect.SourceContext\n    8  \n    9  trait ObjectOps extends Variables with OverloadHack {\n   10:   def infix_toString(lhs: Rep[Any])(implicit pos: SourceContext) = object_tostring(lhs)\n   11:   def infix_ToString(lhs: Rep[Any])(implicit pos: SourceContext) = object_tostring(lhs)\n   12:   def infix_unsafeImmutable[A:Manifest](lhs: Rep[A])(implicit pos: SourceContext) = object_unsafe_immutable(lhs)\n   13:   def infix_unsafeMutable[A:Manifest](lhs: Rep[A])(implicit pos: SourceContext) = object_unsafe_mutable(lhs)\n   14  \n   15:   def object_tostring(lhs: Rep[Any])(implicit pos: SourceContext): Rep[String]\n   16:   def object_unsafe_immutable[A:Manifest](lhs: Rep[A])(implicit pos: SourceContext): Rep[A]\n   17:   def object_unsafe_mutable[A:Manifest](lhs: Rep[A])(implicit pos: SourceContext): Rep[A]\n   18  }\n   19  \n   ..\n   27   }\n   28  \n   29:   def object_tostring(lhs: Exp[Any])(implicit pos: SourceContext) = ObjectToString(lhs)\n   30:   def object_unsafe_immutable[A:Manifest](lhs: Exp[A])(implicit pos: SourceContext) = lhs match {\n   31      // INVESTIGATE: there was an issue where Const(0).unsafeImmutable == Const(0.0). How is this possible? CSE with primitive widening?\n   32      case c@Const(x) => c\n   33      case _ => ObjectUnsafeImmutable(lhs)\n   34    }\n   35:   def object_unsafe_mutable[A:Manifest](lhs: Exp[A])(implicit pos: SourceContext) = reflectMutable(ObjectUnsafeMutable(lhs))\n   36  \n   37    //////////////\n   38    // mirroring\n   39  \n   40:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   41      case e@ObjectUnsafeImmutable(a) => object_unsafe_immutable(f(a))(mtype(e.m),pos)\n   42      case e@ObjectToString(a) => object_tostring(f(a))\n   ..\n   71  \n   72  trait ObjectOpsExpOpt extends ObjectOpsExp {\n   73:   override def object_tostring(lhs: Exp[Any])(implicit pos: SourceContext) = {\n   74      if (lhs.tp <:< manifest[String]) lhs.asInstanceOf[Exp[String]]\n   75      else super.object_tostring(lhs)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/OrderingOps.scala:\n    4  import java.io.PrintWriter\n    5  import scala.virtualization.lms.util.OverloadHack\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait OrderingOps extends Base with Variables with OverloadHack {\n    .\n   13  \n   14    class OrderingOpsCls[T:Ordering:Manifest](lhs: Rep[T]){\n   15:     def <       (rhs: Rep[T])(implicit pos: SourceContext) = ordering_lt(lhs, rhs)\n   16:     def <=      (rhs: Rep[T])(implicit pos: SourceContext) = ordering_lteq(lhs, rhs)\n   17:     def >       (rhs: Rep[T])(implicit pos: SourceContext) = ordering_gt(lhs, rhs)\n   18:     def >=      (rhs: Rep[T])(implicit pos: SourceContext) = ordering_gteq(lhs, rhs)\n   19:     def equiv   (rhs: Rep[T])(implicit pos: SourceContext) = ordering_equiv(lhs, rhs)\n   20:     def max     (rhs: Rep[T])(implicit pos: SourceContext) = ordering_max(lhs, rhs)\n   21:     def min     (rhs: Rep[T])(implicit pos: SourceContext) = ordering_min(lhs, rhs)\n   22:     def compare (rhs: Rep[T])(implicit pos: SourceContext) = ordering_compare(lhs, rhs)\n   23  \n   24:     def <       [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_lt(lhs, c(rhs))\n   25:     def <=      [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_lteq(lhs, c(rhs))\n   26:     def >       [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_gt(lhs, c(rhs))\n   27:     def >=      [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_gteq(lhs, c(rhs))\n   28:     def equiv   [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_equiv(lhs, c(rhs))\n   29:     def max     [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_max(lhs, c(rhs))\n   30:     def min     [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_min(lhs, c(rhs))\n   31:     def compare [B](rhs: B)(implicit c: B => Rep[T], pos: SourceContext) = ordering_compare(lhs, c(rhs))\n   32    }\n   33  \n   34:   def ordering_lt      [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Boolean]\n   35:   def ordering_lteq    [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Boolean]\n   36:   def ordering_gt      [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Boolean]\n   37:   def ordering_gteq    [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Boolean]\n   38:   def ordering_equiv   [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Boolean]\n   39:   def ordering_max     [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[T]\n   40:   def ordering_min     [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[T]\n   41:   def ordering_compare [T:Ordering:Manifest](lhs: Rep[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Int]\n   42  }\n   43  \n   ..\n   57    case class OrderingCompare [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T]) extends DefMN[T,Int]\n   58  \n   59:   def ordering_lt     [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = OrderingLT(lhs,rhs)\n   60:   def ordering_lteq   [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = OrderingLTEQ(lhs,rhs)\n   61:   def ordering_gt     [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = OrderingGT(lhs,rhs)\n   62:   def ordering_gteq   [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = OrderingGTEQ(lhs,rhs)\n   63:   def ordering_equiv  [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = OrderingEquiv(lhs,rhs)\n   64:   def ordering_max    [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[T]       = OrderingMax(lhs,rhs)\n   65:   def ordering_min    [T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[T]       = OrderingMin(lhs,rhs)\n   66:   def ordering_compare[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Int]     = OrderingCompare(lhs,rhs)\n   67  \n   68:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   69      case e@OrderingLT(a,b)                      => ordering_lt(f(a),f(b))(e.aev,e.mev,pos)\n   70      case e@OrderingLTEQ(a,b)                    => ordering_lteq(f(a),f(b))(e.aev,e.mev,pos)\n   ..\n   92  trait OrderingOpsExpOpt extends OrderingOpsExp {\n   93  \n   94:   override def ordering_lt[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = (lhs, rhs) match {\n   95      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].lt(a, b))\n   96      case (a, b) if a.equals(b) => Const(false)\n   ..\n   98    }\n   99  \n  100:   override def ordering_lteq[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = (lhs, rhs) match {\n  101      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].lteq(a, b))\n  102      case (a, b) if a.equals(b) => Const(true)\n  ...\n  104    }\n  105  \n  106:   override def ordering_gt[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = (lhs, rhs) match {\n  107      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].gt(a, b))\n  108      case (a, b) if a.equals(b) => Const(false)\n  ...\n  110    }\n  111  \n  112:   override def ordering_gteq[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = (lhs, rhs) match {\n  113      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].gteq(a, b))\n  114      case (a, b) if a.equals(b) => Const(true)\n  ...\n  116    }\n  117  \n  118:   override def ordering_equiv[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Boolean] = (lhs, rhs) match {\n  119      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].equiv(a, b))\n  120      case (a, b) if a.equals(b) => Const(true)\n  ...\n  122    }\n  123  \n  124:   override def ordering_max[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[T] = (lhs, rhs) match {\n  125      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].max(a, b))\n  126      case (a, b) if a.equals(b) => a\n  ...\n  128    }\n  129  \n  130:   override def ordering_min[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[T] = (lhs, rhs) match {\n  131      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].min(a, b))\n  132      case (a, b) if a.equals(b) => a\n  ...\n  134    }\n  135  \n  136:   override def ordering_compare[T:Ordering:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Rep[Int] = (lhs, rhs) match {\n  137      case (Const(a), Const(b)) => Const(implicitly[Ordering[T]].compare(a, b))\n  138      case (a, b) if a.equals(b) => Const[Int](0)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala:\n    5  \n    6  import scala.virtualization.lms.util.OverloadHack\n    7: import scala.reflect.SourceContext\n    8  \n    9  trait LiftPrimitives {\n   ..\n   41     * Avoids certain fragile behavior, including compiler crashes and some erroneous or inaccessible type errors.\n   42     */  \n   43:   def infix_-(lhs: Int, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Int] = int_minus(unit(lhs), rhs)\n   44:   def infix_-(lhs: Int, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_minus(unit(lhs), rhs)\n   45:   def infix_-(lhs: Int, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_minus(unit(lhs), rhs)\n   46:   def infix_-(lhs: Float, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Float] = float_minus(unit(lhs),rhs)  \n   47:   def infix_-(lhs: Float, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_minus(unit(lhs), rhs)\n   48:   def infix_-(lhs: Float, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_minus(unit(lhs), rhs)\n   49:   def infix_-(lhs: Double, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Double] = double_minus(unit(lhs),rhs)  \n   50:   def infix_-(lhs: Double, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Double] = double_minus(unit(lhs),rhs)\n   51:   def infix_-(lhs: Double, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_minus(unit(lhs),rhs)\n   52:   def infix_-(lhs: Rep[Int], rhs: Int)(implicit ctx: SourceContext): Rep[Int] = int_minus(lhs, unit(rhs))  \n   53:   def infix_-(lhs: Rep[Int], rhs: Double)(implicit ctx: SourceContext): Rep[Double] = double_minus(lhs, unit(rhs))\n   54:   def infix_-(lhs: Rep[Int], rhs: Float)(implicit ctx: SourceContext): Rep[Float] = float_minus(lhs, unit(rhs))\n   55:   def infix_-(lhs: Rep[Float], rhs: Int)(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_minus(lhs, unit(rhs))\n   56:   def infix_-(lhs: Rep[Float], rhs: Float)(implicit o: Overloaded2, ctx: SourceContext): Rep[Float] = float_minus(lhs, unit(rhs))\n   57:   def infix_-(lhs: Rep[Float], rhs: Double)(implicit o: Overloaded3, ctx: SourceContext): Rep[Double] = double_minus(lhs, unit(rhs))\n   58:   def infix_-(lhs: Rep[Double], rhs: Int)(implicit o: Overloaded4, ctx: SourceContext): Rep[Double] = double_minus(lhs, unit(rhs))\n   59:   def infix_-(lhs: Rep[Double], rhs: Float)(implicit o: Overloaded5, ctx: SourceContext): Rep[Double] = double_minus(lhs, unit(rhs))\n   60:   def infix_-(lhs: Rep[Double], rhs: Double)(implicit o: Overloaded6, ctx: SourceContext): Rep[Double] = double_minus(lhs, unit(rhs))\n   61:   def infix_-(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, ctx: SourceContext): Rep[Int] = int_minus(lhs, rhs)\n   62:   def infix_-(lhs: Rep[Int], rhs: Rep[Float])(implicit o: Overloaded2, ctx: SourceContext): Rep[Float] = float_minus(repIntToRepFloat(lhs), rhs)\n   63:   def infix_-(lhs: Rep[Int], rhs: Rep[Double])(implicit o: Overloaded3, ctx: SourceContext): Rep[Double] = double_minus(repIntToRepDouble(lhs), rhs)\n   64:   def infix_-(lhs: Rep[Float], rhs: Rep[Int])(implicit o: Overloaded4, ctx: SourceContext): Rep[Float] = float_minus(lhs,repIntToRepFloat(rhs))  \n   65:   def infix_-(lhs: Rep[Float], rhs: Rep[Float])(implicit o: Overloaded5, ctx: SourceContext): Rep[Float] = float_minus(lhs, rhs)\n   66:   def infix_-(lhs: Rep[Float], rhs: Rep[Double])(implicit o: Overloaded6, ctx: SourceContext): Rep[Double] = double_minus(repFloatToRepDouble(lhs), rhs)\n   67:   def infix_-(lhs: Rep[Double], rhs: Rep[Int])(implicit o: Overloaded7, ctx: SourceContext): Rep[Double] = double_minus(lhs,repIntToRepDouble(rhs))  \n   68:   def infix_-(lhs: Rep[Double], rhs: Rep[Float])(implicit o: Overloaded8, ctx: SourceContext): Rep[Double] = double_minus(lhs,repFloatToRepDouble(rhs))\n   69:   def infix_-(lhs: Rep[Double], rhs: Rep[Double])(implicit o: Overloaded9, ctx: SourceContext): Rep[Double] = double_minus(lhs,rhs)    \n   70  \n   71:   def infix_+(lhs: Int, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Int] = int_plus(unit(lhs), rhs)\n   72:   def infix_+(lhs: Int, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_plus(unit(lhs), rhs)\n   73:   def infix_+(lhs: Int, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_plus(unit(lhs), rhs)\n   74:   def infix_+(lhs: Float, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Float] = float_plus(unit(lhs),rhs)  \n   75:   def infix_+(lhs: Float, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_plus(unit(lhs), rhs)\n   76:   def infix_+(lhs: Float, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_plus(unit(lhs), rhs)\n   77:   def infix_+(lhs: Double, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Double] = double_plus(unit(lhs),rhs)  \n   78:   def infix_+(lhs: Double, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Double] = double_plus(unit(lhs),rhs)\n   79:   def infix_+(lhs: Double, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_plus(unit(lhs),rhs)\n   80:   def infix_+(lhs: Rep[Int], rhs: Int)(implicit ctx: SourceContext): Rep[Int] = int_plus(lhs, unit(rhs))  \n   81:   def infix_+(lhs: Rep[Int], rhs: Double)(implicit ctx: SourceContext): Rep[Double] = double_plus(lhs, unit(rhs))\n   82:   def infix_+(lhs: Rep[Int], rhs: Float)(implicit ctx: SourceContext): Rep[Float] = float_plus(lhs, unit(rhs))\n   83:   def infix_+(lhs: Rep[Float], rhs: Int)(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_plus(lhs, unit(rhs))\n   84:   def infix_+(lhs: Rep[Float], rhs: Float)(implicit o: Overloaded2, ctx: SourceContext): Rep[Float] = float_plus(lhs, unit(rhs))\n   85:   def infix_+(lhs: Rep[Float], rhs: Double)(implicit o: Overloaded3, ctx: SourceContext): Rep[Double] = double_plus(lhs, unit(rhs))\n   86:   def infix_+(lhs: Rep[Double], rhs: Int)(implicit o: Overloaded4, ctx: SourceContext): Rep[Double] = double_plus(lhs, unit(rhs))\n   87:   def infix_+(lhs: Rep[Double], rhs: Float)(implicit o: Overloaded5, ctx: SourceContext): Rep[Double] = double_plus(lhs, unit(rhs))\n   88:   def infix_+(lhs: Rep[Double], rhs: Double)(implicit o: Overloaded6, ctx: SourceContext): Rep[Double] = double_plus(lhs, unit(rhs))\n   89:   def infix_+(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded15, ctx: SourceContext): Rep[Int] = int_plus(lhs, rhs)\n   90:   def infix_+(lhs: Rep[Int], rhs: Rep[Float])(implicit o: Overloaded16, ctx: SourceContext): Rep[Float] = float_plus(repIntToRepFloat(lhs), rhs)\n   91:   def infix_+(lhs: Rep[Int], rhs: Rep[Double])(implicit o: Overloaded17, ctx: SourceContext): Rep[Double] = double_plus(repIntToRepDouble(lhs), rhs)\n   92:   def infix_+(lhs: Rep[Float], rhs: Rep[Int])(implicit o: Overloaded18, ctx: SourceContext): Rep[Float] = float_plus(lhs,repIntToRepFloat(rhs))  \n   93:   def infix_+(lhs: Rep[Float], rhs: Rep[Float])(implicit o: Overloaded19, ctx: SourceContext): Rep[Float] = float_plus(lhs, rhs)\n   94:   def infix_+(lhs: Rep[Float], rhs: Rep[Double])(implicit o: Overloaded20, ctx: SourceContext): Rep[Double] = double_plus(repFloatToRepDouble(lhs), rhs)\n   95:   def infix_+(lhs: Rep[Double], rhs: Rep[Int])(implicit o: Overloaded21, ctx: SourceContext): Rep[Double] = double_plus(lhs,repIntToRepDouble(rhs))  \n   96:   def infix_+(lhs: Rep[Double], rhs: Rep[Float])(implicit o: Overloaded22, ctx: SourceContext): Rep[Double] = double_plus(lhs,repFloatToRepDouble(rhs))\n   97:   def infix_+(lhs: Rep[Double], rhs: Rep[Double])(implicit o: Overloaded23, ctx: SourceContext): Rep[Double] = double_plus(lhs,rhs)    \n   98  \n   99:   def infix_*(lhs: Int, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Int] = int_times(unit(lhs), rhs)\n  100:   def infix_*(lhs: Int, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_times(unit(lhs), rhs)\n  101:   def infix_*(lhs: Int, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_times(unit(lhs), rhs)\n  102:   def infix_*(lhs: Float, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Float] = float_times(unit(lhs),rhs)  \n  103:   def infix_*(lhs: Float, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_times(unit(lhs), rhs)\n  104:   def infix_*(lhs: Float, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_times(unit(lhs), rhs)\n  105:   def infix_*(lhs: Double, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Double] = double_times(unit(lhs),rhs)  \n  106:   def infix_*(lhs: Double, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Double] = double_times(unit(lhs),rhs)\n  107:   def infix_*(lhs: Double, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_times(unit(lhs),rhs)\n  108:   def infix_*(lhs: Rep[Int], rhs: Int)(implicit ctx: SourceContext): Rep[Int] = int_times(lhs, unit(rhs))  \n  109:   def infix_*(lhs: Rep[Int], rhs: Double)(implicit ctx: SourceContext): Rep[Double] = double_times(lhs, unit(rhs))\n  110:   def infix_*(lhs: Rep[Int], rhs: Float)(implicit ctx: SourceContext): Rep[Float] = float_times(lhs, unit(rhs))\n  111:   def infix_*(lhs: Rep[Float], rhs: Int)(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_times(lhs, unit(rhs))\n  112:   def infix_*(lhs: Rep[Float], rhs: Float)(implicit o: Overloaded2, ctx: SourceContext): Rep[Float] = float_times(lhs, unit(rhs))\n  113:   def infix_*(lhs: Rep[Float], rhs: Double)(implicit o: Overloaded3, ctx: SourceContext): Rep[Double] = double_times(lhs, unit(rhs))\n  114:   def infix_*(lhs: Rep[Double], rhs: Int)(implicit o: Overloaded4, ctx: SourceContext): Rep[Double] = double_times(lhs, unit(rhs))\n  115:   def infix_*(lhs: Rep[Double], rhs: Float)(implicit o: Overloaded5, ctx: SourceContext): Rep[Double] = double_times(lhs, unit(rhs))\n  116:   def infix_*(lhs: Rep[Double], rhs: Double)(implicit o: Overloaded6, ctx: SourceContext): Rep[Double] = double_times(lhs, unit(rhs))\n  117:   def infix_*(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, ctx: SourceContext): Rep[Int] = int_times(lhs, rhs)\n  118:   def infix_*(lhs: Rep[Int], rhs: Rep[Float])(implicit o: Overloaded2, ctx: SourceContext): Rep[Float] = float_times(repIntToRepFloat(lhs), rhs)\n  119:   def infix_*(lhs: Rep[Int], rhs: Rep[Double])(implicit o: Overloaded3, ctx: SourceContext): Rep[Double] = double_times(repIntToRepDouble(lhs), rhs)\n  120:   def infix_*(lhs: Rep[Float], rhs: Rep[Int])(implicit o: Overloaded4, ctx: SourceContext): Rep[Float] = float_times(lhs,repIntToRepFloat(rhs))  \n  121:   def infix_*(lhs: Rep[Float], rhs: Rep[Float])(implicit o: Overloaded5, ctx: SourceContext): Rep[Float] = float_times(lhs, rhs)\n  122:   def infix_*(lhs: Rep[Float], rhs: Rep[Double])(implicit o: Overloaded6, ctx: SourceContext): Rep[Double] = double_times(repFloatToRepDouble(lhs), rhs)\n  123:   def infix_*(lhs: Rep[Double], rhs: Rep[Int])(implicit o: Overloaded7, ctx: SourceContext): Rep[Double] = double_times(lhs,repIntToRepDouble(rhs))  \n  124:   def infix_*(lhs: Rep[Double], rhs: Rep[Float])(implicit o: Overloaded8, ctx: SourceContext): Rep[Double] = double_times(lhs,repFloatToRepDouble(rhs))\n  125:   def infix_*(lhs: Rep[Double], rhs: Rep[Double])(implicit o: Overloaded9, ctx: SourceContext): Rep[Double] = double_times(lhs,rhs)    \n  126  \n  127:   def infix_/(lhs: Int, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Int] = int_divide(unit(lhs), rhs)\n  128:   def infix_/(lhs: Int, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_divide(unit(lhs), rhs)\n  129:   def infix_/(lhs: Int, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_divide(unit(lhs), rhs)\n  130:   def infix_/(lhs: Float, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Float] = float_divide(unit(lhs),rhs)  \n  131:   def infix_/(lhs: Float, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_divide(unit(lhs), rhs)\n  132:   def infix_/(lhs: Float, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_divide(unit(lhs), rhs)\n  133:   def infix_/(lhs: Double, rhs: Rep[Int])(implicit ctx: SourceContext): Rep[Double] = double_divide(unit(lhs),rhs)  \n  134:   def infix_/(lhs: Double, rhs: Rep[Float])(implicit o: Overloaded1, ctx: SourceContext): Rep[Double] = double_divide(unit(lhs),rhs)\n  135:   def infix_/(lhs: Double, rhs: Rep[Double])(implicit o: Overloaded2, ctx: SourceContext): Rep[Double] = double_divide(unit(lhs),rhs)\n  136:   def infix_/(lhs: Rep[Int], rhs: Int)(implicit ctx: SourceContext): Rep[Int] = int_divide(lhs, unit(rhs))  \n  137:   def infix_/(lhs: Rep[Int], rhs: Double)(implicit ctx: SourceContext): Rep[Double] = double_divide(lhs, unit(rhs))\n  138:   def infix_/(lhs: Rep[Int], rhs: Float)(implicit ctx: SourceContext): Rep[Float] = float_divide(lhs, unit(rhs))\n  139:   def infix_/(lhs: Rep[Float], rhs: Int)(implicit o: Overloaded1, ctx: SourceContext): Rep[Float] = float_divide(lhs, unit(rhs))\n  140:   def infix_/(lhs: Rep[Float], rhs: Float)(implicit o: Overloaded2, ctx: SourceContext): Rep[Float] = float_divide(lhs, unit(rhs))\n  141:   def infix_/(lhs: Rep[Float], rhs: Double)(implicit o: Overloaded3, ctx: SourceContext): Rep[Double] = double_divide(lhs, unit(rhs))\n  142:   def infix_/(lhs: Rep[Double], rhs: Int)(implicit o: Overloaded4, ctx: SourceContext): Rep[Double] = double_divide(lhs, unit(rhs))\n  143:   def infix_/(lhs: Rep[Double], rhs: Float)(implicit o: Overloaded5, ctx: SourceContext): Rep[Double] = double_divide(lhs, unit(rhs))\n  144:   def infix_/(lhs: Rep[Double], rhs: Double)(implicit o: Overloaded6, ctx: SourceContext): Rep[Double] = double_divide(lhs, unit(rhs))\n  145:   def infix_/(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, ctx: SourceContext): Rep[Int] = int_divide(lhs, rhs)\n  146:   def infix_/(lhs: Rep[Int], rhs: Rep[Float])(implicit o: Overloaded2, ctx: SourceContext): Rep[Float] = float_divide(repIntToRepFloat(lhs), rhs)\n  147:   def infix_/(lhs: Rep[Int], rhs: Rep[Double])(implicit o: Overloaded3, ctx: SourceContext): Rep[Double] = double_divide(repIntToRepDouble(lhs), rhs)\n  148:   def infix_/(lhs: Rep[Float], rhs: Rep[Int])(implicit o: Overloaded4, ctx: SourceContext): Rep[Float] = float_divide(lhs,repIntToRepFloat(rhs))  \n  149:   def infix_/(lhs: Rep[Float], rhs: Rep[Float])(implicit o: Overloaded5, ctx: SourceContext): Rep[Float] = float_divide(lhs, rhs)\n  150:   def infix_/(lhs: Rep[Float], rhs: Rep[Double])(implicit o: Overloaded6, ctx: SourceContext): Rep[Double] = double_divide(repFloatToRepDouble(lhs), rhs)\n  151:   def infix_/(lhs: Rep[Double], rhs: Rep[Int])(implicit o: Overloaded7, ctx: SourceContext): Rep[Double] = double_divide(lhs,repIntToRepDouble(rhs))  \n  152:   def infix_/(lhs: Rep[Double], rhs: Rep[Float])(implicit o: Overloaded8, ctx: SourceContext): Rep[Double] = double_divide(lhs,repFloatToRepDouble(rhs))\n  153:   def infix_/(lhs: Rep[Double], rhs: Rep[Double])(implicit o: Overloaded9, ctx: SourceContext): Rep[Double] = double_divide(lhs,rhs)      \n  154  \n  155    /**\n  ...\n  161    \n  162    object Double {\n  163:     def parseDouble(s: Rep[String])(implicit pos: SourceContext) = obj_double_parse_double(s)\n  164:     def PositiveInfinity(implicit pos: SourceContext) = obj_double_positive_infinity\n  165:     def NegativeInfinity(implicit pos: SourceContext) = obj_double_negative_infinity\n  166:     def MinValue(implicit pos: SourceContext) = obj_double_min_value\n  167:     def MaxValue(implicit pos: SourceContext) = obj_double_max_value\n  168    }\n  169  \n  170    class DoubleOpsCls(lhs: Rep[Double]){\n  171:     def floatValue()(implicit pos: SourceContext) = double_float_value(lhs)\n  172:     def toInt(implicit pos: SourceContext) = double_to_int(lhs)\n  173:     def toFloat(implicit pos: SourceContext) = double_to_float(lhs)\n  174    }\n  175  \n  176:   def obj_double_parse_double(s: Rep[String])(implicit pos: SourceContext): Rep[Double]\n  177:   def obj_double_positive_infinity(implicit pos: SourceContext): Rep[Double]\n  178:   def obj_double_negative_infinity(implicit pos: SourceContext): Rep[Double]\n  179:   def obj_double_min_value(implicit pos: SourceContext): Rep[Double]\n  180:   def obj_double_max_value(implicit pos: SourceContext): Rep[Double]\n  181:   def double_float_value(lhs: Rep[Double])(implicit pos: SourceContext): Rep[Float]\n  182:   def double_plus(lhs: Rep[Double], rhs: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n  183:   def double_minus(lhs: Rep[Double], rhs: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n  184:   def double_times(lhs: Rep[Double], rhs: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n  185:   def double_divide(lhs: Rep[Double], rhs: Rep[Double])(implicit pos: SourceContext): Rep[Double]  \n  186:   def double_to_int(lhs: Rep[Double])(implicit pos: SourceContext): Rep[Int]\n  187:   def double_to_float(lhs: Rep[Double])(implicit pos: SourceContext): Rep[Float]\n  188    \n  189    /**\n  ...\n  191     */\n  192    object Float {\n  193:     def parseFloat(s: Rep[String])(implicit pos: SourceContext) = obj_float_parse_float(s)\n  194    }\n  195  \n  196:   def infix_toInt(lhs: Rep[Float])(implicit o: Overloaded1, pos: SourceContext): Rep[Int] = float_to_int(lhs)\n  197:   def infix_toDouble(lhs: Rep[Float])(implicit o: Overloaded1, pos: SourceContext): Rep[Double] = float_to_double(lhs) \n  198    \n  199:   def obj_float_parse_float(s: Rep[String])(implicit pos: SourceContext): Rep[Float]\n  200:   def float_plus(lhs: Rep[Float], rhs: Rep[Float])(implicit pos: SourceContext): Rep[Float]\n  201:   def float_minus(lhs: Rep[Float], rhs: Rep[Float])(implicit pos: SourceContext): Rep[Float]\n  202:   def float_times(lhs: Rep[Float], rhs: Rep[Float])(implicit pos: SourceContext): Rep[Float]\n  203:   def float_divide(lhs: Rep[Float], rhs: Rep[Float])(implicit pos: SourceContext): Rep[Float]         \n  204:   def float_to_int(lhs: Rep[Float])(implicit pos: SourceContext): Rep[Int]\n  205:   def float_to_double(lhs: Rep[Float])(implicit pos: SourceContext): Rep[Double]\n  206    \n  207    /**\n  ...\n  209     */\n  210    object Integer {\n  211:     def parseInt(s: Rep[String])(implicit pos: SourceContext) = obj_integer_parse_int(s)\n  212    }\n  213  \n  214    object Int {\n  215:     def MaxValue(implicit pos: SourceContext) = obj_int_max_value\n  216:     def MinValue(implicit pos: SourceContext) = obj_int_min_value\n  217    }\n  218  \n  ...\n  226      //def /(rhs: Rep[Int]) = int_divide(lhs, rhs)\n  227      // TODO Something is wrong if we just use floatValue. implicits get confused\n  228:     def floatValueL()(implicit pos: SourceContext) = int_float_value(lhs)\n  229:     def doubleValue()(implicit pos: SourceContext) = int_double_value(lhs)\n  230:     def unary_~()(implicit pos: SourceContext) = int_bitwise_not(lhs)\n  231:     def toLong(implicit pos: SourceContext) = int_tolong(lhs)\n  232:     def toDouble(implicit pos: SourceContext) = int_to_double(lhs)\n  233:     def toFloat(implicit pos: SourceContext) = int_to_float(lhs)        \n  234    }\n  235  \n  236    \n  237:   def infix_%(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, pos: SourceContext) = int_mod(lhs, rhs)\n  238:   def infix_&(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, pos: SourceContext) = int_binaryand(lhs, rhs)\n  239:   def infix_|(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, pos: SourceContext) = int_binaryor(lhs, rhs)\n  240:   def infix_^(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, pos: SourceContext) = int_binaryxor(lhs, rhs)\n  241:   def infix_<<(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, pos: SourceContext) = int_leftshift(lhs, rhs)\n  242:   def infix_>>(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, pos: SourceContext) = int_rightshiftarith(lhs, rhs)\n  243:   def infix_>>>(lhs: Rep[Int], rhs: Rep[Int])(implicit o: Overloaded1, pos: SourceContext) = int_rightshiftlogical(lhs, rhs)\n  244  \n  245:   def obj_integer_parse_int(s: Rep[String])(implicit pos: SourceContext): Rep[Int]\n  246:   def obj_int_max_value(implicit pos: SourceContext): Rep[Int]\n  247:   def obj_int_min_value(implicit pos: SourceContext): Rep[Int]\n  248:   def int_plus(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  249:   def int_minus(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  250:   def int_times(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  251:   // def int_divide_frac[A:Manifest:Fractional](lhs: Rep[Int], rhs: Rep[A])(implicit pos: SourceContext): Rep[A]\n  252:   def int_divide(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  253    \n  254:   def int_mod(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  255:   def int_binaryor(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  256:   def int_binaryand(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  257:   def int_binaryxor(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  258:   def int_float_value(lhs: Rep[Int])(implicit pos: SourceContext): Rep[Float]\n  259:   def int_double_value(lhs: Rep[Int])(implicit pos: SourceContext): Rep[Double]\n  260:   def int_bitwise_not(lhs: Rep[Int])(implicit pos: SourceContext) : Rep[Int]\n  261:   def int_tolong(lhs: Rep[Int])(implicit pos: SourceContext) : Rep[Long]\n  262:   def int_to_float(lhs: Rep[Int])(implicit pos: SourceContext) : Rep[Float]\n  263:   def int_to_double(lhs: Rep[Int])(implicit pos: SourceContext) : Rep[Double]\n  264:   def int_leftshift(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  265:   def int_rightshiftarith(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  266:   def int_rightshiftlogical(lhs: Rep[Int], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Int]\n  267  \n  268    /**\n  ...\n  270     */\n  271    object Long {\n  272:     def parseLong(s: Rep[String])(implicit pos: SourceContext) = obj_long_parse_long(s)\n  273    }\n  274  \n  275:   def infix_&(lhs: Rep[Long], rhs: Rep[Long])(implicit o: Overloaded2, pos: SourceContext) = long_binaryand(lhs, rhs)\n  276:   def infix_|(lhs: Rep[Long], rhs: Rep[Long])(implicit o: Overloaded2, pos: SourceContext) = long_binaryor(lhs, rhs)\n  277:   def infix_<<(lhs: Rep[Long], rhs: Rep[Int])(implicit o: Overloaded2, pos: SourceContext) = long_shiftleft(lhs, rhs)\n  278:   def infix_>>>(lhs: Rep[Long], rhs: Rep[Int])(implicit o: Overloaded2, pos: SourceContext) = long_shiftright_unsigned(lhs, rhs)\n  279:   def infix_toInt(lhs: Rep[Long])(implicit o: Overloaded2, pos: SourceContext) = long_toint(lhs)\n  280      \n  281:   def obj_long_parse_long(s: Rep[String])(implicit pos: SourceContext): Rep[Long]\n  282:   def long_binaryand(lhs: Rep[Long], rhs: Rep[Long])(implicit pos: SourceContext): Rep[Long]\n  283:   def long_binaryor(lhs: Rep[Long], rhs: Rep[Long])(implicit pos: SourceContext): Rep[Long]\n  284:   def long_shiftleft(lhs: Rep[Long], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Long]\n  285:   def long_shiftright_unsigned(lhs: Rep[Long], rhs: Rep[Int])(implicit pos: SourceContext): Rep[Long]\n  286:   def long_toint(lhs: Rep[Long])(implicit pos: SourceContext): Rep[Int]\n  287  }\n  288  \n  ...\n  306    case class DoubleDivide(lhs: Exp[Double], rhs: Exp[Double]) extends Def[Double]  \n  307  \n  308:   def obj_double_parse_double(s: Exp[String])(implicit pos: SourceContext) = ObjDoubleParseDouble(s)\n  309:   def obj_double_positive_infinity(implicit pos: SourceContext) = ObjDoublePositiveInfinity()\n  310:   def obj_double_negative_infinity(implicit pos: SourceContext) = ObjDoubleNegativeInfinity()\n  311:   def obj_double_min_value(implicit pos: SourceContext) = ObjDoubleMinValue()\n  312:   def obj_double_max_value(implicit pos: SourceContext) = ObjDoubleMaxValue()\n  313:   def double_float_value(lhs: Exp[Double])(implicit pos: SourceContext) = DoubleFloatValue(lhs)\n  314:   def double_to_int(lhs: Exp[Double])(implicit pos: SourceContext) = DoubleToInt(lhs)\n  315:   def double_to_float(lhs: Exp[Double])(implicit pos: SourceContext) = DoubleToFloat(lhs)\n  316:   def double_plus(lhs: Exp[Double], rhs: Exp[Double])(implicit pos: SourceContext) : Exp[Double] = DoublePlus(lhs,rhs)\n  317:   def double_minus(lhs: Exp[Double], rhs: Exp[Double])(implicit pos: SourceContext) : Exp[Double] = DoubleMinus(lhs,rhs)\n  318:   def double_times(lhs: Exp[Double], rhs: Exp[Double])(implicit pos: SourceContext) : Exp[Double] = DoubleTimes(lhs,rhs)\n  319:   def double_divide(lhs: Exp[Double], rhs: Exp[Double])(implicit pos: SourceContext) : Exp[Double] = DoubleDivide(lhs,rhs)\n  320  \n  321    /**\n  ...\n  330    case class FloatDivide(lhs: Exp[Float], rhs: Exp[Float]) extends Def[Float]  \n  331    \n  332:   def obj_float_parse_float(s: Exp[String])(implicit pos: SourceContext) = ObjFloatParseFloat(s)\n  333:   def float_to_int(lhs: Exp[Float])(implicit pos: SourceContext) = FloatToInt(lhs)\n  334:   def float_to_double(lhs: Exp[Float])(implicit pos: SourceContext) = FloatToDouble(lhs)  \n  335:   def float_plus(lhs: Exp[Float], rhs: Exp[Float])(implicit pos: SourceContext) : Exp[Float] = FloatPlus(lhs,rhs)\n  336:   def float_minus(lhs: Exp[Float], rhs: Exp[Float])(implicit pos: SourceContext) : Exp[Float] = FloatMinus(lhs,rhs)\n  337:   def float_times(lhs: Exp[Float], rhs: Exp[Float])(implicit pos: SourceContext) : Exp[Float] = FloatTimes(lhs,rhs)\n  338:   def float_divide(lhs: Exp[Float], rhs: Exp[Float])(implicit pos: SourceContext) : Exp[Float] = FloatDivide(lhs,rhs)\n  339     \n  340    /**\n  ...\n  363    case class IntToDouble(lhs: Exp[Int]) extends Def[Double]\n  364  \n  365:   def obj_integer_parse_int(s: Rep[String])(implicit pos: SourceContext) = ObjIntegerParseInt(s)\n  366:   def obj_int_max_value(implicit pos: SourceContext) = ObjIntMaxValue()\n  367:   def obj_int_min_value(implicit pos: SourceContext) = ObjIntMinValue()\n  368:   def int_plus(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) : Exp[Int] = (lhs, rhs) match {\n  369      case (Const(0), r) => r\n  370      case (l, Const(0)) => l\n  ...\n  372      case _ => IntPlus(lhs,rhs)\n  373    }\n  374:   def int_minus(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) : Exp[Int] = (lhs, rhs) match {\n  375      case (l, Const(0)) => l\n  376      case (Const(x), Const(y)) => Const(x-y)\n  377      case _ => IntMinus(lhs, rhs)\n  378    }\n  379:   def int_times(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) : Exp[Int] = (lhs, rhs) match {\n  380      case (l@Const(0), r) => l\n  381      case (l, r@Const(0)) => r\n  ...\n  385      case _ => IntTimes(lhs, rhs)\n  386    }\n  387:   // def int_divide_frac[A:Manifest:Fractional](lhs: Exp[Int], rhs: Exp[A])(implicit pos: SourceContext) : Exp[A] = IntDivideFrac(lhs, rhs)\n  388:   def int_divide(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) : Exp[Int] = IntDivide(lhs, rhs)\n  389:   def int_mod(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) = IntMod(lhs, rhs)\n  390:   def int_binaryor(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) = IntBinaryOr(lhs, rhs)\n  391:   def int_binaryand(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) = IntBinaryAnd(lhs, rhs)\n  392:   def int_binaryxor(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) = IntBinaryXor(lhs, rhs)\n  393:   def int_double_value(lhs: Exp[Int])(implicit pos: SourceContext) = IntDoubleValue(lhs)\n  394:   def int_float_value(lhs: Exp[Int])(implicit pos: SourceContext) = IntFloatValue(lhs)\n  395:   def int_bitwise_not(lhs: Exp[Int])(implicit pos: SourceContext) = IntBitwiseNot(lhs)\n  396:   def int_tolong(lhs: Exp[Int])(implicit pos: SourceContext) = IntToLong(lhs)\n  397:   def int_to_float(lhs: Exp[Int])(implicit pos: SourceContext) = IntToFloat(lhs)\n  398:   def int_to_double(lhs: Exp[Int])(implicit pos: SourceContext) = IntToDouble(lhs)\n  399:   def int_leftshift(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) = IntShiftLeft(lhs, rhs)\n  400:   def int_rightshiftarith(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) = IntShiftRightArith(lhs, rhs)\n  401:   def int_rightshiftlogical(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) = IntShiftRightLogical(lhs, rhs)\n  402  \n  403  \n  ...\n  412    case class LongToInt(lhs: Exp[Long]) extends Def[Int]\n  413  \n  414:   def obj_long_parse_long(s: Exp[String])(implicit pos: SourceContext) = ObjLongParseLong(s)\n  415:   def long_binaryor(lhs: Exp[Long], rhs: Exp[Long])(implicit pos: SourceContext) = LongBinaryOr(lhs,rhs)\n  416:   def long_binaryand(lhs: Exp[Long], rhs: Exp[Long])(implicit pos: SourceContext) = LongBinaryAnd(lhs,rhs)  \n  417:   def long_shiftleft(lhs: Exp[Long], rhs: Exp[Int])(implicit pos: SourceContext) = LongShiftLeft(lhs,rhs)\n  418:   def long_shiftright_unsigned(lhs: Exp[Long], rhs: Exp[Int])(implicit pos: SourceContext) = LongShiftRightUnsigned(lhs,rhs)\n  419:   def long_toint(lhs: Exp[Long])(implicit pos: SourceContext) = LongToInt(lhs)\n  420      \n  421:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = ({\n  422      implicit var a: Numeric[A] = null // hack!! need to store it in Def instances??\n  423      e match {\n  ...\n  517  \n  518  trait PrimitiveOpsExpOpt extends PrimitiveOpsExp {\n  519:   override def int_plus(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) : Exp[Int] = (lhs,rhs) match {\n  520      case (Const(a),Const(b)) => unit(a+b)\n  521      case (Const(0),b) => b\n  ...\n  523      case _ => super.int_plus(lhs,rhs)\n  524    }\n  525:   override def int_minus(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) : Exp[Int] = (lhs,rhs) match {\n  526      case (Const(a),Const(b)) => unit(a-b)\n  527      case (a,Const(0)) => a\n  ...\n  529      case _ => super.int_minus(lhs,rhs)    \n  530    }\n  531:   override def int_times(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext) : Exp[Int] = (lhs,rhs) match {\n  532      case (Const(a),Const(b)) => unit(a*b)\n  533      case (Const(0),b) => Const(0)\n  ...\n  537      case _ => super.int_times(lhs,rhs)    \n  538    }\n  539:   override def int_to_float(lhs: Rep[Int])(implicit pos: SourceContext): Rep[Float] = lhs match {\n  540      case Const(x) => Const(x.toFloat)\n  541      case _ => super.int_to_float(lhs)\n  542    }\n  543  \n  544:   override def int_to_double(lhs: Rep[Int])(implicit pos: SourceContext): Rep[Double] = lhs match {\n  545      case Const(x) => Const(x.toDouble)\n  546      case _ => super.int_to_double(lhs)\n  547    }\n  548  \n  549:   override def float_to_double(lhs: Rep[Float])(implicit pos: SourceContext): Rep[Double] = lhs match {\n  550      case Const(x) => Const(x.toDouble)\n  551      case Def(IntToFloat(x)) => int_to_double(x)\n  ...\n  553    }\n  554    \n  555:   override def double_to_int(lhs: Rep[Double])(implicit pos: SourceContext): Rep[Int] = lhs match {\n  556      case Const(x) => Const(x.toInt)\n  557      case Def(IntToDouble(x)) => x\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/RangeOps.scala:\n    5  \n    6  import scala.virtualization.lms.internal.{GenericNestedCodegen, GenerationFailedException}\n    7: import scala.reflect.SourceContext\n    8  \n    9  trait RangeOps extends Base {\n   ..\n   11    implicit def repRangeToRangeOps(r: Rep[Range]) = new rangeOpsCls(r)\n   12    class rangeOpsCls(r: Rep[Range]){\n   13:     def foreach(f: Rep[Int] => Rep[Unit])(implicit pos: SourceContext) = range_foreach(r, f)\n   14    }\n   15  \n   16:   def infix_until(start: Rep[Int], end: Rep[Int])(implicit pos: SourceContext) = range_until(start,end)\n   17:   def infix_start(r: Rep[Range])(implicit pos: SourceContext) = range_start(r)\n   18:   def infix_step(r: Rep[Range])(implicit pos: SourceContext) = range_step(r)\n   19:   def infix_end(r: Rep[Range])(implicit pos: SourceContext) = range_end(r)\n   20    //def infix_foreach(r: Rep[Range], f: Rep[Int] => Rep[Unit]) = range_foreach(r, f)\n   21  \n   22:   def range_until(start: Rep[Int], end: Rep[Int])(implicit pos: SourceContext): Rep[Range]\n   23:   def range_start(r: Rep[Range])(implicit pos: SourceContext) : Rep[Int]\n   24:   def range_step(r: Rep[Range])(implicit pos: SourceContext) : Rep[Int]\n   25:   def range_end(r: Rep[Range])(implicit pos: SourceContext) : Rep[Int]\n   26:   def range_foreach(r: Rep[Range], f: (Rep[Int]) => Rep[Unit])(implicit pos: SourceContext): Rep[Unit]\n   27  }\n   28  \n   ..\n   35    case class RangeForeach(start: Exp[Int], end: Exp[Int], i: Sym[Int], body: Block[Unit]) extends Def[Unit]\n   36  \n   37:   def range_until(start: Exp[Int], end: Exp[Int])(implicit pos: SourceContext) : Exp[Range] = Until(start, end)\n   38:   def range_start(r: Exp[Range])(implicit pos: SourceContext) : Exp[Int] = r match { \n   39      case Def(Until(start, end)) => start\n   40      case Def(Reflect(Until(start, end), u, es)) => start\n   41      case _ => RangeStart(r)\n   42    }\n   43:   def range_step(r: Exp[Range])(implicit pos: SourceContext) : Exp[Int] = RangeStep(r)\n   44:   def range_end(r: Exp[Range])(implicit pos: SourceContext) : Exp[Int] = r match { \n   45      case Def(Until(start, end)) => end\n   46      case Def(Reflect(Until(start, end), u, es)) => end\n   47      case _ => RangeEnd(r)\n   48    }\n   49:   def range_foreach(r: Exp[Range], block: Exp[Int] => Exp[Unit])(implicit pos: SourceContext) : Exp[Unit] = {\n   50      val i = fresh[Int]\n   51      val a = reifyEffects(block(i))\n   ..\n   53    }\n   54    \n   55:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   56      case Reflect(RangeForeach(s,e,i,b), u, es) => reflectMirrored(Reflect(RangeForeach(f(s),f(e),f(i).asInstanceOf[Sym[Int]],f(b)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)    \n   57      case Reflect(RangeStart(r), u, es) => reflectMirrored(Reflect(RangeStart(f(r)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/SeqOps.scala:\n    4  import java.io.PrintWriter\n    5  import internal._\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait SeqOps extends Variables {\n    9  \n   10    object Seq {\n   11:     def apply[A:Manifest](xs: Rep[A]*)(implicit pos: SourceContext) = seq_new(xs)\n   12    }\n   13    \n   ..\n   17  \n   18    class SeqOpsCls[T:Manifest](a: Rep[Seq[T]]){\n   19:     def apply(n: Rep[Int])(implicit pos: SourceContext) = seq_apply(a,n)\n   20:     def length(implicit pos: SourceContext) = seq_length(a)\n   21    }\n   22  \n   23:   def seq_new[A:Manifest](xs: Seq[Rep[A]])(implicit pos: SourceContext): Rep[Seq[A]]\n   24:   def seq_apply[T:Manifest](x: Rep[Seq[T]], n: Rep[Int])(implicit pos: SourceContext): Rep[T]\n   25:   def seq_length[T:Manifest](x: Rep[Seq[T]])(implicit pos: SourceContext): Rep[Int]\n   26  }\n   27  \n   ..\n   31    case class SeqApply[T:Manifest](x: Exp[Seq[T]], n: Exp[Int]) extends Def[T]\n   32    \n   33:   def seq_new[A:Manifest](xs: Seq[Rep[A]])(implicit pos: SourceContext) = SeqNew(xs.toList)\n   34:   def seq_apply[T:Manifest](x: Exp[Seq[T]], n: Exp[Int])(implicit pos: SourceContext): Exp[T] = SeqApply(x, n)\n   35:   def seq_length[T:Manifest](a: Exp[Seq[T]])(implicit pos: SourceContext): Exp[Int] = SeqLength(a)\n   36  \n   37:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   38      case SeqNew(xs) => seq_new(f(xs))\n   39      case _ => super.mirror(e,f)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/SetOps.scala:\n    5  import scala.virtualization.lms.internal._\n    6  import scala.collection.mutable.Set\n    7: import scala.reflect.SourceContext\n    8  \n    9  trait SetOps extends Base {\n   10    object Set {\n   11:     def apply[A:Manifest](xs: Rep[A]*)(implicit pos: SourceContext) = set_new[A](xs)\n   12    }\n   13  \n   ..\n   15  \n   16    class setOpsCls[A:Manifest](s: Rep[Set[A]]) {\n   17:     def contains(i: Rep[A])(implicit pos: SourceContext) = set_contains(s, i)\n   18:     def add(i: Rep[A])(implicit pos: SourceContext) = set_add(s, i)\n   19:     def remove(i: Rep[A])(implicit pos: SourceContext) = set_remove(s, i)\n   20:     def size(implicit pos: SourceContext) = set_size(s)\n   21:     def clear()(implicit pos: SourceContext) = set_clear(s)\n   22:     def toSeq(implicit pos: SourceContext) = set_toseq(s)\n   23:     def toArray(implicit pos: SourceContext) = set_toarray(s)\n   24    }\n   25  \n   26:   def set_new[A:Manifest](xs: Seq[Rep[A]])(implicit pos: SourceContext) : Rep[Set[A]]\n   27:   def set_contains[A:Manifest](s: Rep[Set[A]], i: Rep[A])(implicit pos: SourceContext) : Rep[Boolean]\n   28:   def set_add[A:Manifest](s: Rep[Set[A]], i: Rep[A])(implicit pos: SourceContext) : Rep[Unit]\n   29:   def set_remove[A:Manifest](s: Rep[Set[A]], i: Rep[A])(implicit pos: SourceContext) : Rep[Unit]\n   30:   def set_size[A:Manifest](s: Rep[Set[A]])(implicit pos: SourceContext) : Rep[Int]\n   31:   def set_clear[A:Manifest](s: Rep[Set[A]])(implicit pos: SourceContext) : Rep[Unit]\n   32:   def set_toseq[A:Manifest](s: Rep[Set[A]])(implicit pos: SourceContext): Rep[Seq[A]]\n   33:   def set_toarray[A:Manifest](s: Rep[Set[A]])(implicit pos: SourceContext): Rep[Array[A]]\n   34  }\n   35  \n   ..\n   47    }\n   48  \n   49:   def set_new[A:Manifest](xs: Seq[Exp[A]])(implicit pos: SourceContext) = reflectMutable(SetNew(xs, manifest[A]))\n   50:   def set_contains[A:Manifest](s: Exp[Set[A]], i: Exp[A])(implicit pos: SourceContext) = SetContains(s, i)\n   51:   def set_add[A:Manifest](s: Exp[Set[A]], i: Exp[A])(implicit pos: SourceContext) = reflectWrite(s)(SetAdd(s, i))\n   52:   def set_remove[A:Manifest](s: Exp[Set[A]], i: Exp[A])(implicit pos: SourceContext) = reflectWrite(s)(SetRemove(s, i))\n   53:   def set_size[A:Manifest](s: Exp[Set[A]])(implicit pos: SourceContext) = SetSize(s)\n   54:   def set_clear[A:Manifest](s: Exp[Set[A]])(implicit pos: SourceContext) = reflectWrite(s)(SetClear(s))\n   55:   def set_toseq[A:Manifest](s: Exp[Set[A]])(implicit pos: SourceContext) = SetToSeq(s)\n   56:   def set_toarray[A:Manifest](s: Exp[Set[A]])(implicit pos: SourceContext) = SetToArray(s)\n   57  }\n   58  \n\n/Users/vjovanov/code/virtualization-lms-core/src/common/SimplifyTransform.scala:\n    2  package common\n    3  \n    4: import scala.reflect.SourceContext\n    5  \n    6  \n\n/Users/vjovanov/code/virtualization-lms-core/src/common/SplitEffects.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  import scala.virtualization.lms.internal.{GenericNestedCodegen, GenericFatCodegen, GenerationFailedException}\n    7  \n    .\n   21    // (see test8-speculative6)\n   22  \n   23:   override def reflectEffectInternal[A:Manifest](x: Def[A], u: Summary)(implicit pos: SourceContext): Exp[A] = x match {\n   24      case IfThenElse(cond, thenp, elsep) =>\n   25        val affected = (u.mayRead ++ u.mayWrite).distinct\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/StaticData.scala:\n    4  import java.io.PrintWriter\n    5  import scala.virtualization.lms.internal.GenericNestedCodegen\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait StaticData extends Base {\n    .\n   15  \n   16    // StaticData doesn't play well with control dependencies.. looks like we somehow lose updates\n   17:   override implicit def toAtom[T:Manifest](d: Def[T])(implicit pos: SourceContext) = d match {\n   18      case StaticData(x) if addControlDeps =>\n   19        val save = conditionalScope\n   ..\n   30    }\n   31    \n   32:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   33      case StaticData(x) => staticData(x)(mtype(manifest[A]))        \n   34      case _ => super.mirror(e,f)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/StringOps.scala:\n    5  import scala.virtualization.lms.util.OverloadHack\n    6  import scala.virtualization.lms.internal.{GenerationFailedException}\n    7: import scala.reflect.SourceContext\n    8  \n    9  trait LiftString {\n   ..\n   17    //       since string concat is defined on all objects\n   18    \n   19:   def infix_+(s1: String, s2: Rep[Any])(implicit o: Overloaded1, pos: SourceContext) = string_plus(unit(s1), s2)\n   20:   def infix_+[T:Manifest](s1: String, s2: Var[T])(implicit o: Overloaded2, pos: SourceContext) = string_plus(unit(s1), readVar(s2))\n   21:   def infix_+(s1: Rep[String], s2: Rep[Any])(implicit o: Overloaded1, pos: SourceContext) = string_plus(s1, s2)\n   22:   def infix_+[T:Manifest](s1: Rep[String], s2: Var[T])(implicit o: Overloaded2, pos: SourceContext) = string_plus(s1, readVar(s2))\n   23:   def infix_+(s1: Rep[String], s2: Rep[String])(implicit o: Overloaded3, pos: SourceContext) = string_plus(s1, s2)\n   24:   def infix_+(s1: Rep[String], s2: Var[String])(implicit o: Overloaded4, pos: SourceContext) = string_plus(s1, readVar(s2))\n   25:   def infix_+(s1: Rep[Any], s2: Rep[String])(implicit o: Overloaded5, pos: SourceContext) = string_plus(s1, s2)\n   26:   def infix_+(s1: Rep[Any], s2: Var[String])(implicit o: Overloaded6, pos: SourceContext) = string_plus(s1, readVar(s2))\n   27:   def infix_+(s1: Rep[Any], s2: String)(implicit o: Overloaded7, pos: SourceContext) = string_plus(s1, unit(s2))\n   28    \n   29:   def infix_+(s1: Var[String], s2: Rep[Any])(implicit o: Overloaded8, pos: SourceContext) = string_plus(readVar(s1), s2)  \n   30:   def infix_+[T:Manifest](s1: Var[String], s2: Var[T])(implicit o: Overloaded9, pos: SourceContext) = string_plus(readVar(s1), readVar(s2))\n   31:   def infix_+(s1: Var[String], s2: Rep[String])(implicit o: Overloaded10, pos: SourceContext) = string_plus(readVar(s1), s2)    \n   32:   def infix_+(s1: Var[String], s2: Var[String])(implicit o: Overloaded11, pos: SourceContext) = string_plus(readVar(s1), readVar(s2))    \n   33:   def infix_+[T:Manifest](s1: Var[T], s2: Rep[String])(implicit o: Overloaded12, pos: SourceContext) = string_plus(readVar(s1), s2)\n   34:   def infix_+[T:Manifest](s1: Var[T], s2: Var[String])(implicit o: Overloaded13, pos: SourceContext) = string_plus(readVar(s1), readVar(s2))\n   35:   def infix_+[T:Manifest](s1: Var[T], s2: String)(implicit o: Overloaded14, pos: SourceContext) = string_plus(readVar(s1), unit(s2))\n   36    \n   37    // these are necessary to be more specific than arithmetic/numeric +. is there a more generic form of this that will work?\n   38:   //def infix_+[R:Manifest](s1: Rep[String], s2: R)(implicit c: R => Rep[Any], o: Overloaded15, pos: SourceContext) = string_plus(s1, c(s2))  \n   39:   def infix_+(s1: Rep[String], s2: Double)(implicit o: Overloaded15, pos: SourceContext) = string_plus(s1, unit(s2))\n   40:   def infix_+(s1: Rep[String], s2: Float)(implicit o: Overloaded16, pos: SourceContext) = string_plus(s1, unit(s2))\n   41:   def infix_+(s1: Rep[String], s2: Int)(implicit o: Overloaded17, pos: SourceContext) = string_plus(s1, unit(s2))\n   42:   def infix_+(s1: Rep[String], s2: Long)(implicit o: Overloaded18, pos: SourceContext) = string_plus(s1, unit(s2))\n   43:   def infix_+(s1: Rep[String], s2: Short)(implicit o: Overloaded19, pos: SourceContext) = string_plus(s1, unit(s2))  \n   44    \n   45:   def infix_startsWith(s1: Rep[String], s2: Rep[String])(implicit pos: SourceContext) = string_startswith(s1,s2)\n   46:   def infix_trim(s: Rep[String])(implicit pos: SourceContext) = string_trim(s)\n   47:   def infix_split(s: Rep[String], separators: Rep[String])(implicit pos: SourceContext) = string_split(s, separators, unit(0))\n   48:   def infix_split(s: Rep[String], separators: Rep[String], limit: Rep[Int])(implicit pos: SourceContext) = string_split(s, separators, limit)\n   49:   def infix_charAt(s: Rep[String], i: Rep[Int])(implicit pos: SourceContext) = string_charAt(s,i)\n   50:   def infix_endsWith(s: Rep[String], e: Rep[String])(implicit pos: SourceContext) = string_endsWith(s,e)\n   51:   def infix_contains(s1: Rep[String], s2: Rep[String])(implicit pos: SourceContext) = string_contains(s1,s2)\n   52:   def infix_toDouble(s: Rep[String])(implicit pos: SourceContext) = string_todouble(s)\n   53:   def infix_toFloat(s: Rep[String])(implicit pos: SourceContext) = string_tofloat(s)\n   54:   def infix_toInt(s: Rep[String])(implicit pos: SourceContext) = string_toint(s)\n   55:   def infix_toLong(s: Rep[String])(implicit pos: SourceContext) = string_tolong(s)\n   56:   def infix_substring(s: Rep[String], start: Rep[Int], end: Rep[Int])(implicit pos: SourceContext) = string_substring(s,start,end)\n   57  \n   58    // FIXME: enabling this causes trouble with DeliteOpSuite. investigate!!\n   59:   //def infix_length(s: Rep[String])(implicit pos: SourceContext) = string_length(s)\n   60  \n   61    object String {\n   62:     def valueOf(a: Rep[Any])(implicit pos: SourceContext) = string_valueof(a)\n   63    }\n   64  \n   65:   def string_plus(s: Rep[Any], o: Rep[Any])(implicit pos: SourceContext): Rep[String]\n   66:   def string_startswith(s1: Rep[String], s2: Rep[String])(implicit pos: SourceContext): Rep[Boolean]\n   67:   def string_trim(s: Rep[String])(implicit pos: SourceContext): Rep[String]\n   68:   def string_split(s: Rep[String], separators: Rep[String], limit: Rep[Int])(implicit pos: SourceContext): Rep[Array[String]]\n   69:   def string_valueof(d: Rep[Any])(implicit pos: SourceContext): Rep[String]\n   70:   def string_charAt(s: Rep[String], i: Rep[Int])(implicit pos: SourceContext): Rep[Char]\n   71:   def string_endsWith(s: Rep[String], e: Rep[String])(implicit pos: SourceContext): Rep[Boolean]\n   72:   def string_contains(s1: Rep[String], s2: Rep[String])(implicit pos: SourceContext): Rep[Boolean]\n   73:   def string_todouble(s: Rep[String])(implicit pos: SourceContext): Rep[Double]\n   74:   def string_tofloat(s: Rep[String])(implicit pos: SourceContext): Rep[Float]\n   75:   def string_toint(s: Rep[String])(implicit pos: SourceContext): Rep[Int]\n   76:   def string_tolong(s: Rep[String])(implicit pos: SourceContext): Rep[Long]\n   77:   def string_substring(s: Rep[String], start:Rep[Int], end:Rep[Int])(implicit pos: SourceContext): Rep[String]\n   78:   def string_length(s: Rep[String])(implicit pos: SourceContext): Rep[Int]\n   79  }\n   80  \n   ..\n   95    case class StringLength(s: Exp[String]) extends Def[Int]\n   96  \n   97:   def string_plus(s: Exp[Any], o: Exp[Any])(implicit pos: SourceContext): Rep[String] = StringPlus(s,o)\n   98:   def string_startswith(s1: Exp[String], s2: Exp[String])(implicit pos: SourceContext) = StringStartsWith(s1,s2)\n   99:   def string_trim(s: Exp[String])(implicit pos: SourceContext) : Rep[String] = StringTrim(s)\n  100:   def string_split(s: Exp[String], separators: Exp[String], limit: Exp[Int])(implicit pos: SourceContext) : Rep[Array[String]] = StringSplit(s, separators, limit)\n  101:   def string_valueof(a: Exp[Any])(implicit pos: SourceContext) = StringValueOf(a)\n  102:   def string_charAt(s: Exp[String], i: Exp[Int])(implicit pos: SourceContext) = StringCharAt(s,i)\n  103:   def string_endsWith(s: Exp[String], e: Exp[String])(implicit pos: SourceContext) = StringEndsWith(s,e)\n  104:   def string_contains(s1: Exp[String], s2: Exp[String])(implicit pos: SourceContext) = StringContains(s1,s2)\n  105:   def string_todouble(s: Rep[String])(implicit pos: SourceContext) = StringToDouble(s)\n  106:   def string_tofloat(s: Rep[String])(implicit pos: SourceContext) = StringToFloat(s)\n  107:   def string_toint(s: Rep[String])(implicit pos: SourceContext) = StringToInt(s)\n  108:   def string_tolong(s: Rep[String])(implicit pos: SourceContext) = StringToLong(s)\n  109:   def string_substring(s: Rep[String], start:Rep[Int], end:Rep[Int])(implicit pos: SourceContext) = StringSubstring(s,start,end)\n  110:   def string_length(s: Rep[String])(implicit pos: SourceContext) = StringLength(s)\n  111  \n  112:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  113      case StringPlus(a,b) => string_plus(f(a),f(b))\n  114      case StringStartsWith(s1, s2) => string_startswith(f(s1), f(s2))\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Structs.scala:\n    2  package common\n    3  \n    4: import reflect.{SourceContext, RefinedManifest}\n    5  import util.OverloadHack\n    6  import java.io.PrintWriter\n    .\n   24    def record_new[T : Manifest](fields: Seq[(String, Boolean, Rep[T] => Rep[_])]): Rep[T]\n   25    def record_select[T : Manifest](record: Rep[Record], field: String): Rep[T]\n   26:   def field[T:Manifest](struct: Rep[Any], index: String)(implicit pos: SourceContext): Rep[T]\n   27  }\n   28  \n   ..\n   78    case class FieldUpdate[T:Manifest](struct: Exp[Any], index: String, rhs: Exp[T]) extends Def[Unit]\n   79  \n   80:   def struct[T:Manifest](tag: StructTag[T], elems: (String, Rep[Any])*)(implicit o: Overloaded1, pos: SourceContext): Rep[T] = struct[T](tag, elems)\n   81:   def struct[T:Manifest](tag: StructTag[T], elems: Seq[(String, Rep[Any])])(implicit pos: SourceContext): Rep[T] = SimpleStruct(tag, elems)\n   82  \n   83:   def field[T:Manifest](struct: Rep[Any], index: String)(implicit pos: SourceContext): Rep[T] = FieldApply[T](struct, index)\n   84:   def var_field[T:Manifest](struct: Rep[Any], index: String)(implicit pos: SourceContext): Var[T] = Variable(FieldApply[Var[T]](struct, index))\n   85    def field_update[T:Manifest](struct: Exp[Any], index: String, rhs: Exp[T]): Exp[Unit] = reflectWrite(struct)(FieldUpdate(struct, index, rhs))\n   86  \n   ..\n   98    }\n   99  \n  100:   def imm_field(struct: Exp[Any], name: String, f: Exp[Any])(implicit pos: SourceContext): Exp[Any] = {\n  101      if (f.tp.erasure.getSimpleName == \"Variable\") {\n  102        field(struct,name)(mtype(f.tp.typeArguments(0)),pos)\n  ...\n  108  \n  109    // don't let unsafeImmutable hide struct-ness\n  110:   override def object_unsafe_immutable[A:Manifest](lhs: Exp[A])(implicit pos: SourceContext) = lhs match {\n  111      case Def(Struct(tag,elems)) => struct[A](tag, elems.map(t => (t._1, imm_field(lhs, t._1, t._2))))\n  112      case Def(d@Reflect(Struct(tag, elems), u, es)) => struct[A](tag, elems.map(t => (t._1, imm_field(lhs, t._1, t._2))))\n  ...\n  166    // TODO: read/write/copy summary\n  167  \n  168:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  169      case SimpleStruct(tag, elems) => struct(tag, elems map { case (k,v) => (k, f(v)) })(mtype(manifest[A]),pos)\n  170      case FieldApply(struct, key) => field(f(struct), key)(mtype(manifest[A]),pos)\n  ...\n  185    def classTag[T:Manifest] = ClassTag[T](structName(manifest[T]))\n  186  \n  187:   override def object_tostring(x: Exp[Any])(implicit pos: SourceContext): Exp[String] = x match {\n  188      case Def(s@Struct(tag, elems)) => //tag(elem1, elem2, ...)\n  189        val e = elems.map(e=>string_plus(unit(e._1 + \" = \"), object_tostring(e._2))).reduceLeft((l,r)=>string_plus(string_plus(l,unit(\", \")),r))\n  ...\n  213    }\n  214  \n  215:   override def field[T:Manifest](struct: Exp[Any], index: String)(implicit pos: SourceContext): Exp[T] = fieldLookup[T](struct, index) match {\n  216      // the two variable pattern matches each seem to miss certain cases, so both are needed. why?\n  217      case Some(Def(Reflect(NewVar(x),u,es))) => super.field(struct, index)\n  ...\n  223    //TODO: need to be careful unwrapping Structs of vars since partial unwrapping can result in reads & writes to two different memory locations in the generated code\n  224    //(the original var and the struct)\n  225:   /* override def var_field[T:Manifest](struct: Exp[Any], index: String)(implicit pos: SourceContext): Var[T] = fieldLookup(struct, index) match {\n  226      case Some(x: Exp[Var[T]]) if x.tp == manifest[Var[T]] => Variable(x)\n  227      case Some(x) => throw new RuntimeException(\"ERROR: \" + index + \" is not a variable field of type \" + struct.tp)\n  ...\n  238    }\n  239  \n  240:   override def var_new[T:Manifest](init: Exp[T])(implicit pos: SourceContext): Var[T] = init match {\n  241      case Def(Struct(tag, elems)) =>\n  242        //val r = Variable(struct(tag, elems.mapValues(e=>var_new(e).e))) // DON'T use mapValues!! <--lazy\n  ...\n  246    }\n  247  \n  248:   override def var_assign[T:Manifest](lhs: Var[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[Unit] = (lhs,rhs) match {\n  249      case (Variable(Def(Struct(NestClassTag(tagL),elemsL: Seq[(String,Exp[Variable[Any]])]))), Def(Struct(tagR, elemsR))) =>\n  250        assert(tagL == tagR)\n  ...\n  269    }\n  270  \n  271:   override def readVar[T:Manifest](v: Var[T])(implicit pos: SourceContext): Exp[T] = v match {\n  272      case Variable(Def(Struct(NestClassTag(tag), elems: Seq[(String,Exp[Variable[Any]])]))) =>\n  273        struct[T](tag, elems.map(p=>(p._1,readVar(Variable(p._2))(unwrap(p._2.tp), pos))))\n  ...\n  277    }\n  278  \n  279:   override def ifThenElse[T:Manifest](cond: Rep[Boolean], a: Block[T], b: Block[T])(implicit pos: SourceContext) = (a,b) match {\n  280      case (Block(Def(Struct(tagA,elemsA))), Block(Def(Struct(tagB, elemsB)))) =>\n  281        assert(tagA == tagB)\n  ...\n  320    }\n  321  \n  322:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = e match {\n  323      case p@Phi(c,a,u,b,v) => phiB(f(c),f(a),f(u),f(b),f(v))(f(p.parent))\n  324      case _ => super.mirror(e,f)\n  ...\n  331  \n  332  \n  333:   override def ifThenElse[T:Manifest](cond: Rep[Boolean], a: Block[T], b: Block[T])(implicit pos: SourceContext) = (deReify(a),deReify(b)) match {\n  334      case ((u, Def(Struct(tagA,elemsA))), (v, Def(Struct(tagB, elemsB)))) =>\n  335        //assert(tagA == tagB, tagA+\" !== \"+tagB)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/SynchronizedArrayBufferOps.scala:\n    5  import scala.virtualization.lms.internal.GenericNestedCodegen\n    6  import collection.mutable.ArrayBuffer\n    7: import scala.reflect.SourceContext\n    8  \n    9  trait SynchronizedArrayBufferOps extends ArrayBufferOps {\n   ..\n   11  /*\n   12    object SynchronizedArrayBuffer {\n   13:     def apply[A:Manifest](xs: Rep[A]*)(implicit pos: SourceContext) = arraybuffer_new(xs)\n   14    }\n   15  */\n   ..\n   24    // all array buffers are synchronized (nackward compat). TODO: separate constructor\n   25  \n   26:   override def arraybuffer_new[A:Manifest](xs: Seq[Exp[A]])(implicit pos: SourceContext) = reflectMutable(SyncArrayBufferNew(xs))\n   27  }\n   28  \n\n/Users/vjovanov/code/virtualization-lms-core/src/common/TupleOps.scala:\n    4  import scala.virtualization.lms.internal.GenericCodegen\n    5  import java.io.PrintWriter\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait TupleOps extends Base {\n    9:   implicit def make_tuple2[A:Manifest,B:Manifest](t: (Rep[A], Rep[B]))(implicit pos: SourceContext) : Rep[(A,B)]\n   10:   implicit def make_tuple3[A:Manifest,B:Manifest,C:Manifest](t: (Rep[A], Rep[B], Rep[C]))(implicit pos: SourceContext) : Rep[(A,B,C)]\n   11:   implicit def make_tuple4[A:Manifest,B:Manifest,C:Manifest,D:Manifest](t: (Rep[A], Rep[B], Rep[C], Rep[D]))(implicit pos: SourceContext) : Rep[(A,B,C,D)]\n   12:   implicit def make_tuple5[A:Manifest,B:Manifest,C:Manifest,D:Manifest,E:Manifest](t: (Rep[A], Rep[B], Rep[C], Rep[D], Rep[E]))(implicit pos: SourceContext) : Rep[(A,B,C,D,E)]\n   13  \n   14:   implicit def t2[A:Manifest,B:Manifest](t: Rep[(A,B)])(implicit pos: SourceContext) =\n   15      ((tuple2_get1(t),tuple2_get2(t)))\n   16:   implicit def t3[A:Manifest,B:Manifest,C:Manifest](t: Rep[(A,B,C)])(implicit pos: SourceContext) =\n   17      ((tuple3_get1(t),tuple3_get2(t),tuple3_get3(t)))\n   18:   implicit def t4[A:Manifest,B:Manifest,C:Manifest,D:Manifest](t: Rep[(A,B,C,D)])(implicit pos: SourceContext) =\n   19      ((tuple4_get1(t),tuple4_get2(t),tuple4_get3(t),tuple4_get4(t)))\n   20:   implicit def t5[A:Manifest,B:Manifest,C:Manifest,D:Manifest,E:Manifest](t: Rep[(A,B,C,D,E)])(implicit pos: SourceContext) =\n   21      ((tuple5_get1(t),tuple5_get2(t),tuple5_get3(t),tuple5_get4(t),tuple5_get5(t)))\n   22  \n   23:   def tuple2_get1[A:Manifest](t: Rep[(A,_)])(implicit pos: SourceContext) : Rep[A]\n   24:   def tuple2_get2[B:Manifest](t: Rep[(_,B)])(implicit pos: SourceContext) : Rep[B]\n   25  \n   26:   def tuple3_get1[A:Manifest](t: Rep[(A,_,_)])(implicit pos: SourceContext) : Rep[A]\n   27:   def tuple3_get2[B:Manifest](t: Rep[(_,B,_)])(implicit pos: SourceContext) : Rep[B]\n   28:   def tuple3_get3[C:Manifest](t: Rep[(_,_,C)])(implicit pos: SourceContext) : Rep[C]\n   29  \n   30:   def tuple4_get1[A:Manifest](t: Rep[(A,_,_,_)])(implicit pos: SourceContext) : Rep[A]\n   31:   def tuple4_get2[B:Manifest](t: Rep[(_,B,_,_)])(implicit pos: SourceContext) : Rep[B]\n   32:   def tuple4_get3[C:Manifest](t: Rep[(_,_,C,_)])(implicit pos: SourceContext) : Rep[C]\n   33:   def tuple4_get4[D:Manifest](t: Rep[(_,_,_,D)])(implicit pos: SourceContext) : Rep[D]\n   34  \n   35:   def tuple5_get1[A:Manifest](t: Rep[(A,_,_,_,_)])(implicit pos: SourceContext) : Rep[A]\n   36:   def tuple5_get2[B:Manifest](t: Rep[(_,B,_,_,_)])(implicit pos: SourceContext) : Rep[B]\n   37:   def tuple5_get3[C:Manifest](t: Rep[(_,_,C,_,_)])(implicit pos: SourceContext) : Rep[C]\n   38:   def tuple5_get4[D:Manifest](t: Rep[(_,_,_,D,_)])(implicit pos: SourceContext) : Rep[D]\n   39:   def tuple5_get5[E:Manifest](t: Rep[(_,_,_,_,E)])(implicit pos: SourceContext) : Rep[E]\n   40  }\n   41  \n   42  trait TupleOpsExp extends TupleOps with StructExpOpt {\n   43  \n   44:   implicit def make_tuple2[A:Manifest,B:Manifest](t: (Exp[A],Exp[B]))(implicit pos: SourceContext) : Exp[(A,B)] = struct(classTag[(A,B)], \"_1\" -> t._1, \"_2\" -> t._2)\n   45:   implicit def make_tuple3[A:Manifest,B:Manifest,C:Manifest](t: (Exp[A],Exp[B],Exp[C]))(implicit pos: SourceContext) : Exp[(A,B,C)] = struct(classTag[(A,B,C)], \"_1\" -> t._1, \"_2\" -> t._2, \"_3\" -> t._3)\n   46:   implicit def make_tuple4[A:Manifest,B:Manifest,C:Manifest,D:Manifest](t: (Exp[A],Exp[B],Exp[C],Exp[D]))(implicit pos: SourceContext) : Exp[(A,B,C,D)] = struct(classTag[(A,B,C,D)], \"_1\" -> t._1, \"_2\" -> t._2, \"_3\" -> t._3, \"_4\" -> t._4)  \n   47:   implicit def make_tuple5[A:Manifest,B:Manifest,C:Manifest,D:Manifest,E:Manifest](t: (Exp[A],Exp[B],Exp[C],Exp[D],Exp[E]))(implicit pos: SourceContext) : Exp[(A,B,C,D,E)] = struct(classTag[(A,B,C,D,E)], \"_1\" -> t._1, \"_2\" -> t._2, \"_3\" -> t._3, \"_4\" -> t._4, \"_5\" -> t._5) \n   48  \n   49:   def tuple2_get1[A:Manifest](t: Exp[(A,_)])(implicit pos: SourceContext) = field[A](t, \"_1\")\n   50:   def tuple2_get2[B:Manifest](t: Exp[(_,B)])(implicit pos: SourceContext) = field[B](t, \"_2\")\n   51  \n   52:   def tuple3_get1[A:Manifest](t: Exp[(A,_,_)])(implicit pos: SourceContext) = field[A](t, \"_1\")\n   53:   def tuple3_get2[B:Manifest](t: Exp[(_,B,_)])(implicit pos: SourceContext) = field[B](t, \"_2\")\n   54:   def tuple3_get3[C:Manifest](t: Exp[(_,_,C)])(implicit pos: SourceContext) = field[C](t, \"_3\")\n   55  \n   56:   def tuple4_get1[A:Manifest](t: Exp[(A,_,_,_)])(implicit pos: SourceContext) = field[A](t, \"_1\")\n   57:   def tuple4_get2[B:Manifest](t: Exp[(_,B,_,_)])(implicit pos: SourceContext) = field[B](t, \"_2\")\n   58:   def tuple4_get3[C:Manifest](t: Exp[(_,_,C,_)])(implicit pos: SourceContext) = field[C](t, \"_3\")\n   59:   def tuple4_get4[D:Manifest](t: Exp[(_,_,_,D)])(implicit pos: SourceContext) = field[D](t, \"_4\")\n   60  \n   61:   def tuple5_get1[A:Manifest](t: Exp[(A,_,_,_,_)])(implicit pos: SourceContext) = field[A](t, \"_1\")\n   62:   def tuple5_get2[B:Manifest](t: Exp[(_,B,_,_,_)])(implicit pos: SourceContext) = field[B](t, \"_2\")\n   63:   def tuple5_get3[C:Manifest](t: Exp[(_,_,C,_,_)])(implicit pos: SourceContext) = field[C](t, \"_3\")\n   64:   def tuple5_get4[D:Manifest](t: Exp[(_,_,_,D,_)])(implicit pos: SourceContext) = field[D](t, \"_4\")\n   65:   def tuple5_get5[E:Manifest](t: Exp[(_,_,_,_,E)])(implicit pos: SourceContext) = field[E](t, \"_5\")\n   66  \n   67    object Both { def unapply[T](x:T):Some[(T,T)] = Some((x,x)) }\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Unchecked.scala:\n    4  import java.io.PrintWriter\n    5  import internal._\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait UncheckedOps extends Base {\n    .\n   38    def uncheckedPure[T:Manifest](s: Any*): Rep[T] = toAtom[T](Unchecked(s.toList))\n   39  \n   40:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   41      //case Reflect(ThrowException(s), u, es) => reflectMirrored(Reflect(ThrowException(f(s)), mapOver(f,u), f(es)))(mtype(manifest[A]))\n   42      // TODO mirror Unchecked and Reflect(Unchecked)\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/Variables.scala:\n    3  \n    4  import java.io.PrintWriter\n    5: import scala.reflect.SourceContext\n    6  import scala.virtualization.lms.util.OverloadHack\n    7: import scala.reflect.SourceContext\n    8  \n    9  trait LiftVariables extends Base {\n   10    this: Variables =>\n   11  \n   12:   def __newVar[T:Manifest](init: T)(implicit pos: SourceContext) = var_new(unit(init))\n   13:   def __newVar[T](init: Rep[T])(implicit o: Overloaded1, mT: Manifest[T], pos: SourceContext) = var_new(init)\n   14:   def __newVar[T](init: Var[T])(implicit o: Overloaded2, mT: Manifest[T], pos: SourceContext) = var_new(init)\n   15  }\n   16  \n   ..\n   20    this: Variables =>\n   21  \n   22:   implicit def readVar[T:Manifest](v: Var[T])(implicit pos: SourceContext) : Rep[T]\n   23  }\n   24  \n   ..\n   26    this: VariablesExp =>\n   27  \n   28:   implicit def readVar[T:Manifest](v: Var[T])(implicit pos: SourceContext) : Exp[T] = ReadVar(v)\n   29  }\n   30  \n   ..\n   32    this: Variables =>\n   33  \n   34:   implicit def varIntToRepDouble(x: Var[Int])(implicit pos: SourceContext): Rep[Double] = implicit_convert[Int,Double](readVar(x))\n   35:   implicit def varIntToRepFloat(x: Var[Int])(implicit pos: SourceContext): Rep[Float] = implicit_convert[Int,Float](readVar(x))\n   36:   implicit def varFloatToRepDouble(x: Var[Float])(implicit pos: SourceContext): Rep[Double] = implicit_convert[Float,Double](readVar(x))\n   37  }\n   38  \n   ..\n   41  \n   42    // we always want to prioritize a direct conversion if any Rep will do\n   43:   implicit def varIntToRepInt(v: Var[Int])(implicit pos: SourceContext): Rep[Int] = readVar(v)\n   44:   implicit def varFloatToRepFloat(v: Var[Float])(implicit pos: SourceContext): Rep[Float] = readVar(v)\n   45  }\n   46  \n   ..\n   49  \n   50    //implicit def chainReadVar[T,U](x: Var[T])(implicit f: Rep[T] => U): U = f(readVar(x))\n   51:   def var_new[T:Manifest](init: Rep[T])(implicit pos: SourceContext): Var[T]\n   52:   def var_assign[T:Manifest](lhs: Var[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Unit]\n   53:   def var_plusequals[T:Manifest](lhs: Var[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Unit]\n   54:   def var_minusequals[T:Manifest](lhs: Var[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Unit]\n   55:   def var_timesequals[T:Manifest](lhs: Var[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Unit]\n   56:   def var_divideequals[T:Manifest](lhs: Var[T], rhs: Rep[T])(implicit pos: SourceContext): Rep[Unit]\n   57    \n   58:   def __assign[T:Manifest](lhs: Var[T], rhs: T)(implicit pos: SourceContext) = var_assign(lhs, unit(rhs))\n   59:   def __assign[T](lhs: Var[T], rhs: Rep[T])(implicit o: Overloaded1, mT: Manifest[T], pos: SourceContext) = var_assign(lhs, rhs)\n   60:   def __assign[T](lhs: Var[T], rhs: Var[T])(implicit o: Overloaded2, mT: Manifest[T], pos: SourceContext) = var_assign(lhs, readVar(rhs))\n   61  /*\n   62    def __assign[T,U](lhs: Var[T], rhs: Rep[U])(implicit o: Overloaded2, mT: Manifest[T], mU: Manifest[U], conv: Rep[U]=>Rep[T]) = var_assign(lhs, conv(rhs))\n   ..\n   65    // TODO: why doesn't this implicit kick in automatically? <--- do they belong here? maybe better move to NumericOps\n   66    // we really need to refactor this. +=/-= shouldn't be here or in Arith, but in some other type class, which includes Numeric variables\n   67:   def infix_+=[T](lhs: Var[T], rhs: T)(implicit o: Overloaded1, mT: Manifest[T], pos: SourceContext) = var_plusequals(lhs, unit(rhs))\n   68:   def infix_+=[T](lhs: Var[T], rhs: Rep[T])(implicit o: Overloaded2, mT: Manifest[T], pos: SourceContext) = var_plusequals(lhs,rhs)\n   69:   def infix_+=[T](lhs: Var[T], rhs: Var[T])(implicit o: Overloaded3, mT: Manifest[T], pos: SourceContext) = var_plusequals(lhs,readVar(rhs))\n   70:   def infix_-=[T](lhs: Var[T], rhs: T)(implicit o: Overloaded1, mT: Manifest[T], pos: SourceContext) = var_minusequals(lhs, unit(rhs))\n   71:   def infix_-=[T](lhs: Var[T], rhs: Rep[T])(implicit o: Overloaded2, mT: Manifest[T], pos: SourceContext) = var_minusequals(lhs,rhs)\n   72:   def infix_-=[T](lhs: Var[T], rhs: Var[T])(implicit o: Overloaded3, mT: Manifest[T], pos: SourceContext) = var_minusequals(lhs,readVar(rhs))\n   73:   def infix_*=[T](lhs: Var[T], rhs: T)(implicit o: Overloaded1, mT: Manifest[T], pos: SourceContext) = var_timesequals(lhs, unit(rhs))\n   74:   def infix_*=[T](lhs: Var[T], rhs: Rep[T])(implicit o: Overloaded2, mT: Manifest[T], pos: SourceContext) = var_timesequals(lhs,rhs)\n   75:   def infix_*=[T](lhs: Var[T], rhs: Var[T])(implicit o: Overloaded3, mT: Manifest[T], pos: SourceContext) = var_timesequals(lhs,readVar(rhs))\n   76:   def infix_/=[T](lhs: Var[T], rhs: T)(implicit o: Overloaded1, mT: Manifest[T], pos: SourceContext) = var_divideequals(lhs, unit(rhs))\n   77:   def infix_/=[T](lhs: Var[T], rhs: Rep[T])(implicit o: Overloaded2, mT: Manifest[T], pos: SourceContext) = var_divideequals(lhs,rhs)\n   78:   def infix_/=[T](lhs: Var[T], rhs: Var[T])(implicit o: Overloaded3, mT: Manifest[T], pos: SourceContext) = var_divideequals(lhs,readVar(rhs))\n   79  }\n   80  \n   ..\n   97    case class VarDivideEquals[T:Manifest](lhs: Var[T], rhs: Exp[T]) extends Def[Unit]\n   98  \n   99:   def var_new[T:Manifest](init: Exp[T])(implicit pos: SourceContext): Var[T] = {\n  100      //reflectEffect(NewVar(init)).asInstanceOf[Var[T]]\n  101      Variable(reflectMutable(NewVar(init)))\n  102    }\n  103  \n  104:   def var_assign[T:Manifest](lhs: Var[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[Unit] = {\n  105      reflectWrite(lhs.e)(Assign(lhs, rhs))\n  106      Const()\n  107    }\n  108  \n  109:   def var_plusequals[T:Manifest](lhs: Var[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[Unit] = {\n  110      reflectWrite(lhs.e)(VarPlusEquals(lhs, rhs))\n  111      Const()\n  112    }\n  113  \n  114:   def var_minusequals[T:Manifest](lhs: Var[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[Unit] = {\n  115      reflectWrite(lhs.e)(VarMinusEquals(lhs, rhs))\n  116      Const()\n  117    }\n  118    \n  119:   def var_timesequals[T:Manifest](lhs: Var[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[Unit] = {\n  120      reflectWrite(lhs.e)(VarTimesEquals(lhs, rhs))\n  121      Const()\n  122    }\n  123    \n  124:   def var_divideequals[T:Manifest](lhs: Var[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[Unit] = {\n  125      reflectWrite(lhs.e)(VarDivideEquals(lhs, rhs))\n  126      Const()\n  ...\n  173  \n  174  \n  175:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  176      case ReadVar(Variable(a)) => readVar(Variable(f(a)))\n  177      case Reflect(NewVar(a), u, es) => reflectMirrored(Reflect(NewVar(f(a)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n  ...\n  190  trait VariablesExpOpt extends VariablesExp {\n  191  \n  192:   override implicit def readVar[T:Manifest](v: Var[T])(implicit pos: SourceContext) : Exp[T] = {\n  193      if (context ne null) {\n  194        // find the last modification of variable v\n  ...\n  211    // TODO: strong updates. overwriting a var makes previous stores unnecessary\n  212  \n  213:   override implicit def var_assign[T:Manifest](v: Var[T], e: Exp[T])(implicit pos: SourceContext) : Exp[Unit] = {\n  214      if (context ne null) {\n  215        // find the last modification of variable v\n\n/Users/vjovanov/code/virtualization-lms-core/src/common/While.scala:\n    4  import java.io.PrintWriter\n    5  import scala.virtualization.lms.internal.GenericNestedCodegen\n    6: import scala.reflect.SourceContext\n    7  \n    8  trait While extends Base {\n    9:   def __whileDo(cond: => Rep[Boolean], body: => Rep[Unit])(implicit pos: SourceContext): Rep[Unit]\n   10  }\n   11  \n   ..\n   14    case class While(cond: Block[Boolean], body: Block[Unit]) extends Def[Unit]\n   15  \n   16:   override def __whileDo(cond: => Exp[Boolean], body: => Rep[Unit])(implicit pos: SourceContext) = {\n   17      val c = reifyEffects(cond)\n   18      val a = reifyEffects(body)\n   ..\n   43  trait WhileExpOptSpeculative extends WhileExp with PreviousIterationDummyExp {\n   44    \n   45:   override def __whileDo(cond: => Exp[Boolean], body: => Rep[Unit])(implicit pos: SourceContext) = {\n   46  \n   47      val pc = fresh[Nothing]\n\n/Users/vjovanov/code/virtualization-lms-core/src/internal/Effects.scala:\n    2  package internal\n    3  \n    4: import scala.reflect.SourceContext\n    5  import util.GraphUtil\n    6  import scala.collection.mutable\n    .\n  342    */\n  343  \n  344:   protected override implicit def toAtom[T:Manifest](d: Def[T])(implicit pos: SourceContext): Exp[T] = {\n  345  /*\n  346      are we depending on a variable or mutable object? then we need to be serialized -> effect\n  ...\n  371    }\n  372  \n  373:   def reflectMirrored[A:Manifest](zd: Reflect[A])(implicit pos: SourceContext): Exp[A] = {\n  374      checkContext()\n  375      // warn if type is Any. TODO: make optional, sometimes Exp[Any] is fine\n  ...\n  406    }\n  407  \n  408:   def reflectMutable[A:Manifest](d: Def[A])(implicit pos: SourceContext): Exp[A] = {\n  409      val z = reflectEffect(d, Alloc())\n  410  \n  ...\n  414    }\n  415  \n  416:   def reflectWrite[A:Manifest](write0: Exp[Any]*)(d: Def[A])(implicit pos: SourceContext): Exp[A] = {\n  417      val write = write0.toList.asInstanceOf[List[Sym[Any]]] // should check...\n  418  \n  ...\n  424    }\n  425  \n  426:   def reflectEffect[A:Manifest](x: Def[A])(implicit pos: SourceContext): Exp[A] = reflectEffect(x, Simple()) // simple effect (serialized with respect to other simples)\n  427  \n  428:   def reflectEffect[A:Manifest](d: Def[A], u: Summary)(implicit pos: SourceContext): Exp[A] = {\n  429      // are we depending on a variable? then we need to be serialized -> effect\n  430      val mutableInputs = readMutableData(d)\n  ...\n  432    }\n  433  \n  434:   def reflectEffectInternal[A:Manifest](x: Def[A], u: Summary)(implicit pos: SourceContext): Exp[A] = {\n  435      if (mustPure(u)) super.toAtom(x) else {\n  436        checkContext()\n\n/Users/vjovanov/code/virtualization-lms-core/src/internal/Expressions.scala:\n    2  package internal\n    3  \n    4: import scala.reflect.SourceContext\n    5  import scala.annotation.unchecked.uncheckedVariance\n    6  import scala.collection.mutable.ListBuffer\n    .\n   18    abstract class Exp[+T:Manifest] { // constants/symbols (atomic)\n   19      def tp: Manifest[T @uncheckedVariance] = manifest[T] //invariant position! but hey...\n   20:     def pos: List[SourceContext] = Nil\n   21    }\n   22  \n   ..\n   26      val attributes: scala.collection.mutable.Map[Any,Any] = scala.collection.mutable.ListMap.empty\n   27      var sourceInfo = Thread.currentThread.getStackTrace // will go away\n   28:     var sourceContexts: List[SourceContext] = Nil\n   29      override def pos = sourceContexts\n   30:     def withPos(pos: List[SourceContext]) = { sourceContexts :::= pos; this }\n   31    }\n   32  \n   ..\n   36    def fresh[T:Manifest]: Sym[T] = Sym[T] { nVars += 1;  if (nVars%1000 == 0) printlog(\"nVars=\"+nVars);  nVars -1 }\n   37  \n   38:   def fresh[T:Manifest](pos: List[SourceContext]): Sym[T] = fresh[T].withPos(pos)\n   39  \n   40    def quotePos(e: Exp[Any]): String = e.pos match {\n   41      case Nil => \"<unknown>\"\n   42      case cs =>\n   43:       def all(cs: SourceContext): List[SourceContext] = cs.parent match {\n   44          case None => List(cs)\n   45          case Some(p) => cs::all(p)\n   ..\n  114      globalDefs.find(x => x.defines(d).nonEmpty)\n  115  \n  116:   def findOrCreateDefinition[T:Manifest](d: Def[T], pos: List[SourceContext]): Stm =\n  117      findDefinition[T](d) map { x => x.defines(d).foreach(_.withPos(pos)); x } getOrElse {\n  118        createDefinition(fresh[T](pos), d)\n  119      }\n  120  \n  121:   def findOrCreateDefinitionExp[T:Manifest](d: Def[T], pos: List[SourceContext]): Exp[T] =\n  122      findOrCreateDefinition(d, pos).defines(d).get\n  123  \n  ...\n  129  \n  130  \n  131:   protected implicit def toAtom[T:Manifest](d: Def[T])(implicit pos: SourceContext): Exp[T] = {\n  132      findOrCreateDefinitionExp(d, List(pos)) // TBD: return Const(()) if type is Unit??\n  133    }\n\n/Users/vjovanov/code/virtualization-lms-core/src/internal/GPUCodegen.scala:\n    4  import java.io.{StringWriter, PrintWriter, File}\n    5  import collection.immutable.List._\n    6: import scala.reflect.SourceContext\n    7  import collection.mutable.{HashMap, HashSet, ArrayBuffer, ListMap, ListBuffer}\n    8  \n    .\n  229  \n  230    def printDebug(sym: Sym[Any], msg: String) {\n  231:     def getFirstStack(cs: SourceContext): SourceContext = cs.parent match {\n  232        case None => cs\n  233        case Some(p) => getFirstStack(p)\n\n/Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaCodegen.scala:\n    4  import java.io.{File, FileWriter, PrintWriter}\n    5  \n    6: import scala.reflect.SourceContext\n    7  \n    8  trait ScalaCodegen extends GenericCodegen with Config {\n\n/Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaConciseCodegen.scala:\n    3  \n    4  import java.io.{File, FileWriter, PrintWriter}\n    5: import scala.reflect.SourceContext\n    6  \n    7  /**\n    .\n   90  }\n   91  \n   92: import scala.reflect.SourceContext\n   93  import scala.annotation.unchecked.uncheckedVariance\n   94  import scala.collection.mutable.ListBuffer\n\n/Users/vjovanov/code/virtualization-lms-core/src/internal/Transforming.scala:\n    4  import util.OverloadHack\n    5  import scala.collection.{immutable,mutable}\n    6: import scala.reflect.SourceContext\n    7  import scala.virtualization.lms.common.WorklistTransformer\n    8  \n    .\n   79  \n   80    def mtype[A,B](m:Manifest[A]): Manifest[B] = m.asInstanceOf[Manifest[B]] // hack: need to pass explicit manifest during mirroring\n   81:   def mpos(s: List[SourceContext]): SourceContext = if (s.nonEmpty) s.head else implicitly[SourceContext] // hack: got list of pos but need to pass single pos to mirror\n   82  \n   83  \n   84  \n   85:   def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = mirrorDef(e,f)\n   86  \n   87:   def mirrorDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = sys.error(\"don't know how to mirror \" + e)\n   88  \n   89:   def mirrorFatDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = sys.error(\"don't know how to mirror \" + e) //hm...\n   90  \n   91  }\n   ..\n   94  trait FatTransforming extends Transforming with FatExpressions {\n   95  \n   96:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   97      case Forward(x) => toAtom(Forward(f(x)))(mtype(manifest[A]),pos)\n   98      case _ => super.mirror(e,f)\n\n/Users/vjovanov/code/virtualization-lms-core/target/streams/compile/incCompileSetup/$global/streams/inc_compile_2.11:\n 5049  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayBufferOps.scala -> Seq\n 5050  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayBufferOps.scala -> Serializable\n 5051: /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayBufferOps.scala -> SourceContext\n 5052  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayBufferOps.scala -> String\n 5053  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayBufferOps.scala -> StringContext\n ....\n 5178  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayOps.scala -> Seq\n 5179  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayOps.scala -> Serializable\n 5180: /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayOps.scala -> SourceContext\n 5181  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayOps.scala -> StringContext\n 5182  /Users/vjovanov/code/virtualization-lms-core/src/common/ArrayOps.scala -> Sym\n ....\n 5365  /Users/vjovanov/code/virtualization-lms-core/src/common/Base.scala -> ScalaGenBase\n 5366  /Users/vjovanov/code/virtualization-lms-core/src/common/Base.scala -> ScalaNestedCodegen\n 5367: /Users/vjovanov/code/virtualization-lms-core/src/common/Base.scala -> SourceContext\n 5368  /Users/vjovanov/code/virtualization-lms-core/src/common/Base.scala -> Summary\n 5369  /Users/vjovanov/code/virtualization-lms-core/src/common/Base.scala -> T\n ....\n 5453  /Users/vjovanov/code/virtualization-lms-core/src/common/BooleanOps.scala -> ScalaRunTime\n 5454  /Users/vjovanov/code/virtualization-lms-core/src/common/BooleanOps.scala -> Serializable\n 5455: /Users/vjovanov/code/virtualization-lms-core/src/common/BooleanOps.scala -> SourceContext\n 5456  /Users/vjovanov/code/virtualization-lms-core/src/common/BooleanOps.scala -> StringContext\n 5457  /Users/vjovanov/code/virtualization-lms-core/src/common/BooleanOps.scala -> Sym\n ....\n 5551  /Users/vjovanov/code/virtualization-lms-core/src/common/CastingOps.scala -> ScalaRunTime\n 5552  /Users/vjovanov/code/virtualization-lms-core/src/common/CastingOps.scala -> Serializable\n 5553: /Users/vjovanov/code/virtualization-lms-core/src/common/CastingOps.scala -> SourceContext\n 5554  /Users/vjovanov/code/virtualization-lms-core/src/common/CastingOps.scala -> StringContext\n 5555  /Users/vjovanov/code/virtualization-lms-core/src/common/CastingOps.scala -> Sym\n ....\n 5746  /Users/vjovanov/code/virtualization-lms-core/src/common/DynamicBase.scala -> ScalaRunTime\n 5747  /Users/vjovanov/code/virtualization-lms-core/src/common/DynamicBase.scala -> Serializable\n 5748: /Users/vjovanov/code/virtualization-lms-core/src/common/DynamicBase.scala -> SourceContext\n 5749  /Users/vjovanov/code/virtualization-lms-core/src/common/DynamicBase.scala -> Statics\n 5750  /Users/vjovanov/code/virtualization-lms-core/src/common/DynamicBase.scala -> String\n ....\n 5987  /Users/vjovanov/code/virtualization-lms-core/src/common/Equal.scala -> ScalaRunTime\n 5988  /Users/vjovanov/code/virtualization-lms-core/src/common/Equal.scala -> Serializable\n 5989: /Users/vjovanov/code/virtualization-lms-core/src/common/Equal.scala -> SourceContext\n 5990  /Users/vjovanov/code/virtualization-lms-core/src/common/Equal.scala -> StringContext\n 5991  /Users/vjovanov/code/virtualization-lms-core/src/common/Equal.scala -> Sym\n ....\n 6079  /Users/vjovanov/code/virtualization-lms-core/src/common/ExceptionOps.scala -> ScalaRunTime\n 6080  /Users/vjovanov/code/virtualization-lms-core/src/common/ExceptionOps.scala -> Serializable\n 6081: /Users/vjovanov/code/virtualization-lms-core/src/common/ExceptionOps.scala -> SourceContext\n 6082  /Users/vjovanov/code/virtualization-lms-core/src/common/ExceptionOps.scala -> String\n 6083  /Users/vjovanov/code/virtualization-lms-core/src/common/ExceptionOps.scala -> StringContext\n ....\n 6174  /Users/vjovanov/code/virtualization-lms-core/src/common/ForwardTransformer.scala -> Predef\n 6175  /Users/vjovanov/code/virtualization-lms-core/src/common/ForwardTransformer.scala -> RecursiveTransformer\n 6176: /Users/vjovanov/code/virtualization-lms-core/src/common/ForwardTransformer.scala -> SourceContext\n 6177  /Users/vjovanov/code/virtualization-lms-core/src/common/ForwardTransformer.scala -> Stm\n 6178  /Users/vjovanov/code/virtualization-lms-core/src/common/ForwardTransformer.scala -> Sym\n ....\n 6283  /Users/vjovanov/code/virtualization-lms-core/src/common/FractionalOps.scala -> ScalaRunTime\n 6284  /Users/vjovanov/code/virtualization-lms-core/src/common/FractionalOps.scala -> Serializable\n 6285: /Users/vjovanov/code/virtualization-lms-core/src/common/FractionalOps.scala -> SourceContext\n 6286  /Users/vjovanov/code/virtualization-lms-core/src/common/FractionalOps.scala -> StringContext\n 6287  /Users/vjovanov/code/virtualization-lms-core/src/common/FractionalOps.scala -> Sym\n ....\n 6368  /Users/vjovanov/code/virtualization-lms-core/src/common/FunctionBlocks.scala -> ScalaRunTime\n 6369  /Users/vjovanov/code/virtualization-lms-core/src/common/FunctionBlocks.scala -> Serializable\n 6370: /Users/vjovanov/code/virtualization-lms-core/src/common/FunctionBlocks.scala -> SourceContext\n 6371  /Users/vjovanov/code/virtualization-lms-core/src/common/FunctionBlocks.scala -> Sym\n 6372  /Users/vjovanov/code/virtualization-lms-core/src/common/FunctionBlocks.scala -> T1\n ....\n 6499  /Users/vjovanov/code/virtualization-lms-core/src/common/Functions.scala -> ScalaRunTime\n 6500  /Users/vjovanov/code/virtualization-lms-core/src/common/Functions.scala -> Serializable\n 6501: /Users/vjovanov/code/virtualization-lms-core/src/common/Functions.scala -> SourceContext\n 6502  /Users/vjovanov/code/virtualization-lms-core/src/common/Functions.scala -> String\n 6503  /Users/vjovanov/code/virtualization-lms-core/src/common/Functions.scala -> Sym\n ....\n 6723  /Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala -> Serializable\n 6724  /Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala -> Set\n 6725: /Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala -> SourceContext\n 6726  /Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala -> Sym\n 6727  /Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala -> Transformer\n ....\n 6861  /Users/vjovanov/code/virtualization-lms-core/src/common/IOOps.scala -> ScalaRunTime\n 6862  /Users/vjovanov/code/virtualization-lms-core/src/common/IOOps.scala -> Serializable\n 6863: /Users/vjovanov/code/virtualization-lms-core/src/common/IOOps.scala -> SourceContext\n 6864  /Users/vjovanov/code/virtualization-lms-core/src/common/IOOps.scala -> String\n 6865  /Users/vjovanov/code/virtualization-lms-core/src/common/IOOps.scala -> StringContext\n ....\n 6990  /Users/vjovanov/code/virtualization-lms-core/src/common/IfThenElse.scala -> Serializable\n 6991  /Users/vjovanov/code/virtualization-lms-core/src/common/IfThenElse.scala -> SimpleFatIfThenElse\n 6992: /Users/vjovanov/code/virtualization-lms-core/src/common/IfThenElse.scala -> SourceContext\n 6993  /Users/vjovanov/code/virtualization-lms-core/src/common/IfThenElse.scala -> Stm\n 6994  /Users/vjovanov/code/virtualization-lms-core/src/common/IfThenElse.scala -> Sym\n ....\n 7138  /Users/vjovanov/code/virtualization-lms-core/src/common/ImplicitOps.scala -> ScalaRunTime\n 7139  /Users/vjovanov/code/virtualization-lms-core/src/common/ImplicitOps.scala -> Serializable\n 7140: /Users/vjovanov/code/virtualization-lms-core/src/common/ImplicitOps.scala -> SourceContext\n 7141  /Users/vjovanov/code/virtualization-lms-core/src/common/ImplicitOps.scala -> StringContext\n 7142  /Users/vjovanov/code/virtualization-lms-core/src/common/ImplicitOps.scala -> Sym\n ....\n 7220  /Users/vjovanov/code/virtualization-lms-core/src/common/IterableOps.scala -> ScalaRunTime\n 7221  /Users/vjovanov/code/virtualization-lms-core/src/common/IterableOps.scala -> Serializable\n 7222: /Users/vjovanov/code/virtualization-lms-core/src/common/IterableOps.scala -> SourceContext\n 7223  /Users/vjovanov/code/virtualization-lms-core/src/common/IterableOps.scala -> StringContext\n 7224  /Users/vjovanov/code/virtualization-lms-core/src/common/IterableOps.scala -> Sym\n ....\n 7360  /Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala -> Seq\n 7361  /Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala -> Serializable\n 7362: /Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala -> SourceContext\n 7363  /Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala -> String\n 7364  /Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala -> StringContext\n ....\n 7813  /Users/vjovanov/code/virtualization-lms-core/src/common/Loops.scala -> SimpleFatLoop\n 7814  /Users/vjovanov/code/virtualization-lms-core/src/common/Loops.scala -> SimpleLoop\n 7815: /Users/vjovanov/code/virtualization-lms-core/src/common/Loops.scala -> SourceContext\n 7816  /Users/vjovanov/code/virtualization-lms-core/src/common/Loops.scala -> Stm\n 7817  /Users/vjovanov/code/virtualization-lms-core/src/common/Loops.scala -> Sym\n ....\n 7950  /Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala -> ScalaRunTime\n 7951  /Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala -> Serializable\n 7952: /Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala -> SourceContext\n 7953  /Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala -> StringContext\n 7954  /Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala -> Sym\n ....\n 8070  /Users/vjovanov/code/virtualization-lms-core/src/common/MiscOps.scala -> ScalaRunTime\n 8071  /Users/vjovanov/code/virtualization-lms-core/src/common/MiscOps.scala -> Serializable\n 8072: /Users/vjovanov/code/virtualization-lms-core/src/common/MiscOps.scala -> SourceContext\n 8073  /Users/vjovanov/code/virtualization-lms-core/src/common/MiscOps.scala -> String\n 8074  /Users/vjovanov/code/virtualization-lms-core/src/common/MiscOps.scala -> StringContext\n ....\n 8181  /Users/vjovanov/code/virtualization-lms-core/src/common/NumericOps.scala -> ScalaRunTime\n 8182  /Users/vjovanov/code/virtualization-lms-core/src/common/NumericOps.scala -> Serializable\n 8183: /Users/vjovanov/code/virtualization-lms-core/src/common/NumericOps.scala -> SourceContext\n 8184  /Users/vjovanov/code/virtualization-lms-core/src/common/NumericOps.scala -> StringContext\n 8185  /Users/vjovanov/code/virtualization-lms-core/src/common/NumericOps.scala -> Sym\n ....\n 8299  /Users/vjovanov/code/virtualization-lms-core/src/common/ObjectOps.scala -> ScalaRunTime\n 8300  /Users/vjovanov/code/virtualization-lms-core/src/common/ObjectOps.scala -> Serializable\n 8301: /Users/vjovanov/code/virtualization-lms-core/src/common/ObjectOps.scala -> SourceContext\n 8302  /Users/vjovanov/code/virtualization-lms-core/src/common/ObjectOps.scala -> String\n 8303  /Users/vjovanov/code/virtualization-lms-core/src/common/ObjectOps.scala -> StringContext\n ....\n 8419  /Users/vjovanov/code/virtualization-lms-core/src/common/OrderingOps.scala -> Serializable\n 8420  /Users/vjovanov/code/virtualization-lms-core/src/common/OrderingOps.scala -> Short\n 8421: /Users/vjovanov/code/virtualization-lms-core/src/common/OrderingOps.scala -> SourceContext\n 8422  /Users/vjovanov/code/virtualization-lms-core/src/common/OrderingOps.scala -> StringContext\n 8423  /Users/vjovanov/code/virtualization-lms-core/src/common/OrderingOps.scala -> Sym\n ....\n 8793  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> ScalaRunTime\n 8794  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> Serializable\n 8795: /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> SourceContext\n 8796  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> String\n 8797  /Users/vjovanov/code/virtualization-lms-core/src/common/PrimitiveOps.scala -> StringContext\n ....\n 8974  /Users/vjovanov/code/virtualization-lms-core/src/common/RangeOps.scala -> ScalaRunTime\n 8975  /Users/vjovanov/code/virtualization-lms-core/src/common/RangeOps.scala -> Serializable\n 8976: /Users/vjovanov/code/virtualization-lms-core/src/common/RangeOps.scala -> SourceContext\n 8977  /Users/vjovanov/code/virtualization-lms-core/src/common/RangeOps.scala -> StringContext\n 8978  /Users/vjovanov/code/virtualization-lms-core/src/common/RangeOps.scala -> Sym\n ....\n 9101  /Users/vjovanov/code/virtualization-lms-core/src/common/SeqOps.scala -> SeqOpsExp\n 9102  /Users/vjovanov/code/virtualization-lms-core/src/common/SeqOps.scala -> Serializable\n 9103: /Users/vjovanov/code/virtualization-lms-core/src/common/SeqOps.scala -> SourceContext\n 9104  /Users/vjovanov/code/virtualization-lms-core/src/common/SeqOps.scala -> StringContext\n 9105  /Users/vjovanov/code/virtualization-lms-core/src/common/SeqOps.scala -> Sym\n ....\n 9209  /Users/vjovanov/code/virtualization-lms-core/src/common/SetOps.scala -> SetToArray\n 9210  /Users/vjovanov/code/virtualization-lms-core/src/common/SetOps.scala -> SetToSeq\n 9211: /Users/vjovanov/code/virtualization-lms-core/src/common/SetOps.scala -> SourceContext\n 9212  /Users/vjovanov/code/virtualization-lms-core/src/common/SetOps.scala -> StringContext\n 9213  /Users/vjovanov/code/virtualization-lms-core/src/common/SetOps.scala -> Sym\n ....\n 9302  /Users/vjovanov/code/virtualization-lms-core/src/common/SimplifyTransform.scala -> Predef\n 9303  /Users/vjovanov/code/virtualization-lms-core/src/common/SimplifyTransform.scala -> SimplifyTransform\n 9304: /Users/vjovanov/code/virtualization-lms-core/src/common/SimplifyTransform.scala -> SourceContext\n 9305  /Users/vjovanov/code/virtualization-lms-core/src/common/SimplifyTransform.scala -> Stm\n 9306  /Users/vjovanov/code/virtualization-lms-core/src/common/SimplifyTransform.scala -> SubstTransformer\n ....\n 9494  /Users/vjovanov/code/virtualization-lms-core/src/common/SplitEffects.scala -> SimpleFatPrevious\n 9495  /Users/vjovanov/code/virtualization-lms-core/src/common/SplitEffects.scala -> SimpleFatWhile\n 9496: /Users/vjovanov/code/virtualization-lms-core/src/common/SplitEffects.scala -> SourceContext\n 9497  /Users/vjovanov/code/virtualization-lms-core/src/common/SplitEffects.scala -> SplitEffectsExpFat\n 9498  /Users/vjovanov/code/virtualization-lms-core/src/common/SplitEffects.scala -> Stm\n ....\n 9692  /Users/vjovanov/code/virtualization-lms-core/src/common/StaticData.scala -> ScalaRunTime\n 9693  /Users/vjovanov/code/virtualization-lms-core/src/common/StaticData.scala -> Serializable\n 9694: /Users/vjovanov/code/virtualization-lms-core/src/common/StaticData.scala -> SourceContext\n 9695  /Users/vjovanov/code/virtualization-lms-core/src/common/StaticData.scala -> StaticData\n 9696  /Users/vjovanov/code/virtualization-lms-core/src/common/StaticData.scala -> StaticDataExp\n ....\n 9819  /Users/vjovanov/code/virtualization-lms-core/src/common/StringOps.scala -> Serializable\n 9820  /Users/vjovanov/code/virtualization-lms-core/src/common/StringOps.scala -> Short\n 9821: /Users/vjovanov/code/virtualization-lms-core/src/common/StringOps.scala -> SourceContext\n 9822  /Users/vjovanov/code/virtualization-lms-core/src/common/StringOps.scala -> String\n 9823  /Users/vjovanov/code/virtualization-lms-core/src/common/StringOps.scala -> StringCharAt\n ....\n 9993  /Users/vjovanov/code/virtualization-lms-core/src/common/Structs.scala -> Serializable\n 9994  /Users/vjovanov/code/virtualization-lms-core/src/common/Structs.scala -> SimpleStruct\n 9995: /Users/vjovanov/code/virtualization-lms-core/src/common/Structs.scala -> SourceContext\n 9996  /Users/vjovanov/code/virtualization-lms-core/src/common/Structs.scala -> Stm\n 9997  /Users/vjovanov/code/virtualization-lms-core/src/common/Structs.scala -> String\n ....\n 10249  /Users/vjovanov/code/virtualization-lms-core/src/common/SynchronizedArrayBufferOps.scala -> Seq\n 10250  /Users/vjovanov/code/virtualization-lms-core/src/common/SynchronizedArrayBufferOps.scala -> Serializable\n 10251: /Users/vjovanov/code/virtualization-lms-core/src/common/SynchronizedArrayBufferOps.scala -> SourceContext\n 10252  /Users/vjovanov/code/virtualization-lms-core/src/common/SynchronizedArrayBufferOps.scala -> StringContext\n 10253  /Users/vjovanov/code/virtualization-lms-core/src/common/SynchronizedArrayBufferOps.scala -> Sym\n .....\n 10323  /Users/vjovanov/code/virtualization-lms-core/src/common/TupleOps.scala -> ScalaGenStruct\n 10324  /Users/vjovanov/code/virtualization-lms-core/src/common/TupleOps.scala -> Some\n 10325: /Users/vjovanov/code/virtualization-lms-core/src/common/TupleOps.scala -> SourceContext\n 10326  /Users/vjovanov/code/virtualization-lms-core/src/common/TupleOps.scala -> StructExpOpt\n 10327  /Users/vjovanov/code/virtualization-lms-core/src/common/TupleOps.scala -> T\n .....\n 10408  /Users/vjovanov/code/virtualization-lms-core/src/common/Unchecked.scala -> ScalaRunTime\n 10409  /Users/vjovanov/code/virtualization-lms-core/src/common/Unchecked.scala -> Serializable\n 10410: /Users/vjovanov/code/virtualization-lms-core/src/common/Unchecked.scala -> SourceContext\n 10411  /Users/vjovanov/code/virtualization-lms-core/src/common/Unchecked.scala -> StringContext\n 10412  /Users/vjovanov/code/virtualization-lms-core/src/common/Unchecked.scala -> Sym\n .....\n 10516  /Users/vjovanov/code/virtualization-lms-core/src/common/Variables.scala -> ScalaRunTime\n 10517  /Users/vjovanov/code/virtualization-lms-core/src/common/Variables.scala -> Serializable\n 10518: /Users/vjovanov/code/virtualization-lms-core/src/common/Variables.scala -> SourceContext\n 10519  /Users/vjovanov/code/virtualization-lms-core/src/common/Variables.scala -> Sym\n 10520  /Users/vjovanov/code/virtualization-lms-core/src/common/Variables.scala -> T\n .....\n 10662  /Users/vjovanov/code/virtualization-lms-core/src/common/While.scala -> ScalaRunTime\n 10663  /Users/vjovanov/code/virtualization-lms-core/src/common/While.scala -> Serializable\n 10664: /Users/vjovanov/code/virtualization-lms-core/src/common/While.scala -> SourceContext\n 10665  /Users/vjovanov/code/virtualization-lms-core/src/common/While.scala -> Sym\n 10666  /Users/vjovanov/code/virtualization-lms-core/src/common/While.scala -> Tuple2\n .....\n 11426  /Users/vjovanov/code/virtualization-lms-core/src/internal/Effects.scala -> Serializable\n 11427  /Users/vjovanov/code/virtualization-lms-core/src/internal/Effects.scala -> Simple\n 11428: /Users/vjovanov/code/virtualization-lms-core/src/internal/Effects.scala -> SourceContext\n 11429  /Users/vjovanov/code/virtualization-lms-core/src/internal/Effects.scala -> State\n 11430  /Users/vjovanov/code/virtualization-lms-core/src/internal/Effects.scala -> Statics\n .....\n 11712  /Users/vjovanov/code/virtualization-lms-core/src/internal/Expressions.scala -> ScalaRunTime\n 11713  /Users/vjovanov/code/virtualization-lms-core/src/internal/Expressions.scala -> Serializable\n 11714: /Users/vjovanov/code/virtualization-lms-core/src/internal/Expressions.scala -> SourceContext\n 11715  /Users/vjovanov/code/virtualization-lms-core/src/internal/Expressions.scala -> StackTraceElement\n 11716  /Users/vjovanov/code/virtualization-lms-core/src/internal/Expressions.scala -> Statics\n .....\n 12047  /Users/vjovanov/code/virtualization-lms-core/src/internal/GPUCodegen.scala -> ScalaRunTime\n 12048  /Users/vjovanov/code/virtualization-lms-core/src/internal/GPUCodegen.scala -> Serializable\n 12049: /Users/vjovanov/code/virtualization-lms-core/src/internal/GPUCodegen.scala -> SourceContext\n 12050  /Users/vjovanov/code/virtualization-lms-core/src/internal/GPUCodegen.scala -> String\n 12051  /Users/vjovanov/code/virtualization-lms-core/src/internal/GPUCodegen.scala -> StringBuilder\n .....\n 12564  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaCodegen.scala -> ScalaFatCodegen\n 12565  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaCodegen.scala -> ScalaNestedCodegen\n 12566: /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaCodegen.scala -> SourceContext\n 12567  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaCodegen.scala -> Stm\n 12568  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaCodegen.scala -> String\n .....\n 12787  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaConciseCodegen.scala -> ScalaNestedCodegen\n 12788  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaConciseCodegen.scala -> Seq\n 12789: /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaConciseCodegen.scala -> SourceContext\n 12790  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaConciseCodegen.scala -> StackTraceElement\n 12791  /Users/vjovanov/code/virtualization-lms-core/src/internal/ScalaConciseCodegen.scala -> Stm\n .....\n 13100  /Users/vjovanov/code/virtualization-lms-core/src/internal/Transforming.scala -> Predef\n 13101  /Users/vjovanov/code/virtualization-lms-core/src/internal/Transforming.scala -> Seq\n 13102: /Users/vjovanov/code/virtualization-lms-core/src/internal/Transforming.scala -> SourceContext\n 13103  /Users/vjovanov/code/virtualization-lms-core/src/internal/Transforming.scala -> Stm\n 13104  /Users/vjovanov/code/virtualization-lms-core/src/internal/Transforming.scala -> SubstTransformer\n\n~/code/virtualization-lms-core/target/streams/test/compile/$global/streams/out:\n    <binary>\n\n/Users/vjovanov/code/virtualization-lms-core/target/streams/test/incCompileSetup/$global/streams/inc_compile_2.11:\n 6195  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arith.scala -> ScalaRunTime\n 6196  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arith.scala -> Serializable\n 6197: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arith.scala -> SourceContext\n 6198  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arith.scala -> Sym\n 6199  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arith.scala -> T\n ....\n 6279  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arrays.scala -> ScalaRunTime\n 6280  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arrays.scala -> Serializable\n 6281: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arrays.scala -> SourceContext\n 6282  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arrays.scala -> Sym\n 6283  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arrays.scala -> T\n ....\n 6338  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Relat.scala -> ScalaRunTime\n 6339  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Relat.scala -> Serializable\n 6340: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Relat.scala -> SourceContext\n 6341  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Relat.scala -> _1\n 6342  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Relat.scala -> _2\n ....\n 6387  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/TestNumeric.scala -> Prog\n 6388  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/TestNumeric.scala -> Rep\n 6389: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/TestNumeric.scala -> SourceContext\n 6390  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/TestNumeric.scala -> StringOps\n 6391  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/TestNumeric.scala -> StructOps\n ....\n 6432  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Trig.scala -> Serializable\n 6433  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Trig.scala -> Sin\n 6434: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Trig.scala -> SourceContext\n 6435  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Trig.scala -> Trig\n 6436  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Trig.scala -> TrigExp\n ....\n 6500  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestBackward.scala -> ScalaRunTime\n 6501  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestBackward.scala -> Serializable\n 6502: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestBackward.scala -> SourceContext\n 6503  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestBackward.scala -> Stm\n 6504  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestBackward.scala -> String\n ....\n 6616  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestEffect.scala -> ScalaGenArrayLoops\n 6617  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestEffect.scala -> ScalaGenPrint\n 6618: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestEffect.scala -> SourceContext\n 6619  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestEffect.scala -> StringWriter\n 6620  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestEffect.scala -> common\n ....\n 6641  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestMiscTransform.scala -> ScalaGenArrayLoops\n 6642  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestMiscTransform.scala -> ScalaGenPrint\n 6643: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestMiscTransform.scala -> SourceContext\n 6644  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestMiscTransform.scala -> StringWriter\n 6645  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestMiscTransform.scala -> common\n ....\n 6666  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransform.scala -> ScalaGenArrayLoops\n 6667  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransform.scala -> ScalaGenPrint\n 6668: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransform.scala -> SourceContext\n 6669  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransform.scala -> StringWriter\n 6670  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransform.scala -> common\n ....\n 6736  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransformRec.scala -> ScalaRunTime\n 6737  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransformRec.scala -> Serializable\n 6738: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransformRec.scala -> SourceContext\n 6739  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransformRec.scala -> StringWriter\n 6740  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransformRec.scala -> Sym\n ....\n 6840  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform.scala -> ScalaGenArrayLoops\n 6841  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform.scala -> ScalaGenPrint\n 6842: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform.scala -> SourceContext\n 6843  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform.scala -> StringWriter\n 6844  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform.scala -> common\n ....\n 6866  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform2.scala -> ScalaGenArrayLoops\n 6867  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform2.scala -> ScalaGenPrint\n 6868: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform2.scala -> SourceContext\n 6869  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform2.scala -> StringWriter\n 6870  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform2.scala -> common\n ....\n 6918  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/Vectors.scala -> ScalaRunTime\n 6919  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/Vectors.scala -> Serializable\n 6920: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/Vectors.scala -> SourceContext\n 6921  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/Vectors.scala -> StringWriter\n 6922  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/Vectors.scala -> Sym\n ....\n 7065  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestHMM.scala -> ScalaGenVariables\n 7066  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestHMM.scala -> ScalaRunTime\n 7067: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestHMM.scala -> SourceContext\n 7068  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestHMM.scala -> StaticDataExp\n 7069  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestHMM.scala -> StringWriter\n ....\n 7225  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestStencil.scala -> Sliding\n 7226  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestStencil.scala -> SlidingExp\n 7227: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestStencil.scala -> SourceContext\n 7228  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestStencil.scala -> StaticDataExp\n 7229  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestStencil.scala -> StringWriter\n ....\n 7403  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestArrayOps.scala -> ScalaGenArrayOps\n 7404  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestArrayOps.scala -> ScalaGenMiscOps\n 7405: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestArrayOps.scala -> SourceContext\n 7406  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestArrayOps.scala -> System\n 7407  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestArrayOps.scala -> TestArrayOps\n ....\n 7462  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestList.scala -> ScalaGenOrderingOps\n 7463  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestList.scala -> ScalaGenPrimitiveOps\n 7464: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestList.scala -> SourceContext\n 7465  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestList.scala -> String\n 7466  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test12-collections/TestList.scala -> System\n ....\n 7514  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestInterpret.scala -> ScalaGenArrayLoops\n 7515  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestInterpret.scala -> ScalaGenPrint\n 7516: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestInterpret.scala -> SourceContext\n 7517  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestInterpret.scala -> StringWriter\n 7518  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestInterpret.scala -> common\n ....\n 7540  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestStable.scala -> ScalaGenArrayLoops\n 7541  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestStable.scala -> ScalaGenPrint\n 7542: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestStable.scala -> SourceContext\n 7543  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestStable.scala -> StringWriter\n 7544  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestStable.scala -> common\n ....\n 7601  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> ScalaRunTime\n 7602  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> Serializable\n 7603: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> SourceContext\n 7604  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> String\n 7605  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestCGen.scala -> StringWriter\n ....\n 7767  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> Seq\n 7768  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> Serializable\n 7769: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> SourceContext\n 7770  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> String\n 7771  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala -> StringContext\n ....\n 8019  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestQueries.scala -> Serializable\n 8020  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestQueries.scala -> Shallow\n 8021: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestQueries.scala -> SourceContext\n 8022  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestQueries.scala -> Staged\n 8023  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestQueries.scala -> StagedExp\n ....\n 8413  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala -> Serializable\n 8414  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala -> Settings\n 8415: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala -> SourceContext\n 8416  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala -> StaticDataExp\n 8417  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala -> Statics\n ....\n 8825  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestFFT.scala -> ScalaRunTime\n 8826  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestFFT.scala -> Serializable\n 8827: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestFFT.scala -> SourceContext\n 8828  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestFFT.scala -> System\n 8829  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestFFT.scala -> T\n ....\n 8980  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestPower.scala -> ScalaGenArith\n 8981  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestPower.scala -> ScalaGenFlat\n 8982: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestPower.scala -> SourceContext\n 8983  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestPower.scala -> String\n 8984  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestPower.scala -> System\n ....\n 9146  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Effects.scala -> ScalaRunTime\n 9147  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Effects.scala -> Serializable\n 9148: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Effects.scala -> SourceContext\n 9149  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Effects.scala -> State\n 9150  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Effects.scala -> _hashCode\n ....\n 9253  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Functions.scala -> ScalaRunTime\n 9254  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Functions.scala -> Serializable\n 9255: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Functions.scala -> SourceContext\n 9256  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Functions.scala -> _root_\n 9257  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Functions.scala -> _toString\n ....\n 9340  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Matching.scala -> Second\n 9341  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Matching.scala -> Serializable\n 9342: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Matching.scala -> SourceContext\n 9343  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Matching.scala -> Switchable\n 9344  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Matching.scala -> Test\n ....\n 9741  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Automata.scala -> ScalaRunTime\n 9742  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Automata.scala -> Serializable\n 9743: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Automata.scala -> SourceContext\n 9744  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Automata.scala -> Stepper2\n 9745  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Automata.scala -> StepperOps\n ....\n 9983  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Functions.scala -> ScalaRunTime\n 9984  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Functions.scala -> Serializable\n 9985: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Functions.scala -> SourceContext\n 9986  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Functions.scala -> Sym\n 9987  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Functions.scala -> Tuple2\n ....\n 10124  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestAckermann.scala -> ScalaGenFunctionsExternal\n 10125  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestAckermann.scala -> ScalaGenIfThenElse\n 10126: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestAckermann.scala -> SourceContext\n 10127  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestAckermann.scala -> System\n 10128  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestAckermann.scala -> TestAck\n .....\n 10211  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestFac.scala -> ScalaGenFunctionsExternal\n 10212  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestFac.scala -> ScalaGenIfThenElse\n 10213: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestFac.scala -> SourceContext\n 10214  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestFac.scala -> System\n 10215  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestFac.scala -> TestFac\n .....\n 10480  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestMatcherNew.scala -> Seq\n 10481  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestMatcherNew.scala -> Serializable\n 10482: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestMatcherNew.scala -> SourceContext\n 10483  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestMatcherNew.scala -> SplitEffectsExpFat\n 10484  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/TestMatcherNew.scala -> Stepper2\n .....\n 10875  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestConditional.scala -> ScalaRunTime\n 10876  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestConditional.scala -> Serializable\n 10877: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestConditional.scala -> SourceContext\n 10878  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestConditional.scala -> String\n 10879  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestConditional.scala -> Sym\n .....\n 10984  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestFunctions.scala -> SchedFunProg\n 10985  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestFunctions.scala -> Seq\n 10986: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestFunctions.scala -> SourceContext\n 10987  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestFunctions.scala -> String\n 10988  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test5-js/TestFunctions.scala -> Struct\n .....\n 11138  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test6-layered/Test.scala -> ScalaRunTime\n 11139  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test6-layered/Test.scala -> Serializable\n 11140: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test6-layered/Test.scala -> SourceContext\n 11141  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test6-layered/Test.scala -> StrCat\n 11142  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test6-layered/Test.scala -> String\n .....\n 11301  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/Arrays.scala -> ScalaRunTime\n 11302  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/Arrays.scala -> Serializable\n 11303: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/Arrays.scala -> SourceContext\n 11304  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/Arrays.scala -> StringWriter\n 11305  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/Arrays.scala -> Sym\n .....\n 11425  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala -> ScalaRunTime\n 11426  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala -> Serializable\n 11427: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala -> SourceContext\n 11428  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala -> String\n 11429  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala -> StringWriter\n .....\n 11519  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestCodeMotion.scala -> ScalaGenOrderingOps\n 11520  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestCodeMotion.scala -> ScalaGenPrint\n 11521: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestCodeMotion.scala -> SourceContext\n 11522  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestCodeMotion.scala -> StringWriter\n 11523  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestCodeMotion.scala -> System\n .....\n 11614  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion.scala -> ScalaGenOrderingOps\n 11615  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion.scala -> ScalaGenPrint\n 11616: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion.scala -> SourceContext\n 11617  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion.scala -> Stm\n 11618  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion.scala -> StringWriter\n .....\n 11732  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala -> ScalaGenOrderingOps\n 11733  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala -> ScalaGenPrint\n 11734: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala -> SourceContext\n 11735  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala -> Stm\n 11736  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala -> StringWriter\n .....\n 12064  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestMutation.scala -> ScalaRunTime\n 12065  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestMutation.scala -> Serializable\n 12066: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestMutation.scala -> SourceContext\n 12067  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestMutation.scala -> StringWriter\n 12068  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestMutation.scala -> Sym\n .....\n 12219  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestSpeculative.scala -> ScalaGenVariables\n 12220  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestSpeculative.scala -> ScalaGenWhileOptSpeculative\n 12221: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestSpeculative.scala -> SourceContext\n 12222  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestSpeculative.scala -> SplitEffectsExpFat\n 12223  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestSpeculative.scala -> StringWriter\n .....\n 12333  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestCrossStage.scala -> ScalaGenStaticData\n 12334  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestCrossStage.scala -> ScalaGenVariables\n 12335: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestCrossStage.scala -> SourceContext\n 12336  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestCrossStage.scala -> StaticDataExp\n 12337  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestCrossStage.scala -> StringWriter\n .....\n 12457  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestStruct.scala -> Seq\n 12458  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestStruct.scala -> Serializable\n 12459: /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestStruct.scala -> SourceContext\n 12460  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestStruct.scala -> Stm\n 12461  /Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestStruct.scala -> StringWriter\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/Arith.scala:\n    5  import common._\n    6  \n    7: import scala.reflect.SourceContext\n    8  import java.io.PrintWriter\n    9  \n   ..\n   30    }\n   31  \n   32:   def infix_+(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n   33:   def infix_-(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n   34:   def infix_*(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n   35:   def infix_/(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext): Rep[Double]\n   36  }\n   37  \n   ..\n   46    case class Div(x: Exp[Double], y: Exp[Double]) extends Def[Double]\n   47  \n   48:   def infix_+(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = Plus(x, y)\n   49:   def infix_-(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = Minus(x, y)\n   50:   def infix_*(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = Times(x, y)\n   51:   def infix_/(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = Div(x, y)\n   52    \n   53:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   54      case Plus(x,y) => f(x) + f(y)\n   55      case Minus(x,y) => f(x) - f(y)\n   ..\n   62  trait ArithExpOpt extends ArithExp {\n   63  \n   64:   override def infix_+(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n   65      case (Const(x), Const(y)) => Const(x + y)\n   66      case (x, Const(0.0) | Const(-0.0)) => x\n   ..\n   69    }\n   70  \n   71:   override def infix_-(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n   72      case (Const(x), Const(y)) => Const(x - y)\n   73      case (x, Const(0.0) | Const(-0.0)) => x\n   ..\n   75    }\n   76  \n   77:   override def infix_*(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n   78      case (Const(x), Const(y)) => Const(x * y)\n   79      case (x, Const(1.0)) => x\n   ..\n   84    }\n   85  \n   86:   override def infix_/(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n   87      case (Const(x), Const(y)) => Const(x / y)\n   88      case (x, Const(1.0)) => x\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test1-arith/TestNumeric.scala:\n    6  import internal._\n    7  \n    8: import scala.reflect.SourceContext\n    9  \n   10  \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestBackward.scala:\n    6  import internal._\n    7  \n    8: import scala.reflect.SourceContext\n    9  \n   10  // investigate backward analysis -- these are preliminary ideas ...\n   ..\n  120  \n  121    def reflect[T](d: Def[T]): Exp[T] = {\n  122:     val sym = fresh[T](List(implicitly[SourceContext]))(mtype(manifest[Any]))\n  123      curStms = curStms :+ createDefinition(sym,d)\n  124      sym\n  ...\n  165      \n  166      val block1 = reifyBlock {\n  167:       f(fresh[A](List(implicitly[SourceContext]))(mtype(manifest[Any])))\n  168      }\n  169      \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestEffect.scala:\n   13  \n   14  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   15: import scala.reflect.SourceContext\n   16  \n   17  \n   ..\n   64    case class Multi(as: List[Def[Any]]) extends FatDef\n   65  \n   66:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   67      case Mutate(a,b) => toAtom(Mutate(f(a),f(b)))\n   68      case Copy(a) => toAtom(Copy(f(a)))\n   ..\n   95    // ergo, need to save original Defs (or have a way to reconstruct them).\n   96  \n   97:   override implicit def toAtom[A:Manifest](d: Def[A])(implicit pos: SourceContext): Exp[A] = {\n   98      val in = syms(d)\n   99      val actual = in map (s => subst.getOrElse(s,s))\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestMiscTransform.scala:\n   13  \n   14  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   15: import scala.reflect.SourceContext\n   16  \n   17  \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransform.scala:\n   13  \n   14  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   15: import scala.reflect.SourceContext\n   16  \n   17  \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestTransformRec.scala:\n   10  \n   11  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   12: import scala.reflect.SourceContext\n   13  \n   14  class TestTransformRec extends FileDiffSuite {\n   ..\n   36      }\n   37  \n   38:     override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   39        case Apply(x,y) => toAtom(Apply(f(x),f(y)))\n   40        case g@DefineFun(y) => toAtom(DefineFun(f(y))(g.arg))\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform.scala:\n   13  \n   14  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   15: import scala.reflect.SourceContext\n   16  \n   17  /*// investigate worklist transform phases (separate from optimization).\n   ..\n   52    // Foo(x) atPhase(t) { bar(x) }   <--- x in bar(x)  will refer to a sym that may have been replaced itself\n   53  \n   54:   protected override implicit def toAtom[A:Manifest](d: Def[A])(implicit pos: SourceContext): Exp[A] = { // override createDefinition instead?\n   55      val in = syms(d)\n   56      val actual = xform(in)\n   ..\n  115    }\n  116  \n  117:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  118      case VectorFromArray(a) => vfromarray(f(a))\n  119      case VectorToArray(a) => vtoarray(f(a))\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/TestWorklistTransform2.scala:\n   13  \n   14  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   15: import scala.reflect.SourceContext\n   16  \n   17  // investigate worklist transform phases (separate from optimization).\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test10-transform/Vectors.scala:\n   13  \n   14  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   15: import scala.reflect.SourceContext\n   16  \n   17  /*\n   ..\n   54    def vlength[T:Manifest](a: Rep[Vector[T]]): Rep[Int] = VectorLength(a)\n   55  \n   56:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   57      case VectorZeros(n) => vzeros(f(n))\n   58      case VectorLiteral(a) => vliteral(f(a))\n   ..\n   64    }).asInstanceOf[Exp[A]] // why??\n   65  \n   66:   override def mirrorDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = (e match {\n   67      case VectorZeros(n) => VectorZeros(f(n))\n   68      case VectorLiteral(a) => VectorLiteral(f(a))\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestHMM.scala:\n    9  \n   10  import util.OverloadHack\n   11: import scala.reflect.SourceContext\n   12  \n   13  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   14: import scala.reflect.SourceContext\n   15  \n   16  \n   ..\n  138        }\n  139        new Prog with Impl {\n  140:         override def array_apply[T:Manifest](x: Exp[Array[T]], n: Exp[Int])(implicit pos: SourceContext): Exp[T] = (x,n) match {\n  141            case (Def(StaticData(x:Array[T])), Const(n)) => Const(x(n))\n  142            case _ => super.array_apply(x,n)\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestStencil.scala:\n    9  \n   10  import util.OverloadHack\n   11: import scala.reflect.SourceContext\n   12  \n   13  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   14: import scala.reflect.SourceContext\n   15  \n   16  \n   ..\n   77      \n   78      // some arithemetic rewrites\n   79:     override def int_plus(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext): Exp[Int] = ((lhs,rhs) match {\n   80        case (Def(IntPlus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => int_plus(x, unit(y+z)) // (x+y)+z --> x+(y+z)\n   81        case (Def(IntMinus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => int_minus(x, unit(y-z)) // (x-y)+z --> x-(y-z)\n   ..\n   84      }).asInstanceOf[Exp[Int]]\n   85  \n   86:     override def int_minus(lhs: Exp[Int], rhs: Exp[Int])(implicit pos: SourceContext): Exp[Int] = ((lhs,rhs) match {\n   87        case (Def(IntMinus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => int_minus(x, unit(y+z)) // (x-y)-z --> x-(y+z)\n   88        case (Def(IntPlus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => int_plus(x, unit(y-z)) // (x+y)-z --> x+(y-z)\n   ..\n   91      }).asInstanceOf[Exp[Int]]\n   92  \n   93:     override def numeric_plus[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[T] = ((lhs,rhs) match {\n   94        case (Def(NumericPlus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => numeric_plus(x, unit(y+z)) // (x+y)+z --> x+(y+z)\n   95        case (Def(NumericMinus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => numeric_minus(x, unit(y-z)) // (x-y)+z --> x-(y-z)\n   ..\n   97      }).asInstanceOf[Exp[T]]\n   98  \n   99:     override def numeric_minus[T:Numeric:Manifest](lhs: Exp[T], rhs: Exp[T])(implicit pos: SourceContext): Exp[T] = ((lhs,rhs) match {\n  100        case (Def(NumericMinus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => numeric_minus(x, unit(y+z)) // (x-y)-z --> x-(y+z)\n  101        case (Def(NumericPlus(x:Exp[Int],Const(y:Int))), Const(z:Int)) => numeric_plus(x, unit(y-z)) // (x+y)-z --> x+(y-z)\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestInterpret.scala:\n   14  \n   15  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   16: import scala.reflect.SourceContext\n   17  \n   18  \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test13-dynamic-jit/TestStable.scala:\n   14  \n   15  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   16: import scala.reflect.SourceContext\n   17  \n   18  /*case class RCell[T](tag: String) {\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestQueries.scala:\n    9  \n   10  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   11: import scala.reflect.SourceContext\n   12  \n   13  /*\n   ..\n  758    // implement smart constructor for DBFor nodes; perform normalization.\n  759    // note that we map IR nodes to staged code, not directly to other IR nodes.\n  760:   def dbfor[A:Manifest,B:Manifest](l: Exp[List[A]], f: Exp[A] => Exp[List[B]])(implicit pos: SourceContext): Exp[List[B]] = l match {\n  761  /*\n  762               for x in (yield Q)do R --> R[x:=Q]\n  ...\n  791  \n  792    // override `if (c) a else b` smart constructor to add rewrites\n  793:   override def ifThenElse[T:Manifest](cond: Rep[Boolean], thenp: Block[T], elsep: Block[T])(implicit pos: SourceContext) = ((thenp.res,elsep.res) match {\n  794  /*\n  795                    if P then (Q @ R) --> (if P then Q) @ (if P then R)\n  ...\n  809  \n  810    // override Rep[List[T]] methods to create For nodes\n  811:   override def list_flatMap[A:Manifest,B:Manifest](l: Exp[List[A]], f: Exp[A] => Exp[List[B]])(implicit pos: SourceContext) = {\n  812      dbfor[A,B](l,f)\n  813    }\n  814:   override def list_map[A:Manifest,B:Manifest](l: Exp[List[A]], f: Exp[A] => Exp[B])(implicit pos: SourceContext) = {\n  815      list_flatMap[A,B](l, x => List(f(x)))\n  816    }\n  817:   override def list_filter[A : Manifest](l: Exp[List[A]], f: Exp[A] => Exp[Boolean])(implicit pos: SourceContext) = {\n  818      list_flatMap[A,A](l, x => if (f(x)) List(x) else List())\n  819    }\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala:\n   10  \n   11  import util.OverloadHack\n   12: import scala.reflect.SourceContext\n   13  \n   14  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   15: import scala.reflect.SourceContext\n   16  import scala.collection.mutable\n   17  \n   ..\n  452      def matrix_n(l: Rep[DenseMatrix[Double]]): Rep[Int] = MatrixN(l)\n  453  \n  454:     override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  455         case MatrixMult(l, r) => matrix_*(f(l), f(r))\n  456         case MatrixN(l) => matrix_n(f(l))\n  ...\n  514        }\n  515  \n  516:       override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n  517         case DMatrix(l, r, matrix) => toSDAtom(DMatrix(Both(l.static, f(l.dynamic)), Both(r.static, f(r.dynamic)), f(matrix)))\n  518         case _ => super.mirror(e,f)\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestFFT.scala:\n    5  import common._\n    6  import test1._\n    7: import reflect.SourceContext\n    8  \n    9  import java.io.PrintWriter\n   ..\n   63  trait ArithExpOptFFT extends ArithExpOpt {\n   64  \n   65:   override def infix_+(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n   66      case (x, Def(Minus(Const(0.0) | Const(-0.0), y))) => infix_-(x, y)\n   67      case _ => super.infix_+(x, y)\n   68    }\n   69  \n   70:   override def infix_-(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n   71      case (x, Def(Minus(Const(0.0) | Const(-0.0), y))) => infix_+(x, y)\n   72      case _ => super.infix_-(x, y)\n   73    }\n   74  \n   75:   override def infix_*(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n   76      case (x, Const(-1.0)) => infix_-(0.0, x)\n   77      case (Const(-1.0), y) => infix_-(0.0, y)\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test2-fft/TestPower.scala:\n    5  import common._\n    6  import test1._\n    7: import reflect.SourceContext\n    8  \n    9  import java.io.PrintWriter\n   ..\n   15  \n   16  trait Power2 { this: Arith =>\n   17:   def power(b: Rep[Double], x: Int)(implicit pos: SourceContext): Rep[Double] = {\n   18      if (x == 0) 1.0\n   19      else if ((x&1) == 0) { val y = power(b, x/2); y * y }\n   ..\n   33    //implicit def unit(x: Double) = x.toString\n   34  \n   35:   def infix_+(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext) = \"(%s+%s)\".format(x,y)\n   36:   def infix_-(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext) = \"(%s-%s)\".format(x,y)\n   37:   def infix_*(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext) = \"(%s*%s)\".format(x,y)\n   38:   def infix_/(x: Rep[Double], y: Rep[Double])(implicit pos: SourceContext) = \"(%s/%s)\".format(x,y)\n   39  }\n   40  \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test3-parsers/Functions.scala:\n    7  import test2._\n    8  \n    9: import scala.reflect.SourceContext\n   10  \n   11  \n   ..\n   19    case class Apply2[A1:Manifest,A2:Manifest,B:Manifest](fun: Exp[(A1,A2) => B], arg1: Exp[A1], arg2: Exp[A2]) extends Def[B]\n   20    \n   21:   def doLambda[A:Manifest,B:Manifest](fun: Exp[A] => Exp[B])(implicit pos: SourceContext): Exp[A => B] = Lambda(fun)\n   22:   def doLambda2[A1:Manifest,A2:Manifest,B:Manifest](fun: (Exp[A1],Exp[A2]) => Exp[B])(implicit pos: SourceContext) : Exp[(A1,A2) => B] = Lambda2(fun)\n   23:   def doApply[A:Manifest,B:Manifest](fun: Exp[A => B], arg: Exp[A])(implicit pos: SourceContext): Exp[B] = Apply(fun, arg)\n   24:   def doApply2[A1:Manifest,A2:Manifest,B:Manifest](fun: Exp[(A1,A2) => B], arg1: Exp[A1], arg2: Exp[A2])(implicit pos: SourceContext): Exp[B] = Apply2(fun, arg1, arg2)\n   25  }\n   26  \n   27  trait FunctionsExpUnfoldAll extends FunctionsExp {\n   28  \n   29:   override def doApply[A:Manifest,B:Manifest](fun: Exp[A => B], arg: Exp[A])(implicit pos: SourceContext): Exp[B] = fun match {\n   30      case Def(Lambda(fun)) => fun(arg)\n   31      case _ => super.doApply(fun, arg)\n   32    }\n   33:   override def doApply2[A1:Manifest,A2:Manifest,B:Manifest](fun: Exp[(A1,A2) => B], arg1: Exp[A1], arg2: Exp[A2])(implicit pos: SourceContext): Exp[B] = fun match {\n   34      case Def(Lambda2(fun)) => fun(arg1, arg2)\n   35      case _ => super.doApply2(fun, arg1, arg2)\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test4-functions/Functions.scala:\n    8  import test3._\n    9  import util.ClosureCompare\n   10: import scala.reflect.SourceContext\n   11  \n   12  import scala.collection.{immutable, mutable}\n   ..\n   16    def exec[A:Manifest,B:Manifest](fun: Exp[A]=>Exp[B], arg: Exp[A]): Exp[B]\n   17  \n   18:   override def doApply[A:Manifest,B:Manifest](fun: Exp[A => B], arg: Exp[A])(implicit pos: SourceContext): Exp[B] = fun match {\n   19      case Def(Lambda(fun)) => \n   20        exec(fun, arg)\n   ..\n   97  \n   98  \n   99:   override def doLambda[A:Manifest,B:Manifest](fun: Exp[A]=>Exp[B])(implicit pos: SourceContext) = {\n  100      super.doLambda(lookupFun(fun))\n  101    }\n  ...\n  121  trait FunctionsExternalDef01 extends FunctionsExternalDef0 { // not used\n  122  \n  123:   override def doLambda[A:Manifest,B:Manifest](f: Exp[A]=>Exp[B])(implicit pos: SourceContext): Exp[A=>B] = {\n  124      var funSym = fresh[A=>B]\n  125      var argSym = fresh[A]//Sym(-1)\n  ...\n  135    var funTable: List[(Function[_,_], Any, Sym[_])] = List()\n  136    \n  137:   override def doLambda[A:Manifest,B:Manifest](f: Exp[A]=>Exp[B])(implicit pos: SourceContext): Exp[A=>B] = {\n  138      var can = canonicalize(f)\n  139  \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/Arrays.scala:\n   10  \n   11  import util.OverloadHack\n   12: import scala.reflect.SourceContext\n   13  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   14  \n   ..\n   91  \n   92  \n   93:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   94      case SimpleLoop(s,i, ArrayElem(y)) if f.hasContext => \n   95        array(f(s)) { j => f.asInstanceOf[AbstractSubstTransformer{val IR:ArrayLoopsExp.this.type}].withSubstScope(i -> j) { f.reflectBlock(y) } }\n   ..\n   99    }).asInstanceOf[Exp[A]]\n  100  \n  101:   override def mirrorFatDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = (e match {\n  102      case ArrayElem(y) => ArrayElem(f(y))\n  103      case ReduceElem(y) => ReduceElem(f(y))\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala:\n    9  \n   10  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   11: import scala.reflect.SourceContext\n   12  \n   13  trait Print extends Base {\n   ..\n   20    case class Print(s: Rep[Any]) extends Def[Unit]\n   21    def print(s: Rep[Any]) = reflectEffect(Print(s))\n   22:   override def mirrorDef[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Def[A] = (e match {\n   23      case Print(s) => Print(f(s))\n   24      case _ => super.mirrorDef(e,f)\n   25    }).asInstanceOf[Def[A]] // why??\n   26:   override def mirror[A:Manifest](e: Def[A], f: Transformer)(implicit pos: SourceContext): Exp[A] = (e match {\n   27      case Reflect(Print(s), u, es) => reflectMirrored(Reflect(Print(f(s)), mapOver(f,u), f(es)))(mtype(manifest[A]), pos)\n   28      case _ => super.mirror(e,f)\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion.scala:\n    7  \n    8  import util.OverloadHack\n    9: import scala.reflect.SourceContext\n   10  \n   11  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   12: import scala.reflect.SourceContext\n   13  \n   14  \n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala:\n    7  \n    8  import util.OverloadHack\n    9: import scala.reflect.SourceContext\n   10  \n   11  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   ..\n  211         new FusionProg24 with ArithExp with ArrayLoopsFatExp with IfThenElseFatExp with PrintExp with IfThenElseExp with OrderingOpsExp  { self =>\n  212  \n  213:          override def infix_-(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = if (x == y) {\n  214             println(\"*** removing self subtraction \" + x + \" - \" + y)\n  215             0\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test8-effects/TestSpeculative.scala:\n   12  \n   13  import java.io.{PrintWriter,StringWriter,FileOutputStream}\n   14: import scala.reflect.SourceContext\n   15  \n   16  class TestSpeculative extends FileDiffSuite {\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test9-experimental/TestStruct.scala:\n   10  import test7.{Print,PrintExp,ScalaGenPrint}\n   11  import test7.{ArrayLoops,ArrayLoopsExp,ArrayLoopsFatExp,ScalaGenArrayLoops,ScalaGenFatArrayLoopsFusionOpt}\n   12: import scala.reflect.SourceContext\n   13  \n   14  import util.OverloadHack\n   ..\n   36    case class ArraySoaTag[T](base: StructTag[T], len: Exp[Int]) extends StructTag[T]\n   37    \n   38:   override def simpleLoop[A:Manifest](size: Exp[Int], v: Sym[Int], body: Def[A])(implicit pos: SourceContext): Exp[A] = body match {\n   39      case ArrayElem(Block(Def(Struct(tag:StructTag[A], elems)))) => \n   40        struct[A](ArraySoaTag[A](tag,size), elems.map(p=>(p._1,simpleLoop(size, v, ArrayElem(Block(p._2)))(p._2.tp.arrayManifest, pos))))\n   ..\n  216        new Prog with ImplFused {\n  217          // TODO: use a generic Opt trait instead of defining rewrites here...\n  218:         override def infix_-(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n  219            case (x, Def(Minus(Const(0.0),y))) => infix_+(x,y)\n  220            case _ => super.infix_-(x,y)\n  221          }\n  222:         override def infix_+(x: Exp[Double], y: Exp[Double])(implicit pos: SourceContext) = (x, y) match {\n  223            case (Const(0.0), y) => y\n  224            case _ => super.infix_+(x,y)\n\n/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-terrors/ErrorSamples.scala:\n   10  import util.OverloadHack\n   11  import java.io.{ PrintWriter, StringWriter, FileOutputStream }\n   12: import scala.reflect.SourceContext\n   13  \n   14  /**\n   ..\n   98  \n   99      // TODO see what happens with the code below. How does var definition work in nested scopes.\n  100:     /* Why does this fail? TODO Investigate and try to fix if SourceContexts are broken. */\n  101      {\n  102        var scala = unit(\"scala 2\")\n\n1124 matches across 75 files\n\n\nSearching 19189 files for \"package scala.reflect\" (case sensitive)\n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/compiler/DefaultMacroCompiler.scala:\n    1: package scala.reflect.macros\n    2  package compiler\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/compiler/Errors.scala:\n    1: package scala.reflect.macros\n    2  package compiler\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/compiler/Resolvers.scala:\n    1: package scala.reflect.macros\n    2  package compiler\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/compiler/Validators.scala:\n    1: package scala.reflect.macros\n    2  package compiler\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Aliases.scala:\n    1: package scala.reflect.macros\n    2  package contexts\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Context.scala:\n    1: package scala.reflect.macros\n    2  package contexts\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Enclosures.scala:\n    1: package scala.reflect.macros\n    2  package contexts\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Evals.scala:\n    1: package scala.reflect.macros\n    2  package contexts\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/ExprUtils.scala:\n    1: package scala.reflect.macros\n    2  package contexts\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/FrontEnds.scala:\n    1: package scala.reflect.macros\n    2  package contexts\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Infrastructure.scala:\n    1: package scala.reflect.macros\n    2  package contexts\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Internals.scala:\n    1: package scala.reflect.macros\n    2  package contexts\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Names.scala:\n    1: package scala.reflect.macros\n    2  package contexts\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Parsers.scala:\n    1: package scala.reflect.macros\n    2  package contexts\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Reifiers.scala:\n    4   */\n    5  \n    6: package scala.reflect.macros\n    7  package contexts\n    8  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Traces.scala:\n    1: package scala.reflect.macros\n    2  package contexts\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Typers.scala:\n    1: package scala.reflect.macros\n    2  package contexts\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/runtime/AbortMacroException.scala:\n    1: package scala.reflect.macros\n    2  package runtime\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/runtime/JavaReflectionRuntimes.scala:\n    1: package scala.reflect.macros\n    2  package runtime\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/runtime/MacroRuntimes.scala:\n    1: package scala.reflect.macros\n    2  package runtime\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/runtime/package.scala:\n    1: package scala.reflect.macros\n    2  \n    3  package object runtime {\n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/util/Helpers.scala:\n    1: package scala.reflect.macros\n    2  package util\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/util/Traces.scala:\n    1: package scala.reflect.macros\n    2  package util\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/quasiquotes/Holes.scala:\n    1: package scala.reflect\n    2  package quasiquotes\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/quasiquotes/Parsers.scala:\n    1: package scala.reflect\n    2  package quasiquotes\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/quasiquotes/Placeholders.scala:\n    1: package scala.reflect\n    2  package quasiquotes\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/quasiquotes/Quasiquotes.scala:\n    1: package scala.reflect\n    2  package quasiquotes\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/quasiquotes/Reifiers.scala:\n    1: package scala.reflect\n    2  package quasiquotes\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/Errors.scala:\n    1: package scala.reflect.reify\n    2  \n    3  import scala.reflect.macros.ReificationException\n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/Phases.scala:\n    1: package scala.reflect.reify\n    2  \n    3  import phases._\n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/Reifier.scala:\n    1: package scala.reflect.reify\n    2  \n    3  import scala.tools.nsc.Global\n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/States.scala:\n    1: package scala.reflect.reify\n    2  \n    3  trait States {\n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/Taggers.scala:\n    1: package scala.reflect.reify\n    2  \n    3  import scala.reflect.macros.{ReificationException, UnexpectedReificationException, TypecheckException}\n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/codegen/GenAnnotationInfos.scala:\n    1: package scala.reflect.reify\n    2  package codegen\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/codegen/GenNames.scala:\n    1: package scala.reflect.reify\n    2  package codegen\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/codegen/GenPositions.scala:\n    1: package scala.reflect.reify\n    2  package codegen\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/codegen/GenSymbols.scala:\n    1: package scala.reflect.reify\n    2  package codegen\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/codegen/GenTrees.scala:\n    1: package scala.reflect.reify\n    2  package codegen\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/codegen/GenTypes.scala:\n    1: package scala.reflect.reify\n    2  package codegen\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/codegen/GenUtils.scala:\n    1: package scala.reflect.reify\n    2  package codegen\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/phases/Calculate.scala:\n    1: package scala.reflect.reify\n    2  package phases\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/phases/Metalevels.scala:\n    1: package scala.reflect.reify\n    2  package phases\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/phases/Reify.scala:\n    1: package scala.reflect.reify\n    2  package phases\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/phases/Reshape.scala:\n    1: package scala.reflect.reify\n    2  package phases\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/utils/Extractors.scala:\n    1: package scala.reflect.reify\n    2  package utils\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/utils/NodePrinters.scala:\n    3   * @author  Martin Odersky\n    4   */\n    5: package scala.reflect.reify\n    6  package utils\n    7  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/utils/StdAttachments.scala:\n    1: package scala.reflect.reify\n    2  package utils\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/utils/SymbolTables.scala:\n    1: package scala.reflect.reify\n    2  package utils\n    3  \n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/reify/utils/Utils.scala:\n    1: package scala.reflect.reify\n    2  package utils\n    3  \n\n/Users/vjovanov/code/scala/src/library/scala/reflect/ScalaLongSignature.java:\n    1: package scala.reflect;\n    2  \n    3  import java.lang.annotation.ElementType;\n\n/Users/vjovanov/code/scala/src/library/scala/reflect/ScalaSignature.java:\n    1: package scala.reflect;\n    2  \n    3  import java.lang.annotation.ElementType;\n\n/Users/vjovanov/code/scala/src/library/scala/reflect/macros/internal/macroImpl.scala:\n    1: package scala.reflect.macros\n    2  package internal\n    3  \n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/api/Quasiquotes.scala:\n    1: package scala.reflect\n    2  package api\n    3  \n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/api/StandardLiftables.scala:\n    1: package scala.reflect\n    2  package api\n    3  \n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/annotations/package.scala:\n    1: package scala.reflect.internal\n    2  \n    3  package object annotations {\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/annotations/uncheckedBounds.scala:\n    1: package scala.reflect\n    2  package internal\n    3  package annotations\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/tpe/FindMembers.scala:\n    3   * @author  Jason Zaugg\n    4   */\n    5: package scala.reflect.internal\n    6  package tpe\n    7  \n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/transform/PostErasure.scala:\n    1: package scala.reflect\n    2  package internal\n    3  package transform\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/util/FreshNameCreator.scala:\n    4   */\n    5  \n    6: package scala.reflect.internal\n    7  package util\n    8  \n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/runtime/Gil.scala:\n    1: package scala.reflect\n    2  package runtime\n    3  \n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/runtime/JavaUniverseForce.scala:\n    1  // Generated Code, validated by run/t6240-universe-code-gen.scala\n    2: package scala.reflect\n    3  package runtime\n    4  \n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/runtime/ThreadLocalStorage.scala:\n    1: package scala.reflect\n    2  package runtime\n    3  \n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/runtime/TwoWayCaches.scala:\n    1: package scala.reflect\n    2  package runtime\n    3  \n\n/Users/vjovanov/code/scala/test/files/run/t6240-universe-code-gen.scala:\n   27    val code =\n   28      s\"\"\"|// Generated Code, validated by run/t6240-universe-code-gen.scala\n   29:         |package scala.reflect\n   30          |package runtime\n   31          |\n\n/Users/vjovanov/code/scala/test/files/run/WeakHashSetTest.scala:\n   21  // put the main test object in the same package as WeakHashSet because\n   22  // it uses the package private \"diagnostics\" method\n   23: package scala.reflect.internal.util {\n   24  \n   25    object WeakHashSetTest {\n\n/Users/vjovanov/code/scala/test/junit/scala/reflect/ClassTag.scala:\n    1: package scala.reflect\n    2  \n    3  import org.junit.Test\n\n/Users/vjovanov/code/scala/test/junit/scala/reflect/QTest.scala:\n    1  \n    2: package scala.reflect\n    3  \n    4  import org.junit.Test\n\n/Users/vjovanov/code/scala/test/junit/scala/reflect/internal/MirrorsTest.scala:\n    1: package scala.reflect.internal\n    2  \n    3  import org.junit.Assert._\n\n/Users/vjovanov/code/scala/test/junit/scala/reflect/internal/NamesTest.scala:\n    1: package scala.reflect.internal\n    2  \n    3  import scala.tools.testing.AssertUtil._\n\n/Users/vjovanov/code/scala/test/junit/scala/reflect/internal/PrintersTest.scala:\n    1: package scala.reflect.internal\n    2  \n    3  import org.junit.Test\n\n/Users/vjovanov/code/scala/test/junit/scala/reflect/internal/ScopeTest.scala:\n    1: package scala.reflect.internal\n    2  \n    3  import scala.tools.nsc.symtab\n\n/Users/vjovanov/code/scala/test/junit/scala/reflect/internal/TreeGenTest.scala:\n    1: package scala.reflect.internal\n    2  \n    3  import org.junit.Assert._\n\n/Users/vjovanov/code/scala/test/junit/scala/reflect/internal/TypesTest.scala:\n    1: package scala.reflect.internal\n    2  \n    3  import org.junit.Assert._\n\n/Users/vjovanov/code/scala/test/junit/scala/reflect/internal/util/AbstractFileClassLoaderTest.scala:\n    1: package scala.reflect.internal.util\n    2  \n    3  import org.junit.Assert._\n\n/Users/vjovanov/code/scala/test/junit/scala/reflect/internal/util/SourceFileTest.scala:\n    1: package scala.reflect.internal.util\n    2  \n    3  import org.junit.Assert._\n\n/Users/vjovanov/code/scala/test/junit/scala/reflect/internal/util/StringOpsTest.scala:\n    1: package scala.reflect.internal.util\n    2  \n    3  import org.junit.Assert._\n\n/Users/vjovanov/code/scala/test/junit/scala/reflect/internal/util/WeakHashSetTest.scala:\n    1: package scala.reflect.internal.util\n    2  \n    3  import org.junit.Assert._\n\n/Users/vjovanov/code/scala/test/junit/scala/reflect/io/ZipArchiveTest.scala:\n    1: package scala.reflect.io\n    2  \n    3  import java.io.{IOException, File => JFile}\n\n78 matches across 78 files\n\n\nSearching 1550 files for \"SourceContext\" (case sensitive)\n\n0 matches\n\nSearching 1550 files for \"SourceLocation\" (case sensitive)\n\n0 matches\n\nSearching 1550 files for \"Source\" (case sensitive)\n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Parsers.scala:\n   13      try {\n   14        global.reporter = sreporter\n   15:       val parser = newUnitParser(new CompilationUnit(newSourceFile(code, \"<macro>\")))\n   16        val tree = gen.mkTreeOrBlock(parser.parseStatsOrPackages())\n   17        sreporter.infos.foreach {\n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/quasiquotes/Parsers.scala:\n    5  import scala.tools.nsc.ast.parser.Tokens._\n    6  import scala.compat.Platform.EOL\n    7: import scala.reflect.internal.util.{BatchSourceFile, SourceFile, FreshNameCreator}\n    8  import scala.collection.mutable.ListBuffer\n    9  import scala.util.Try\n   ..\n   22      def parse(code: String): Tree = {\n   23        try {\n   24:         val file = new BatchSourceFile(nme.QUASIQUOTE_FILE, code)\n   25          val parser = new QuasiquoteParser(file)\n   26          parser.checkNoEscapingPlaceholders { parser.parseRule(entryPoint) }\n   ..\n   53      def entryPoint: QuasiquoteParser => Tree\n   54  \n   55:     class QuasiquoteParser(source0: SourceFile) extends SourceFileParser(source0) { parser =>\n   56        def isHole: Boolean = isIdent && isHole(in.name)\n   57  \n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/ant/sabbus/ScalacFork.scala:\n   14  import org.apache.tools.ant.Project\n   15  import org.apache.tools.ant.taskdefs.Java\n   16: import org.apache.tools.ant.util.{ GlobPatternMapper, SourceFileScanner }\n   17  import org.apache.tools.ant.BuildException\n   18  import scala.tools.nsc.io\n   ..\n  109  \n  110      val includedFiles: Array[File] =\n  111:       new SourceFileScanner(this).restrict(\n  112          getDirectoryScanner(sourceDir).getIncludedFiles,\n  113          sourceDir,\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/ant/sabbus/Use.scala:\n   15  \n   16  import org.apache.tools.ant.types.{Path, Reference}\n   17: import org.apache.tools.ant.util.{GlobPatternMapper, SourceFileScanner}\n   18  \n   19  class Use extends ScalaMatchingTask {\n   ..\n   49      mapper.setFrom(\"*.scala\")\n   50      val includedFiles: Array[File] =\n   51:       new SourceFileScanner(this).restrict(\n   52          getDirectoryScanner(sourceDir.get).getIncludedFiles,\n   53          sourceDir.get,\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/ant/Scalac.scala:\n   15  import org.apache.tools.ant.types.{Path, Reference}\n   16  import org.apache.tools.ant.util.{FileUtils, GlobPatternMapper,\n   17:                                   SourceFileScanner, facade}\n   18  import org.apache.tools.ant.util.facade.{FacadeTaskHelper,\n   19                                    ImplementationSpecificArgument}\n   ..\n  249    /** Sets the `sourcepath` attribute. Used by [[http://ant.apache.org Ant]].\n  250     *  @param input The value of `sourcepath`. */\n  251:   def setSourcepath(input: Path) {\n  252      sourcepath = setOrAppend(sourcepath, input)\n  253    }\n  ...\n  255    /** Sets the `sourcepath` as a nested sourcepath Ant parameter.\n  256     *  @return A source path to be configured. */\n  257:   def createSourcepath(): Path = createNewPath(sourcepath _, p => sourcepath = p)\n  258  \n  259    /** Sets the `sourcepath` as an external reference Ant parameter.\n  260     *  @param input A reference to a source path. */\n  261:   def setSourcepathref(input: Reference) {\n  262:     createSourcepath().setRefid(input)\n  263    }\n  264  \n  ...\n  446     *  Scala-friendly form.\n  447     *  @return The source path as a list of files. */\n  448:   protected def getSourcepath: List[File] = pathAsList(sourcepath, \"sourcepath\")\n  449  \n  450    /** Gets the value of the `bootclasspath` attribute in a\n  ...\n  538          val xs = includedFiles filter (_ endsWith \".scala\")\n  539          if (force) xs\n  540:         else new SourceFileScanner(this).restrict(xs, originDir, destination.get, mapper)\n  541        }\n  542  \n  ...\n  577        settings.classpath.value = asString(getClasspath)\n  578      if (!sourcepath.isEmpty)\n  579:       settings.sourcepath.value = asString(getSourcepath)\n  580      else if (origin.get.size() > 0)\n  581        settings.sourcepath.value = origin.get.list()(0)\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/ant/ScalaTool.scala:\n  187      // Converts a variable like @SCALA_HOME@ to ${SCALA_HOME} when pre = \"${\" and post = \"}\"\n  188      private def transposeVariableMarkup(text: String, pre: String, post: String) : String = {\n  189:       val chars = scala.io.Source.fromString(text)\n  190        val builder = new StringBuilder()\n  191  \n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/ast/parser/MarkupParsers.scala:\n   42    import global._\n   43  \n   44:   class MarkupParser(parser: SourceFileParser, final val preserveWS: Boolean) extends MarkupParserCommon {\n   45      import Utility.{ isNameStart, isSpace }\n   46      import Tokens.{ LBRACE, RBRACE }\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/ast/parser/Parsers.scala:\n   14  import scala.reflect.internal.{ Precedence, ModifierFlags => Flags }\n   15  import scala.reflect.internal.Chars.{ isScalaLetter }\n   16: import scala.reflect.internal.util.{ SourceFile, Position, FreshNameCreator, ListOfNil }\n   17  import Tokens._\n   18  \n   ..\n  138    }\n  139  \n  140:   class SourceFileParser(val source: SourceFile) extends Parser {\n  141  \n  142      /** The parse starting point depends on whether the source file is self-contained:\n  ...\n  147        else () => scriptBody()\n  148  \n  149:     def newScanner(): Scanner = new SourceFileScanner(source)\n  150  \n  151      val in = newScanner()\n  ...\n  179    }\n  180  \n  181:   class OutlineParser(source: SourceFile) extends SourceFileParser(source) {\n  182  \n  183      def skipBraces[T](body: T): T = {\n  ...\n  200    }\n  201  \n  202:   class UnitParser(override val unit: global.CompilationUnit, patches: List[BracePatch]) extends SourceFileParser(unit.source) { uself =>\n  203      def this(unit: global.CompilationUnit) = this(unit, Nil)\n  204  \n  ...\n  272      val in: Scanner\n  273      def unit: CompilationUnit\n  274:     def source: SourceFile\n  275  \n  276      /** Scoping operator used to temporarily look into the future.\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/ast/parser/Scanners.scala:\n 1200     *  Useful for looking inside source files that aren not currently compiled to see what's there\n 1201     */\n 1202:   class SourceFileScanner(val source: SourceFile) extends Scanner {\n 1203      val buf = source.content\n 1204      override val decodeUni: Boolean = !settings.nouescape\n ....\n 1212    /** A scanner over a given compilation unit\n 1213     */\n 1214:   class UnitScanner(val unit: CompilationUnit, patches: List[BracePatch]) extends SourceFileScanner(unit.source) {\n 1215      def this(unit: CompilationUnit) = this(unit, List())\n 1216  \n ....\n 1266  \n 1267      /** The source code with braces and line starts annotated with [NN] showing the index */\n 1268:     private def markedSource = {\n 1269        val code   = unit.source.content\n 1270        val braces = code.indices filter (idx => \"{}\\n\" contains code(idx)) toSet;\n ....\n 1274  \n 1275      init()\n 1276:     log(s\"ParensAnalyzer for ${unit.source} of length ${unit.source.content.length}\\n```\\n$markedSource\\n```\")\n 1277  \n 1278      /** The offset of the first token on this line, or next following line if blank\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/ast/parser/TreeBuilder.scala:\n    9  import symtab.Flags._\n   10  import scala.collection.mutable.ListBuffer\n   11: import scala.reflect.internal.util.{Position, SourceFile, FreshNameCreator}\n   12  \n   13  /** Methods for building trees, used in the parser.  All the trees\n   ..\n   19  \n   20    def unit: CompilationUnit\n   21:   def source: SourceFile\n   22  \n   23    implicit def fresh: FreshNameCreator              = unit.fresh\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/icode/Members.scala:\n   11  import scala.collection.{ mutable, immutable }\n   12  import scala.reflect.internal.Flags\n   13: import scala.reflect.internal.util.{ SourceFile, NoSourceFile }\n   14  \n   15  trait ReferenceEquality {\n   ..\n  179      /** The list of exception handlers, ordered from innermost to outermost. */\n  180      var exh: List[ExceptionHandler] = Nil\n  181:     var sourceFile: SourceFile = NoSourceFile\n  182      var returnType: TypeKind = _\n  183      var recursive: Boolean = false\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/jvm/analysis/BackendUtils.scala:\n   48      def sizeOKForNullness(method: MethodNode): Boolean = size(method) < nullnessSizeLimit\n   49      def sizeOKForBasicValue(method: MethodNode): Boolean = size(method) < basicValueSizeLimit\n   50:     def sizeOKForSourceValue(method: MethodNode): Boolean = size(method) < sourceValueSizeLimit\n   51    }\n   52  \n   53:   class ProdConsAnalyzer(val methodNode: MethodNode, classInternalName: InternalName) extends AsmAnalyzer(methodNode, classInternalName, new Analyzer(new InitialProducerSourceInterpreter)) with ProdConsAnalyzerImpl\n   54  \n   55    /**\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/jvm/analysis/NullnessAnalyzer.scala:\n   66  final class NullnessInterpreter extends Interpreter[NullnessValue](Opcodes.ASM5) {\n   67    def newValue(tp: Type): NullnessValue = {\n   68:     // ASM loves giving semantics to null. The behavior here is the same as in SourceInterpreter,\n   69      // which is provided by the framework.\n   70      //\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/jvm/analysis/package.scala:\n   13   * Interpreter\n   14   *  - Abstract, needs to be implemented for each analysis. Sometimes one can subclass an existing\n   15:  *    interpreter, e.g., SourceInterpreter or BasicInterpreter.\n   16   *  - Multiple abstract methods that receive an instruction and the instruction's input values, and\n   17   *    return a value representing the result of that instruction.\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/jvm/analysis/ProdConsAnalyzerImpl.scala:\n   23  \n   24  /**\n   25:  * This class provides additional queries over ASM's built-in `SourceValue` analysis.\n   26   *\n   27   * The analysis computes for each value in a frame a set of source instructions, which are the\n   ..\n   34   * See the documentation on class InitialProducer.\n   35   *\n   36:  * This class implements the following queries over the data computed by the SourceValue analysis:\n   37   *\n   38   *   - producersForValueAt(insn, slot)\n   ..\n   57   * copying operations.\n   58   *\n   59:  * Note on performance: thee data flow analysis (SourceValue / SourceInterpreter, provided by ASM)\n   60   * is roughly 2-3x slower than a simple analysis (like BasicValue). The reason is that the merge\n   61   * function (merging producer sets) is more complex than merging simple basic values.\n   ..\n   65    val methodNode: MethodNode\n   66  \n   67:   def frameAt(insn: AbstractInsnNode): Frame[SourceValue]\n   68  \n   69    /**\n   70     * Returns the potential producer instructions of a (local or stack) value in the frame of `insn`.\n   71:    * This method simply returns the producer information computed by the SourceValue analysis.\n   72     */\n   73    def producersForValueAt(insn: AbstractInsnNode, slot: Int): Set[AbstractInsnNode] = {\n   ..\n  113            // see cyclicProdCons in ProdConsAnalyzerTest\n  114            _initialProducersCache(key) = Set.empty\n  115:           val (sourceValue, sourceValueSlot) = copyOperationSourceValue(insn, producedSlot)\n  116            sourceValue.insns.iterator.asScala.flatMap(initialProducers(_, sourceValueSlot)).toSet\n  117          })\n  ...\n  174     *   - the result is the value at slot 2 in the frame of `copyOp`\n  175     */\n  176:   private def copyOperationSourceValue(copyOp: AbstractInsnNode, producedSlot: Int): (SourceValue, Int) = {\n  177      val frame = frameAt(copyOp)\n  178  \n  ...\n  355  \n  356    /** Returns the frame values consumed by executing `insn`. */\n  357:   private def inputValues(insn: AbstractInsnNode): Seq[SourceValue] = {\n  358      lazy val frame = frameAt(insn)\n  359      inputValueSlots(insn) map frame.getValue\n  ...\n  423   *   - exception values in handlers\n  424   *\n  425:  * The ASM built-in SourceValue analysis yields an empty producers set for such values. This leads\n  426   * to ambiguities. Example (in Java one can re-assign parameter):\n  427   *\n  ...\n  448  case class ExceptionProducer[V <: Value](handlerFrame: Frame[V]) extends InitialProducer\n  449  \n  450: class InitialProducerSourceInterpreter extends SourceInterpreter {\n  451:   override def newParameterValue(isInstanceMethod: Boolean, local: Int, tp: Type): SourceValue = {\n  452:     new SourceValue(tp.getSize, ParameterProducer(local))\n  453    }\n  454  \n  455:   override def newEmptyNonParameterLocalValue(local: Int): SourceValue = {\n  456:     new SourceValue(1, UninitializedLocalProducer(local))\n  457    }\n  458  \n  459:   override def newExceptionValue(tryCatchBlockNode: TryCatchBlockNode, handlerFrame: Frame[_ <: Value], exceptionType: Type): SourceValue = {\n  460:     new SourceValue(1, ExceptionProducer(handlerFrame))\n  461    }\n  462  }\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/jvm/BackendReporting.scala:\n   96    sealed trait MissingBytecodeWarning extends OptimizerWarning {\n   97      override def toString = this match {\n   98:       case ClassNotFound(internalName, definedInJavaSource) =>\n   99          s\"The classfile for $internalName could not be found on the compilation classpath.\" + {\n  100:           if (definedInJavaSource) \"\\nThe class is defined in a Java source file that is being compiled (mixed compilation), therefore no bytecode is available.\"\n  101            else \"\"\n  102          }\n  103  \n  104        case MethodNotFound(name, descriptor, ownerInternalName, missingClasses) =>\n  105:         val (javaDef, others) = missingClasses.partition(_.definedInJavaSource)\n  106          s\"The method $name$descriptor could not be found in the class $ownerInternalName or any of its parents.\" +\n  107            (if (others.isEmpty) \"\" else others.map(_.internalName).mkString(\"\\nNote that the following parent classes could not be found on the classpath: \", \", \", \"\")) +\n  ...\n  127    }\n  128  \n  129:   case class ClassNotFound(internalName: InternalName, definedInJavaSource: Boolean) extends MissingBytecodeWarning\n  130    case class MethodNotFound(name: String, descriptor: String, ownerInternalNameOrArrayDescriptor: InternalName, missingClasses: List[ClassNotFound]) extends MissingBytecodeWarning {\n  131      def isArrayMethod = ownerInternalNameOrArrayDescriptor.charAt(0) == '['\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/jvm/BCodeAsmCommon.scala:\n  288  \n  289    lazy val AnnotationRetentionPolicyModule       = AnnotationRetentionPolicyAttr.companionModule\n  290:   lazy val AnnotationRetentionPolicySourceValue  = AnnotationRetentionPolicyModule.tpe.member(TermName(\"SOURCE\"))\n  291    lazy val AnnotationRetentionPolicyClassValue   = AnnotationRetentionPolicyModule.tpe.member(TermName(\"CLASS\"))\n  292    lazy val AnnotationRetentionPolicyRuntimeValue = AnnotationRetentionPolicyModule.tpe.member(TermName(\"RUNTIME\"))\n  ...\n  298      annot.symbol.initialize.isJavaDefined &&\n  299        annot.matches(ClassfileAnnotationClass) &&\n  300:       retentionPolicyOf(annot) != AnnotationRetentionPolicySourceValue &&\n  301        annot.args.isEmpty\n  302    }\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/jvm/BCodeHelpers.scala:\n  308      def debugLevel = settings.debuginfo.indexOfChoice\n  309  \n  310:     final val emitSource = debugLevel >= 1\n  311      final val emitLines  = debugLevel >= 2\n  312      final val emitVars   = debugLevel >= 3\n  ...\n  724        )\n  725  \n  726:       if (emitSource)\n  727:         mirrorClass.visitSource(\"\" + cunit.source, null /* SourceDebugExtension */)\n  728  \n  729        val ssa = getAnnotPickle(bType.internalName, moduleClass.companionSymbol)\n  ...\n  774        )\n  775  \n  776:       beanInfoClass.visitSource(\n  777          cunit.source.toString,\n  778:         null /* SourceDebugExtension */\n  779        )\n  780  \n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/jvm/BCodeSkelBuilder.scala:\n  161                    superClass, interfaceNames.toArray)\n  162  \n  163:       if (emitSource) {\n  164:         cnode.visitSource(cunit.source.toString, null /* SourceDebugExtension */)\n  165        }\n  166  \n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/jvm/BTypesFromSymbols.scala:\n  546      //\n  547      // For fields, only eager val fields can receive ACC_FINAL. vars or lazy vals can't:\n  548:     // Source: http://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.5.3\n  549      // \"Another problem is that the specification allows aggressive\n  550      // optimization of final fields. Within a thread, it is permissible to\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/jvm/GenASM.scala:\n  269      // Neither vars nor lazy vals can, because:\n  270      //\n  271:     // Source: http://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.5.3\n  272      // \"Another problem is that the specification allows aggressive\n  273      // optimization of final fields. Within a thread, it is permissible to\n  ...\n  805      def debugLevel = settings.debuginfo.indexOfChoice\n  806  \n  807:     val emitSource = debugLevel >= 1\n  808      val emitLines  = debugLevel >= 2\n  809      val emitVars   = debugLevel >= 3\n  ...\n 1269  \n 1270        // typestate: entering mode with valid call sequences:\n 1271:       //   [ visitSource ] [ visitOuterClass ] ( visitAnnotation | visitAttribute )*\n 1272  \n 1273:       if(emitSource) {\n 1274:         jclass.visitSource(c.cunit.source.toString,\n 1275:                            null /* SourceDebugExtension */)\n 1276        }\n 1277  \n ....\n 2815  \n 2816        // typestate: entering mode with valid call sequences:\n 2817:       //   [ visitSource ] [ visitOuterClass ] ( visitAnnotation | visitAttribute )*\n 2818  \n 2819:       if(emitSource) {\n 2820:         mirrorClass.visitSource(\"\" + cunit.source,\n 2821:                                 null /* SourceDebugExtension */)\n 2822        }\n 2823  \n ....\n 2870  \n 2871        // beanInfoClass typestate: entering mode with valid call sequences:\n 2872:       //   [ visitSource ] [ visitOuterClass ] ( visitAnnotation | visitAttribute )*\n 2873  \n 2874:       beanInfoClass.visitSource(\n 2875          clasz.cunit.source.toString,\n 2876:         null /* SourceDebugExtension */\n 2877        )\n 2878  \n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/jvm/GenBCode.scala:\n  323        bTypes.initializeCoreBTypes()\n  324        bTypes.javaDefinedClasses.clear()\n  325:       bTypes.javaDefinedClasses ++= currentRun.symSource collect {\n  326          case (sym, _) if sym.isJavaDefined => sym.javaBinaryName.toString\n  327        }\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/jvm/opt/ByteCodeRepository.scala:\n   69    }\n   70  \n   71:   def add(classNode: ClassNode, source: Source) = {\n   72      if (source == CompilationUnit) compilingClasses(classNode.name) = classNode\n   73      else parsedClasses(classNode.name) = Right((classNode, lruCounter.incrementAndGet()))\n   ..\n   78     * parsed from the classfile on the compile classpath.\n   79     */\n   80:   def classNodeAndSource(internalName: InternalName): Either[ClassNotFound, (ClassNode, Source)] = {\n   81      classNode(internalName) map (n => {\n   82        val source = if (compilingClasses contains internalName) CompilationUnit else Classfile\n   ..\n  182        // inlining.\n  183        // TODO: we need to remove them also for classes that are not parsed from classfiles, why not simplify and do it once when inlining?\n  184:       // OR: instead of skipping line numbers for inlined code, use write a SourceDebugExtension\n  185        // attribute that contains JSR-45 data that encodes debugging info.\n  186        //   http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.7.11\n  ...\n  200     * class is being compiled or [[Classfile]] if the class was parsed from the compilation classpath.\n  201     */\n  202:   sealed trait Source\n  203:   object CompilationUnit extends Source\n  204:   object Classfile extends Source\n  205  }\n  206  \n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/jvm/opt/CallGraph.scala:\n   17  import scala.tools.nsc.backend.jvm.BackendReporting._\n   18  import scala.tools.nsc.backend.jvm.analysis._\n   19: import ByteCodeRepository.{Source, CompilationUnit}\n   20  import BytecodeUtils._\n   21  \n   ..\n  130            val callee: Either[OptimizerWarning, Callee] = for {\n  131              (method, declarationClass)     <- byteCodeRepository.methodNode(call.owner, call.name, call.desc): Either[OptimizerWarning, (MethodNode, InternalName)]\n  132:             (declarationClassNode, source) <- byteCodeRepository.classNodeAndSource(declarationClass): Either[OptimizerWarning, (ClassNode, Source)]\n  133              declarationClassBType          =  classBTypeFromClassNode(declarationClassNode)\n  134            } yield {\n  ...\n  261     * Analyze a callsite and gather meta-data that can be used for inlining decisions.\n  262     */\n  263:   private def analyzeCallsite(calleeMethodNode: MethodNode, calleeDeclarationClassBType: ClassBType, receiverTypeInternalName: InternalName, calleeSource: Source): CallsiteInfo = {\n  264      val methodSignature = calleeMethodNode.name + calleeMethodNode.desc\n  265  \n  ...\n  270        calleeDeclarationClassBType.info.orThrow.inlineInfo.methodInfos.get(methodSignature) match {\n  271          case Some(methodInlineInfo) =>\n  272:           val canInlineFromSource = compilerSettings.YoptInlineGlobal || calleeSource == CompilationUnit\n  273  \n  274            val isAbstract = BytecodeUtils.isAbstractMethod(calleeMethodNode)\n  ...\n  308            CallsiteInfo(\n  309              safeToInline      =\n  310:               canInlineFromSource &&\n  311                  isStaticallyResolved &&  // (1)\n  312                  !isAbstract &&\n  ...\n  314                  !BytecodeUtils.isNativeMethod(calleeMethodNode) &&\n  315                  !BytecodeUtils.hasCallerSensitiveAnnotation(calleeMethodNode),\n  316:             safeToRewrite     = canInlineFromSource && isRewritableTraitCall, // (2)\n  317              annotatedInline   = methodInlineInfo.annotatedInline,\n  318              annotatedNoInline = methodInlineInfo.annotatedNoInline,\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/jvm/opt/ClosureOptimizer.scala:\n  239      // the method node is needed for building the call graph entry\n  240      val bodyMethod = byteCodeRepository.methodNode(lambdaBodyHandle.getOwner, lambdaBodyHandle.getName, lambdaBodyHandle.getDesc)\n  241:     def bodyMethodIsBeingCompiled = byteCodeRepository.classNodeAndSource(lambdaBodyHandle.getOwner).map(_._2 == CompilationUnit).getOrElse(false)\n  242      val callee = bodyMethod.map({\n  243        case (bodyMethodNode, bodyMethodDeclClass) =>\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/jvm/opt/Inliner.scala:\n   17  import BytecodeUtils._\n   18  import collection.mutable\n   19: import scala.tools.asm.tree.analysis.{Analyzer, SourceInterpreter}\n   20  import BackendReporting._\n   21  import scala.tools.nsc.backend.jvm.BTypes.InternalName\n   ..\n  141          // The $self parameter type of T$class.foo is S, which may be unrelated to T. If we re-write\n  142          // a call to T.foo to T$class.foo, we need to cast the receiver to S, otherwise we get a\n  143:         // VerifyError. We run a `SourceInterpreter` to find all producer instructions of the\n  144          // receiver value and add a cast to the self type after each.\n  145          if (!selfTypeOk) {\n  ...\n  147            // Callsites of large methods are not added to the call graph.\n  148            localOpt.minimalRemoveUnreachableCode(callsite.callsiteMethod, callsite.callsiteClass.internalName)\n  149:           val analyzer = new AsmAnalyzer(callsite.callsiteMethod, callsite.callsiteClass.internalName, new Analyzer(new SourceInterpreter))\n  150            val receiverValue = analyzer.frameAt(callsite.callsiteInstruction).peekStack(traitMethodArgumentTypes.length)\n  151            for (i <- receiverValue.insns.asScala) {\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/backend/opt/Inliners.scala:\n   10  import scala.collection.mutable\n   11  import scala.tools.nsc.symtab._\n   12: import scala.reflect.internal.util.NoSourceFile\n   13  \n   14  /**\n   ..\n  658  \n  659          def canMakePublic(f: Symbol): Boolean =\n  660:           (m.sourceFile ne NoSourceFile) &&\n  661            (f.isSynthetic || f.isParamAccessor) &&\n  662            { toBecomePublic = f :: toBecomePublic; true }\n  ...\n  677  \n  678          def potentiallyPublicized(f: Symbol): Boolean = {\n  679:           (m.sourceFile eq NoSourceFile) && f.name.containsChar('$')\n  680          }\n  681          */\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/classpath/AggregateFlatClassPath.scala:\n   47      val sourceEntry = findEntry(aggregates, sourcesGetter(pkg))\n   48  \n   49:     mergeClassesAndSources(classEntry.toList, sourceEntry.toList).headOption\n   50    }\n   51  \n   ..\n   54    override def asClassPathStrings: Seq[String] = aggregates.map(_.asClassPathString).distinct\n   55  \n   56:   override def asSourcePathString: String = ClassPath.join(aggregates map (_.asSourcePathString): _*)\n   57  \n   58    override private[nsc] def packages(inPackage: String): Seq[PackageEntry] = {\n   ..\n   64      getDistinctEntries(classesGetter(inPackage))\n   65  \n   66:   override private[nsc] def sources(inPackage: String): Seq[SourceFileEntry] =\n   67      getDistinctEntries(sourcesGetter(inPackage))\n   68  \n   69    override private[nsc] def list(inPackage: String): FlatClassPathEntries = {\n   70:     val (packages, classesAndSources) = aggregates.map(_.list(inPackage)).unzip\n   71      val distinctPackages = packages.flatten.distinct\n   72:     val distinctClassesAndSources = mergeClassesAndSources(classesAndSources: _*)\n   73:     FlatClassPathEntries(distinctPackages, distinctClassesAndSources)\n   74    }\n   75  \n   ..\n   79     * entries for the same class it always would use the first entry of each type found on a classpath.\n   80     */\n   81:   private def mergeClassesAndSources(entries: Seq[ClassRepClassPathEntry]*): Seq[ClassRepClassPathEntry] = {\n   82      // based on the implementation from MergedClassPath\n   83      var count = 0\n   ..\n   95  \n   96          if (existing.binary.isEmpty && entry.binary.isDefined)\n   97:           mergedEntries(index) = ClassAndSourceFilesEntry(entry.binary.get, existing.source.get)\n   98          if (existing.source.isEmpty && entry.source.isDefined)\n   99:           mergedEntries(index) = ClassAndSourceFilesEntry(existing.binary.get, entry.source.get)\n  100        }\n  101        else {\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/classpath/DirectoryFlatClassPath.scala:\n   99  case class DirectoryFlatClassPath(dir: File)\n  100    extends DirectoryFileLookup[ClassFileEntryImpl]\n  101:   with NoSourcePaths {\n  102  \n  103    override def findClass(className: String): Option[ClassRepresentation[AbstractFile]] = findClassFile(className) map ClassFileEntryImpl\n  ...\n  126  }\n  127  \n  128: case class DirectoryFlatSourcePath(dir: File)\n  129:   extends DirectoryFileLookup[SourceFileEntryImpl]\n  130    with NoClassPaths {\n  131  \n  132:   override def asSourcePathString: String = asClassPathString\n  133  \n  134:   override protected def createFileEntry(file: AbstractFile): SourceFileEntryImpl = SourceFileEntryImpl(file)\n  135:   override protected def fileFilter: FileFilter = DirectoryFlatSourcePath.sourceFileFilter\n  136  \n  137    override def findClass(className: String): Option[ClassRepresentation[AbstractFile]] = {\n  138:     findSourceFile(className) map SourceFileEntryImpl\n  139    }\n  140  \n  141:   private def findSourceFile(className: String): Option[AbstractFile] = {\n  142      val relativePath = FileUtils.dirPath(className)\n  143      val sourceFile = Stream(\"scala\", \"java\")\n  ...\n  146  \n  147      sourceFile.map { file =>\n  148:       val wrappedSourceFile = new scala.reflect.io.File(file)\n  149:       val abstractSourceFile = new PlainFile(wrappedSourceFile)\n  150:       abstractSourceFile\n  151      }\n  152    }\n  153  \n  154:   override private[nsc] def sources(inPackage: String): Seq[SourceFileEntry] = files(inPackage)\n  155  }\n  156  \n  157: object DirectoryFlatSourcePath {\n  158  \n  159    private val sourceFileFilter = new FileFilter {\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/classpath/FileUtils.scala:\n   18      def isClass: Boolean = !file.isDirectory && file.hasExtension(\"class\")\n   19  \n   20:     def isScalaOrJavaSource: Boolean = !file.isDirectory && (file.hasExtension(\"scala\") || file.hasExtension(\"java\"))\n   21  \n   22      // TODO do we need to check also other files using ZipMagicNumber like in scala.tools.nsc.io.Jar.isJarOrZip?\n   ..\n   36    }\n   37  \n   38:   def stripSourceExtension(fileName: String): String = {\n   39      if (endsScala(fileName)) stripClassExtension(fileName)\n   40      else if (endsJava(fileName)) stripJavaExtension(fileName)\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/classpath/FlatClassPath.scala:\n   19    private[nsc] def packages(inPackage: String): Seq[PackageEntry]\n   20    private[nsc] def classes(inPackage: String): Seq[ClassFileEntry]\n   21:   private[nsc] def sources(inPackage: String): Seq[SourceFileEntry]\n   22  \n   23    /** Allows to get entries for packages and classes merged with sources possibly in one pass. */\n   ..\n   32        .find(_.name == simpleClassName)\n   33  \n   34:     def findClassInSources = sources(pkg)\n   35        .find(_.name == simpleClassName)\n   36  \n   37:     foundClassFromClassFiles orElse findClassInSources\n   38    }\n   39  \n   ..\n   46  }\n   47  \n   48: case class FlatClassPathEntries(packages: Seq[PackageEntry], classesAndSources: Seq[ClassRepClassPathEntry])\n   49  \n   50  object FlatClassPathEntries {\n   51    import scala.language.implicitConversions\n   52    // to have working unzip method\n   53:   implicit def entry2Tuple(entry: FlatClassPathEntries) = (entry.packages, entry.classesAndSources)\n   54  }\n   55  \n   ..\n   60  }\n   61  \n   62: trait SourceFileEntry extends ClassRepClassPathEntry {\n   63    def file: AbstractFile\n   64  }\n   ..\n   75  }\n   76  \n   77: private[nsc] case class SourceFileEntryImpl(file: AbstractFile) extends SourceFileEntry {\n   78:   override def name = FileUtils.stripSourceExtension(file.name)\n   79  \n   80    override def binary: Option[AbstractFile] = None\n   ..\n   82  }\n   83  \n   84: private[nsc] case class ClassAndSourceFilesEntry(classFile: AbstractFile, srcFile: AbstractFile) extends ClassRepClassPathEntry {\n   85    override def name = FileUtils.stripClassExtension(classFile.name)\n   86  \n   ..\n   91  private[nsc] case class PackageEntryImpl(name: String) extends PackageEntry\n   92  \n   93: private[nsc] trait NoSourcePaths {\n   94:   def asSourcePathString: String = \"\"\n   95:   private[nsc] def sources(inPackage: String): Seq[SourceFileEntry] = Seq.empty\n   96  }\n   97  \n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/classpath/FlatClassPathFactory.scala:\n   27        file <- expandPath(path, expandStar = false)\n   28        dir <- Option(AbstractFile getDirectory file)\n   29:     } yield createSourcePath(dir)\n   30  \n   31:   private def createSourcePath(file: AbstractFile): FlatClassPath =\n   32      if (file.isJarOrZip)\n   33:       ZipAndJarFlatSourcePathFactory.create(file, settings)\n   34      else if (file.isDirectory)\n   35:       new DirectoryFlatSourcePath(file.file)\n   36      else\n   37        sys.error(s\"Unsupported sourcepath element: $file\")\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/classpath/ZipAndJarFileLookupFactory.scala:\n   48    private case class ZipArchiveFlatClassPath(zipFile: File)\n   49      extends ZipArchiveFileLookup[ClassFileEntryImpl]\n   50:     with NoSourcePaths {\n   51  \n   52      override def findClassFile(className: String): Option[AbstractFile] = {\n   ..\n   70    private case class ManifestResourcesFlatClassPath(file: ManifestResources)\n   71      extends FlatClassPath\n   72:     with NoSourcePaths {\n   73  \n   74      override def findClassFile(className: String): Option[AbstractFile] = {\n   ..\n  163   * It should be the only way of creating them as it provides caching.\n  164   */\n  165: object ZipAndJarFlatSourcePathFactory extends ZipAndJarFileLookupFactory {\n  166  \n  167:   private case class ZipArchiveFlatSourcePath(zipFile: File)\n  168:     extends ZipArchiveFileLookup[SourceFileEntryImpl]\n  169      with NoClassPaths {\n  170  \n  171:     override def asSourcePathString: String = asClassPathString\n  172  \n  173:     override private[nsc] def sources(inPackage: String): Seq[SourceFileEntry] = files(inPackage)\n  174  \n  175:     override protected def createFileEntry(file: FileZipArchive#Entry): SourceFileEntryImpl = SourceFileEntryImpl(file)\n  176:     override protected def isRequiredFileType(file: AbstractFile): Boolean = file.isScalaOrJavaSource\n  177    }\n  178  \n  179:   override protected def createForZipFile(zipFile: AbstractFile): FlatClassPath = ZipArchiveFlatSourcePath(zipFile.file)\n  180  }\n  181  \n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/CompilationUnits.scala:\n    6  package scala.tools.nsc\n    7  \n    8: import scala.reflect.internal.util.{ SourceFile, NoSourceFile, FreshNameCreator }\n    9  import scala.collection.mutable\n   10  import scala.collection.mutable.{ LinkedHashSet, ListBuffer }\n   ..\n   14    /** An object representing a missing compilation unit.\n   15     */\n   16:   object NoCompilationUnit extends CompilationUnit(NoSourceFile) {\n   17      override lazy val isJava = false\n   18      override def exists = false\n   ..\n   23      * It typically corresponds to a single file of source code.  It includes\n   24      * error-reporting hooks.  */\n   25:   class CompilationUnit(val source: SourceFile) extends CompilationUnitContextApi { self =>\n   26  \n   27      /** the fresh name creator */\n   ..\n   47      def firstXmlPos = _firstXmlPos\n   48  \n   49:     def exists = source != NoSourceFile && source != null\n   50  \n   51      /** Note: depends now contains toplevel classes.\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/Global.scala:\n   12  import java.nio.charset.{ Charset, CharsetDecoder, IllegalCharsetNameException, UnsupportedCharsetException }\n   13  import scala.collection.{ mutable, immutable }\n   14: import io.{ SourceReader, AbstractFile, Path }\n   15  import reporters.{ Reporter, ConsoleReporter }\n   16  import util.{ ClassFileLookup, ClassPath, MergedClassPath, StatisticsInfo, returning }\n   17  import scala.reflect.ClassTag\n   18: import scala.reflect.internal.util.{ ScalaClassLoader, SourceFile, NoSourceFile, BatchSourceFile, ScriptSourceFile }\n   19  import scala.reflect.internal.pickling.PickleBuffer\n   20  import symtab.{ Flags, SymbolTable, SymbolTrackers }\n   ..\n  182    } with NodePrinters {\n  183      var lastPrintedPhase: Phase = NoPhase\n  184:     var lastPrintedSource: String = \"\"\n  185      infolevel = InfoLevel.Verbose\n  186  \n  ...\n  192  \n  193          // treePrinter show unit.body\n  194:         if (lastPrintedSource == source)\n  195            println(\": tree is unchanged since \" + lastPrintedPhase)\n  196          else {\n  197            lastPrintedPhase = phase.prev // since we're running inside \"exitingPhase\"\n  198:           lastPrintedSource = source\n  199            println(\"\")\n  200            println(source)\n  ...\n  318  // ------------ File interface -----------------------------------------\n  319  \n  320:   private val reader: SourceReader = {\n  321      val defaultEncoding = Properties.sourceEncoding\n  322  \n  ...\n  337      }\n  338  \n  339:     def loadReader(name: String): Option[SourceReader] = {\n  340        def ccon = Class.forName(name).getConstructor(classOf[CharsetDecoder], classOf[Reporter])\n  341  \n  342:       try Some(ccon.newInstance(charset.newDecoder(), reporter).asInstanceOf[SourceReader])\n  343        catch { case ex: Throwable =>\n  344          globalError(\"exception while trying to instantiate source reader '\" + name + \"'\")\n  ...\n  348  \n  349      settings.sourceReader.valueSetByUser flatMap loadReader getOrElse {\n  350:       new SourceReader(charset.newDecoder(), reporter)\n  351      }\n  352    }\n  ...\n  354    if (settings.verbose || settings.Ylogcp)\n  355      reporter.echo(\n  356:       s\"[search path for source files: ${classPath.asSourcePathString}]\\n\" +\n  357        s\"[search path for class files: ${classPath.asClassPathString}]\"\n  358      )\n  ...\n  366    override protected val enableTypeVarExperimentals = settings.Xexperimental.value\n  367  \n  368:   def getSourceFile(f: AbstractFile): BatchSourceFile = new BatchSourceFile(f, reader read f)\n  369  \n  370:   def getSourceFile(name: String): SourceFile = {\n  371      val f = AbstractFile.getFile(name)\n  372      if (f eq null) throw new FileNotFoundException(\n  373        \"source file '\" + name + \"' could not be found\")\n  374:     getSourceFile(f)\n  375    }\n  376  \n  ...\n  419      final def withCurrentUnit(unit: CompilationUnit)(task: => Unit) {\n  420        if ((unit ne null) && unit.exists)\n  421:         lastSeenSourceFile = unit.source\n  422  \n  423        if (settings.debug && (settings.verbose || currentRun.size < 5))\n  ...\n 1019     *  really want to know, this hack.\n 1020     */\n 1021:   protected var lastSeenSourceFile: SourceFile = NoSourceFile\n 1022  \n 1023    /** Let's share a lot more about why we crash all over the place.\n ....\n 1030    def currentRun: Run              = curRun\n 1031    def currentUnit: CompilationUnit = if (currentRun eq null) NoCompilationUnit else currentRun.currentUnit\n 1032:   def currentSource: SourceFile    = if (currentUnit.exists) currentUnit.source else lastSeenSourceFile\n 1033    def currentFreshNameCreator      = currentUnit.fresh\n 1034  \n ....\n 1090        val xs = scala.reflect.io.File(tree.pos.source.file.file).lines drop start take 7\n 1091        val strs = xs.zipWithIndex map { case (line, idx) => f\"${start + idx}%6d $line\" }\n 1092:       strs.mkString(\"== Source file context for tree position ==\\n\\n\", \"\\n\", \"\")\n 1093      }\n 1094      catch { case t: Exception => devWarning(\"\" + t) ; \"<Cannot read source file>\" }\n 1095  \n 1096      val info1 = formatExplain(\n 1097:       \"while compiling\"    -> currentSource.path,\n 1098        \"during phase\"       -> ( if (globalPhase eq phase) phase else \"globalPhase=%s, enteringPhase=%s\".format(globalPhase, phase) ),\n 1099        \"library version\"    -> scala.util.Properties.versionString,\n ....\n 1125    }\n 1126  \n 1127:   def newSourceFile(code: String, filename: String = \"<console>\") =\n 1128:     new BatchSourceFile(filename, code)\n 1129  \n 1130    def newCompilationUnit(code: String, filename: String = \"<console>\") =\n 1131:     new CompilationUnit(newSourceFile(code, filename))\n 1132  \n 1133    def newUnitScanner(unit: CompilationUnit): UnitScanner =\n ....\n 1179  \n 1180      /** A map from compiled top-level symbols to their source files */\n 1181:     val symSource = new mutable.HashMap[Symbol, AbstractFile]\n 1182  \n 1183      /** A map from compiled top-level symbols to their picklers */\n ....\n 1403      def compiles(sym: Symbol): Boolean =\n 1404        if (sym == NoSymbol) false\n 1405:       else if (symSource.isDefinedAt(sym)) true\n 1406        else if (!sym.isTopLevel) compiles(sym.enclosingTopLevelClassOrDummy)\n 1407        else if (sym.isModuleClass) compiles(sym.sourceModule)\n ....\n 1472       *  such as a plugin was passed a bad option.\n 1473       */\n 1474:     def compileSources(sources: List[SourceFile]) = if (!reporter.hasErrors) {\n 1475  \n 1476        def checkDeprecations() = {\n ....\n 1556  \n 1557        if (reporter.hasErrors) {\n 1558:         for ((sym, file) <- symSource.iterator) {\n 1559            if (file != null)\n 1560:             sym.reset(new loaders.SourcefileLoader(file))\n 1561            if (sym.isTerm)\n 1562              sym.moduleClass reset loaders.moduleClassLoader\n 1563          }\n 1564        }\n 1565:       symSource.keys foreach (x => resetPackageClass(x.owner))\n 1566  \n 1567        informTime(\"total\", startTime)\n ....\n 1573      /** Compile list of abstract files. */\n 1574      def compileFiles(files: List[AbstractFile]) {\n 1575:       try compileSources(files map getSourceFile)\n 1576        catch { case ex: IOException => globalError(ex.getMessage()) }\n 1577      }\n ....\n 1580      def compile(filenames: List[String]) {\n 1581        try {\n 1582:         val sources: List[SourceFile] =\n 1583            if (settings.script.isSetByUser && filenames.size > 1) returning(Nil)(_ => globalError(\"can only compile one script at a time\"))\n 1584:           else filenames map getSourceFile\n 1585  \n 1586:         compileSources(sources)\n 1587        }\n 1588        catch { case ex: IOException => globalError(ex.getMessage()) }\n ....\n 1590  \n 1591      /** If this compilation is scripted, convert the source to a script source. */\n 1592:     private def scripted(s: SourceFile) = s match {\n 1593:       case b: BatchSourceFile if settings.script.isSetByUser => ScriptSourceFile(b)\n 1594        case _ => s\n 1595      }\n ....\n 1600      def compileLate(file: AbstractFile) {\n 1601        if (!compiledFiles(file.path))\n 1602:         compileLate(new CompilationUnit(scripted(getSourceFile(file))))\n 1603      }\n 1604  \n ....\n 1649        // The name as given was not found, so we'll sift through every symbol in\n 1650        // the run looking for plausible matches.\n 1651:       case NoSymbol => phased(currentRun.symSource.keys map (sym => findNamedMember(fullName, sym)) filterNot (_ == NoSymbol) toList)\n 1652        // The name as given matched, so show only that.\n 1653        case sym      => List(sym)\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/io/SourceReader.scala:\n   15  \n   16  /** This class implements methods to read and decode source files. */\n   17: class SourceReader(decoder: CharsetDecoder, reporter: Reporter) {\n   18  \n   19:   import SourceReader.{decode, flush}\n   20  \n   21    //########################################################################\n   ..\n   94  }\n   95  \n   96: object SourceReader {\n   97  \n   98    /**\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/MainTokenMetric.scala:\n   22      var totale = 0\n   23      for (source <- fnames) {\n   24:       val s = new UnitScanner(new CompilationUnit(compiler.getSourceFile(source)))\n   25        s.nextToken()\n   26        var i = 0\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/settings/MutableSettings.scala:\n   11  import io.{ AbstractFile, Jar, Path, PlainFile, VirtualDirectory }\n   12  import scala.collection.generic.Clearable\n   13: import scala.io.Source\n   14  import scala.reflect.internal.util.StringOps\n   15  import scala.reflect.{ ClassTag, classTag }\n   ..\n  210    private def getClasspath(id: String, loader: ClassLoader): Option[String] =\n  211      Option(loader).flatMap(ld => Option(ld.getResource(id + \".class.path\"))).map { cp =>\n  212:        Source.fromURL(cp).mkString\n  213      }\n  214  \n  ...\n  323  \n  324      /** Return the source file path(s) which correspond to the given\n  325:      *  classfile path and SourceFile attribute value, subject to the\n  326       *  condition that source files are arranged in the filesystem\n  327       *  according to Java package layout conventions.\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/settings/StandardScalaSettings.scala:\n   25    val javabootclasspath = PathSetting (\"-javabootclasspath\", \"Override java boot classpath.\", Defaults.javaBootClassPath)\n   26    val javaextdirs =       PathSetting (\"-javaextdirs\", \"Override java extdirs classpath.\", Defaults.javaExtDirs)\n   27:   val sourcepath =        PathSetting (\"-sourcepath\", \"Specify location(s) of source files.\", \"\") // Defaults.scalaSourcePath\n   28  \n   29    /** Other settings.\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/symtab/BrowsingLoaders.scala:\n   86          case ClassDef(_, name, _, _) =>\n   87            if (packagePrefix == root.fullName) {\n   88:             enterClass(root, name.toString, new SourcefileLoader(src))\n   89              entered += 1\n   90            } else println(\"prefixes differ: \"+packagePrefix+\",\"+root.fullName)\n   91          case ModuleDef(_, name, _) =>\n   92            if (packagePrefix == root.fullName) {\n   93:             val module = enterModule(root, name.toString, new SourcefileLoader(src))\n   94              entered += 1\n   95              if (name == nme.PACKAGEkw) {\n   ..\n  103  \n  104  //    System.out.println(\"Browsing \"+src)\n  105:     val source = getSourceFile(src) // this uses the current encoding\n  106      val body = new OutlineParser(source).parse()\n  107  //    System.out.println(body)\n  ...\n  114    /** Enter top-level symbols from a source file\n  115     */\n  116:   override def enterToplevelsFromSource(root: Symbol, name: String, src: AbstractFile) {\n  117      try {\n  118        if (root.isEffectiveRoot || !src.name.endsWith(\".scala\")) // RootClass or EmptyPackageClass\n  119:         super.enterToplevelsFromSource(root, name, src)\n  120        else\n  121          browseTopLevel(root, src)\n  ...\n  123        case ex: syntaxAnalyzer.MalformedInput =>\n  124          println(\"[%s] caught malformed input exception at offset %d: %s\".format(src, ex.offset, ex.msg))\n  125:         super.enterToplevelsFromSource(root, name, src)\n  126      }\n  127    }\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/symtab/classfile/ClassfileParser.scala:\n  856            parseExceptions(attrLen)\n  857  \n  858:         case tpnme.SourceFileATTR =>\n  859            val srcfileLeaf = readName().toString.trim\n  860            val srcpath = sym.enclosingPackage match {\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/symtab/SymbolLoaders.scala:\n  138     *  (overridden in interactive.Global).\n  139     */\n  140:   def enterToplevelsFromSource(root: Symbol, name: String, src: AbstractFile) {\n  141:     enterClassAndModule(root, name, new SourcefileLoader(src))\n  142    }\n  143  \n  ...\n  160        if platform.needCompile(bin, src) && !binaryOnly(owner, classRep.name) =>\n  161          if (settings.verbose) inform(\"[symloader] picked up newer source file for \" + src.path)\n  162:         enterToplevelsFromSource(owner, classRep.name, src)\n  163        case (None, Some(src)) =>\n  164          if (settings.verbose) inform(\"[symloader] no class, picked up source file for \" + src.path)\n  165:         enterToplevelsFromSource(owner, classRep.name, src)\n  166        case (Some(bin), _) =>\n  167          enterClassAndModule(owner, classRep.name, newClassLoader(bin))\n  ...\n  197      private var ok = false\n  198  \n  199:     private def setSource(sym: Symbol) {\n  200        sourcefile foreach (sf => sym match {\n  201          case cls: ClassSymbol => cls.associatedFile = sf\n  ...\n  213          informTime(\"loaded \" + description, start)\n  214          ok = true\n  215:         setSource(root)\n  216:         setSource(root.companionSymbol) // module -> class, class -> module\n  217        }\n  218        catch {\n  ...\n  293  \n  294        if (!root.isRoot)\n  295:         for (entry <- classPathEntries.classesAndSources) initializeFromClassPath(root, entry)\n  296        if (!root.isEmptyPackageClass) {\n  297          for (pkg <- classPathEntries.packages) {\n  ...\n  362    }\n  363  \n  364:   class SourcefileLoader(val srcfile: AbstractFile) extends SymbolLoader with FlagAssigningCompleter {\n  365      protected def description = \"source file \"+ srcfile.toString\n  366:     override def fromSource = true\n  367      override def sourcefile = Some(srcfile)\n  368      protected def doComplete(root: Symbol): Unit = compileLate(srcfile)\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/transform/AddInterfaces.scala:\n  106      }\n  107      if (currentRun compiles iface)\n  108:       currentRun.symSource(impl) = iface.sourceFile\n  109  \n  110      implClassMap(iface) = impl\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/transform/Constructors.scala:\n  546            if (canBeSupplanted(tree.symbol))\n  547              gen.mkAttributedIdent(parameter(tree.symbol.accessed)) setPos tree.pos\n  548:           else if (tree.symbol.outerSource == clazz && !clazz.isImplClass)\n  549              gen.mkAttributedIdent(parameterNamed(nme.OUTER)) setPos tree.pos\n  550            else\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/transform/Delambdafy.scala:\n  296          val lambdaClass = pkg newClassSymbol(name, originalFunction.pos, FINAL | SYNTHETIC) addAnnotation SerialVersionUIDAnnotation\n  297          // make sure currentRun.compiles(lambdaClass) is true (AddInterfaces does the same for trait impl classes)\n  298:         currentRun.symSource(lambdaClass) = funOwner.sourceFile\n  299          lambdaClass setInfo ClassInfoType(parents, newScope, lambdaClass)\n  300          assert(!lambdaClass.isAnonymousClass && !lambdaClass.isAnonymousFunction, \"anonymous class name: \"+ lambdaClass.name)\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/transform/ExplicitOuter.scala:\n   81    def outerAccessor(clazz: Symbol): Symbol = {\n   82      val firstTry = clazz.info.decl(nme.expandedName(nme.OUTER, clazz))\n   83:     if (firstTry != NoSymbol && firstTry.outerSource == clazz) firstTry\n   84:     else findOrElse(clazz.info.decls)(_.outerSource == clazz)(NoSymbol)\n   85    }\n   86    def newOuterAccessor(clazz: Symbol) = {\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/transform/ExtensionMethods.scala:\n  284        //         sites.\n  285        //\n  286:       //         // Source\n  287        //         class C[C] { def meth[M](a: A) = { { <expr>: C[C'] }.meth[M'] } }\n  288        //\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/transform/SpecializeTypes.scala:\n  560  \n  561        sClass.associatedFile = clazz.sourceFile\n  562:       currentRun.symSource(sClass) = clazz.sourceFile // needed later on by mixin\n  563  \n  564        val env = mapAnyRefsInSpecSym(env0, clazz, sClass)\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/transform/UnCurry.scala:\n  472            case ValDef(_, _, _, rhs) =>\n  473              if (sym eq NoSymbol) throw new IllegalStateException(\"Encountered Valdef without symbol: \"+ tree + \" in \"+ unit)\n  474:             if (!sym.owner.isSourceMethod)\n  475                withNeedLift(needLift = true) { super.transform(tree) }\n  476              else\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/typechecker/Implicits.scala:\n  135    private val implicitSearchId = { var id = 1 ; () => try id finally id += 1 }\n  136  \n  137:   private def isInvalidConversionSource(tpe: Type): Boolean = tpe match {\n  138      case Function1(in, _) => in <:< NullClass.tpe\n  139      case _                => false\n  ...\n 1404            case _                 => false\n 1405          }\n 1406:         if (settings.isScala211 && isInvalidConversionSource(pt)) {\n 1407            maybeInvalidConversionError(\"an expression of type Null is ineligible for implicit conversion\")\n 1408            result = SearchFailure\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/typechecker/Namers.scala:\n  197      // objects, but I think it's also wrong in other ways.\n  198      protected def conflict(newS: Symbol, oldS: Symbol) = (\n  199:        (   !oldS.isSourceMethod\n  200          || nme.isSetterName(newS.name)\n  201          || newS.isTopLevel\n  ...\n  210  \n  211      private def allowsOverload(sym: Symbol) = (\n  212:       sym.isSourceMethod && sym.owner.isClass && !sym.isTopLevel\n  213      )\n  214  \n  ...\n  380      private def enterClassSymbol(tree: ClassDef, clazz: ClassSymbol): Symbol = {\n  381        if (clazz.sourceFile != null && clazz.sourceFile != contextFile)\n  382:         devWarning(s\"Source file mismatch in $clazz: ${clazz.sourceFile} vs. $contextFile\")\n  383  \n  384        clazz.associatedFile = contextFile\n  385        if (clazz.sourceFile != null) {\n  386:         assert(currentRun.canRedefine(clazz) || clazz.sourceFile == currentRun.symSource(clazz), clazz.sourceFile)\n  387:         currentRun.symSource(clazz) = clazz.sourceFile\n  388        }\n  389        registerTopLevelSym(clazz)\n  ...\n  480        if (m.isTopLevel && !m.hasPackageFlag) {\n  481          m.moduleClass.associatedFile = contextFile\n  482:         currentRun.symSource(m) = m.moduleClass.sourceFile\n  483          registerTopLevelSym(m)\n  484        }\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/typechecker/NamesDefaults.scala:\n  138        val (baseFun1, funTargs, defaultTargs) = baseFun match {\n  139          case TypeApply(fun, targs) =>\n  140:           val targsInSource =\n  141              if (targs.forall(a => context.undetparams contains a.symbol)) Nil\n  142              else targs\n  143:           (fun, targs, targsInSource)\n  144  \n  145          case Select(New(tpt @ TypeTree()), _) if isConstr =>\n  146:           val targsInSource = tpt.tpe match {\n  147              case TypeRef(pre, sym, args)\n  148              if (!args.forall(a => context.undetparams contains a.typeSymbol)) =>\n  ...\n  151                Nil\n  152            }\n  153:           (baseFun, Nil, targsInSource)\n  154  \n  155          case Select(TypeApply(New(TypeTree()), targs), _) if isConstr =>\n  156:           val targsInSource =\n  157              if (targs.forall(a => context.undetparams contains a.symbol)) Nil\n  158              else targs\n  159:           (baseFun, Nil, targsInSource)\n  160  \n  161          case _ => (baseFun, Nil, Nil)\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/typechecker/RefChecks.scala:\n  451              overrideError(\"needs to be a stable, immutable value\")\n  452            } else if (member.isValue && member.isLazy &&\n  453:                      other.isValue && !other.isSourceMethod && !other.isDeferred && !other.isLazy) {\n  454              overrideError(\"cannot override a concrete non-lazy value\")\n  455:           } else if (other.isValue && other.isLazy && !other.isSourceMethod && !other.isDeferred &&\n  456                       member.isValue && !member.isLazy) {\n  457              overrideError(\"must be declared lazy to override a concrete lazy value\")\n  ...\n 1501  \n 1502        val doTransform =\n 1503:         sym.isSourceMethod &&\n 1504          sym.isCase &&\n 1505          sym.name == nme.apply &&\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/typechecker/Typers.scala:\n   15  \n   16  import scala.collection.{mutable, immutable}\n   17: import scala.reflect.internal.util.{ BatchSourceFile, Statistics, shortClassOfInstance, ListOfNil }\n   18  import mutable.ListBuffer\n   19  import symtab.Flags._\n   ..\n 1544            val dummy = context.outer.owner.newLocalDummy(context.owner.pos)\n 1545            val cscope = context.outer.makeNewScope(ctor, dummy)\n 1546:           if (dummy.isTopLevel) currentRun.symSource(dummy) = currentUnit.source.file\n 1547            val cbody2 = { // called both during completion AND typing.\n 1548              val typer1 = newTyper(cscope)\n ....\n 1681              pending += ParentFinalInheritanceError(parent, psym)\n 1682  \n 1683:           val sameSourceFile = context.unit.source.file == psym.sourceFile\n 1684  \n 1685            if (!isPastTyper && psym.hasDeprecatedInheritanceAnnotation &&\n 1686:             !sameSourceFile && !context.owner.ownerChain.exists(x => x.isDeprecated || x.hasBridgeAnnotation)) {\n 1687              val suffix = psym.deprecatedInheritanceMessage map (\": \" + _) getOrElse \"\"\n 1688              val msg = s\"inheritance from ${psym.fullLocationString} is deprecated$suffix\"\n ....\n 1691  \n 1692            if (psym.isSealed && !phase.erasedTypes)\n 1693:             if (sameSourceFile)\n 1694                psym addChild context.owner\n 1695              else\n ....\n 1808  \n 1809        if (settings.isScala211  && mdef.symbol == PredefModule)\n 1810:         ensurePredefParentsAreInSameSourceFile(impl2)\n 1811  \n 1812        treeCopy.ModuleDef(mdef, typedMods, mdef.name, impl2) setType NoType\n 1813      }\n 1814  \n 1815:     private def ensurePredefParentsAreInSameSourceFile(template: Template) = {\n 1816        val parentSyms = template.parents map (_.symbol) filterNot (_ == AnyRefClass)\n 1817        if (parentSyms exists (_.associatedFile != PredefModule.associatedFile))\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/typechecker/TypersTracking.scala:\n    8  \n    9  import scala.collection.mutable\n   10: import scala.reflect.internal.util.{ BatchSourceFile, Statistics }\n   11  import mutable.ListBuffer\n   12  import Mode._\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/util/ClassFileLookup.scala:\n   37    /** The whole sourcepath in the form of one String.\n   38      */\n   39:   def asSourcePathString: String\n   40  }\n   41  \n   42  /**\n   43:  * Represents classes which can be loaded with a ClassfileLoader and/or SourcefileLoader.\n   44   */\n   45  // TODO at the end, after the possible removal of the old classpath implementation, this class shouldn't be generic\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/util/ClassPath.scala:\n  102      def validClassFile(name: String)  = endsClass(name) && isValidName(name)\n  103      def validPackage(name: String)    = (name != \"META-INF\") && (name != \"\") && (name.charAt(0) != '.')\n  104:     def validSourceFile(name: String) = endsScalaOrJava(name)\n  105  \n  106      /** From the representation to its identifier.\n  ...\n  110      def sourcesInPath(path: String): List[ClassPath[T]] =\n  111        for (file <- expandPath(path, expandStar = false) ; dir <- Option(AbstractFile getDirectory file)) yield\n  112:         new SourcePath[T](dir, this)\n  113    }\n  114  \n  ...\n  134    /** From the source file to its identifier.\n  135     */\n  136:   def toSourceName(f: AbstractFile): String = FileUtils.stripSourceExtension(f.name)\n  137  }\n  138  \n  ...\n  182  \n  183    /**\n  184:    * Represents classes which can be loaded with a ClassfileLoader and/or SourcefileLoader.\n  185     */\n  186    case class ClassRep(binary: Option[T], source: Option[AbstractFile]) extends ClassRepresentation[T] {\n  ...\n  189        case _        =>\n  190          assert(source.isDefined)\n  191:         toSourceName(source.get)\n  192      }\n  193    }\n  ...\n  197    def validClassFile(name: String)  = context.validClassFile(name)\n  198    def validPackage(name: String)    = context.validPackage(name)\n  199:   def validSourceFile(name: String) = context.validSourceFile(name)\n  200  \n  201    /**\n  ...\n  221      }\n  222  \n  223:   override def asSourcePathString: String = sourcepaths.mkString(pathSeparator)\n  224  \n  225    def sortString = join(split(asClassPathString).sorted: _*)\n  ...\n  234   * A Classpath containing source files\n  235   */\n  236: class SourcePath[T](dir: AbstractFile, val context: ClassPathContext[T]) extends ClassPath[T] {\n  237    import FileUtils.AbstractFileOps\n  238  \n  239    def name = dir.name\n  240:   override def origin = dir.underlyingSource map (_.path)\n  241    def asURLs = dir.toURLs()\n  242    def asClassPathString = dir.path\n  ...\n  245    private def traverse() = {\n  246      val classBuf   = immutable.Vector.newBuilder[ClassRep]\n  247:     val packageBuf = immutable.Vector.newBuilder[SourcePath[T]]\n  248      dir foreach { f =>\n  249:       if (!f.isDirectory && validSourceFile(f.name))\n  250          classBuf += ClassRep(None, Some(f))\n  251        else if (f.isDirectory && validPackage(f.name))\n  252:         packageBuf += new SourcePath[T](f, context)\n  253      }\n  254      (packageBuf.result(), classBuf.result())\n  ...\n  266  \n  267    def name = dir.name\n  268:   override def origin = dir.underlyingSource map (_.path)\n  269    def asURLs = dir.toURLs(default = Seq(new URL(name)))\n  270    def asClassPathString = dir.path\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/util/package.scala:\n  116    @deprecated(\"Moved to scala.reflect.internal.util.RangePosition\", \"2.10.0\")\n  117    type RangePosition = scala.reflect.internal.util.RangePosition\n  118:   @deprecated(\"Moved to scala.reflect.internal.util.SourceFile\", \"2.10.0\")\n  119:   type SourceFile = scala.reflect.internal.util.SourceFile\n  120:   @deprecated(\"Moved to scala.reflect.internal.util.BatchSourceFile\", \"2.10.0\")\n  121:   type BatchSourceFile = scala.reflect.internal.util.BatchSourceFile\n  122  \n  123    @deprecated(\"Moved to scala.reflect.internal.util.AbstractFileClassLoader\", \"2.11.0\")\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/reflect/ToolBoxFactory.scala:\n   10  import scala.reflect.internal.util.AbstractFileClassLoader\n   11  import scala.reflect.internal.Flags._\n   12: import scala.reflect.internal.util.{BatchSourceFile, NoSourceFile, NoFile}\n   13  import java.lang.{Class => jClass}\n   14  import scala.compat.Platform.EOL\n   ..\n   61          undoLog.clear()\n   62          analyzer.lastTreeToTyper = EmptyTree\n   63:         lastSeenSourceFile = NoSourceFile\n   64          lastSeenContext = null\n   65        }\n   ..\n  140  \n  141            val run = new Run\n  142:           run.symSource(ownerClass) = NoAbstractFile // need to set file to something different from null, so that currentRun.defines works\n  143            phase = run.typerPhase // need to set a phase to something <= typerPhase, otherwise implicits in typedSelect will be disabled\n  144            globalPhase = run.typerPhase // amazing... looks like phase and globalPhase are different things, so we need to set them separately\n  ...\n  190        private def wrapInPackageAndCompile(packageName: TermName, tree: ImplDef): Symbol = {\n  191          val pdef = PackageDef(Ident(packageName), List(tree))\n  192:         val unit = new CompilationUnit(NoSourceFile)\n  193          unit.body = pdef\n  194  \n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/util/PathResolver.scala:\n   83     */\n   84    object Defaults {\n   85:     def scalaSourcePath   = Environment.sourcePathEnv\n   86      def javaBootClassPath = Environment.javaBootClassPath\n   87      def javaUserClassPath = Environment.javaUserClassPath\n   ..\n  253       * <root>.reflect package created by the bootstrapping. Thus, no bootstrapping for scaladoc!\n  254       * TODO: we should refactor this as a separate -bootstrap option to have a clean implementation, no? */\n  255:     def sourcePath          = if (!settings.isScaladoc) cmdLineOrElse(\"sourcepath\", Defaults.scalaSourcePath) else \"\"\n  256  \n  257      def userClassPath = settings.classpath.value  // default is specified by settings and can be overridden there\n\n/Users/vjovanov/code/scala/src/intellij/asm.iml.SAMPLE:\n    4      <exclude-output />\n    5      <content url=\"file://$MODULE_DIR$/../asm\">\n    6:       <sourceFolder url=\"file://$MODULE_DIR$/../asm\" isTestSource=\"false\" />\n    7      </content>\n    8      <orderEntry type=\"inheritedJdk\" />\n\n/Users/vjovanov/code/scala/src/intellij/compiler.iml.SAMPLE:\n    4      <exclude-output />\n    5      <content url=\"file://$MODULE_DIR$/../compiler\">\n    6:       <sourceFolder url=\"file://$MODULE_DIR$/../compiler/src\" isTestSource=\"false\" />\n    7:       <sourceFolder url=\"file://$MODULE_DIR$/../compiler\" isTestSource=\"false\" />\n    8      </content>\n    9      <orderEntry type=\"inheritedJdk\" />\n\n/Users/vjovanov/code/scala/src/intellij/interactive.iml.SAMPLE:\n    4      <exclude-output />\n    5      <content url=\"file://$MODULE_DIR$/../interactive\">\n    6:       <sourceFolder url=\"file://$MODULE_DIR$/../interactive\" isTestSource=\"false\" />\n    7      </content>\n    8      <orderEntry type=\"inheritedJdk\" />\n\n/Users/vjovanov/code/scala/src/intellij/library.iml.SAMPLE:\n    4      <exclude-output />\n    5      <content url=\"file://$MODULE_DIR$/../library\">\n    6:       <sourceFolder url=\"file://$MODULE_DIR$/../library/src\" isTestSource=\"false\" />\n    7:       <sourceFolder url=\"file://$MODULE_DIR$/../library\" isTestSource=\"false\" />\n    8      </content>\n    9      <orderEntry type=\"inheritedJdk\" />\n\n/Users/vjovanov/code/scala/src/intellij/manual.iml.SAMPLE:\n    4      <exclude-output />\n    5      <content url=\"file://$MODULE_DIR$/../manual\">\n    6:       <sourceFolder url=\"file://$MODULE_DIR$/../manual\" isTestSource=\"false\" />\n    7      </content>\n    8      <orderEntry type=\"inheritedJdk\" />\n\n/Users/vjovanov/code/scala/src/intellij/partest-extras.iml.SAMPLE:\n    4      <exclude-output />\n    5      <content url=\"file://$MODULE_DIR$/../partest-extras\">\n    6:       <sourceFolder url=\"file://$MODULE_DIR$/../partest-extras\" isTestSource=\"false\" />\n    7      </content>\n    8      <orderEntry type=\"inheritedJdk\" />\n\n/Users/vjovanov/code/scala/src/intellij/partest-javaagent.iml.SAMPLE:\n    4      <exclude-output />\n    5      <content url=\"file://$MODULE_DIR$/../partest-javaagent\">\n    6:       <sourceFolder url=\"file://$MODULE_DIR$/../partest-javaagent\" isTestSource=\"false\" />\n    7      </content>\n    8      <orderEntry type=\"inheritedJdk\" />\n\n/Users/vjovanov/code/scala/src/intellij/reflect.iml.SAMPLE:\n    4      <exclude-output />\n    5      <content url=\"file://$MODULE_DIR$/../reflect\">\n    6:       <sourceFolder url=\"file://$MODULE_DIR$/../reflect\" isTestSource=\"false\" />\n    7      </content>\n    8      <orderEntry type=\"inheritedJdk\" />\n\n/Users/vjovanov/code/scala/src/intellij/repl.iml.SAMPLE:\n    4      <exclude-output />\n    5      <content url=\"file://$MODULE_DIR$/../repl\">\n    6:       <sourceFolder url=\"file://$MODULE_DIR$/../repl\" isTestSource=\"false\" />\n    7      </content>\n    8      <orderEntry type=\"inheritedJdk\" />\n\n/Users/vjovanov/code/scala/src/intellij/scaladoc.iml.SAMPLE:\n    4      <exclude-output />\n    5      <content url=\"file://$MODULE_DIR$/../scaladoc\">\n    6:       <sourceFolder url=\"file://$MODULE_DIR$/../scaladoc\" isTestSource=\"false\" />\n    7      </content>\n    8      <orderEntry type=\"inheritedJdk\" />\n\n/Users/vjovanov/code/scala/src/intellij/scalap.iml.SAMPLE:\n    4      <exclude-output />\n    5      <content url=\"file://$MODULE_DIR$/../scalap\">\n    6:       <sourceFolder url=\"file://$MODULE_DIR$/../scalap\" isTestSource=\"false\" />\n    7      </content>\n    8      <orderEntry type=\"inheritedJdk\" />\n\n/Users/vjovanov/code/scala/src/intellij/test-junit.iml.SAMPLE:\n    4      <exclude-output />\n    5      <content url=\"file://$MODULE_DIR$/../../test/junit\">\n    6:       <sourceFolder url=\"file://$MODULE_DIR$/../../test/junit\" isTestSource=\"true\" />\n    7      </content>\n    8      <orderEntry type=\"inheritedJdk\" />\n\n/Users/vjovanov/code/scala/src/interactive/scala/tools/nsc/interactive/CompilerControl.scala:\n   11  import scala.tools.nsc.util.EmptyAction\n   12  import scala.tools.nsc.util.WorkScheduler\n   13: import scala.reflect.internal.util.{SourceFile, Position}\n   14  import scala.tools.nsc.util.InterruptReq\n   15  \n   ..\n   19   *  unitOfFile: The map from sourcefiles to loaded units. A sourcefile/unit is loaded if it occurs in that map.\n   20   *\n   21:  *  manipulated by: removeUnitOf, reloadSources.\n   22   *\n   23:  *  A call to reloadSources will add the given sources to the loaded units, and\n   24   *  start a new background compiler pass to compile all loaded units (with the indicated sources first).\n   25   *  Each background compiler pass has its own typer run.\n   ..\n   27   *  completely typechecked in the following ways:\n   28  \n   29:  *  1. by a new call to reloadSources. This starts a new background compiler pass with a new typer run.\n   30   *  2. by a call to askTypeTree. This starts a new typer run if the forceReload parameter = true\n   31   *  3. by a call to askTypeAt, askTypeCompletion, askScopeCompletion, askToDoFirst, askLinkPos, askLastType.\n   ..\n   54     *  if source is not loaded.\n   55     */\n   56:   def getUnitOf(s: SourceFile): Option[RichCompilationUnit] = getUnit(s)\n   57  \n   58    /** Run operation `op` on a compilation unit associated with given `source`.\n   ..\n   60     *  Otherwise a new compilation unit is created, but not added to the set of loaded units.\n   61     */\n   62:   def onUnitOf[T](source: SourceFile)(op: RichCompilationUnit => T): T =\n   63      op(unitOfFile.getOrElse(source.file, new RichCompilationUnit(source)))\n   64  \n   65:   /** Removes the CompilationUnit corresponding to the given SourceFile\n   66     *  from consideration for recompilation.\n   67     */\n   68:   def removeUnitOf(s: SourceFile): Option[RichCompilationUnit] = { toBeRemoved += s.file; unitOfFile get s.file }\n   69  \n   70    /** Returns the top level classes and objects that were deleted\n   ..\n  101     *  the given sources at the head of the list of to-be-compiled sources.\n  102     */\n  103:   def askReload(sources: List[SourceFile], response: Response[Unit]) = {\n  104      val superseeded = scheduler.dequeueAll {\n  105        case ri: ReloadItem if ri.sources == sources => Some(ri)\n  ...\n  113     *  Returns () to syncvar `response` on completion.\n  114     */\n  115:   def askFilesDeleted(sources: List[SourceFile], response: Response[Unit]) = {\n  116      postWorkItem(new FilesDeletedItem(sources, response))\n  117    }\n  ...\n  130     */\n  131    @deprecated(\"Use `askLoadedTyped` instead to avoid race conditions in the typechecker\", \"2.10.1\")\n  132:   def askType(source: SourceFile, forceReload: Boolean, response: Response[Tree]) =\n  133      postWorkItem(new AskTypeItem(source, forceReload, response))\n  134  \n  ...\n  144     *  is unloaded, it stays that way.\n  145     */\n  146:   def askLinkPos(sym: Symbol, source: SourceFile, response: Response[Position]) =\n  147      postWorkItem(new AskLinkPosItem(sym, source, response))\n  148  \n  ...\n  159     *  Note: This operation does not automatically load sources that are not yet loaded.\n  160     */\n  161:   def askDocComment(sym: Symbol, source: SourceFile, site: Symbol, fragments: List[(Symbol,SourceFile)], response: Response[(String, String, Position)]): Unit =\n  162      postWorkItem(new AskDocCommentItem(sym, source, site, fragments, response))\n  163  \n  164    @deprecated(\"Use method that accepts fragments\", \"2.10.2\")\n  165:   def askDocComment(sym: Symbol, site: Symbol, source: SourceFile, response: Response[(String, String, Position)]): Unit =\n  166      askDocComment(sym, source, site, (sym,source)::Nil, response)\n  167  \n  ...\n  183     *  If the file is in the 'crashedFiles' ignore list it is removed and typechecked normally.\n  184     */\n  185:   def askToDoFirst(source: SourceFile) =\n  186      postWorkItem(new AskToDoFirstItem(source))\n  187  \n  ...\n  196     *                   the a NoSuchUnitError is raised in the response.\n  197     */\n  198:   def askLoadedTyped(source:SourceFile, keepLoaded: Boolean, response: Response[Tree]): Unit =\n  199      postWorkItem(new AskLoadedTypedItem(source, keepLoaded, response))\n  200  \n  201:   final def askLoadedTyped(source: SourceFile, response: Response[Tree]): Unit =\n  202      askLoadedTyped(source, false, response)\n  203  \n  ...\n  207     *  @param keepSrcLoaded If set to `true`, source file will be kept as a loaded unit afterwards.\n  208     */\n  209:   def askStructure(keepSrcLoaded: Boolean)(source: SourceFile, response: Response[Tree]) = {\n  210      getUnit(source) match {\n  211        case Some(_) => askLoadedTyped(source, keepSrcLoaded, response)\n  ...\n  221     *  @param response     The response.\n  222     */\n  223:   def askParsedEntered(source: SourceFile, keepLoaded: Boolean, response: Response[Tree]) =\n  224      postWorkItem(new AskParsedEnteredItem(source, keepLoaded, response))\n  225  \n  ...\n  238     *  compiler thread.\n  239     */\n  240:   def parseTree(source: SourceFile): Tree = {\n  241      newUnitParser(new CompilationUnit(source)).parse()\n  242    }\n  ...\n  314    }\n  315  \n  316:   case class ReloadItem(sources: List[SourceFile], response: Response[Unit]) extends WorkItem {\n  317      def apply() = reload(sources, response)\n  318      override def toString = \"reload \"+sources\n  ...\n  322    }\n  323  \n  324:   case class FilesDeletedItem(sources: List[SourceFile], response: Response[Unit]) extends WorkItem {\n  325      def apply() = filesDeleted(sources, response)\n  326      override def toString = \"files deleted \"+sources\n  ...\n  338    }\n  339  \n  340:   case class AskTypeItem(source: SourceFile, forceReload: Boolean, response: Response[Tree]) extends WorkItem {\n  341      def apply() = self.getTypedTree(source, forceReload, response)\n  342      override def toString = \"typecheck\"\n  ...\n  362    }\n  363  \n  364:   class AskToDoFirstItem(val source: SourceFile) extends WorkItem {\n  365      def apply() = {\n  366        moveToFront(List(source))\n  ...\n  372    }\n  373  \n  374:   case class AskLinkPosItem(sym: Symbol, source: SourceFile, response: Response[Position]) extends WorkItem {\n  375      def apply() = self.getLinkPos(sym, source, response)\n  376      override def toString = \"linkpos \"+sym+\" in \"+source\n  ...\n  380    }\n  381  \n  382:   case class AskDocCommentItem(sym: Symbol, source: SourceFile, site: Symbol, fragments: List[(Symbol,SourceFile)], response: Response[(String, String, Position)]) extends WorkItem {\n  383      def apply() = self.getDocComment(sym, source, site, fragments, response)\n  384      override def toString = \"doc comment \"+sym+\" in \"+source+\" with fragments:\"+fragments.mkString(\"(\", \",\", \")\")\n  ...\n  388    }\n  389  \n  390:   case class AskLoadedTypedItem(source: SourceFile, keepLoaded: Boolean, response: Response[Tree]) extends WorkItem {\n  391      def apply() = self.waitLoadedTyped(source, response, keepLoaded, this.onCompilerThread)\n  392      override def toString = \"wait loaded & typed \"+source\n  ...\n  396    }\n  397  \n  398:   case class AskParsedEnteredItem(source: SourceFile, keepLoaded: Boolean, response: Response[Tree]) extends WorkItem {\n  399      def apply() = self.getParsedEntered(source, keepLoaded, response, this.onCompilerThread)\n  400      override def toString = \"getParsedEntered \"+source+\", keepLoaded = \"+keepLoaded\n\n/Users/vjovanov/code/scala/src/interactive/scala/tools/nsc/interactive/Global.scala:\n   11  import scala.util.control.ControlThrowable\n   12  import scala.tools.nsc.io.AbstractFile\n   13: import scala.reflect.internal.util.{ SourceFile, BatchSourceFile, Position, NoPosition }\n   14  import scala.tools.nsc.reporters._\n   15  import scala.tools.nsc.symtab._\n   ..\n  188      new HashSet[AbstractFile] with SynchronizedSet[AbstractFile]\n  189  \n  190:   class ResponseMap extends mutable.HashMap[SourceFile, Set[Response[Tree]]] {\n  191:     override def default(key: SourceFile): Set[Response[Tree]] = Set()\n  192:     override def += (binding: (SourceFile, Set[Response[Tree]])) = {\n  193        assert(interruptsEnabled, \"delayed operation within an ask\")\n  194        super.+=(binding)\n  ...\n  243     *  Note: We want to remove this.\n  244     */\n  245:   protected[interactive] def getOrCreateUnitOf(source: SourceFile): RichCompilationUnit =\n  246      unitOfFile.getOrElse(source.file, { println(\"precondition violated: \"+source+\" is not loaded\"); new Exception().printStackTrace(); new RichCompilationUnit(source) })\n  247  \n  ...\n  249     *  Then return optionally unit associated with given source.\n  250     */\n  251:   protected[interactive] def getUnit(s: SourceFile): Option[RichCompilationUnit] = {\n  252      toBeRemoved.synchronized {\n  253        for (f <- toBeRemoved) {\n  254          informIDE(\"removed: \"+s)\n  255          unitOfFile -= f\n  256:         allSources = allSources filter (_.file != f)\n  257        }\n  258        toBeRemoved.clear()\n  ...\n  263    /** A list giving all files to be typechecked in the order they should be checked.\n  264     */\n  265:   protected var allSources: List[SourceFile] = List()\n  266  \n  267    private var lastException: Option[Throwable] = None\n  ...\n  541      if (!unit.isUpToDate && unit.status != JustParsed) reset(unit) // reparse previously typechecked units.\n  542  \n  543:   /** Compile all loaded source files in the order given by `allSources`.\n  544     */\n  545    private[interactive] final def backgroundCompile() {\n  ...\n  548  \n  549      // remove any files in first that are no longer maintained by presentation compiler (i.e. closed)\n  550:     allSources = allSources filter (s => unitOfFile contains (s.file))\n  551  \n  552      // ensure all loaded units are parsed\n  553:     for (s <- allSources; unit <- getUnit(s)) {\n  554        // checkForMoreWork(NoPosition)  // disabled, as any work done here would be in an inconsistent state\n  555        ensureUpToDate(unit)\n  ...\n  568  \n  569      // ensure all loaded units are typechecked\n  570:     for (s <- allSources; if !ignoredFiles(s.file); unit <- getUnit(s)) {\n  571        try {\n  572          if (!unit.isUpToDate)\n  ...\n  680    }\n  681  \n  682:   /** Move list of files to front of allSources */\n  683:   def moveToFront(fs: List[SourceFile]) {\n  684:     allSources = fs ::: (allSources diff fs)\n  685    }\n  686  \n  ...\n  735    }\n  736  \n  737:   private[interactive] def reloadSource(source: SourceFile) {\n  738      val unit = new RichCompilationUnit(source)\n  739      unitOfFile(source.file) = unit\n  ...\n  745  \n  746    /** Make sure a set of compilation units is loaded and parsed */\n  747:   private def reloadSources(sources: List[SourceFile]) {\n  748      newTyperRun()\n  749      minRunId = currentRunId\n  750:     sources foreach reloadSource\n  751      moveToFront(sources)\n  752    }\n  753  \n  754    /** Make sure a set of compilation units is loaded and parsed */\n  755:   private[interactive] def reload(sources: List[SourceFile], response: Response[Unit]) {\n  756      informIDE(\"reload: \" + sources)\n  757      lastWasReload = true\n  758:     respond(response)(reloadSources(sources))\n  759      demandNewCompilerRun()\n  760    }\n  761  \n  762:   private[interactive] def filesDeleted(sources: List[SourceFile], response: Response[Unit]) {\n  763      informIDE(\"files deleted: \" + sources)\n  764      val deletedFiles = sources.map(_.file).toSet\n  ...\n  779     *  Calls to this method could probably be replaced by removeUnit once default parameters are handled more robustly.\n  780     */\n  781:   private def afterRunRemoveUnitsOf(sources: List[SourceFile]) {\n  782      toBeRemovedAfterRun ++= sources map (_.file)\n  783    }\n  ...\n  786    private[scala] def typedTreeAt(pos: Position): Tree = getUnit(pos.source) match {\n  787      case None =>\n  788:       reloadSources(List(pos.source))\n  789        try typedTreeAt(pos)\n  790        finally afterRunRemoveUnitsOf(List(pos.source))\n  ...\n  818  \n  819    /** A fully attributed tree corresponding to the entire compilation unit  */\n  820:   private[interactive] def typedTree(source: SourceFile, forceReload: Boolean): Tree = {\n  821      informIDE(\"typedTree \" + source + \" forceReload: \" + forceReload)\n  822      val unit = getOrCreateUnitOf(source)\n  ...\n  834    /** Set sync var `response` to a fully attributed tree corresponding to the\n  835     *  entire compilation unit  */\n  836:   private[interactive] def getTypedTree(source: SourceFile, forceReload: Boolean, response: Response[Tree]) {\n  837      respond(response)(typedTree(source, forceReload))\n  838    }\n  839  \n  840:   private def withTempUnits[T](sources: List[SourceFile])(f: (SourceFile => RichCompilationUnit) => T): T = {\n  841:     val unitOfSrc: SourceFile => RichCompilationUnit = src => unitOfFile(src.file)\n  842      sources filterNot (getUnit(_).isDefined) match {\n  843        case Nil =>\n  844          f(unitOfSrc)\n  845        case unknown =>\n  846:         reloadSources(unknown)\n  847          try {\n  848            f(unitOfSrc)\n  ...\n  852    }\n  853  \n  854:   private def withTempUnit[T](source: SourceFile)(f: RichCompilationUnit => T): T =\n  855      withTempUnits(List(source)){ srcToUnit =>\n  856        f(srcToUnit(source))\n  ...\n  904  \n  905    /** Implements CompilerControl.askLinkPos */\n  906:   private[interactive] def getLinkPos(sym: Symbol, source: SourceFile, response: Response[Position]) {\n  907      informIDE(\"getLinkPos \"+sym+\" \"+source)\n  908      respond(response) {\n  ...\n  929  \n  930    /** Implements CompilerControl.askDocComment */\n  931:   private[interactive] def getDocComment(sym: Symbol, source: SourceFile, site: Symbol, fragments: List[(Symbol,SourceFile)],\n  932                                           response: Response[(String, String, Position)]) {\n  933      informIDE(s\"getDocComment $sym at $source, site $site\")\n  ...\n 1251  \n 1252    /** Implements CompilerControl.askLoadedTyped */\n 1253:   private[interactive] def waitLoadedTyped(source: SourceFile, response: Response[Tree], keepLoaded: Boolean = false, onSameThread: Boolean = true) {\n 1254      getUnit(source) match {\n 1255        case Some(unit) =>\n ....\n 1268        case None =>\n 1269          debugLog(\"load unit and type\")\n 1270:         try reloadSources(List(source))\n 1271          finally {\n 1272            waitLoadedTyped(source, response, onSameThread)\n ....\n 1277  \n 1278    /** Implements CompilerControl.askParsedEntered */\n 1279:   private[interactive] def getParsedEntered(source: SourceFile, keepLoaded: Boolean, response: Response[Tree], onSameThread: Boolean = true) {\n 1280      getUnit(source) match {\n 1281        case Some(unit) =>\n ....\n 1284          try {\n 1285            if (keepLoaded || outOfDate && onSameThread)\n 1286:             reloadSources(List(source))\n 1287          } finally {\n 1288            if (keepLoaded || !outOfDate || onSameThread)\n ....\n 1295  \n 1296    /** Parses and enters given source file, storing parse tree in response */\n 1297:   private def getParsedEnteredNow(source: SourceFile, response: Response[Tree]) {\n 1298      respond(response) {\n 1299        onUnitOf(source) { unit =>\n\n/Users/vjovanov/code/scala/src/interactive/scala/tools/nsc/interactive/Main.scala:\n   19        import compiler.{ reporter => _, _ }\n   20  \n   21:       val sfs = command.files map getSourceFile\n   22        val reloaded = new interactive.Response[Unit]\n   23        askReload(sfs, reloaded)\n\n/Users/vjovanov/code/scala/src/interactive/scala/tools/nsc/interactive/Picklers.scala:\n    7  \n    8  import util.InterruptReq\n    9: import scala.reflect.internal.util.{ SourceFile, BatchSourceFile }\n   10  import io.{ AbstractFile, PlainFile }\n   11  import util.EmptyAction\n   ..\n   59    }\n   60  \n   61:   implicit lazy val sourceFile: Pickler[SourceFile] =\n   62:     (pkl[AbstractFile] ~ pkl[Diff]).wrapped[SourceFile] {\n   63:       case f ~ d => new BatchSourceFile(f, patch(f, d))\n   64      } {\n   65        f => f.file ~ delta(f.file, f.content)\n   66:     }.asClass (classOf[BatchSourceFile])\n   67  \n   68    lazy val offsetPosition: CondPickler[Position] =\n   69:     (pkl[SourceFile] ~ pkl[Int])\n   70        .wrapped { case x ~ y => Position.offset(x, y) } { p => p.source ~ p.point }\n   71        .asClass (classOf[Position])\n   72  \n   73    lazy val rangePosition: CondPickler[Position] =\n   74:     (pkl[SourceFile] ~ pkl[Int] ~ pkl[Int] ~ pkl[Int])\n   75        .wrapped { case source ~ start ~ point ~ end => Position.range(source, start, point, end) } { p => p.source ~ p.start ~ p.point ~ p.end }\n   76        .asClass (classOf[Position])\n   77  \n   78    lazy val transparentPosition: CondPickler[Position] =\n   79:     (pkl[SourceFile] ~ pkl[Int] ~ pkl[Int] ~ pkl[Int])\n   80        .wrapped { case source ~ start ~ point ~ end => Position.range(source, start, point, end).makeTransparent } { p => p.source ~ p.start ~ p.point ~ p.end }\n   81        .asClass (classOf[Position])\n   ..\n  130  \n  131    implicit def reloadItem: CondPickler[ReloadItem] =\n  132:     pkl[List[SourceFile]]\n  133        .wrapped { ReloadItem(_, new Response) } { _.sources }\n  134        .asClass (classOf[ReloadItem])\n  ...\n  140  \n  141    implicit def askTypeItem: CondPickler[AskTypeItem] =\n  142:     (pkl[SourceFile] ~ pkl[Boolean])\n  143        .wrapped { case source ~ forceReload => new AskTypeItem(source, forceReload, new Response) } { w => w.source ~ w.forceReload }\n  144        .asClass (classOf[AskTypeItem])\n  ...\n  155  \n  156    implicit def askToDoFirstItem: CondPickler[AskToDoFirstItem] =\n  157:     pkl[SourceFile]\n  158        .wrapped { new AskToDoFirstItem(_) } { _.source }\n  159        .asClass (classOf[AskToDoFirstItem])\n  160  \n  161    implicit def askLinkPosItem: CondPickler[AskLinkPosItem] =\n  162:     (pkl[Symbol] ~ pkl[SourceFile])\n  163        .wrapped { case sym ~ source => new AskLinkPosItem(sym, source, new Response) } { item => item.sym ~ item.source }\n  164        .asClass (classOf[AskLinkPosItem])\n  165  \n  166    implicit def askDocCommentItem: CondPickler[AskDocCommentItem] =\n  167:     (pkl[Symbol] ~ pkl[SourceFile] ~ pkl[Symbol] ~ pkl[List[(Symbol,SourceFile)]])\n  168        .wrapped { case sym ~ source ~ site ~ fragments => new AskDocCommentItem(sym, source, site, fragments, new Response) } { item => item.sym ~ item.source ~ item.site ~ item.fragments }\n  169        .asClass (classOf[AskDocCommentItem])\n  170  \n  171    implicit def askLoadedTypedItem: CondPickler[AskLoadedTypedItem] =\n  172:     pkl[SourceFile]\n  173        .wrapped { source => new AskLoadedTypedItem(source, false, new Response) } { _.source }\n  174        .asClass (classOf[AskLoadedTypedItem])\n  175  \n  176    implicit def askParsedEnteredItem: CondPickler[AskParsedEnteredItem] =\n  177:     (pkl[SourceFile] ~ pkl[Boolean])\n  178        .wrapped { case source ~ keepLoaded => new AskParsedEnteredItem(source, keepLoaded, new Response) } { w => w.source ~ w.keepLoaded }\n  179        .asClass (classOf[AskParsedEnteredItem])\n\n/Users/vjovanov/code/scala/src/interactive/scala/tools/nsc/interactive/REPL.scala:\n   91  \n   92      def makePos(file: String, off1: String, off2: String) = {\n   93:       val source = toSourceFile(file)\n   94        comp.rangePos(source, off1.toInt, off1.toInt, off2.toInt)\n   95      }\n   ..\n  106  \n  107      def doStructure(file: String) {\n  108:       comp.askParsedEntered(toSourceFile(file), keepLoaded = false, structureResult)\n  109        show(structureResult)\n  110      }\n  ...\n  113        (line split \" \").toList match {\n  114          case \"reload\" :: args =>\n  115:           comp.askReload(args map toSourceFile, reloadResult)\n  116            show(reloadResult)\n  117          case \"reloadAndAskType\" :: file :: millis :: Nil =>\n  118:           comp.askReload(List(toSourceFile(file)), reloadResult)\n  119            Thread.sleep(millis.toLong)\n  120            println(\"ask type now\")\n  121:           comp.askLoadedTyped(toSourceFile(file), keepLoaded = true, typedResult)\n  122            typedResult.get\n  123          case List(\"typeat\", file, off1, off2) =>\n  ...\n  150    }\n  151  \n  152:   def toSourceFile(name: String) = new BatchSourceFile(new PlainFile(new java.io.File(name)))\n  153  \n  154    def using[T, U](svar: Response[T])(op: T => U): Option[U] = {\n\n/Users/vjovanov/code/scala/src/interactive/scala/tools/nsc/interactive/RichCompilationUnits.scala:\n    6  package interactive\n    7  \n    8: import scala.reflect.internal.util.{SourceFile, Position, NoPosition}\n    9  import scala.collection.mutable.ArrayBuffer\n   10  \n   ..\n   20    final val PartiallyChecked = 0\n   21  \n   22:   class RichCompilationUnit(source: SourceFile) extends CompilationUnit(source) {\n   23  \n   24      /** The runid of the latest compiler run that typechecked this unit,\n\n/Users/vjovanov/code/scala/src/interactive/scala/tools/nsc/interactive/tests/core/AskCommand.scala:\n    9  import scala.tools.nsc.interactive.Response\n   10  import scala.reflect.internal.util.Position\n   11: import scala.reflect.internal.util.SourceFile\n   12  \n   13  /**\n   ..\n   46     *  the source's AST is not yet loaded).\n   47     */\n   48:   def askParse(sources: Seq[SourceFile]) {\n   49      val responses = sources map (askParse(_))\n   50      responses.foreach(_.get) // force source files parsing\n   51    }\n   52  \n   53:   private def askParse(src: SourceFile, keepLoaded: Boolean = true): Response[Tree] = {\n   54      ask {\n   55        compiler.askParsedEntered(src, keepLoaded, _)\n   ..\n   62  \n   63    /** Reload the given source files and wait for them to be reloaded. */\n   64:   protected def askReload(sources: Seq[SourceFile])(implicit reporter: Reporter): Response[Unit] = {\n   65:     val sortedSources = (sources map (_.file.name)).sorted\n   66:     reporter.println(\"reload: \" + sortedSources.mkString(\", \"))\n   67  \n   68      ask {\n   ..\n  114    import compiler.Tree\n  115  \n  116:   protected def askLoadedTyped(source: SourceFile, keepLoaded: Boolean = false)(implicit reporter: Reporter): Response[Tree] = {\n  117      ask {\n  118        compiler.askLoadedTyped(source, keepLoaded, _)\n\n/Users/vjovanov/code/scala/src/interactive/scala/tools/nsc/interactive/tests/core/CoreTestDefs.scala:\n   18  \n   19      override def runTest() {\n   20:       askAllSources(TypeCompletionMarker) { pos =>\n   21          askTypeCompletionAt(pos)\n   22        } { (pos, members) =>\n   ..\n   42  \n   43      override def runTest() {\n   44:       askAllSources(ScopeCompletionMarker) { pos =>\n   45          askScopeCompletionAt(pos)\n   46        } { (pos, members) =>\n   ..\n   73  \n   74      override def runTest() {\n   75:       askAllSources(TypeMarker) { pos =>\n   76          askTypeAt(pos)\n   77        } { (pos, tree) =>\n   ..\n   92  \n   93      override def runTest() {\n   94:       askAllSources(HyperlinkMarker) { pos =>\n   95          askTypeAt(pos)(NullReporter)\n   96        } { (pos, tree) =>\n\n/Users/vjovanov/code/scala/src/interactive/scala/tools/nsc/interactive/tests/core/PresentationCompilerRequestsWorkingMode.scala:\n    4  \n    5  import scala.reflect.internal.util.Position\n    6: import scala.reflect.internal.util.SourceFile\n    7  \n    8  trait PresentationCompilerRequestsWorkingMode extends TestResources {\n    .\n   10    protected def synchronousRequests: Boolean\n   11  \n   12:   protected def askAllSources[T] = if (synchronousRequests) askAllSourcesSync[T] _ else askAllSourcesAsync[T] _\n   13  \n   14    /** Perform an operation on all sources at all positions that match the given\n   15:    *  `marker`. For instance, askAllSources(TypeMarker)(askTypeAt)(println) would\n   16     *  ask the type at all positions marked with `TypeMarker.marker` and println the result.\n   17     */\n   18:   private def askAllSourcesAsync[T](marker: TestMarker)(askAt: Position => Response[T])(f: (Position, T) => Unit) {\n   19      val positions = allPositionsOf(str = marker.marker)\n   20      val responses = for (pos <- positions) yield askAt(pos)\n   ..\n   23    }\n   24  \n   25:   /** Synchronous version of askAllSources. Each position is treated in turn, waiting for the\n   26     *  response before going to the next one.\n   27     */\n   28:   private def askAllSourcesSync[T](marker: TestMarker)(askAt: Position => Response[T])(f: (Position, T) => Unit) {\n   29      val positions = allPositionsOf(str = marker.marker)\n   30      for (pos <- positions) withResponse(pos, askAt(pos))(f)\n   ..\n   32  \n   33    /** All positions of the given string in all source files. */\n   34:   private def allPositionsOf(srcs: Seq[SourceFile] = sourceFiles, str: String): Seq[Position] =\n   35      for (s <- srcs; p <- positionsOf(s, str)) yield p\n   36  \n   37    /** Return all positions of the given str in the given source file. */\n   38:   private def positionsOf(source: SourceFile, str: String): Seq[Position] = {\n   39      val buf = new scala.collection.mutable.ListBuffer[Position]\n   40      var pos = source.content.indexOfSlice(str)\n\n/Users/vjovanov/code/scala/src/interactive/scala/tools/nsc/interactive/tests/core/SourcesCollector.scala:\n    1  package scala.tools.nsc.interactive.tests.core\n    2  \n    3: import scala.reflect.internal.util.{SourceFile,BatchSourceFile}\n    4  import scala.tools.nsc.io.{AbstractFile,Path}\n    5  \n    6: private[tests] object SourcesCollector {\n    7:   type SourceFilter =  Path => Boolean\n    8  \n    9    /**\n   ..\n   11     * With the default `filter` only .scala and .java files are collected.\n   12     * */\n   13:   def apply(base: Path, filter: SourceFilter): Array[SourceFile] = {\n   14      assert(base.isDirectory, base + \" is not a directory\")\n   15      base.walk.filter(filter).map(source).toList.toArray.sortBy(_.file.name)\n   16    }\n   17  \n   18:   private def source(file: Path): SourceFile = source(AbstractFile.getFile(file.toFile))\n   19:   private def source(file: AbstractFile): SourceFile = new BatchSourceFile(file)\n   20  }\n   21  \n\n/Users/vjovanov/code/scala/src/interactive/scala/tools/nsc/interactive/tests/core/TestResources.scala:\n    2  \n    3  import scala.tools.nsc.io.Path\n    4: import scala.reflect.internal.util.SourceFile\n    5  \n    6  /** Resources used by the test. */\n    7  private[tests] trait TestResources extends TestSettings {\n    8    /** collected source files that are to be used by the test runner */\n    9:   protected lazy val sourceFiles: Array[SourceFile] = SourcesCollector(baseDir / sourceDir, isScalaOrJavaSource)\n   10  \n   11:   private def isScalaOrJavaSource(file: Path): Boolean = file.extension == \"scala\" | file.extension == \"java\"\n   12  }\n\n/Users/vjovanov/code/scala/src/interactive/scala/tools/nsc/interactive/tests/InteractiveTest.scala:\n   20   *  The presentation compiler is available through `compiler`.\n   21   *\n   22:  *  It is easy to test member completion, type and hyperlinking at a given position. Source\n   23   *  files are searched for `TextMarkers`. By default, the completion marker is `/*!*/`, the\n   24   *  typedAt marker is `/*?*/` and the hyperlinking marker is `/*#*/`. Place these markers in\n   25   *  your source files, and the test framework will automatically pick them up and test the\n   26:  *  corresponding actions. Sources are reloaded by `askReload(sourceFiles)` (blocking\n   27   *  call). All ask operations are placed on the work queue without waiting for each one to\n   28   *  complete before asking the next. After all asks, it waits for each response in turn and\n   ..\n   54    protected val runRandomTests = false\n   55  \n   56:   /** Should askAllSources wait for each ask to finish before issuing the next? */\n   57    override protected val synchronousRequests = true\n   58  \n   ..\n   79  \n   80    protected def execute(): Unit = {\n   81:     loadSources()\n   82      runDefaultTests()\n   83    }\n   84  \n   85    /** Load all sources before executing the test. */\n   86:   protected def loadSources() {\n   87      // ask the presentation compiler to track all sources. We do\n   88      // not wait for the file to be entirely typed because we do want\n   ..\n  103    /** Perform n random tests with random changes. */\n  104    /****\n  105:   private def randomTests(n: Int, files: Array[SourceFile]) {\n  106      val tester = new Tester(n, files, settings) {\n  107        override val compiler = self.compiler\n\n/Users/vjovanov/code/scala/src/interactive/scala/tools/nsc/interactive/tests/Tester.scala:\n   13  import scala.collection.mutable.ArrayBuffer\n   14  \n   15: class Tester(ntests: Int, inputs: Array[SourceFile], settings: Settings) {\n   16  \n   17    val reporter = new StoreReporter\n   ..\n   39    }\n   40  \n   41:   def askReload(sfs: SourceFile*) = askAndListen(\"reload\", sfs.toList, compiler.askReload)\n   42    def askTypeAt(pos: Position) = askAndListen(\"type at\", pos, compiler.askTypeAt)\n   43    def askTypeCompletion(pos: Position) = askAndListen(\"type at\", pos, compiler.askTypeCompletion)\n   ..\n   60    }\n   61  \n   62:   def randomSourceFileIdx() = rand.nextInt(inputs.length)\n   63  \n   64:   def randomBatchesPerSourceFile(): Int = randomDecreasing(100)\n   65  \n   66    def randomChangesPerBatch(): Int = randomInverse(50)\n   67  \n   68:   def randomPositionIn(sf: SourceFile) = rand.nextInt(sf.content.length)\n   69  \n   70    def randomNumChars() = randomInverse(100)\n   ..\n   84        val sf = inputs(sfidx)\n   85        deleted = sf.content(pos) :: deleted\n   86:       val sf1 = new BatchSourceFile(sf.file, sf.content.take(pos) ++ sf.content.drop(pos + 1))\n   87        inputs(sfidx) = sf1\n   88        askReload(sf1)\n   ..\n  110          val (pre, post) = sf./**/content splitAt pos\n  111          pos += 1\n  112:         val sf1 = new BatchSourceFile(sf.file, pre ++ (chr +: post))\n  113          inputs(sfidx) = sf1\n  114          askReload(sf1)\n  ...\n  140        }\n  141      }\n  142:     for (i <- 0 until randomBatchesPerSourceFile()) {\n  143        val changes = Vector.fill(/**/randomChangesPerBatch()) {\n  144          /**/\n  ...\n  172      sfidx: Int, changes: Seq[Change], infos: scala.collection.Set[reporter.Info], content: Array[Char]) {\n  173      override def toString =\n  174:       \"Sourcefile: \"+inputs(sfidx)+\n  175        \"\\nChanges:\\n  \"+changes.mkString(\"\\n  \")+\n  176        \"\\nErrors:\\n  \"+infos.mkString(\"\\n  \")+\n  ...\n  184      askReload(inputs: _*)\n  185      for (i <- 0 until ntests)\n  186:       testFileChanges(randomSourceFileIdx())\n  187    }\n  188  }\n  ...\n  203      val (_, filenames) = settings.processArguments(args.toList.tail, processAll = true)\n  204      println(\"filenames = \"+filenames)\n  205:     val files = filenames.toArray map (str => new BatchSourceFile(AbstractFile.getFile(str)): SourceFile)\n  206      new Tester(args(0).toInt, files, settings).run()\n  207      sys.exit(0)\n\n/Users/vjovanov/code/scala/src/library-aux/README:\n    1: Source files under this directory cannot be compiled by normal means.\n    2  \n    3  They exist for bootstrapping and documentation purposes.\n\n/Users/vjovanov/code/scala/src/library/scala/collection/immutable/PagedSeq.scala:\n   99      fromFile(new File(source))\n  100  \n  101:   /** Constructs a paged character sequence from a scala.io.Source value\n  102     */\n  103:   def fromSource(source: scala.io.Source) =\n  104      fromLines(source.getLines())\n  105  }\n\n/Users/vjovanov/code/scala/src/library/scala/collection/SeqLike.scala:\n  885      if (clippedFrom > slen-sourceOffset) -1   // Cannot return an index in range\n  886      else if (t1 - t0 < 1) s0                  // Empty, matches first available position\n  887:     else if (s1 - s0 < t1 - t0) -1            // Source is too short to find target\n  888      else {\n  889        // Nontrivial search\n  ...\n  917      if (clippedFrom < 0) -1                   // Cannot return an index in range\n  918      else if (t1 - t0 < 1) s0+clippedFrom      // Empty, matches last available position\n  919:     else if (fixed_s1 - s0 < t1 - t0) -1      // Source is too short to find target\n  920      else {\n  921        // Nontrivial search\n\n/Users/vjovanov/code/scala/src/library/scala/concurrent/package.scala:\n   53   * \n   54   * val firstZebra: Future[Int] = Future {\n   55:  *   val source = scala.io.Source.fromFile(\"/etc/dictionaries-common/words\")\n   56   *   source.toSeq.indexOfSlice(\"zebra\")\n   57   * }\n\n/Users/vjovanov/code/scala/src/library/scala/io/BufferedSource.scala:\n   11  import java.util.Arrays\n   12  import java.io.{ InputStream, BufferedReader, InputStreamReader, PushbackReader }\n   13: import Source.DefaultBufSize\n   14  import scala.collection.{ Iterator, AbstractIterator }\n   15  import scala.collection.mutable.ArrayBuffer\n   ..\n   20   *  @author  Burak Emir, Paul Phillips\n   21   */\n   22: class BufferedSource(inputStream: InputStream, bufferSize: Int)(implicit val codec: Codec) extends Source {\n   23    def this(inputStream: InputStream)(implicit codec: Codec) = this(inputStream, DefaultBufSize)(codec)\n   24    def reader() = new InputStreamReader(inputStream, codec.decoder)\n   ..\n   45    private def decachedReader: BufferedReader = {\n   46      // Don't want to lose a buffered char sitting in iter either. Yes,\n   47:     // this is ridiculous, but if I can't get rid of Source, and all the\n   48:     // Iterator bits are designed into Source, and people create Sources\n   49      // in the repl, and the repl calls toString for the result line, and\n   50      // that calls hasNext to find out if they're empty, and that leads\n\n/Users/vjovanov/code/scala/src/library/scala/io/Source.scala:\n   20   *  @version 1.0, 19/08/2004\n   21   */\n   22: object Source {\n   23    val DefaultBufSize = 2048\n   24  \n   25:   /** Creates a `Source` from System.in.\n   26     */\n   27    def stdin = fromInputStream(System.in)\n   28  \n   29:   /** Creates a Source from an Iterable.\n   30     *\n   31     *  @param    iterable  the Iterable\n   32:    *  @return   the Source\n   33     */\n   34:   def fromIterable(iterable: Iterable[Char]): Source = new Source {\n   35      val iter = iterable.iterator\n   36    } withReset(() => fromIterable(iterable))\n   37  \n   38:   /** Creates a Source instance from a single character.\n   39     */\n   40:   def fromChar(c: Char): Source = fromIterable(Array(c))\n   41  \n   42:   /** creates Source from array of characters, with empty description.\n   43     */\n   44:   def fromChars(chars: Array[Char]): Source = fromIterable(chars)\n   45  \n   46:   /** creates Source from a String, with no description.\n   47     */\n   48:   def fromString(s: String): Source = fromIterable(s)\n   49  \n   50:   /** creates Source from file with given name, setting its description to\n   51     *  filename.\n   52     */\n   53:   def fromFile(name: String)(implicit codec: Codec): BufferedSource =\n   54      fromFile(new JFile(name))(codec)\n   55  \n   56:   /** creates Source from file with given name, using given encoding, setting\n   57     *  its description to filename.\n   58     */\n   59:   def fromFile(name: String, enc: String): BufferedSource =\n   60      fromFile(name)(Codec(enc))\n   61  \n   62    /** creates `ource` from file with given file `URI`.\n   63     */\n   64:   def fromFile(uri: URI)(implicit codec: Codec): BufferedSource =\n   65      fromFile(new JFile(uri))(codec)\n   66  \n   67:   /** creates Source from file with given file: URI\n   68     */\n   69:   def fromFile(uri: URI, enc: String): BufferedSource =\n   70      fromFile(uri)(Codec(enc))\n   71  \n   72:   /** creates Source from file, using default character encoding, setting its\n   73     *  description to filename.\n   74     */\n   75:   def fromFile(file: JFile)(implicit codec: Codec): BufferedSource =\n   76:     fromFile(file, Source.DefaultBufSize)(codec)\n   77  \n   78:   /** same as fromFile(file, enc, Source.DefaultBufSize)\n   79     */\n   80:   def fromFile(file: JFile, enc: String): BufferedSource =\n   81      fromFile(file)(Codec(enc))\n   82  \n   83:   def fromFile(file: JFile, enc: String, bufferSize: Int): BufferedSource =\n   84      fromFile(file, bufferSize)(Codec(enc))\n   85  \n   86:   /** Creates Source from `file`, using given character encoding, setting\n   87     *  its description to filename. Input is buffered in a buffer of size\n   88     *  `bufferSize`.\n   89     */\n   90:   def fromFile(file: JFile, bufferSize: Int)(implicit codec: Codec): BufferedSource = {\n   91      val inputStream = new FileInputStream(file)\n   92  \n   93:     createBufferedSource(\n   94        inputStream,\n   95        bufferSize,\n   ..\n   99    }\n  100  \n  101:   /** Create a `Source` from array of bytes, decoding\n  102     *  the bytes according to codec.\n  103     *\n  104:    *  @return      the created `Source` instance.\n  105     */\n  106:   def fromBytes(bytes: Array[Byte])(implicit codec: Codec): Source =\n  107      fromString(new String(bytes, codec.name))\n  108  \n  109:   def fromBytes(bytes: Array[Byte], enc: String): Source =\n  110      fromBytes(bytes)(Codec(enc))\n  111  \n  112:   /** Create a `Source` from array of bytes, assuming\n  113     *  one byte per character (ISO-8859-1 encoding.)\n  114     */\n  115:   def fromRawBytes(bytes: Array[Byte]): Source =\n  116      fromString(new String(bytes, Codec.ISO8859.name))\n  117  \n  118:   /** creates `Source` from file with given file: URI\n  119     */\n  120:   def fromURI(uri: URI)(implicit codec: Codec): BufferedSource =\n  121      fromFile(new JFile(uri))(codec)\n  122  \n  123    /** same as fromURL(new URL(s))(Codec(enc))\n  124     */\n  125:   def fromURL(s: String, enc: String): BufferedSource =\n  126      fromURL(s)(Codec(enc))\n  127  \n  128    /** same as fromURL(new URL(s))\n  129     */\n  130:   def fromURL(s: String)(implicit codec: Codec): BufferedSource =\n  131      fromURL(new URL(s))(codec)\n  132  \n  133    /** same as fromInputStream(url.openStream())(Codec(enc))\n  134     */\n  135:   def fromURL(url: URL, enc: String): BufferedSource =\n  136      fromURL(url)(Codec(enc))\n  137  \n  138    /** same as fromInputStream(url.openStream())(codec)\n  139     */\n  140:   def fromURL(url: URL)(implicit codec: Codec): BufferedSource =\n  141      fromInputStream(url.openStream())(codec)\n  142  \n  ...\n  145     *\n  146     *  @param  inputStream  the input stream from which to read\n  147:    *  @param  bufferSize   buffer size (defaults to Source.DefaultBufSize)\n  148:    *  @param  reset        a () => Source which resets the stream (if unset, reset() will throw an Exception)\n  149     *  @param  close        a () => Unit method which closes the stream (if unset, close() will do nothing)\n  150     *  @param  codec        (implicit) a scala.io.Codec specifying behavior (defaults to Codec.default)\n  151     *  @return              the buffered source\n  152     */\n  153:   def createBufferedSource(\n  154      inputStream: InputStream,\n  155      bufferSize: Int = DefaultBufSize,\n  156:     reset: () => Source = null,\n  157      close: () => Unit = null\n  158:   )(implicit codec: Codec): BufferedSource = {\n  159      // workaround for default arguments being unable to refer to other parameters\n  160:     val resetFn = if (reset == null) () => createBufferedSource(inputStream, bufferSize, reset, close)(codec) else reset\n  161  \n  162:     new BufferedSource(inputStream, bufferSize)(codec) withReset resetFn withClose close\n  163    }\n  164  \n  165:   def fromInputStream(is: InputStream, enc: String): BufferedSource =\n  166      fromInputStream(is)(Codec(enc))\n  167  \n  168:   def fromInputStream(is: InputStream)(implicit codec: Codec): BufferedSource =\n  169:     createBufferedSource(is, reset = () => fromInputStream(is)(codec), close = () => is.close())(codec)\n  170  \n  171    /** Reads data from a classpath resource, using either a context classloader (default) or a passed one.\n  ...\n  175     *  @return              the buffered source\n  176     */\n  177:   def fromResource(resource: String, classLoader: ClassLoader = Thread.currentThread().getContextClassLoader())(implicit codec: Codec): BufferedSource =\n  178      fromInputStream(classLoader.getResourceAsStream(resource))\n  179  \n  ...\n  183   *  It may be reset with the optional `reset` method.\n  184   *\n  185:  *  Subclasses must supply [[scala.io.Source@iter the underlying iterator]].\n  186   *\n  187:  *  Error handling may be customized by overriding the [[scala.io.Source@report report]] method.\n  188   *\n  189:  *  The [[scala.io.Source@ch current input]] and [[scala.io.Source@pos position]],\n  190:  *  as well as the [[scala.io.Source@next next character]] methods delegate to\n  191:  *  [[scala.io.Source$Positioner the positioner]].\n  192   *\n  193   *  The default positioner encodes line and column numbers in the position passed to `report`.\n  194   *  This behavior can be changed by supplying a\n  195:  *  [[scala.io.Source@withPositioning(pos:Source.this.Positioner):Source.this.type custom positioner]].\n  196   *\n  197   *  @author  Burak Emir\n  198   *  @version 1.0\n  199   */\n  200: abstract class Source extends Iterator[Char] with Closeable {\n  201    /** the actual iterator */\n  202    protected val iter: Iterator[Char]\n  ...\n  214      private[this] val sb = new StringBuilder\n  215  \n  216:     lazy val iter: BufferedIterator[Char] = Source.this.iter.buffered\n  217      def isNewline(ch: Char) = ch == '\\r' || ch == '\\n'\n  218      def getc() = iter.hasNext && {\n  ...\n  240    /** Returns an iterator who returns lines (NOT including newline character(s)).\n  241     *  It will treat any of \\r\\n, \\r, or \\n as a line separator (longest match) - if\n  242:    *  you need more refined behavior you can subclass Source#LineIterator directly.\n  243     */\n  244    def getLines(): Iterator[String] = new LineIterator()\n  ...\n  337    }\n  338  \n  339:   private[this] var resetFunction: () => Source = null\n  340    private[this] var closeFunction: () => Unit = null\n  341    private[this] var positioner: Positioner = RelaxedPositioner\n  342  \n  343:   def withReset(f: () => Source): this.type = {\n  344      resetFunction = f\n  345      this\n  ...\n  368    }\n  369  \n  370:   /** The reset() method creates a fresh copy of this Source. */\n  371:   def reset(): Source =\n  372      if (resetFunction != null) resetFunction()\n  373:     else throw new UnsupportedOperationException(\"Source's reset() method was not set.\")\n  374  }\n  375  \n\n/Users/vjovanov/code/scala/src/library/scala/sys/process/Process.scala:\n  117  \n  118    /** Creates a [[scala.sys.process.ProcessBuilder]] from a `java.io.File`. This\n  119:     * `ProcessBuilder` can then be used as a `Source` or a `Sink`, so one can\n  120      * pipe things from and to it.\n  121      */\n  ...\n  123  \n  124    /** Creates a [[scala.sys.process.ProcessBuilder]] from a `java.net.URL`. This\n  125:     * `ProcessBuilder` can then be used as a `Source`, so that one can pipe things\n  126      * from it.\n  127      */\n  ...\n  139    def apply(name: String, exitValue: => Int): ProcessBuilder = new Dummy(name, exitValue)\n  140  \n  141:   /** Creates a sequence of [[scala.sys.process.ProcessBuilder.Source]] from a sequence of\n  142:     * something else for which there's an implicit conversion to `Source`.\n  143      */\n  144:   def applySeq[T](builders: Seq[T])(implicit convert: T => Source): Seq[Source] = builders.map(convert)\n  145  \n  146    /** Creates a [[scala.sys.process.ProcessBuilder]] from one or more\n  147:     * [[scala.sys.process.ProcessBuilder.Source]], which can then be\n  148      * piped to something else.\n  149      *\n  ...\n  162      * }}}\n  163      */\n  164:   def cat(file: Source, files: Source*): ProcessBuilder = cat(file +: files)\n  165  \n  166    /** Creates a [[scala.sys.process.ProcessBuilder]] from a non-empty sequence\n  167:     * of [[scala.sys.process.ProcessBuilder.Source]], which can then be\n  168      * piped to something else.\n  169      *\n  170      * This will concatenate the output of all sources.\n  171      */\n  172:   def cat(files: Seq[Source]): ProcessBuilder = {\n  173      require(files.nonEmpty)\n  174      files map (_.cat) reduceLeft (_ #&& _)\n  ...\n  184    import Process._\n  185  \n  186:   /** Return a sequence of [[scala.sys.process.ProcessBuilder.Source]] from a sequence\n  187:     * of values for which an implicit conversion to `Source` is available.\n  188      */\n  189:   implicit def buildersToProcess[T](builders: Seq[T])(implicit convert: T => Source): Seq[Source] = applySeq(builders)\n  190  \n  191    /** Implicitly convert a `java.lang.ProcessBuilder` into a Scala one. */\n\n/Users/vjovanov/code/scala/src/library/scala/sys/process/ProcessBuilder.scala:\n  139    * }}}\n  140    */\n  141: trait ProcessBuilder extends Source with Sink {\n  142    /** Starts the process represented by this builder, blocks until it exits, and\n  143      * returns the output as a String.  Standard error is sent to the console.  If\n  ...\n  300  /** This object contains traits used to describe input and output sources. */\n  301  object ProcessBuilder extends ProcessBuilderImpl {\n  302:   /** Used when creating [[scala.sys.process.ProcessBuilder.Source]] from an URL. */\n  303:   trait URLBuilder extends Source {\n  304  \n  305    }\n  306  \n  307:   /** Used when creating [[scala.sys.process.ProcessBuilder.Source]] and/or\n  308      * [[scala.sys.process.ProcessBuilder.Sink]] from a file.\n  309      */\n  310:   trait FileBuilder extends Sink with Source {\n  311      /** Append the contents of a `java.io.File` to this file */\n  312      def #<<(f: File): ProcessBuilder\n  ...\n  325      * [[scala.sys.process.ProcessBuilder]].\n  326      */\n  327:   trait Source {\n  328:     protected def toSource: ProcessBuilder\n  329  \n  330      /** Writes the output stream of this process to the given file. */\n  ...\n  341  \n  342      /** Writes the output stream of this process to a [[scala.sys.process.ProcessBuilder]]. */\n  343:     def #>(b: ProcessBuilder): ProcessBuilder = new PipedBuilder(toSource, b, false)\n  344  \n  345:     /** Returnes a [[scala.sys.process.ProcessBuilder]] representing this `Source`. */\n  346:     def cat = toSource\n  347      private def toFile(f: File, append: Boolean) = #> (new FileOutput(f, append))\n  348    }\n\n/Users/vjovanov/code/scala/src/library/scala/sys/process/ProcessBuilderImpl.scala:\n   83    }\n   84  \n   85:   private[scala] abstract class AbstractBuilder extends ProcessBuilder with Sink with Source {\n   86:     protected def toSource = this\n   87      protected def toSink = this\n   88  \n   ..\n  152    }\n  153  \n  154:   private[process] class URLImpl(url: URL) extends URLBuilder with Source {\n  155:     protected def toSource = new URLInput(url)\n  156    }\n  157:   private[process] class FileImpl(base: File) extends FileBuilder with Sink with Source {\n  158:     protected def toSource = new FileInput(base)\n  159      protected def toSink   = new FileOutput(base, false)\n  160  \n\n/Users/vjovanov/code/scala/src/library/scala/sys/process/ProcessImpl.scala:\n  110  \n  111    private[process] class PipedProcesses(a: ProcessBuilder, b: ProcessBuilder, defaultIO: ProcessIO, toError: Boolean) extends CompoundProcess {\n  112:     protected[this] override def runAndExitValue() = runAndExitValue(new PipeSource(a.toString), new PipeSink(b.toString))\n  113:     protected[this] def runAndExitValue(source: PipeSource, sink: PipeSink): Option[Int] = {\n  114        source connectOut sink\n  115        source.start()\n  116        sink.start()\n  117  \n  118:       /** Release PipeSource, PipeSink and Process in the correct order.\n  119:       * If once connect Process with Source or Sink, then the order of releasing them\n  120:       * must be Source -> Sink -> Process, otherwise IOException will be thrown. */\n  121:       def releaseResources(so: PipeSource, sk: PipeSink, p: Process *) = {\n  122          so.release()\n  123          sk.release()\n  ...\n  170    }\n  171  \n  172:   private[process] class PipeSource(label: => String) extends PipeThread(false, () => label) {\n  173      protected[this] val pipe = new PipedOutputStream\n  174      protected[this] val source = new LinkedBlockingQueue[Option[InputStream]]\n\n/Users/vjovanov/code/scala/src/library/scala/util/Properties.scala:\n  112     */\n  113    def sourceEncoding        = scalaPropOrElse(\"file.encoding\", \"UTF-8\")\n  114:   def sourceReader          = scalaPropOrElse(\"source.reader\", \"scala.tools.nsc.io.SourceReader\")\n  115  \n  116    /** This is the default text encoding, overridden (unreliably) with\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/api/Position.scala:\n   11   *  displaying warnings and errors, to indicate the incorrect point in the program.\n   12   *\n   13:  *  Every non-empty position refers to a SourceFile and three character\n   14   *  offsets within it: start, end, and point. The point is where the ^ belongs when\n   15   *  issuing an error message, usually a Name. A range position can be designated\n   ..\n   37   *  point/start/end are attempted on an UndefinedPosition.\n   38   *\n   39:  *  pos.source       The source file of the position, or NoSourceFile if unavailable\n   40   *  pos.point        The offset of the point\n   41   *  pos.start        The (inclusive) start offset, or the point of an offset position\n   ..\n   99     *  @group Common\n  100     */\n  101:   def source: scala.reflect.internal.util.SourceFile\n  102  \n  103    /** The position indicates a [[column `column`]] and the `line` in the source file.\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/api/Symbols.scala:\n  275      def asClass: ClassSymbol = throw new ScalaReflectionException(s\"$this is not a class\")\n  276  \n  277:     /** Source file if this symbol is created during this compilation run,\n  278       *  or a class file if this symbol is loaded from a *.class or *.jar.\n  279       *\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/Positions.scala:\n   77    }\n   78  \n   79:   def rangePos(source: SourceFile, start: Int, point: Int, end: Int): Position =\n   80      if (useOffsetPositions) Position.offset(source, point)\n   81      else Position.range(source, start, point, end)\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/StdNames.scala:\n  296      final val ScalaSignatureATTR: NameType         = \"ScalaSig\"\n  297      final val SignatureATTR: NameType              = \"Signature\"\n  298:     final val SourceFileATTR: NameType             = \"SourceFile\"\n  299      final val SyntheticATTR: NameType              = \"Synthetic\"\n  300  \n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/Symbols.scala:\n  633      def isCaseAccessorMethod = false\n  634      def isLiftedMethod       = false\n  635:     def isSourceMethod       = false\n  636      def isVarargsMethod      = false\n  637      override def isLabel     = false\n  ...\n 1078  \n 1079      def exists: Boolean = !isTopLevel || {\n 1080:       val isSourceLoader = rawInfo match {\n 1081:         case sl: SymLoader => sl.fromSource\n 1082          case _             => false\n 1083        }\n 1084:       def warnIfSourceLoader() {\n 1085:         if (isSourceLoader)\n 1086            // Predef is completed early due to its autoimport; we used to get here when type checking its\n 1087            // parent LowPriorityImplicits. See comment in c5441dc for more elaboration.\n ....\n 1092  \n 1093        rawInfo load this\n 1094:       rawInfo != NoType || { warnIfSourceLoader(); false }\n 1095      }\n 1096  \n ....\n 1985  \n 1986      /** The next enclosing method. */\n 1987:     def enclMethod: Symbol = if (isSourceMethod) this else owner.enclMethod\n 1988  \n 1989      /** The primary constructor of a class. */\n ....\n 2110       *  For all other symbols: NoSymbol\n 2111       */\n 2112:     def outerSource: Symbol = NoSymbol\n 2113  \n 2114      /** The superclass of this class. */\n ....\n 2553        else if (hasPackageFlag) \"package\"\n 2554        else if (isModule) \"object\"\n 2555:       else if (isSourceMethod) \"def\"\n 2556        else if (isTerm && (!isParameter || isParamAccessor)) \"val\"\n 2557        else \"\"\n ....\n 2570          else if (isModule) (\"module\", \"object\", \"MOD\")\n 2571          else if (isModuleClass) (\"module class\", \"object\", \"MODC\")\n 2572:         else if (isGetter) (\"getter\", if (isSourceMethod) \"method\" else \"value\", \"GET\")\n 2573:         else if (isSetter) (\"setter\", if (isSourceMethod) \"method\" else \"value\", \"SET\")\n 2574          else if (isTerm && isLazy) (\"lazy value\", \"lazy value\", \"LAZ\")\n 2575          else if (isVariable) (\"field\", \"variable\", \"VAR\")\n ....\n 2580          else if (isClassConstructor && (owner.hasCompleteInfo && isPrimaryConstructor)) (\"primary constructor\", \"constructor\", \"PCTOR\")\n 2581          else if (isClassConstructor) (\"constructor\", \"constructor\", \"CTOR\")\n 2582:         else if (isSourceMethod) (\"method\", \"method\", \"METH\")\n 2583          else if (isTerm) (\"value\", \"value\", \"VAL\")\n 2584          else (\"\", \"\", \"???\")\n ....\n 2844      }\n 2845  \n 2846:     override def outerSource: Symbol =\n 2847        // SI-6888 Approximate the name to workaround the deficiencies in `nme.originalName`\n 2848        //         in the face of classes named '$'. SI-2806 remains open to address the deeper problem.\n ....\n 2929      override def isLiftedMethod  = this hasFlag LIFTED\n 2930  \n 2931:     // TODO - this seems a strange definition for \"isSourceMethod\", given that\n 2932      // it does not make any specific effort to exclude synthetics.  Figure out what\n 2933      // this method is really for and what logic makes sense.\n 2934:     override def isSourceMethod  = !(this hasFlag STABLE)  // exclude all accessors\n 2935      // unfortunately having the CASEACCESSOR flag does not actually mean you\n 2936      // are a case accessor (you can also be a field.)\n ....\n 3674    // no use of closures here in the interest of speed.\n 3675    final def closestEnclMethod(from: Symbol): Symbol =\n 3676:     if (from.isSourceMethod) from\n 3677      else if (from.isClass) NoSymbol\n 3678      else closestEnclMethod(from.owner)\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/SymbolTable.scala:\n  327  \n  328    abstract class SymLoader extends LazyType {\n  329:     def fromSource = false\n  330    }\n  331  \n  ...\n  334  \n  335      val pkgModule = pkgClass.packageObject\n  336:     def fromSource = pkgModule.rawInfo match {\n  337:       case ltp: SymLoader => ltp.fromSource\n  338        case _ => false\n  339      }\n  340:     if (pkgModule.isModule && !fromSource) {\n  341        openPackageModule(pkgModule, pkgClass)\n  342      }\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/util/AbstractFileClassLoader.scala:\n   10  import java.net.{ URL, URLConnection, URLStreamHandler }\n   11  import java.security.cert.Certificate\n   12: import java.security.{ ProtectionDomain, CodeSource }\n   13  import java.util.{ Collections => JCollections, Enumeration => JEnumeration }\n   14  \n   ..\n   86        if (n < 0) null else {\n   87          val path = s.substring(0, n)\n   88:         new ProtectionDomain(new CodeSource(new URL(path), null.asInstanceOf[Array[Certificate]]), null, this, null)\n   89        }\n   90      }\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/util/Position.scala:\n   21    def isDefined          = false\n   22    def isRange            = false\n   23:   def source: SourceFile = NoSourceFile\n   24    def start: Int         = fail(\"start\")\n   25    def point: Int         = fail(\"point\")\n   ..\n   41      val pos    = if (posIn eq null) NoPosition else posIn\n   42      val prefix = pos.source match {\n   43:       case NoSourceFile     => \"\"\n   44        case s if shortenFile => s.file.name + \":\"\n   45        case s                => s.file.path + \":\"\n   ..\n   48    }\n   49  \n   50:   def offset(source: SourceFile, point: Int): Position                            = validate(new OffsetPosition(source, point))\n   51:   def range(source: SourceFile, start: Int, point: Int, end: Int): Position       = validate(new RangePosition(source, start, point, end))\n   52:   def transparent(source: SourceFile, start: Int, point: Int, end: Int): Position = validate(new TransparentPosition(source, start, point, end))\n   53  }\n   54  \n   55: class OffsetPosition(sourceIn: SourceFile, pointIn: Int) extends DefinedPosition {\n   56    override def isRange = false\n   57    override def source  = sourceIn\n   ..\n   60    override def end     = point\n   61  }\n   62: class RangePosition(sourceIn: SourceFile, startIn: Int, pointIn: Int, endIn: Int) extends OffsetPosition(sourceIn, pointIn) {\n   63    override def isRange = true\n   64    override def start   = startIn\n   65    override def end     = endIn\n   66  }\n   67: class TransparentPosition(sourceIn: SourceFile, startIn: Int, pointIn: Int, endIn: Int) extends RangePosition(sourceIn, startIn, pointIn, endIn) {\n   68    override def isTransparent = true\n   69  }\n   ..\n   91    final override def isDefined = false\n   92    override def isRange         = false\n   93:   override def source          = NoSourceFile\n   94    override def start           = fail(\"start\")\n   95    override def point           = fail(\"point\")\n   ..\n  104    def isDefined: Boolean\n  105    def isRange: Boolean\n  106:   def source: SourceFile\n  107    def start: Int\n  108    def point: Int\n  ...\n  112     *  (which may be this position unchanged.)\n  113     */\n  114:   def finalPosition: Pos = source positionInUltimateSource this\n  115  \n  116    def isTransparent              = false\n  ...\n  125    def withPoint(point: Int): Position          = if (isRange) copyRange(point = point) else Position.offset(source, point)\n  126    def withEnd(end: Int): Position              = copyRange(end = end)\n  127:   def withSource(source: SourceFile): Position = copyRange(source = source)\n  128    def withShift(shift: Int): Position          = Position.range(source, start + shift, point + shift, end + shift)\n  129  \n  ...\n  164    def overlaps(pos: Position): Boolean         = bothRanges(pos) && start < pos.end && pos.start < end\n  165  \n  166:   def line: Int           = if (hasSource) source.offsetToLine(point) + 1 else 0\n  167:   def column: Int         = if (hasSource) calculateColumn() else 0\n  168:   def lineContent: String = if (hasSource) source.lineToString(line - 1) else \"\"\n  169:   def lineCaret: String   = if (hasSource) \" \" * (column - 1) + \"^\" else \"\"\n  170    @deprecated(\"use `lineCaret`\", since=\"2.11.0\")\n  171    def lineCarat: String   = lineCaret\n  ...\n  202  \n  203    private def asOffset(point: Int): Position = Position.offset(source, point)\n  204:   private def copyRange(source: SourceFile = source, start: Int = start, point: Int = point, end: Int = end): Position =\n  205      Position.range(source, start, point, end)\n  206  \n  ...\n  214      col + 1\n  215    }\n  216:   private def hasSource                      = source ne NoSourceFile\n  217    private def bothRanges(that: Position)     = isRange && that.isRange\n  218    private def bothDefined(that: Position)    = isDefined && that.isDefined\n  ...\n  236  \n  237    @deprecated(\"use `finalPosition`\", \"2.11.0\")\n  238:   def inUltimateSource(source: SourceFile): Position = source positionInUltimateSource this\n  239  \n  240    @deprecated(\"use `lineCaret`\", since=\"2.11.0\")\n  241    def lineWithCarat(maxWidth: Int): (String, String) = (\"\", \"\")\n  242  \n  243:   @deprecated(\"Use `withSource(source)` and `withShift`\", \"2.11.0\")\n  244:   def withSource(source: SourceFile, shift: Int): Position = this withSource source withShift shift\n  245  \n  246    @deprecated(\"Use `start` instead\", \"2.11.0\")\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/util/ScalaClassLoader.scala:\n  151    /** Finding what jar a clazz or instance came from */\n  152    def originOfClass(x: Class[_]): Option[URL] =\n  153:     Option(x.getProtectionDomain.getCodeSource) flatMap (x => Option(x.getLocation))\n  154  }\n  155  \n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/util/SourceFile.scala:\n   16  \n   17  /** abstract base class of a source file used in the compiler */\n   18: abstract class SourceFile {\n   19    def content: Array[Char]         // normalized, must end in SU\n   20    def file   : AbstractFile\n   ..\n   34     *  For regular source files, simply return the argument.\n   35     */\n   36:   def positionInUltimateSource(position: Position) = position\n   37    override def toString() = file.name\n   38    def path = file.path\n   ..\n   54  /** An object representing a missing source file.\n   55   */\n   56: object NoSourceFile extends SourceFile {\n   57    def content                   = Array()\n   58    def file                      = NoFile\n   ..\n   68  object NoFile extends VirtualFile(\"<no file>\", \"<no file>\")\n   69  \n   70: object ScriptSourceFile {\n   71    /** Length of the script header from the given content, if there is one.\n   72     *  The header begins with \"#!\" or \"::#!\" and ends with a line starting\n   ..\n   86  \n   87    def apply(file: AbstractFile, content: Array[Char]) = {\n   88:     val underlying = new BatchSourceFile(file, content)\n   89      val headerLen = headerLength(content)\n   90:     val stripped = new ScriptSourceFile(underlying, content drop headerLen, headerLen)\n   91  \n   92      stripped\n   93    }\n   94  \n   95:   def apply(underlying: BatchSourceFile) = {\n   96      val headerLen = headerLength(underlying.content)\n   97:     new ScriptSourceFile(underlying, underlying.content drop headerLen, headerLen)\n   98    }\n   99  }\n  100  \n  101: class ScriptSourceFile(underlying: BatchSourceFile, content: Array[Char], override val start: Int) extends BatchSourceFile(underlying.file, content) {\n  102    override def isSelfContained = false\n  103  \n  104:   override def positionInUltimateSource(pos: Position) =\n  105:     if (!pos.isDefined) super.positionInUltimateSource(pos)\n  106:     else pos withSource underlying withShift start\n  107  }\n  108  \n  109  /** a file whose contents do not change over time */\n  110: class BatchSourceFile(val file : AbstractFile, content0: Array[Char]) extends SourceFile {\n  111    def this(_file: AbstractFile)                 = this(_file, _file.toCharArray)\n  112    def this(sourceName: String, cs: Seq[Char])   = this(new VirtualFile(sourceName), cs.toArray)\n  ...\n  184  \n  185    override def equals(that : Any) = that match {\n  186:     case that : BatchSourceFile => file.path == that.file.path && start == that.start\n  187      case _ => false\n  188    }\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/io/AbstractFile.scala:\n   83   *   The class `symtab.classfile.AbstractFileReader` accesses\n   84   *   bytes, knowing that the character set of classfiles is UTF-8. For\n   85:  *   all other cases, the class `SourceFile` is used, which honors\n   86   *   `global.settings.encoding.value`.\n   87   * </p>\n   ..\n  114  \n  115    /** An underlying source, if known.  Mostly, a zip/jar file. */\n  116:   def underlyingSource: Option[AbstractFile] = None\n  117  \n  118    /** Does this abstract file denote an existing file? */\n  ...\n  155  \n  156    /** Returns contents of file (if applicable) in a Char array.\n  157:    *  warning: use `Global.getSourceFile()` to use the proper\n  158     *  encoding when converting to the char array.\n  159     */\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/io/PlainFile.scala:\n   25  \n   26    val file = givenPath.jfile\n   27:   override def underlyingSource = Some(this)\n   28  \n   29    private val fpath = givenPath.toAbsolute\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/io/Streamable.scala:\n   11  import java.io.{ BufferedInputStream, InputStream, PrintStream }\n   12  import java.io.{ BufferedReader, InputStreamReader, Closeable => JCloseable }\n   13: import scala.io.{ Codec, BufferedSource, Source }\n   14  import scala.collection.mutable.ArrayBuffer\n   15  import Path.fail\n   ..\n   23   */\n   24  object Streamable {\n   25:   /** Traits which can be viewed as a sequence of bytes.  Source types\n   26     *  which know their length should override def length: Long for more\n   27     *  efficient method implementations.\n   ..\n   87      def creationCodec: Codec = implicitly[Codec]\n   88  \n   89:     /** Caller is responsible for closing the returned BufferedSource. */\n   90:     def chars(codec: Codec): BufferedSource = Source.fromInputStream(inputStream())(codec)\n   91  \n   92      /** Beware! Leaks an InputStream which will not be closed until it gets finalized. */\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/io/ZipArchive.scala:\n   65    self =>\n   66  \n   67:   override def underlyingSource = Some(this)\n   68    def isDirectory = true\n   69    def lookupName(name: String, directory: Boolean) = unsupported()\n   ..\n   79      // have to keep this name for compat with sbt's compiler-interface\n   80      def getArchive: ZipFile = null\n   81:     override def underlyingSource = Some(self)\n   82      override def toString = self.path + \"(\" + path + \")\"\n   83    }\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/macros/Universe.scala:\n  477    @deprecated(\"c.enclosingTree-style APIs are now deprecated; consult the scaladoc for more information\", \"2.11.0\")\n  478    trait CompilationUnitContextApi {\n  479:     /** Source file corresponding to this compilation unit.\n  480       *\n  481       *  Exposes information about the file as a part of a real or virtual file system\n  ...\n  487       */\n  488      @deprecated(\"c.enclosingTree-style APIs are now deprecated; consult the scaladoc for more information\", \"2.11.0\")\n  489:     def source: scala.reflect.internal.util.SourceFile\n  490  \n  491      /** The AST that corresponds to this compilation unit. */\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/runtime/ReflectionUtils.scala:\n  138      //             override def input            = impl.input\n  139      //             override def sizeOption       = impl.sizeOption\n  140:     //             override def underlyingSource = Some(jar)\n  141      //             override def toString         = jarfile + \"(\" + entrypath + \")\"\n  142      //           }\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/ILoop.scala:\n   16  import scala.tools.nsc.util.{ ClassPath, Exceptional, stringFromWriter, stringFromStream }\n   17  import scala.reflect.classTag\n   18: import scala.reflect.internal.util.{ BatchSourceFile, ScalaClassLoader }\n   19  import ScalaClassLoader._\n   20  import scala.reflect.io.{ File, Directory }\n   ..\n  484      def diagnose(code: String) = {\n  485        echo(\"The edited code is incomplete!\\n\")\n  486:       val errless = intp compileSources new BatchSourceFile(\"<pastie>\", s\"object pastel {\\n$code\\n}\")\n  487        if (errless) echo(\"The compiler reports no errors.\")\n  488      }\n  ...\n  733          echo(\"The pasted code is incomplete!\\n\")\n  734          // Remembrance of Things Pasted in an object\n  735:         val errless = intp compileSources new BatchSourceFile(\"<pastie>\", s\"object pastel {\\n$code\\n}\")\n  736          if (errless) echo(\"...but compilation found no error? Good luck with that.\")\n  737        }\n  738      }\n  739      def compileCode() = {\n  740:       val errless = intp compileSources new BatchSourceFile(\"<pastie>\", code)\n  741        if (!errless) echo(\"There were compilation errors!\")\n  742      }\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/IMain.scala:\n   15  import scala.reflect.runtime.{ universe => ru }\n   16  import scala.reflect.{ ClassTag, classTag }\n   17: import scala.reflect.internal.util.{ BatchSourceFile, SourceFile }\n   18  import scala.tools.nsc.interactive\n   19  import scala.tools.nsc.reporters.StoreReporter\n   ..\n  126    // This exists mostly because using the reporter too early leads to deadlock.\n  127    private def echo(msg: String) { Console println msg }\n  128:   private def _initSources = List(new BatchSourceFile(\"<init>\", \"class $repl_$init { }\"))\n  129    private def _initialize() = {\n  130      try {\n  ...\n  132        val run = new _compiler.Run()\n  133        assert(run.typerPhase != NoPhase, \"REPL requires a typer phase.\")\n  134:       run compileSources _initSources\n  135        _initializeComplete = true\n  136        true\n  ...\n  429    }\n  430  \n  431:   def compileSourcesKeepingRun(sources: SourceFile*) = {\n  432      val run = new Run()\n  433      assert(run.typerPhase != NoPhase, \"REPL requires a typer phase.\")\n  434      reporter.reset()\n  435:     run compileSources sources.toList\n  436      (!reporter.hasErrors, run)\n  437    }\n  438  \n  439:   /** Compile an nsc SourceFile.  Returns true if there are\n  440     *  no compilation errors, or false otherwise.\n  441     */\n  442:   def compileSources(sources: SourceFile*): Boolean =\n  443:     compileSourcesKeepingRun(sources: _*)._1\n  444  \n  445    /** Compile a string.  Returns true if there are no\n  ...\n  447     */\n  448    def compileString(code: String): Boolean =\n  449:     compileSources(new BatchSourceFile(\"<script>\", code))\n  450  \n  451    /** Build a request from the user. `trees` is `line` after being parsed.\n  ...\n  853      private def compileAndSaveRun(label: String, code: String) = {\n  854        showCodeIfDebugging(code)\n  855:       val (success, run) = compileSourcesKeepingRun(new BatchSourceFile(label, packaged(code)))\n  856        updateRecentWarnings(run)\n  857        success\n  ...\n  894        */\n  895      lazy val ComputedImports(headerPreamble, importsPreamble, importsTrailer, accessPath) =\n  896:       exitingTyper(importsCode(referencedNames.toSet, ObjectSourceCode, definesClass, generousImports))\n  897  \n  898      /** the line of code to compute */\n  ...\n  961      }\n  962  \n  963:     private[interpreter] lazy val ObjectSourceCode: Wrapper =\n  964        if (isClassBased) new ClassBasedWrapper else new ObjectBasedWrapper\n  965  \n  966:     private object ResultObjectSourceCode extends IMain.CodeAssembler[MemberHandler] {\n  967        /** We only want to generate this code when the result\n  968         *  is a value which can be referred to as-is.\n  ...\n 1000  \n 1001        // compile the object containing the user's code\n 1002:       lineRep.compile(ObjectSourceCode(handlers)) && {\n 1003          // extract and remember types\n 1004          typeOf\n ....\n 1017          // compile the result-extraction object\n 1018          val handls = if (printResults) handlers else Nil\n 1019:         withoutWarnings(lineRep compile ResultObjectSourceCode(handls))\n 1020        }\n 1021      }\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/Imports.scala:\n   55    /** Tuples of (source, imported symbols) in the order they were imported.\n   56     */\n   57:   def importedSymbolsBySource: List[(Symbol, List[Symbol])] = {\n   58      val lang    = languageWildcardSyms map (sym => (sym, membersAtPickler(sym)))\n   59      val session = importHandlers filter (_.targetType != NoType) map { mh =>\n   ..\n   63      lang ++ session\n   64    }\n   65:   def implicitSymbolsBySource: List[(Symbol, List[Symbol])] = {\n   66:     importedSymbolsBySource map {\n   67        case (k, vs) => (k, vs filter (_.isImplicit))\n   68      } filterNot (_._2.isEmpty)\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/JavapClass.scala:\n   16                       SimpleJavaFileObject, StandardLocation }\n   17  import scala.reflect.io.{ AbstractFile, Directory, File, Path }\n   18: import scala.io.Source\n   19  import scala.util.{ Try, Success, Failure }\n   20  import scala.util.Properties.{ lineSeparator => EOL }\n   ..\n  185        val pw = new PrintWriter(sw)\n  186        for {\n  187:         line <- Source.fromString(text).getLines()\n  188          if checkFilter(line)\n  189        } pw println line\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/package.scala:\n   81        // in its name somewhere.\n   82        val args     = line split \"\\\\s+\"\n   83:       val filtered = intp.implicitSymbolsBySource filter {\n   84          case (source, syms) =>\n   85            (args contains \"-v\") || {\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/PresentationCompilation.scala:\n   36        val importer = global.mkImporter(compiler)\n   37        val request = new Request(line1, trees map (t => importer.importTree(t)), generousImports = true)\n   38:       val wrappedCode: String = request.ObjectSourceCode(request.handlers)\n   39        val unit = compiler.newCompilationUnit(wrappedCode)\n   40        import compiler._\n   ..\n   42        unitOfFile(richUnit.source.file) = richUnit\n   43        enteringTyper(typeCheck(richUnit))\n   44:       val result = PresentationCompileResult(compiler)(richUnit, request.ObjectSourceCode.preambleLength + line1.length - line.length)\n   45        Right(result)\n   46      }\n\n/Users/vjovanov/code/scala/src/scaladoc/scala/tools/ant/Scaladoc.scala:\n  231     *  @param input The value of `sourcepath`.\n  232     */\n  233:   def setSourcepath(input: Path) =\n  234      if (sourcepath.isEmpty) sourcepath = Some(input)\n  235      else sourcepath.get.append(input)\n  ...\n  239     *  @return A source path to be configured.\n  240     */\n  241:   def createSourcepath(): Path = {\n  242      if (sourcepath.isEmpty) sourcepath = Some(new Path(getProject))\n  243      sourcepath.get.createPath()\n  ...\n  248     *  @param input A reference to a source path.\n  249     */\n  250:   def setSourcepathref(input: Reference) =\n  251:     createSourcepath().setRefid(input)\n  252  \n  253    /** Sets the `bootclasspath` attribute. Used by [[http://ant.apache.org Ant]].\n  ...\n  489     *  @return The source path as a list of files.\n  490     */\n  491:   private def getSourcepath: List[File] =\n  492      if (sourcepath.isEmpty) buildError(\"Member 'sourcepath' is empty.\")\n  493      else sourcepath.get.list().toList map nameToFile\n  ...\n  630        docSettings.classpath.value = asString(getClasspath)\n  631      if (!sourcepath.isEmpty)\n  632:       docSettings.sourcepath.value = asString(getSourcepath)\n  633      /*else if (origin.get.size() > 0)\n  634        settings.sourcepath.value = origin.get.list()(0)*/\n\n/Users/vjovanov/code/scala/src/scaladoc/scala/tools/nsc/doc/DocFactory.scala:\n    9  import scala.util.control.ControlThrowable\n   10  import reporters.Reporter\n   11: import scala.reflect.internal.util.BatchSourceFile\n   12  \n   13  /** A documentation processor controls the process of generating Scala\n   ..\n   44          new compiler.Run() compile files\n   45        case Right(sourceCode) =>\n   46:         new compiler.Run() compileSources List(new BatchSourceFile(\"newSource\", sourceCode))\n   47      }\n   48  \n\n/Users/vjovanov/code/scala/src/scaladoc/scala/tools/nsc/doc/DocParser.scala:\n   43     */\n   44    def docUnit(code: String) = {\n   45:     val unit    = new CompilationUnit(new BatchSourceFile(\"<console>\", code))\n   46      val scanner = newUnitParser(unit)\n   47  \n\n/Users/vjovanov/code/scala/src/scaladoc/scala/tools/nsc/doc/html/HtmlPage.scala:\n  229      val image = entityToImage(ety)\n  230      val companionImage = ety.companion filter {\n  231:       e => e.visibility.isPublic && ! e.inSource.isEmpty\n  232      } map { entityToImage }\n  233  \n\n/Users/vjovanov/code/scala/src/scaladoc/scala/tools/nsc/doc/html/page/diagram/DotDiagramGenerator.scala:\n  322  \n  323      val result = if (dotOutput != null) {\n  324:       val src = scala.io.Source.fromString(dotOutput)\n  325        try {\n  326:         val cpa = scala.xml.parsing.ConstructingParser.fromSource(src, preserveWS = false)\n  327          val doc = cpa.document()\n  328          if (doc != null)\n\n/Users/vjovanov/code/scala/src/scaladoc/scala/tools/nsc/doc/html/page/Template.scala:\n   89      val templateName = if (tpl.isRootPackage) \"root package\" else tpl.name\n   90      val displayName = tpl.companion match {\n   91:       case Some(companion) if (companion.visibility.isPublic && companion.inSource != None) =>\n   92          <a href={relativeLinkTo(companion)} title={docEntityKindToCompanionTitle(tpl)}>{ templateName }</a>\n   93        case _ =>\n   ..\n  107  \n  108            tpl.companion match {\n  109:             case Some(companion) if (companion.visibility.isPublic && companion.inSource != None) =>\n  110                <a href={relativeLinkTo(companion)} title={docEntityKindToCompanionTitle(tpl)}><img alt={alt} src={ relativeLinkTo(List(src, \"lib\")) }/></a>\n  111              case _ =>\n  ...\n  540  \n  541      val sourceLink: NodeSeq = mbr match {\n  542:       case dtpl: DocTemplateEntity if (isSelf && dtpl.sourceUrl.isDefined && dtpl.inSource.isDefined && !isReduced) =>\n  543:         val (absFile, _) = dtpl.inSource.get\n  544:         <dt>Source</dt>\n  545          <dd>{ <a href={ dtpl.sourceUrl.get.toString } target=\"_blank\">{ Text(absFile.file.getName) }</a> }</dd>\n  546        case _ => NodeSeq.Empty\n\n/Users/vjovanov/code/scala/src/scaladoc/scala/tools/nsc/doc/html/resource/lib/jquery-ui.js:\n    4  * Copyright (c) 2012 jQuery Foundation and other contributors Licensed MIT */\n    5  \n    6: (function(e,t){function i(t,n){var r,i,o,u=t.nodeName.toLowerCase();return\"area\"===u?(r=t.parentNode,i=r.name,!t.href||!i||r.nodeName.toLowerCase()!==\"map\"?!1:(o=e(\"img[usemap=#\"+i+\"]\")[0],!!o&&s(o))):(/input|select|textarea|button|object/.test(u)?!t.disabled:\"a\"===u?t.href||n:n)&&s(t)}function s(t){return!e(t).parents().andSelf().filter(function(){return e.css(this,\"visibility\")===\"hidden\"||e.expr.filters.hidden(this)}).length}var n=0,r=/^ui-id-\\d+$/;e.ui=e.ui||{};if(e.ui.version)return;e.extend(e.ui,{version:\"1.9.0\",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({_focus:e.fn.focus,focus:function(t,n){return typeof t==\"number\"?this.each(function(){var r=this;setTimeout(function(){e(r).focus(),n&&n.call(r)},t)}):this._focus.apply(this,arguments)},scrollParent:function(){var t;return e.browser.msie&&/(static|relative)/.test(this.css(\"position\"))||/absolute/.test(this.css(\"position\"))?t=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,\"position\"))&&/(auto|scroll)/.test(e.css(this,\"overflow\")+e.css(this,\"overflow-y\")+e.css(this,\"overflow-x\"))}).eq(0):t=this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,\"overflow\")+e.css(this,\"overflow-y\")+e.css(this,\"overflow-x\"))}).eq(0),/fixed/.test(this.css(\"position\"))||!t.length?e(document):t},zIndex:function(n){if(n!==t)return this.css(\"zIndex\",n);if(this.length){var r=e(this[0]),i,s;while(r.length&&r[0]!==document){i=r.css(\"position\");if(i===\"absolute\"||i===\"relative\"||i===\"fixed\"){s=parseInt(r.css(\"zIndex\"),10);if(!isNaN(s)&&s!==0)return s}r=r.parent()}}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id=\"ui-id-\"+ ++n)})},removeUniqueId:function(){return this.each(function(){r.test(this.id)&&e(this).removeAttr(\"id\")})}}),e(\"<a>\").outerWidth(1).jquery||e.each([\"Width\",\"Height\"],function(n,r){function u(t,n,r,s){return e.each(i,function(){n-=parseFloat(e.css(t,\"padding\"+this))||0,r&&(n-=parseFloat(e.css(t,\"border\"+this+\"Width\"))||0),s&&(n-=parseFloat(e.css(t,\"margin\"+this))||0)}),n}var i=r===\"Width\"?[\"Left\",\"Right\"]:[\"Top\",\"Bottom\"],s=r.toLowerCase(),o={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn[\"inner\"+r]=function(n){return n===t?o[\"inner\"+r].call(this):this.each(function(){e(this).css(s,u(this,n)+\"px\")})},e.fn[\"outer\"+r]=function(t,n){return typeof t!=\"number\"?o[\"outer\"+r].call(this,t):this.each(function(){e(this).css(s,u(this,t,!0,n)+\"px\")})}}),e.extend(e.expr[\":\"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(n){return!!e.data(n,t)}}):function(t,n,r){return!!e.data(t,r[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,\"tabindex\")))},tabbable:function(t){var n=e.attr(t,\"tabindex\"),r=isNaN(n);return(r||n>=0)&&i(t,!r)}}),e(function(){var t=document.body,n=t.appendChild(n=document.createElement(\"div\"));n.offsetHeight,e.extend(n.style,{minHeight:\"100px\",height:\"auto\",padding:0,borderWidth:0}),e.support.minHeight=n.offsetHeight===100,e.support.selectstart=\"onselectstart\"in n,t.removeChild(n).style.display=\"none\"}),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?\"selectstart\":\"mousedown\")+\".ui-disableSelection\",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(\".ui-disableSelection\")}}),e.extend(e.ui,{plugin:{add:function(t,n,r){var i,s=e.ui[t].prototype;for(i in r)s.plugins[i]=s.plugins[i]||[],s.plugins[i].push([n,r[i]])},call:function(e,t,n){var r,i=e.plugins[t];if(!i||!e.element[0].parentNode||e.element[0].parentNode.nodeType===11)return;for(r=0;r<i.length;r++)e.options[i[r][0]]&&i[r][1].apply(e.element,n)}},contains:e.contains,hasScroll:function(t,n){if(e(t).css(\"overflow\")===\"hidden\")return!1;var r=n&&n===\"left\"?\"scrollLeft\":\"scrollTop\",i=!1;return t[r]>0?!0:(t[r]=1,i=t[r]>0,t[r]=0,i)},isOverAxis:function(e,t,n){return e>t&&e<t+n},isOver:function(t,n,r,i,s,o){return e.ui.isOverAxis(t,r,s)&&e.ui.isOverAxis(n,i,o)}})})(jQuery);(function(e,t){var n=0,r=Array.prototype.slice,i=e.cleanData;e.cleanData=function(t){for(var n=0,r;(r=t[n])!=null;n++)try{e(r).triggerHandler(\"remove\")}catch(s){}i(t)},e.widget=function(t,n,r){var i,s,o,u,a=t.split(\".\")[0];t=t.split(\".\")[1],i=a+\"-\"+t,r||(r=n,n=e.Widget),e.expr[\":\"][i.toLowerCase()]=function(t){return!!e.data(t,i)},e[a]=e[a]||{},s=e[a][t],o=e[a][t]=function(e,t){if(!this._createWidget)return new o(e,t);arguments.length&&this._createWidget(e,t)},e.extend(o,s,{version:r.version,_proto:e.extend({},r),_childConstructors:[]}),u=new n,u.options=e.widget.extend({},u.options),e.each(r,function(t,i){e.isFunction(i)&&(r[t]=function(){var e=function(){return n.prototype[t].apply(this,arguments)},r=function(e){return n.prototype[t].apply(this,e)};return function(){var t=this._super,n=this._superApply,s;return this._super=e,this._superApply=r,s=i.apply(this,arguments),this._super=t,this._superApply=n,s}}())}),o.prototype=e.widget.extend(u,{widgetEventPrefix:t},r,{constructor:o,namespace:a,widgetName:t,widgetBaseClass:i,widgetFullName:i}),s?(e.each(s._childConstructors,function(t,n){var r=n.prototype;e.widget(r.namespace+\".\"+r.widgetName,o,n._proto)}),delete s._childConstructors):n._childConstructors.push(o),e.widget.bridge(t,o)},e.widget.extend=function(n){var i=r.call(arguments,1),s=0,o=i.length,u,a;for(;s<o;s++)for(u in i[s])a=i[s][u],i[s].hasOwnProperty(u)&&a!==t&&(n[u]=e.isPlainObject(a)?e.widget.extend({},n[u],a):a);return n},e.widget.bridge=function(n,i){var s=i.prototype.widgetFullName;e.fn[n]=function(o){var u=typeof o==\"string\",a=r.call(arguments,1),f=this;return o=!u&&a.length?e.widget.extend.apply(null,[o].concat(a)):o,u?this.each(function(){var r,i=e.data(this,s);if(!i)return e.error(\"cannot call methods on \"+n+\" prior to initialization; \"+\"attempted to call method '\"+o+\"'\");if(!e.isFunction(i[o])||o.charAt(0)===\"_\")return e.error(\"no such method '\"+o+\"' for \"+n+\" widget instance\");r=i[o].apply(i,a);if(r!==i&&r!==t)return f=r&&r.jquery?f.pushStack(r.get()):r,!1}):this.each(function(){var t=e.data(this,s);t?t.option(o||{})._init():new i(o,this)}),f}},e.Widget=function(e,t){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:\"widget\",widgetEventPrefix:\"\",defaultElement:\"<div>\",options:{disabled:!1,create:null},_createWidget:function(t,r){r=e(r||this.defaultElement||this)[0],this.element=e(r),this.uuid=n++,this.eventNamespace=\".\"+this.widgetName+this.uuid,this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this.bindings=e(),this.hoverable=e(),this.focusable=e(),r!==this&&(e.data(r,this.widgetName,this),e.data(r,this.widgetFullName,this),this._on({remove:\"destroy\"}),this.document=e(r.style?r.ownerDocument:r.document||r),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger(\"create\",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr(\"aria-disabled\").removeClass(this.widgetFullName+\"-disabled \"+\"ui-state-disabled\"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass(\"ui-state-hover\"),this.focusable.removeClass(\"ui-state-focus\")},_destroy:e.noop,widget:function(){return this.element},option:function(n,r){var i=n,s,o,u;if(arguments.length===0)return e.widget.extend({},this.options);if(typeof n==\"string\"){i={},s=n.split(\".\"),n=s.shift();if(s.length){o=i[n]=e.widget.extend({},this.options[n]);for(u=0;u<s.length-1;u++)o[s[u]]=o[s[u]]||{},o=o[s[u]];n=s.pop();if(r===t)return o[n]===t?null:o[n];o[n]=r}else{if(r===t)return this.options[n]===t?null:this.options[n];i[n]=r}}return this._setOptions(i),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,e===\"disabled\"&&(this.widget().toggleClass(this.widgetFullName+\"-disabled ui-state-disabled\",!!t).attr(\"aria-disabled\",t),this.hoverable.removeClass(\"ui-state-hover\"),this.focusable.removeClass(\"ui-state-focus\")),this},enable:function(){return this._setOption(\"disabled\",!1)},disable:function(){return this._setOption(\"disabled\",!0)},_on:function(t,n){n?(t=e(t),this.bindings=this.bindings.add(t)):(n=t,t=this.element);var r=this;e.each(n,function(n,i){function s(){if(r.options.disabled===!0||e(this).hasClass(\"ui-state-disabled\"))return;return(typeof i==\"string\"?r[i]:i).apply(r,arguments)}typeof i!=\"string\"&&(s.guid=i.guid=i.guid||s.guid||e.guid++);var o=n.match(/^(\\w+)\\s*(.*)$/),u=o[1]+r.eventNamespace,a=o[2];a?r.widget().delegate(a,u,s):t.bind(u,s)})},_off:function(e,t){t=(t||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,e.unbind(t).undelegate(t)},_delay:function(e,t){function n(){return(typeof e==\"string\"?r[e]:e).apply(r,arguments)}var r=this;return setTimeout(n,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass(\"ui-state-hover\")},mouseleave:function(t){e(t.currentTarget).removeClass(\"ui-state-hover\")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass(\"ui-state-focus\")},focusout:function(t){e(t.currentTarget).removeClass(\"ui-state-focus\")}})},_trigger:function(t,n,r){var i,s,o=this.options[t];r=r||{},n=e.Event(n),n.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),n.target=this.element[0],s=n.originalEvent;if(s)for(i in s)i in n||(n[i]=s[i]);return this.element.trigger(n,r),!(e.isFunction(o)&&o.apply(this.element[0],[n].concat(r))===!1||n.isDefaultPrevented())}},e.each({show:\"fadeIn\",hide:\"fadeOut\"},function(t,n){e.Widget.prototype[\"_\"+t]=function(r,i,s){typeof i==\"string\"&&(i={effect:i});var o,u=i?i===!0||typeof i==\"number\"?n:i.effect||n:t;i=i||{},typeof i==\"number\"&&(i={duration:i}),o=!e.isEmptyObject(i),i.complete=s,i.delay&&r.delay(i.delay),o&&e.effects&&(e.effects.effect[u]||e.uiBackCompat!==!1&&e.effects[u])?r[t](i):u!==t&&r[u]?r[u](i.duration,i.easing,s):r.queue(function(n){e(this)[t](),s&&s.call(r[0]),n()})}}),e.uiBackCompat!==!1&&(e.Widget.prototype._getCreateOptions=function(){return e.metadata&&e.metadata.get(this.element[0])[this.widgetName]})})(jQuery);(function(e,t){var n=!1;e(document).mouseup(function(e){n=!1}),e.widget(\"ui.mouse\",{version:\"1.9.0\",options:{cancel:\"input,textarea,button,select,option\",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind(\"mousedown.\"+this.widgetName,function(e){return t._mouseDown(e)}).bind(\"click.\"+this.widgetName,function(n){if(!0===e.data(n.target,t.widgetName+\".preventClickEvent\"))return e.removeData(n.target,t.widgetName+\".preventClickEvent\"),n.stopImmediatePropagation(),!1}),this.started=!1},_mouseDestroy:function(){this.element.unbind(\".\"+this.widgetName),this._mouseMoveDelegate&&e(document).unbind(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).unbind(\"mouseup.\"+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(n)return;this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var r=this,i=t.which===1,s=typeof this.options.cancel==\"string\"&&t.target.nodeName?e(t.target).closest(this.options.cancel).length:!1;if(!i||s||!this._mouseCapture(t))return!0;this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){r.mouseDelayMet=!0},this.options.delay));if(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)){this._mouseStarted=this._mouseStart(t)!==!1;if(!this._mouseStarted)return t.preventDefault(),!0}return!0===e.data(t.target,this.widgetName+\".preventClickEvent\")&&e.removeData(t.target,this.widgetName+\".preventClickEvent\"),this._mouseMoveDelegate=function(e){return r._mouseMove(e)},this._mouseUpDelegate=function(e){return r._mouseUp(e)},e(document).bind(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).bind(\"mouseup.\"+this.widgetName,this._mouseUpDelegate),t.preventDefault(),n=!0,!0},_mouseMove:function(t){return!e.browser.msie||document.documentMode>=9||!!t.button?this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted):this._mouseUp(t)},_mouseUp:function(t){return e(document).unbind(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).unbind(\"mouseup.\"+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+\".preventClickEvent\",!0),this._mouseStop(t)),!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(e){return this.mouseDelayMet},_mouseStart:function(e){},_mouseDrag:function(e){},_mouseStop:function(e){},_mouseCapture:function(e){return!0}})})(jQuery);(function(e,t){function h(e,t,n){return[parseInt(e[0],10)*(l.test(e[0])?t/100:1),parseInt(e[1],10)*(l.test(e[1])?n/100:1)]}function p(t,n){return parseInt(e.css(t,n),10)||0}e.ui=e.ui||{};var n,r=Math.max,i=Math.abs,s=Math.round,o=/left|center|right/,u=/top|center|bottom/,a=/[\\+\\-]\\d+%?/,f=/^\\w+/,l=/%$/,c=e.fn.position;e.position={scrollbarWidth:function(){if(n!==t)return n;var r,i,s=e(\"<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>\"),o=s.children()[0];return e(\"body\").append(s),r=o.offsetWidth,s.css(\"overflow\",\"scroll\"),i=o.offsetWidth,r===i&&(i=s[0].clientWidth),s.remove(),n=r-i},getScrollInfo:function(t){var n=t.isWindow?\"\":t.element.css(\"overflow-x\"),r=t.isWindow?\"\":t.element.css(\"overflow-y\"),i=n===\"scroll\"||n===\"auto\"&&t.width<t.element[0].scrollWidth,s=r===\"scroll\"||r===\"auto\"&&t.height<t.element[0].scrollHeight;return{width:i?e.position.scrollbarWidth():0,height:s?e.position.scrollbarWidth():0}},getWithinInfo:function(t){var n=e(t||window),r=e.isWindow(n[0]);return{element:n,isWindow:r,offset:n.offset()||{left:0,top:0},scrollLeft:n.scrollLeft(),scrollTop:n.scrollTop(),width:r?n.width():n.outerWidth(),height:r?n.height():n.outerHeight()}}},e.fn.position=function(t){if(!t||!t.of)return c.apply(this,arguments);t=e.extend({},t);var n,l,d,v,m,g=e(t.of),y=e.position.getWithinInfo(t.within),b=e.position.getScrollInfo(y),w=g[0],E=(t.collision||\"flip\").split(\" \"),S={};return w.nodeType===9?(l=g.width(),d=g.height(),v={top:0,left:0}):e.isWindow(w)?(l=g.width(),d=g.height(),v={top:g.scrollTop(),left:g.scrollLeft()}):w.preventDefault?(t.at=\"left top\",l=d=0,v={top:w.pageY,left:w.pageX}):(l=g.outerWidth(),d=g.outerHeight(),v=g.offset()),m=e.extend({},v),e.each([\"my\",\"at\"],function(){var e=(t[this]||\"\").split(\" \"),n,r;e.length===1&&(e=o.test(e[0])?e.concat([\"center\"]):u.test(e[0])?[\"center\"].concat(e):[\"center\",\"center\"]),e[0]=o.test(e[0])?e[0]:\"center\",e[1]=u.test(e[1])?e[1]:\"center\",n=a.exec(e[0]),r=a.exec(e[1]),S[this]=[n?n[0]:0,r?r[0]:0],t[this]=[f.exec(e[0])[0],f.exec(e[1])[0]]}),E.length===1&&(E[1]=E[0]),t.at[0]===\"right\"?m.left+=l:t.at[0]===\"center\"&&(m.left+=l/2),t.at[1]===\"bottom\"?m.top+=d:t.at[1]===\"center\"&&(m.top+=d/2),n=h(S.at,l,d),m.left+=n[0],m.top+=n[1],this.each(function(){var o,u,a=e(this),f=a.outerWidth(),c=a.outerHeight(),w=p(this,\"marginLeft\"),x=p(this,\"marginTop\"),T=f+w+p(this,\"marginRight\")+b.width,N=c+x+p(this,\"marginBottom\")+b.height,C=e.extend({},m),k=h(S.my,a.outerWidth(),a.outerHeight());t.my[0]===\"right\"?C.left-=f:t.my[0]===\"center\"&&(C.left-=f/2),t.my[1]===\"bottom\"?C.top-=c:t.my[1]===\"center\"&&(C.top-=c/2),C.left+=k[0],C.top+=k[1],e.support.offsetFractions||(C.left=s(C.left),C.top=s(C.top)),o={marginLeft:w,marginTop:x},e.each([\"left\",\"top\"],function(r,i){e.ui.position[E[r]]&&e.ui.position[E[r]][i](C,{targetWidth:l,targetHeight:d,elemWidth:f,elemHeight:c,collisionPosition:o,collisionWidth:T,collisionHeight:N,offset:[n[0]+k[0],n[1]+k[1]],my:t.my,at:t.at,within:y,elem:a})}),e.fn.bgiframe&&a.bgiframe(),t.using&&(u=function(e){var n=v.left-C.left,s=n+l-f,o=v.top-C.top,u=o+d-c,h={target:{element:g,left:v.left,top:v.top,width:l,height:d},element:{element:a,left:C.left,top:C.top,width:f,height:c},horizontal:s<0?\"left\":n>0?\"right\":\"center\",vertical:u<0?\"top\":o>0?\"bottom\":\"middle\"};l<f&&i(n+s)<l&&(h.horizontal=\"center\"),d<c&&i(o+u)<d&&(h.vertical=\"middle\"),r(i(n),i(s))>r(i(o),i(u))?h.important=\"horizontal\":h.important=\"vertical\",t.using.call(this,e,h)}),a.offset(e.extend(C,{using:u}))})},e.ui.position={fit:{left:function(e,t){var n=t.within,i=n.isWindow?n.scrollLeft:n.offset.left,s=n.width,o=e.left-t.collisionPosition.marginLeft,u=i-o,a=o+t.collisionWidth-s-i,f;t.collisionWidth>s?u>0&&a<=0?(f=e.left+u+t.collisionWidth-s-i,e.left+=u-f):a>0&&u<=0?e.left=i:u>a?e.left=i+s-t.collisionWidth:e.left=i:u>0?e.left+=u:a>0?e.left-=a:e.left=r(e.left-o,e.left)},top:function(e,t){var n=t.within,i=n.isWindow?n.scrollTop:n.offset.top,s=t.within.height,o=e.top-t.collisionPosition.marginTop,u=i-o,a=o+t.collisionHeight-s-i,f;t.collisionHeight>s?u>0&&a<=0?(f=e.top+u+t.collisionHeight-s-i,e.top+=u-f):a>0&&u<=0?e.top=i:u>a?e.top=i+s-t.collisionHeight:e.top=i:u>0?e.top+=u:a>0?e.top-=a:e.top=r(e.top-o,e.top)}},flip:{left:function(e,t){var n=t.within,r=n.offset.left+n.scrollLeft,s=n.width,o=n.isWindow?n.scrollLeft:n.offset.left,u=e.left-t.collisionPosition.marginLeft,a=u-o,f=u+t.collisionWidth-s-o,l=t.my[0]===\"left\"?-t.elemWidth:t.my[0]===\"right\"?t.elemWidth:0,c=t.at[0]===\"left\"?t.targetWidth:t.at[0]===\"right\"?-t.targetWidth:0,h=-2*t.offset[0],p,d;if(a<0){p=e.left+l+c+h+t.collisionWidth-s-r;if(p<0||p<i(a))e.left+=l+c+h}else if(f>0){d=e.left-t.collisionPosition.marginLeft+l+c+h-o;if(d>0||i(d)<f)e.left+=l+c+h}},top:function(e,t){var n=t.within,r=n.offset.top+n.scrollTop,s=n.height,o=n.isWindow?n.scrollTop:n.offset.top,u=e.top-t.collisionPosition.marginTop,a=u-o,f=u+t.collisionHeight-s-o,l=t.my[1]===\"top\",c=l?-t.elemHeight:t.my[1]===\"bottom\"?t.elemHeight:0,h=t.at[1]===\"top\"?t.targetHeight:t.at[1]===\"bottom\"?-t.targetHeight:0,p=-2*t.offset[1],d,v;a<0?(v=e.top+c+h+p+t.collisionHeight-s-r,e.top+c+h+p>a&&(v<0||v<i(a))&&(e.top+=c+h+p)):f>0&&(d=e.top-t.collisionPosition.marginTop+c+h+p-o,e.top+c+h+p>f&&(d>0||i(d)<f)&&(e.top+=c+h+p))}},flipfit:{left:function(){e.ui.position.flip.left.apply(this,arguments),e.ui.position.fit.left.apply(this,arguments)},top:function(){e.ui.position.flip.top.apply(this,arguments),e.ui.position.fit.top.apply(this,arguments)}}},function(){var t,n,r,i,s,o=document.getElementsByTagName(\"body\")[0],u=document.createElement(\"div\");t=document.createElement(o?\"div\":\"body\"),r={visibility:\"hidden\",width:0,height:0,border:0,margin:0,background:\"none\"},o&&e.extend(r,{position:\"absolute\",left:\"-1000px\",top:\"-1000px\"});for(s in r)t.style[s]=r[s];t.appendChild(u),n=o||document.documentElement,n.insertBefore(t,n.firstChild),u.style.cssText=\"position: absolute; left: 10.7432222px;\",i=e(u).offset().left,e.support.offsetFractions=i>10&&i<11,t.innerHTML=\"\",n.removeChild(t)}(),e.uiBackCompat!==!1&&function(e){var n=e.fn.position;e.fn.position=function(r){if(!r||!r.offset)return n.call(this,r);var i=r.offset.split(\" \"),s=r.at.split(\" \");return i.length===1&&(i[1]=i[0]),/^\\d/.test(i[0])&&(i[0]=\"+\"+i[0]),/^\\d/.test(i[1])&&(i[1]=\"+\"+i[1]),s.length===1&&(/left|center|right/.test(s[0])?s[1]=\"center\":(s[1]=s[0],s[0]=\"center\")),n.call(this,e.extend(r,{at:s[0]+i[0]+\" \"+s[1]+i[1],offset:t}))}}(jQuery)})(jQuery);(function(e,t){var n=0,r={},i={};r.height=r.paddingTop=r.paddingBottom=r.borderTopWidth=r.borderBottomWidth=\"hide\",i.height=i.paddingTop=i.paddingBottom=i.borderTopWidth=i.borderBottomWidth=\"show\",e.widget(\"ui.accordion\",{version:\"1.9.0\",options:{active:0,animate:{},collapsible:!1,event:\"click\",header:\"> li > :first-child,> :not(li):even\",heightStyle:\"auto\",icons:{activeHeader:\"ui-icon-triangle-1-s\",header:\"ui-icon-triangle-1-e\"},activate:null,beforeActivate:null},_create:function(){var t=this.accordionId=\"ui-accordion-\"+(this.element.attr(\"id\")||++n),r=this.options;this.prevShow=this.prevHide=e(),this.element.addClass(\"ui-accordion ui-widget ui-helper-reset\"),this.headers=this.element.find(r.header).addClass(\"ui-accordion-header ui-helper-reset ui-state-default ui-corner-all\"),this._hoverable(this.headers),this._focusable(this.headers),this.headers.next().addClass(\"ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom\").hide(),!r.collapsible&&r.active===!1&&(r.active=0),r.active<0&&(r.active+=this.headers.length),this.active=this._findActive(r.active).addClass(\"ui-accordion-header-active ui-state-active\").toggleClass(\"ui-corner-all ui-corner-top\"),this.active.next().addClass(\"ui-accordion-content-active\").show(),this._createIcons(),this.originalHeight=this.element[0].style.height,this.refresh(),this.element.attr(\"role\",\"tablist\"),this.headers.attr(\"role\",\"tab\").each(function(n){var r=e(this),i=r.attr(\"id\"),s=r.next(),o=s.attr(\"id\");i||(i=t+\"-header-\"+n,r.attr(\"id\",i)),o||(o=t+\"-panel-\"+n,s.attr(\"id\",o)),r.attr(\"aria-controls\",o),s.attr(\"aria-labelledby\",i)}).next().attr(\"role\",\"tabpanel\"),this.headers.not(this.active).attr({\"aria-selected\":\"false\",tabIndex:-1}).next().attr({\"aria-expanded\":\"false\",\"aria-hidden\":\"true\"}).hide(),this.active.length?this.active.attr({\"aria-selected\":\"true\",tabIndex:0}).next().attr({\"aria-expanded\":\"true\",\"aria-hidden\":\"false\"}):this.headers.eq(0).attr(\"tabIndex\",0),this._on(this.headers,{keydown:\"_keydown\"}),this._on(this.headers.next(),{keydown:\"_panelKeyDown\"}),this._setupEvents(r.event)},_getCreateEventData:function(){return{header:this.active,content:this.active.length?this.active.next():e()}},_createIcons:function(){var t=this.options.icons;t&&(e(\"<span>\").addClass(\"ui-accordion-header-icon ui-icon \"+t.header).prependTo(this.headers),this.active.children(\".ui-accordion-header-icon\").removeClass(t.header).addClass(t.activeHeader),this.headers.addClass(\"ui-accordion-icons\"))},_destroyIcons:function(){this.headers.removeClass(\"ui-accordion-icons\").children(\".ui-accordion-header-icon\").remove()},_destroy:function(){var e;this.element.removeClass(\"ui-accordion ui-widget ui-helper-reset\").removeAttr(\"role\"),this.headers.removeClass(\"ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top\").removeAttr(\"role\").removeAttr(\"aria-selected\").removeAttr(\"aria-controls\").removeAttr(\"tabIndex\").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute(\"id\")}),this._destroyIcons(),e=this.headers.next().css(\"display\",\"\").removeAttr(\"role\").removeAttr(\"aria-expanded\").removeAttr(\"aria-hidden\").removeAttr(\"aria-labelledby\").removeClass(\"ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled\").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute(\"id\")}),this.options.heightStyle!==\"content\"&&(this.element.css(\"height\",this.originalHeight),e.css(\"height\",\"\"))},_setOption:function(e,t){if(e===\"active\"){this._activate(t);return}e===\"event\"&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(t)),this._super(e,t),e===\"collapsible\"&&!t&&this.options.active===!1&&this._activate(0),e===\"icons\"&&(this._destroyIcons(),t&&this._createIcons()),e===\"disabled\"&&this.headers.add(this.headers.next()).toggleClass(\"ui-state-disabled\",!!t)},_keydown:function(t){if(t.altKey||t.ctrlKey)return;var n=e.ui.keyCode,r=this.headers.length,i=this.headers.index(t.target),s=!1;switch(t.keyCode){case n.RIGHT:case n.DOWN:s=this.headers[(i+1)%r];break;case n.LEFT:case n.UP:s=this.headers[(i-1+r)%r];break;case n.SPACE:case n.ENTER:this._eventHandler(t);break;case n.HOME:s=this.headers[0];break;case n.END:s=this.headers[r-1]}s&&(e(t.target).attr(\"tabIndex\",-1),e(s).attr(\"tabIndex\",0),s.focus(),t.preventDefault())},_panelKeyDown:function(t){t.keyCode===e.ui.keyCode.UP&&t.ctrlKey&&e(t.currentTarget).prev().focus()},refresh:function(){var t,n,r=this.options.heightStyle,i=this.element.parent();this.element.css(\"height\",this.originalHeight),r===\"fill\"?(e.support.minHeight||(n=i.css(\"overflow\"),i.css(\"overflow\",\"hidden\")),t=i.height(),this.element.siblings(\":visible\").each(function(){var n=e(this),r=n.css(\"position\");if(r===\"absolute\"||r===\"fixed\")return;t-=n.outerHeight(!0)}),n&&i.css(\"overflow\",n),this.headers.each(function(){t-=e(this).outerHeight(!0)}),this.headers.next().each(function(){e(this).height(Math.max(0,t-e(this).innerHeight()+e(this).height()))}).css(\"overflow\",\"auto\")):r===\"auto\"&&(t=0,this.headers.next().each(function(){t=Math.max(t,e(this).height(\"\").height())}).height(t)),r!==\"content\"&&this.element.height(this.element.height())},_activate:function(t){var n=this._findActive(t)[0];if(n===this.active[0])return;n=n||this.active[0],this._eventHandler({target:n,currentTarget:n,preventDefault:e.noop})},_findActive:function(t){return typeof t==\"number\"?this.headers.eq(t):e()},_setupEvents:function(t){var n={};if(!t)return;e.each(t.split(\" \"),function(e,t){n[t]=\"_eventHandler\"}),this._on(this.headers,n)},_eventHandler:function(t){var n=this.options,r=this.active,i=e(t.currentTarget),s=i[0]===r[0],o=s&&n.collapsible,u=o?e():i.next(),a=r.next(),f={oldHeader:r,oldPanel:a,newHeader:o?e():i,newPanel:u};t.preventDefault();if(s&&!n.collapsible||this._trigger(\"beforeActivate\",t,f)===!1)return;n.active=o?!1:this.headers.index(i),this.active=s?e():i,this._toggle(f),r.removeClass(\"ui-accordion-header-active ui-state-active\"),n.icons&&r.children(\".ui-accordion-header-icon\").removeClass(n.icons.activeHeader).addClass(n.icons.header),s||(i.removeClass(\"ui-corner-all\").addClass(\"ui-accordion-header-active ui-state-active ui-corner-top\"),n.icons&&i.children(\".ui-accordion-header-icon\").removeClass(n.icons.header).addClass(n.icons.activeHeader),i.next().addClass(\"ui-accordion-content-active\"))},_toggle:function(t){var n=t.newPanel,r=this.prevShow.length?this.prevShow:t.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=n,this.prevHide=r,this.options.animate?this._animate(n,r,t):(r.hide(),n.show(),this._toggleComplete(t)),r.attr({\"aria-expanded\":\"false\",\"aria-hidden\":\"true\"}),r.prev().attr(\"aria-selected\",\"false\"),n.length&&r.length?r.prev().attr(\"tabIndex\",-1):n.length&&this.headers.filter(function(){return e(this).attr(\"tabIndex\")===0}).attr(\"tabIndex\",-1),n.attr({\"aria-expanded\":\"true\",\"aria-hidden\":\"false\"}).prev().attr({\"aria-selected\":\"true\",tabIndex:0})},_animate:function(e,t,n){var s,o,u,a=this,f=0,l=e.length&&(!t.length||e.index()<t.index()),c=this.options.animate||{},h=l&&c.down||c,p=function(){a._toggleComplete(n)};typeof h==\"number\"&&(u=h),typeof h==\"string\"&&(o=h),o=o||h.easing||c.easing,u=u||h.duration||c.duration;if(!t.length)return e.animate(i,u,o,p);if(!e.length)return t.animate(r,u,o,p);s=e.show().outerHeight(),t.animate(r,{duration:u,easing:o,step:function(e,t){t.now=Math.round(e)}}),e.hide().animate(i,{duration:u,easing:o,complete:p,step:function(e,n){n.now=Math.round(e),n.prop!==\"height\"?f+=n.now:a.options.heightStyle!==\"content\"&&(n.now=Math.round(s-t.outerHeight()-f),f=0)}})},_toggleComplete:function(e){var t=e.oldPanel;t.removeClass(\"ui-accordion-content-active\").prev().removeClass(\"ui-corner-top\").addClass(\"ui-corner-all\"),t.length&&(t.parent()[0].className=t.parent()[0].className),this._trigger(\"activate\",null,e)}}),e.uiBackCompat!==!1&&(function(e,t){e.extend(t.options,{navigation:!1,navigationFilter:function(){return this.href.toLowerCase()===location.href.toLowerCase()}});var n=t._create;t._create=function(){if(this.options.navigation){var t=this,r=this.element.find(this.options.header),i=r.next(),s=r.add(i).find(\"a\").filter(this.options.navigationFilter)[0];s&&r.add(i).each(function(n){if(e.contains(this,s))return t.options.active=Math.floor(n/2),!1})}n.call(this)}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options,{heightStyle:null,autoHeight:!0,clearStyle:!1,fillSpace:!1});var n=t._create,r=t._setOption;e.extend(t,{_create:function(){this.options.heightStyle=this.options.heightStyle||this._mergeHeightStyle(),n.call(this)},_setOption:function(e,t){if(e===\"autoHeight\"||e===\"clearStyle\"||e===\"fillSpace\")this.options.heightStyle=this._mergeHeightStyle();r.apply(this,arguments)},_mergeHeightStyle:function(){var e=this.options;if(e.fillSpace)return\"fill\";if(e.clearStyle)return\"content\";if(e.autoHeight)return\"auto\"}})}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options.icons,{activeHeader:null,headerSelected:\"ui-icon-triangle-1-s\"});var n=t._createIcons;t._createIcons=function(){this.options.icons&&(this.options.icons.activeHeader=this.options.icons.activeHeader||this.options.icons.headerSelected),n.call(this)}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){t.activate=t._activate;var n=t._findActive;t._findActive=function(e){return e===-1&&(e=!1),e&&typeof e!=\"number\"&&(e=this.headers.index(this.headers.filter(e)),e===-1&&(e=!1)),n.call(this,e)}}(jQuery,jQuery.ui.accordion.prototype),jQuery.ui.accordion.prototype.resize=jQuery.ui.accordion.prototype.refresh,function(e,t){e.extend(t.options,{change:null,changestart:null});var n=t._trigger;t._trigger=function(e,t,r){var i=n.apply(this,arguments);return i?(e===\"beforeActivate\"?i=n.call(this,\"changestart\",t,{oldHeader:r.oldHeader,oldContent:r.oldPanel,newHeader:r.newHeader,newContent:r.newPanel}):e===\"activate\"&&(i=n.call(this,\"change\",t,{oldHeader:r.oldHeader,oldContent:r.oldPanel,newHeader:r.newHeader,newContent:r.newPanel})),i):!1}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options,{animate:null,animated:\"slide\"});var n=t._create;t._create=function(){var e=this.options;e.animate===null&&(e.animated?e.animated===\"slide\"?e.animate=300:e.animated===\"bounceslide\"?e.animate={duration:200,down:{easing:\"easeOutBounce\",duration:1e3}}:e.animate=e.animated:e.animate=!1),n.call(this)}}(jQuery,jQuery.ui.accordion.prototype))})(jQuery);(function(e,t){var n=0;e.widget(\"ui.autocomplete\",{version:\"1.9.0\",defaultElement:\"<input>\",options:{appendTo:\"body\",autoFocus:!1,delay:300,minLength:1,position:{my:\"left top\",at:\"left bottom\",collision:\"none\"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},pending:0,_create:function(){var t,n,r;this.isMultiLine=this._isMultiLine(),this.valueMethod=this.element[this.element.is(\"input,textarea\")?\"val\":\"text\"],this.isNewMenu=!0,this.element.addClass(\"ui-autocomplete-input\").attr(\"autocomplete\",\"off\"),this._on({keydown:function(i){if(this.element.prop(\"readOnly\")){t=!0,r=!0,n=!0;return}t=!1,r=!1,n=!1;var s=e.ui.keyCode;switch(i.keyCode){case s.PAGE_UP:t=!0,this._move(\"previousPage\",i);break;case s.PAGE_DOWN:t=!0,this._move(\"nextPage\",i);break;case s.UP:t=!0,this._keyEvent(\"previous\",i);break;case s.DOWN:t=!0,this._keyEvent(\"next\",i);break;case s.ENTER:case s.NUMPAD_ENTER:this.menu.active&&(t=!0,i.preventDefault(),this.menu.select(i));break;case s.TAB:this.menu.active&&this.menu.select(i);break;case s.ESCAPE:this.menu.element.is(\":visible\")&&(this._value(this.term),this.close(i),i.preventDefault());break;default:n=!0,this._searchTimeout(i)}},keypress:function(r){if(t){t=!1,r.preventDefault();return}if(n)return;var i=e.ui.keyCode;switch(r.keyCode){case i.PAGE_UP:this._move(\"previousPage\",r);break;case i.PAGE_DOWN:this._move(\"nextPage\",r);break;case i.UP:this._keyEvent(\"previous\",r);break;case i.DOWN:this._keyEvent(\"next\",r)}},input:function(e){if(r){r=!1,e.preventDefault();return}this._searchTimeout(e)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(e){if(this.cancelBlur){delete this.cancelBlur;return}clearTimeout(this.searching),this.close(e),this._change(e)}}),this._initSource(),this.menu=e(\"<ul>\").addClass(\"ui-autocomplete\").appendTo(this.document.find(this.options.appendTo||\"body\")[0]).menu({input:e(),role:null}).zIndex(this.element.zIndex()+1).hide().data(\"menu\"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var n=this.menu.element[0];e(t.target).closest(\".ui-menu-item\").length||this._delay(function(){var t=this;this.document.one(\"mousedown\",function(r){r.target!==t.element[0]&&r.target!==n&&!e.contains(n,r.target)&&t.close()})})},menufocus:function(t,n){if(this.isNewMenu){this.isNewMenu=!1;if(t.originalEvent&&/^mouse/.test(t.originalEvent.type)){this.menu.blur(),this.document.one(\"mousemove\",function(){e(t.target).trigger(t.originalEvent)});return}}var r=n.item.data(\"ui-autocomplete-item\")||n.item.data(\"item.autocomplete\");!1!==this._trigger(\"focus\",t,{item:r})?t.originalEvent&&/^key/.test(t.originalEvent.type)&&this._value(r.value):this.liveRegion.text(r.value)},menuselect:function(e,t){var n=t.item.data(\"ui-autocomplete-item\")||t.item.data(\"item.autocomplete\"),r=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=r,this._delay(function(){this.previous=r,this.selectedItem=n})),!1!==this._trigger(\"select\",e,{item:n})&&this._value(n.value),this.term=this._value(),this.close(e),this.selectedItem=n}}),this.liveRegion=e(\"<span>\",{role:\"status\",\"aria-live\":\"polite\"}).addClass(\"ui-helper-hidden-accessible\").insertAfter(this.element),e.fn.bgiframe&&this.menu.element.bgiframe(),this._on(this.window,{beforeunload:function(){this.element.removeAttr(\"autocomplete\")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass(\"ui-autocomplete-input\").removeAttr(\"autocomplete\"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(e,t){this._super(e,t),e===\"source\"&&this._initSource(),e===\"appendTo\"&&this.menu.element.appendTo(this.document.find(t||\"body\")[0]),e===\"disabled\"&&t&&this.xhr&&this.xhr.abort()},_isMultiLine:function(){return this.element.is(\"textarea\")?!0:this.element.is(\"input\")?!1:this.element.prop(\"isContentEditable\")},_initSource:function(){var t,n,r=this;e.isArray(this.options.source)?(t=this.options.source,this.source=function(n,r){r(e.ui.autocomplete.filter(t,n.term))}):typeof this.options.source==\"string\"?(n=this.options.source,this.source=function(t,i){r.xhr&&r.xhr.abort(),r.xhr=e.ajax({url:n,data:t,dataType:\"json\",success:function(e,t){i(e)},error:function(){i([])}})}):this.source=this.options.source},_searchTimeout:function(e){clearTimeout(this.searching),this.searching=this._delay(function(){this.term!==this._value()&&(this.selectedItem=null,this.search(null,e))},this.options.delay)},search:function(e,t){e=e!=null?e:this._value(),this.term=this._value();if(e.length<this.options.minLength)return this.close(t);if(this._trigger(\"search\",t)===!1)return;return this._search(e)},_search:function(e){this.pending++,this.element.addClass(\"ui-autocomplete-loading\"),this.cancelSearch=!1,this.source({term:e},this._response())},_response:function(){var e=this,t=++n;return function(r){t===n&&e.__response(r),e.pending--,e.pending||e.element.removeClass(\"ui-autocomplete-loading\")}},__response:function(e){e&&(e=this._normalize(e)),this._trigger(\"response\",null,{content:e}),!this.options.disabled&&e&&e.length&&!this.cancelSearch?(this._suggest(e),this._trigger(\"open\")):this._close()},close:function(e){this.cancelSearch=!0,this._close(e)},_close:function(e){this.menu.element.is(\":visible\")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger(\"close\",e))},_change:function(e){this.previous!==this._value()&&this._trigger(\"change\",e,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:e.map(t,function(t){return typeof t==\"string\"?{label:t,value:t}:e.extend({label:t.label||t.value,value:t.value||t.label},t)})},_suggest:function(t){var n=this.menu.element.empty().zIndex(this.element.zIndex()+1);this._renderMenu(n,t),this.menu.refresh(),n.show(),this._resizeMenu(),n.position(e.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var e=this.menu.element;e.outerWidth(Math.max(e.width(\"\").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(t,n){var r=this;e.each(n,function(e,n){r._renderItemData(t,n)})},_renderItemData:function(e,t){return this._renderItem(e,t).data(\"ui-autocomplete-item\",t)},_renderItem:function(t,n){return e(\"<li>\").append(e(\"<a>\").text(n.label)).appendTo(t)},_move:function(e,t){if(!this.menu.element.is(\":visible\")){this.search(null,t);return}if(this.menu.isFirstItem()&&/^previous/.test(e)||this.menu.isLastItem()&&/^next/.test(e)){this._value(this.term),this.menu.blur();return}this.menu[e](t)},widget:function(){return this.menu.element},_value:function(e){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(e,t){if(!this.isMultiLine||this.menu.element.is(\":visible\"))this._move(e,t),t.preventDefault()}}),e.extend(e.ui.autocomplete,{escapeRegex:function(e){return e.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g,\"\\\\$&\")},filter:function(t,n){var r=new RegExp(e.ui.autocomplete.escapeRegex(n),\"i\");return e.grep(t,function(e){return r.test(e.label||e.value||e)})}}),e.widget(\"ui.autocomplete\",e.ui.autocomplete,{options:{messages:{noResults:\"No search results.\",results:function(e){return e+(e>1?\" results are\":\" result is\")+\" available, use up and down arrow keys to navigate.\"}}},__response:function(e){var t;this._superApply(arguments);if(this.options.disabled||this.cancelSearch)return;e&&e.length?t=this.options.messages.results(e.length):t=this.options.messages.noResults,this.liveRegion.text(t)}})})(jQuery);(function(e,t){var n,r,i,s,o=\"ui-button ui-widget ui-state-default ui-corner-all\",u=\"ui-state-hover ui-state-active \",a=\"ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only\",f=function(){var t=e(this).find(\":ui-button\");setTimeout(function(){t.button(\"refresh\")},1)},l=function(t){var n=t.name,r=t.form,i=e([]);return n&&(r?i=e(r).find(\"[name='\"+n+\"']\"):i=e(\"[name='\"+n+\"']\",t.ownerDocument).filter(function(){return!this.form})),i};e.widget(\"ui.button\",{version:\"1.9.0\",defaultElement:\"<button>\",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest(\"form\").unbind(\"reset\"+this.eventNamespace).bind(\"reset\"+this.eventNamespace,f),typeof this.options.disabled!=\"boolean\"?this.options.disabled=!!this.element.prop(\"disabled\"):this.element.prop(\"disabled\",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr(\"title\");var t=this,u=this.options,a=this.type===\"checkbox\"||this.type===\"radio\",c=\"ui-state-hover\"+(a?\"\":\" ui-state-active\"),h=\"ui-state-focus\";u.label===null&&(u.label=this.type===\"input\"?this.buttonElement.val():this.buttonElement.html()),this.buttonElement.addClass(o).attr(\"role\",\"button\").bind(\"mouseenter\"+this.eventNamespace,function(){if(u.disabled)return;e(this).addClass(\"ui-state-hover\"),this===n&&e(this).addClass(\"ui-state-active\")}).bind(\"mouseleave\"+this.eventNamespace,function(){if(u.disabled)return;e(this).removeClass(c)}).bind(\"click\"+this.eventNamespace,function(e){u.disabled&&(e.preventDefault(),e.stopImmediatePropagation())}),this.element.bind(\"focus\"+this.eventNamespace,function(){t.buttonElement.addClass(h)}).bind(\"blur\"+this.eventNamespace,function(){t.buttonElement.removeClass(h)}),a&&(this.element.bind(\"change\"+this.eventNamespace,function(){if(s)return;t.refresh()}),this.buttonElement.bind(\"mousedown\"+this.eventNamespace,function(e){if(u.disabled)return;s=!1,r=e.pageX,i=e.pageY}).bind(\"mouseup\"+this.eventNamespace,function(e){if(u.disabled)return;if(r!==e.pageX||i!==e.pageY)s=!0})),this.type===\"checkbox\"?this.buttonElement.bind(\"click\"+this.eventNamespace,function(){if(u.disabled||s)return!1;e(this).toggleClass(\"ui-state-active\"),t.buttonElement.attr(\"aria-pressed\",t.element[0].checked)}):this.type===\"radio\"?this.buttonElement.bind(\"click\"+this.eventNamespace,function(){if(u.disabled||s)return!1;e(this).addClass(\"ui-state-active\"),t.buttonElement.attr(\"aria-pressed\",\"true\");var n=t.element[0];l(n).not(n).map(function(){return e(this).button(\"widget\")[0]}).removeClass(\"ui-state-active\").attr(\"aria-pressed\",\"false\")}):(this.buttonElement.bind(\"mousedown\"+this.eventNamespace,function(){if(u.disabled)return!1;e(this).addClass(\"ui-state-active\"),n=this,t.document.one(\"mouseup\",function(){n=null})}).bind(\"mouseup\"+this.eventNamespace,function(){if(u.disabled)return!1;e(this).removeClass(\"ui-state-active\")}).bind(\"keydown\"+this.eventNamespace,function(t){if(u.disabled)return!1;(t.keyCode===e.ui.keyCode.SPACE||t.keyCode===e.ui.keyCode.ENTER)&&e(this).addClass(\"ui-state-active\")}).bind(\"keyup\"+this.eventNamespace,function(){e(this).removeClass(\"ui-state-active\")}),this.buttonElement.is(\"a\")&&this.buttonElement.keyup(function(t){t.keyCode===e.ui.keyCode.SPACE&&e(this).click()})),this._setOption(\"disabled\",u.disabled),this._resetButton()},_determineButtonType:function(){var e,t,n;this.element.is(\"[type=checkbox]\")?this.type=\"checkbox\":this.element.is(\"[type=radio]\")?this.type=\"radio\":this.element.is(\"input\")?this.type=\"input\":this.type=\"button\",this.type===\"checkbox\"||this.type===\"radio\"?(e=this.element.parents().last(),t=\"label[for='\"+this.element.attr(\"id\")+\"']\",this.buttonElement=e.find(t),this.buttonElement.length||(e=e.length?e.siblings():this.element.siblings(),this.buttonElement=e.filter(t),this.buttonElement.length||(this.buttonElement=e.find(t))),this.element.addClass(\"ui-helper-hidden-accessible\"),n=this.element.is(\":checked\"),n&&this.buttonElement.addClass(\"ui-state-active\"),this.buttonElement.prop(\"aria-pressed\",n)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass(\"ui-helper-hidden-accessible\"),this.buttonElement.removeClass(o+\" \"+u+\" \"+a).removeAttr(\"role\").removeAttr(\"aria-pressed\").html(this.buttonElement.find(\".ui-button-text\").html()),this.hasTitle||this.buttonElement.removeAttr(\"title\")},_setOption:function(e,t){this._super(e,t);if(e===\"disabled\"){t?this.element.prop(\"disabled\",!0):this.element.prop(\"disabled\",!1);return}this._resetButton()},refresh:function(){var t=this.element.is(\":disabled\");t!==this.options.disabled&&this._setOption(\"disabled\",t),this.type===\"radio\"?l(this.element[0]).each(function(){e(this).is(\":checked\")?e(this).button(\"widget\").addClass(\"ui-state-active\").attr(\"aria-pressed\",\"true\"):e(this).button(\"widget\").removeClass(\"ui-state-active\").attr(\"aria-pressed\",\"false\")}):this.type===\"checkbox\"&&(this.element.is(\":checked\")?this.buttonElement.addClass(\"ui-state-active\").attr(\"aria-pressed\",\"true\"):this.buttonElement.removeClass(\"ui-state-active\").attr(\"aria-pressed\",\"false\"))},_resetButton:function(){if(this.type===\"input\"){this.options.label&&this.element.val(this.options.label);return}var t=this.buttonElement.removeClass(a),n=e(\"<span></span>\",this.document[0]).addClass(\"ui-button-text\").html(this.options.label).appendTo(t.empty()).text(),r=this.options.icons,i=r.primary&&r.secondary,s=[];r.primary||r.secondary?(this.options.text&&s.push(\"ui-button-text-icon\"+(i?\"s\":r.primary?\"-primary\":\"-secondary\")),r.primary&&t.prepend(\"<span class='ui-button-icon-primary ui-icon \"+r.primary+\"'></span>\"),r.secondary&&t.append(\"<span class='ui-button-icon-secondary ui-icon \"+r.secondary+\"'></span>\"),this.options.text||(s.push(i?\"ui-button-icons-only\":\"ui-button-icon-only\"),this.hasTitle||t.attr(\"title\",e.trim(n)))):s.push(\"ui-button-text-only\"),t.addClass(s.join(\" \"))}}),e.widget(\"ui.buttonset\",{version:\"1.9.0\",options:{items:\"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(button)\"},_create:function(){this.element.addClass(\"ui-buttonset\")},_init:function(){this.refresh()},_setOption:function(e,t){e===\"disabled\"&&this.buttons.button(\"option\",e,t),this._super(e,t)},refresh:function(){var t=this.element.css(\"direction\")===\"rtl\";this.buttons=this.element.find(this.options.items).filter(\":ui-button\").button(\"refresh\").end().not(\":ui-button\").button().end().map(function(){return e(this).button(\"widget\")[0]}).removeClass(\"ui-corner-all ui-corner-left ui-corner-right\").filter(\":first\").addClass(t?\"ui-corner-right\":\"ui-corner-left\").end().filter(\":last\").addClass(t?\"ui-corner-left\":\"ui-corner-right\").end().end()},_destroy:function(){this.element.removeClass(\"ui-buttonset\"),this.buttons.map(function(){return e(this).button(\"widget\")[0]}).removeClass(\"ui-corner-left ui-corner-right\").end().button(\"destroy\")}})})(jQuery);(function($,undefined){function Datepicker(){this.debug=!1,this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId=\"ui-datepicker-div\",this._inlineClass=\"ui-datepicker-inline\",this._appendClass=\"ui-datepicker-append\",this._triggerClass=\"ui-datepicker-trigger\",this._dialogClass=\"ui-datepicker-dialog\",this._disableClass=\"ui-datepicker-disabled\",this._unselectableClass=\"ui-datepicker-unselectable\",this._currentClass=\"ui-datepicker-current-day\",this._dayOverClass=\"ui-datepicker-days-cell-over\",this.regional=[],this.regional[\"\"]={closeText:\"Done\",prevText:\"Prev\",nextText:\"Next\",currentText:\"Today\",monthNames:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],monthNamesShort:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],dayNames:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],dayNamesShort:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],dayNamesMin:[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],weekHeader:\"Wk\",dateFormat:\"mm/dd/yy\",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:\"\"},this._defaults={showOn:\"focus\",showAnim:\"fadeIn\",showOptions:{},defaultDate:null,appendText:\"\",buttonText:\"...\",buttonImage:\"\",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:\"c-10:c+10\",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:\"+10\",minDate:null,maxDate:null,duration:\"fast\",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:\"\",altFormat:\"\",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},$.extend(this._defaults,this.regional[\"\"]),this.dpDiv=bindHover($('<div id=\"'+this._mainDivId+'\" class=\"ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all\"></div>'))}function bindHover(e){var t=\"button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a\";return e.delegate(t,\"mouseout\",function(){$(this).removeClass(\"ui-state-hover\"),this.className.indexOf(\"ui-datepicker-prev\")!=-1&&$(this).removeClass(\"ui-datepicker-prev-hover\"),this.className.indexOf(\"ui-datepicker-next\")!=-1&&$(this).removeClass(\"ui-datepicker-next-hover\")}).delegate(t,\"mouseover\",function(){$.datepicker._isDisabledDatepicker(instActive.inline?e.parent()[0]:instActive.input[0])||($(this).parents(\".ui-datepicker-calendar\").find(\"a\").removeClass(\"ui-state-hover\"),$(this).addClass(\"ui-state-hover\"),this.className.indexOf(\"ui-datepicker-prev\")!=-1&&$(this).addClass(\"ui-datepicker-prev-hover\"),this.className.indexOf(\"ui-datepicker-next\")!=-1&&$(this).addClass(\"ui-datepicker-next-hover\"))})}function extendRemove(e,t){$.extend(e,t);for(var n in t)if(t[n]==null||t[n]==undefined)e[n]=t[n];return e}$.extend($.ui,{datepicker:{version:\"1.9.0\"}});var PROP_NAME=\"datepicker\",dpuuid=(new Date).getTime(),instActive;$.extend(Datepicker.prototype,{markerClassName:\"hasDatepicker\",maxRows:4,log:function(){this.debug&&console.log.apply(\"\",arguments)},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return extendRemove(this._defaults,e||{}),this},_attachDatepicker:function(target,settings){var inlineSettings=null;for(var attrName in this._defaults){var attrValue=target.getAttribute(\"date:\"+attrName);if(attrValue){inlineSettings=inlineSettings||{};try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}}var nodeName=target.nodeName.toLowerCase(),inline=nodeName==\"div\"||nodeName==\"span\";target.id||(this.uuid+=1,target.id=\"dp\"+this.uuid);var inst=this._newInst($(target),inline);inst.settings=$.extend({},settings||{},inlineSettings||{}),nodeName==\"input\"?this._connectDatepicker(target,inst):inline&&this._inlineDatepicker(target,inst)},_newInst:function(e,t){var n=e[0].id.replace(/([^A-Za-z0-9_-])/g,\"\\\\\\\\$1\");return{id:n,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:t,dpDiv:t?bindHover($('<div class=\"'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all\"></div>')):this.dpDiv}},_connectDatepicker:function(e,t){var n=$(e);t.append=$([]),t.trigger=$([]);if(n.hasClass(this.markerClassName))return;this._attachments(n,t),n.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind(\"setData.datepicker\",function(e,n,r){t.settings[n]=r}).bind(\"getData.datepicker\",function(e,n){return this._get(t,n)}),this._autoSize(t),$.data(e,PROP_NAME,t),t.settings.disabled&&this._disableDatepicker(e)},_attachments:function(e,t){var n=this._get(t,\"appendText\"),r=this._get(t,\"isRTL\");t.append&&t.append.remove(),n&&(t.append=$('<span class=\"'+this._appendClass+'\">'+n+\"</span>\"),e[r?\"before\":\"after\"](t.append)),e.unbind(\"focus\",this._showDatepicker),t.trigger&&t.trigger.remove();var i=this._get(t,\"showOn\");(i==\"focus\"||i==\"both\")&&e.focus(this._showDatepicker);if(i==\"button\"||i==\"both\"){var s=this._get(t,\"buttonText\"),o=this._get(t,\"buttonImage\");t.trigger=$(this._get(t,\"buttonImageOnly\")?$(\"<img/>\").addClass(this._triggerClass).attr({src:o,alt:s,title:s}):$('<button type=\"button\"></button>').addClass(this._triggerClass).html(o==\"\"?s:$(\"<img/>\").attr({src:o,alt:s,title:s}))),e[r?\"before\":\"after\"](t.trigger),t.trigger.click(function(){return $.datepicker._datepickerShowing&&$.datepicker._lastInput==e[0]?$.datepicker._hideDatepicker():$.datepicker._datepickerShowing&&$.datepicker._lastInput!=e[0]?($.datepicker._hideDatepicker(),$.datepicker._showDatepicker(e[0])):$.datepicker._showDatepicker(e[0]),!1})}},_autoSize:function(e){if(this._get(e,\"autoSize\")&&!e.inline){var t=new Date(2009,11,20),n=this._get(e,\"dateFormat\");if(n.match(/[DM]/)){var r=function(e){var t=0,n=0;for(var r=0;r<e.length;r++)e[r].length>t&&(t=e[r].length,n=r);return n};t.setMonth(r(this._get(e,n.match(/MM/)?\"monthNames\":\"monthNamesShort\"))),t.setDate(r(this._get(e,n.match(/DD/)?\"dayNames\":\"dayNamesShort\"))+20-t.getDay())}e.input.attr(\"size\",this._formatDate(e,t).length)}},_inlineDatepicker:function(e,t){var n=$(e);if(n.hasClass(this.markerClassName))return;n.addClass(this.markerClassName).append(t.dpDiv).bind(\"setData.datepicker\",function(e,n,r){t.settings[n]=r}).bind(\"getData.datepicker\",function(e,n){return this._get(t,n)}),$.data(e,PROP_NAME,t),this._setDate(t,this._getDefaultDate(t),!0),this._updateDatepicker(t),this._updateAlternate(t),t.settings.disabled&&this._disableDatepicker(e),t.dpDiv.css(\"display\",\"block\")},_dialogDatepicker:function(e,t,n,r,i){var s=this._dialogInst;if(!s){this.uuid+=1;var o=\"dp\"+this.uuid;this._dialogInput=$('<input type=\"text\" id=\"'+o+'\" style=\"position: absolute; top: -100px; width: 0px;\"/>'),this._dialogInput.keydown(this._doKeyDown),$(\"body\").append(this._dialogInput),s=this._dialogInst=this._newInst(this._dialogInput,!1),s.settings={},$.data(this._dialogInput[0],PROP_NAME,s)}extendRemove(s.settings,r||{}),t=t&&t.constructor==Date?this._formatDate(s,t):t,this._dialogInput.val(t),this._pos=i?i.length?i:[i.pageX,i.pageY]:null;if(!this._pos){var u=document.documentElement.clientWidth,a=document.documentElement.clientHeight,f=document.documentElement.scrollLeft||document.body.scrollLeft,l=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[u/2-100+f,a/2-150+l]}return this._dialogInput.css(\"left\",this._pos[0]+20+\"px\").css(\"top\",this._pos[1]+\"px\"),s.settings.onSelect=n,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),$.blockUI&&$.blockUI(this.dpDiv),$.data(this._dialogInput[0],PROP_NAME,s),this},_destroyDatepicker:function(e){var t=$(e),n=$.data(e,PROP_NAME);if(!t.hasClass(this.markerClassName))return;var r=e.nodeName.toLowerCase();$.removeData(e,PROP_NAME),r==\"input\"?(n.append.remove(),n.trigger.remove(),t.removeClass(this.markerClassName).unbind(\"focus\",this._showDatepicker).unbind(\"keydown\",this._doKeyDown).unbind(\"keypress\",this._doKeyPress).unbind(\"keyup\",this._doKeyUp)):(r==\"div\"||r==\"span\")&&t.removeClass(this.markerClassName).empty()},_enableDatepicker:function(e){var t=$(e),n=$.data(e,PROP_NAME);if(!t.hasClass(this.markerClassName))return;var r=e.nodeName.toLowerCase();if(r==\"input\")e.disabled=!1,n.trigger.filter(\"button\").each(function(){this.disabled=!1}).end().filter(\"img\").css({opacity:\"1.0\",cursor:\"\"});else if(r==\"div\"||r==\"span\"){var i=t.children(\".\"+this._inlineClass);i.children().removeClass(\"ui-state-disabled\"),i.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").prop(\"disabled\",!1)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t})},_disableDatepicker:function(e){var t=$(e),n=$.data(e,PROP_NAME);if(!t.hasClass(this.markerClassName))return;var r=e.nodeName.toLowerCase();if(r==\"input\")e.disabled=!0,n.trigger.filter(\"button\").each(function(){this.disabled=!0}).end().filter(\"img\").css({opacity:\"0.5\",cursor:\"default\"});else if(r==\"div\"||r==\"span\"){var i=t.children(\".\"+this._inlineClass);i.children().addClass(\"ui-state-disabled\"),i.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").prop(\"disabled\",!0)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t}),this._disabledInputs[this._disabledInputs.length]=e},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;t<this._disabledInputs.length;t++)if(this._disabledInputs[t]==e)return!0;return!1},_getInst:function(e){try{return $.data(e,PROP_NAME)}catch(t){throw\"Missing instance data for this datepicker\"}},_optionDatepicker:function(e,t,n){var r=this._getInst(e);if(arguments.length==2&&typeof t==\"string\")return t==\"defaults\"?$.extend({},$.datepicker._defaults):r?t==\"all\"?$.extend({},r.settings):this._get(r,t):null;var i=t||{};typeof t==\"string\"&&(i={},i[t]=n);if(r){this._curInst==r&&this._hideDatepicker();var s=this._getDateDatepicker(e,!0),o=this._getMinMaxDate(r,\"min\"),u=this._getMinMaxDate(r,\"max\");extendRemove(r.settings,i),o!==null&&i.dateFormat!==undefined&&i.minDate===undefined&&(r.settings.minDate=this._formatDate(r,o)),u!==null&&i.dateFormat!==undefined&&i.maxDate===undefined&&(r.settings.maxDate=this._formatDate(r,u)),this._attachments($(e),r),this._autoSize(r),this._setDate(r,s),this._updateAlternate(r),this._updateDatepicker(r)}},_changeDatepicker:function(e,t,n){this._optionDatepicker(e,t,n)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var n=this._getInst(e);n&&(this._setDate(n,t),this._updateDatepicker(n),this._updateAlternate(n))},_getDateDatepicker:function(e,t){var n=this._getInst(e);return n&&!n.inline&&this._setDateFromField(n,t),n?this._getDate(n):null},_doKeyDown:function(e){var t=$.datepicker._getInst(e.target),n=!0,r=t.dpDiv.is(\".ui-datepicker-rtl\");t._keyEvent=!0;if($.datepicker._datepickerShowing)switch(e.keyCode){case 9:$.datepicker._hideDatepicker(),n=!1;break;case 13:var i=$(\"td.\"+$.datepicker._dayOverClass+\":not(.\"+$.datepicker._currentClass+\")\",t.dpDiv);i[0]&&$.datepicker._selectDay(e.target,t.selectedMonth,t.selectedYear,i[0]);var s=$.datepicker._get(t,\"onSelect\");if(s){var o=$.datepicker._formatDate(t);s.apply(t.input?t.input[0]:null,[o,t])}else $.datepicker._hideDatepicker();return!1;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,\"stepBigMonths\"):-$.datepicker._get(t,\"stepMonths\"),\"M\");break;case 34:$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,\"stepBigMonths\"):+$.datepicker._get(t,\"stepMonths\"),\"M\");break;case 35:(e.ctrlKey||e.metaKey)&&$.datepicker._clearDate(e.target),n=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&$.datepicker._gotoToday(e.target),n=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,r?1:-1,\"D\"),n=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,\"stepBigMonths\"):-$.datepicker._get(t,\"stepMonths\"),\"M\");break;case 38:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,-7,\"D\"),n=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,r?-1:1,\"D\"),n=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,\"stepBigMonths\"):+$.datepicker._get(t,\"stepMonths\"),\"M\");break;case 40:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,7,\"D\"),n=e.ctrlKey||e.metaKey;break;default:n=!1}else e.keyCode==36&&e.ctrlKey?$.datepicker._showDatepicker(this):n=!1;n&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var t=$.datepicker._getInst(e.target);if($.datepicker._get(t,\"constrainInput\")){var n=$.datepicker._possibleChars($.datepicker._get(t,\"dateFormat\")),r=String.fromCharCode(e.charCode==undefined?e.keyCode:e.charCode);return e.ctrlKey||e.metaKey||r<\" \"||!n||n.indexOf(r)>-1}},_doKeyUp:function(e){var t=$.datepicker._getInst(e.target);if(t.input.val()!=t.lastVal)try{var n=$.datepicker.parseDate($.datepicker._get(t,\"dateFormat\"),t.input?t.input.val():null,$.datepicker._getFormatConfig(t));n&&($.datepicker._setDateFromField(t),$.datepicker._updateAlternate(t),$.datepicker._updateDatepicker(t))}catch(r){$.datepicker.log(r)}return!0},_showDatepicker:function(e){e=e.target||e,e.nodeName.toLowerCase()!=\"input\"&&(e=$(\"input\",e.parentNode)[0]);if($.datepicker._isDisabledDatepicker(e)||$.datepicker._lastInput==e)return;var t=$.datepicker._getInst(e);$.datepicker._curInst&&$.datepicker._curInst!=t&&($.datepicker._curInst.dpDiv.stop(!0,!0),t&&$.datepicker._datepickerShowing&&$.datepicker._hideDatepicker($.datepicker._curInst.input[0]));var n=$.datepicker._get(t,\"beforeShow\"),r=n?n.apply(e,[e,t]):{};if(r===!1)return;extendRemove(t.settings,r),t.lastVal=null,$.datepicker._lastInput=e,$.datepicker._setDateFromField(t),$.datepicker._inDialog&&(e.value=\"\"),$.datepicker._pos||($.datepicker._pos=$.datepicker._findPos(e),$.datepicker._pos[1]+=e.offsetHeight);var i=!1;$(e).parents().each(function(){return i|=$(this).css(\"position\")==\"fixed\",!i});var s={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};$.datepicker._pos=null,t.dpDiv.empty(),t.dpDiv.css({position:\"absolute\",display:\"block\",top:\"-1000px\"}),$.datepicker._updateDatepicker(t),s=$.datepicker._checkOffset(t,s,i),t.dpDiv.css({position:$.datepicker._inDialog&&$.blockUI?\"static\":i?\"fixed\":\"absolute\",display:\"none\",left:s.left+\"px\",top:s.top+\"px\"});if(!t.inline){var o=$.datepicker._get(t,\"showAnim\"),u=$.datepicker._get(t,\"duration\"),a=function(){var e=t.dpDiv.find(\"iframe.ui-datepicker-cover\");if(!!e.length){var n=$.datepicker._getBorders(t.dpDiv);e.css({left:-n[0],top:-n[1],width:t.dpDiv.outerWidth(),height:t.dpDiv.outerHeight()})}};t.dpDiv.zIndex($(e).zIndex()+1),$.datepicker._datepickerShowing=!0,$.effects&&($.effects.effect[o]||$.effects[o])?t.dpDiv.show(o,$.datepicker._get(t,\"showOptions\"),u,a):t.dpDiv[o||\"show\"](o?u:null,a),(!o||!u)&&a(),t.input.is(\":visible\")&&!t.input.is(\":disabled\")&&t.input.focus(),$.datepicker._curInst=t}},_updateDatepicker:function(e){this.maxRows=4;var t=$.datepicker._getBorders(e.dpDiv);instActive=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var n=e.dpDiv.find(\"iframe.ui-datepicker-cover\");!n.length||n.css({left:-t[0],top:-t[1],width:e.dpDiv.outerWidth(),height:e.dpDiv.outerHeight()}),e.dpDiv.find(\".\"+this._dayOverClass+\" a\").mouseover();var r=this._getNumberOfMonths(e),i=r[1],s=17;e.dpDiv.removeClass(\"ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4\").width(\"\"),i>1&&e.dpDiv.addClass(\"ui-datepicker-multi-\"+i).css(\"width\",s*i+\"em\"),e.dpDiv[(r[0]!=1||r[1]!=1?\"add\":\"remove\")+\"Class\"](\"ui-datepicker-multi\"),e.dpDiv[(this._get(e,\"isRTL\")?\"add\":\"remove\")+\"Class\"](\"ui-datepicker-rtl\"),e==$.datepicker._curInst&&$.datepicker._datepickerShowing&&e.input&&e.input.is(\":visible\")&&!e.input.is(\":disabled\")&&e.input[0]!=document.activeElement&&e.input.focus();if(e.yearshtml){var o=e.yearshtml;setTimeout(function(){o===e.yearshtml&&e.yearshtml&&e.dpDiv.find(\"select.ui-datepicker-year:first\").replaceWith(e.yearshtml),o=e.yearshtml=null},0)}},_getBorders:function(e){var t=function(e){return{thin:1,medium:2,thick:3}[e]||e};return[parseFloat(t(e.css(\"border-left-width\"))),parseFloat(t(e.css(\"border-top-width\")))]},_checkOffset:function(e,t,n){var r=e.dpDiv.outerWidth(),i=e.dpDiv.outerHeight(),s=e.input?e.input.outerWidth():0,o=e.input?e.input.outerHeight():0,u=document.documentElement.clientWidth+(n?0:$(document).scrollLeft()),a=document.documentElement.clientHeight+(n?0:$(document).scrollTop());return t.left-=this._get(e,\"isRTL\")?r-s:0,t.left-=n&&t.left==e.input.offset().left?$(document).scrollLeft():0,t.top-=n&&t.top==e.input.offset().top+o?$(document).scrollTop():0,t.left-=Math.min(t.left,t.left+r>u&&u>r?Math.abs(t.left+r-u):0),t.top-=Math.min(t.top,t.top+i>a&&a>i?Math.abs(i+o):0),t},_findPos:function(e){var t=this._getInst(e),n=this._get(t,\"isRTL\");while(e&&(e.type==\"hidden\"||e.nodeType!=1||$.expr.filters.hidden(e)))e=e[n?\"previousSibling\":\"nextSibling\"];var r=$(e).offset();return[r.left,r.top]},_hideDatepicker:function(e){var t=this._curInst;if(!t||e&&t!=$.data(e,PROP_NAME))return;if(this._datepickerShowing){var n=this._get(t,\"showAnim\"),r=this._get(t,\"duration\"),i=function(){$.datepicker._tidyDialog(t)};$.effects&&($.effects.effect[n]||$.effects[n])?t.dpDiv.hide(n,$.datepicker._get(t,\"showOptions\"),r,i):t.dpDiv[n==\"slideDown\"?\"slideUp\":n==\"fadeIn\"?\"fadeOut\":\"hide\"](n?r:null,i),n||i(),this._datepickerShowing=!1;var s=this._get(t,\"onClose\");s&&s.apply(t.input?t.input[0]:null,[t.input?t.input.val():\"\",t]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:\"absolute\",left:\"0\",top:\"-100px\"}),$.blockUI&&($.unblockUI(),$(\"body\").append(this.dpDiv))),this._inDialog=!1}},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).unbind(\".ui-datepicker-calendar\")},_checkExternalClick:function(e){if(!$.datepicker._curInst)return;var t=$(e.target),n=$.datepicker._getInst(t[0]);(t[0].id!=$.datepicker._mainDivId&&t.parents(\"#\"+$.datepicker._mainDivId).length==0&&!t.hasClass($.datepicker.markerClassName)&&!t.closest(\".\"+$.datepicker._triggerClass).length&&$.datepicker._datepickerShowing&&(!$.datepicker._inDialog||!$.blockUI)||t.hasClass($.datepicker.markerClassName)&&$.datepicker._curInst!=n)&&$.datepicker._hideDatepicker()},_adjustDate:function(e,t,n){var r=$(e),i=this._getInst(r[0]);if(this._isDisabledDatepicker(r[0]))return;this._adjustInstDate(i,t+(n==\"M\"?this._get(i,\"showCurrentAtPos\"):0),n),this._updateDatepicker(i)},_gotoToday:function(e){var t=$(e),n=this._getInst(t[0]);if(this._get(n,\"gotoCurrent\")&&n.currentDay)n.selectedDay=n.currentDay,n.drawMonth=n.selectedMonth=n.currentMonth,n.drawYear=n.selectedYear=n.currentYear;else{var r=new Date;n.selectedDay=r.getDate(),n.drawMonth=n.selectedMonth=r.getMonth(),n.drawYear=n.selectedYear=r.getFullYear()}this._notifyChange(n),this._adjustDate(t)},_selectMonthYear:function(e,t,n){var r=$(e),i=this._getInst(r[0]);i[\"selected\"+(n==\"M\"?\"Month\":\"Year\")]=i[\"draw\"+(n==\"M\"?\"Month\":\"Year\")]=parseInt(t.options[t.selectedIndex].value,10),this._notifyChange(i),this._adjustDate(r)},_selectDay:function(e,t,n,r){var i=$(e);if($(r).hasClass(this._unselectableClass)||this._isDisabledDatepicker(i[0]))return;var s=this._getInst(i[0]);s.selectedDay=s.currentDay=$(\"a\",r).html(),s.selectedMonth=s.currentMonth=t,s.selectedYear=s.currentYear=n,this._selectDate(e,this._formatDate(s,s.currentDay,s.currentMonth,s.currentYear))},_clearDate:function(e){var t=$(e),n=this._getInst(t[0]);this._selectDate(t,\"\")},_selectDate:function(e,t){var n=$(e),r=this._getInst(n[0]);t=t!=null?t:this._formatDate(r),r.input&&r.input.val(t),this._updateAlternate(r);var i=this._get(r,\"onSelect\");i?i.apply(r.input?r.input[0]:null,[t,r]):r.input&&r.input.trigger(\"change\"),r.inline?this._updateDatepicker(r):(this._hideDatepicker(),this._lastInput=r.input[0],typeof r.input[0]!=\"object\"&&r.input.focus(),this._lastInput=null)},_updateAlternate:function(e){var t=this._get(e,\"altField\");if(t){var n=this._get(e,\"altFormat\")||this._get(e,\"dateFormat\"),r=this._getDate(e),i=this.formatDate(n,r,this._getFormatConfig(e));$(t).each(function(){$(this).val(i)})}},noWeekends:function(e){var t=e.getDay();return[t>0&&t<6,\"\"]},iso8601Week:function(e){var t=new Date(e.getTime());t.setDate(t.getDate()+4-(t.getDay()||7));var n=t.getTime();return t.setMonth(0),t.setDate(1),Math.floor(Math.round((n-t)/864e5)/7)+1},parseDate:function(e,t,n){if(e==null||t==null)throw\"Invalid arguments\";t=typeof t==\"object\"?t.toString():t+\"\";if(t==\"\")return null;var r=(n?n.shortYearCutoff:null)||this._defaults.shortYearCutoff;r=typeof r!=\"string\"?r:(new Date).getFullYear()%100+parseInt(r,10);var i=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,s=(n?n.dayNames:null)||this._defaults.dayNames,o=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,u=(n?n.monthNames:null)||this._defaults.monthNames,a=-1,f=-1,l=-1,c=-1,h=!1,p=function(t){var n=y+1<e.length&&e.charAt(y+1)==t;return n&&y++,n},d=function(e){var n=p(e),r=e==\"@\"?14:e==\"!\"?20:e==\"y\"&&n?4:e==\"o\"?3:2,i=new RegExp(\"^\\\\d{1,\"+r+\"}\"),s=t.substring(g).match(i);if(!s)throw\"Missing number at position \"+g;return g+=s[0].length,parseInt(s[0],10)},v=function(e,n,r){var i=$.map(p(e)?r:n,function(e,t){return[[t,e]]}).sort(function(e,t){return-(e[1].length-t[1].length)}),s=-1;$.each(i,function(e,n){var r=n[1];if(t.substr(g,r.length).toLowerCase()==r.toLowerCase())return s=n[0],g+=r.length,!1});if(s!=-1)return s+1;throw\"Unknown name at position \"+g},m=function(){if(t.charAt(g)!=e.charAt(y))throw\"Unexpected literal at position \"+g;g++},g=0;for(var y=0;y<e.length;y++)if(h)e.charAt(y)==\"'\"&&!p(\"'\")?h=!1:m();else switch(e.charAt(y)){case\"d\":l=d(\"d\");break;case\"D\":v(\"D\",i,s);break;case\"o\":c=d(\"o\");break;case\"m\":f=d(\"m\");break;case\"M\":f=v(\"M\",o,u);break;case\"y\":a=d(\"y\");break;case\"@\":var b=new Date(d(\"@\"));a=b.getFullYear(),f=b.getMonth()+1,l=b.getDate();break;case\"!\":var b=new Date((d(\"!\")-this._ticksTo1970)/1e4);a=b.getFullYear(),f=b.getMonth()+1,l=b.getDate();break;case\"'\":p(\"'\")?m():h=!0;break;default:m()}if(g<t.length){var w=t.substr(g);if(!/^\\s+/.test(w))throw\"Extra/unparsed characters found in date: \"+w}a==-1?a=(new Date).getFullYear():a<100&&(a+=(new Date).getFullYear()-(new Date).getFullYear()%100+(a<=r?0:-100));if(c>-1){f=1,l=c;do{var E=this._getDaysInMonth(a,f-1);if(l<=E)break;f++,l-=E}while(!0)}var b=this._daylightSavingAdjust(new Date(a,f-1,l));if(b.getFullYear()!=a||b.getMonth()+1!=f||b.getDate()!=l)throw\"Invalid date\";return b},ATOM:\"yy-mm-dd\",COOKIE:\"D, dd M yy\",ISO_8601:\"yy-mm-dd\",RFC_822:\"D, d M y\",RFC_850:\"DD, dd-M-y\",RFC_1036:\"D, d M y\",RFC_1123:\"D, d M yy\",RFC_2822:\"D, d M yy\",RSS:\"D, d M y\",TICKS:\"!\",TIMESTAMP:\"@\",W3C:\"yy-mm-dd\",_ticksTo1970:(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*24*60*60*1e7,formatDate:function(e,t,n){if(!t)return\"\";var r=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,i=(n?n.dayNames:null)||this._defaults.dayNames,s=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,o=(n?n.monthNames:null)||this._defaults.monthNames,u=function(t){var n=h+1<e.length&&e.charAt(h+1)==t;return n&&h++,n},a=function(e,t,n){var r=\"\"+t;if(u(e))while(r.length<n)r=\"0\"+r;return r},f=function(e,t,n,r){return u(e)?r[t]:n[t]},l=\"\",c=!1;if(t)for(var h=0;h<e.length;h++)if(c)e.charAt(h)==\"'\"&&!u(\"'\")?c=!1:l+=e.charAt(h);else switch(e.charAt(h)){case\"d\":l+=a(\"d\",t.getDate(),2);break;case\"D\":l+=f(\"D\",t.getDay(),r,i);break;case\"o\":l+=a(\"o\",Math.round(((new Date(t.getFullYear(),t.getMonth(),t.getDate())).getTime()-(new Date(t.getFullYear(),0,0)).getTime())/864e5),3);break;case\"m\":l+=a(\"m\",t.getMonth()+1,2);break;case\"M\":l+=f(\"M\",t.getMonth(),s,o);break;case\"y\":l+=u(\"y\")?t.getFullYear():(t.getYear()%100<10?\"0\":\"\")+t.getYear()%100;break;case\"@\":l+=t.getTime();break;case\"!\":l+=t.getTime()*1e4+this._ticksTo1970;break;case\"'\":u(\"'\")?l+=\"'\":c=!0;break;default:l+=e.charAt(h)}return l},_possibleChars:function(e){var t=\"\",n=!1,r=function(t){var n=i+1<e.length&&e.charAt(i+1)==t;return n&&i++,n};for(var i=0;i<e.length;i++)if(n)e.charAt(i)==\"'\"&&!r(\"'\")?n=!1:t+=e.charAt(i);else switch(e.charAt(i)){case\"d\":case\"m\":case\"y\":case\"@\":t+=\"0123456789\";break;case\"D\":case\"M\":return null;case\"'\":r(\"'\")?t+=\"'\":n=!0;break;default:t+=e.charAt(i)}return t},_get:function(e,t){return e.settings[t]!==undefined?e.settings[t]:this._defaults[t]},_setDateFromField:function(e,t){if(e.input.val()==e.lastVal)return;var n=this._get(e,\"dateFormat\"),r=e.lastVal=e.input?e.input.val():null,i,s;i=s=this._getDefaultDate(e);var o=this._getFormatConfig(e);try{i=this.parseDate(n,r,o)||s}catch(u){this.log(u),r=t?\"\":r}e.selectedDay=i.getDate(),e.drawMonth=e.selectedMonth=i.getMonth(),e.drawYear=e.selectedYear=i.getFullYear(),e.currentDay=r?i.getDate():0,e.currentMonth=r?i.getMonth():0,e.currentYear=r?i.getFullYear():0,this._adjustInstDate(e)},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,\"defaultDate\"),new Date))},_determineDate:function(e,t,n){var r=function(e){var t=new Date;return t.setDate(t.getDate()+e),t},i=function(t){try{return $.datepicker.parseDate($.datepicker._get(e,\"dateFormat\"),t,$.datepicker._getFormatConfig(e))}catch(n){}var r=(t.toLowerCase().match(/^c/)?$.datepicker._getDate(e):null)||new Date,i=r.getFullYear(),s=r.getMonth(),o=r.getDate(),u=/([+-]?[0-9]+)\\s*(d|D|w|W|m|M|y|Y)?/g,a=u.exec(t);while(a){switch(a[2]||\"d\"){case\"d\":case\"D\":o+=parseInt(a[1],10);break;case\"w\":case\"W\":o+=parseInt(a[1],10)*7;break;case\"m\":case\"M\":s+=parseInt(a[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(i,s));break;case\"y\":case\"Y\":i+=parseInt(a[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(i,s))}a=u.exec(t)}return new Date(i,s,o)},s=t==null||t===\"\"?n:typeof t==\"string\"?i(t):typeof t==\"number\"?isNaN(t)?n:r(t):new Date(t.getTime());return s=s&&s.toString()==\"Invalid Date\"?n:s,s&&(s.setHours(0),s.setMinutes(0),s.setSeconds(0),s.setMilliseconds(0)),this._daylightSavingAdjust(s)},_daylightSavingAdjust:function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},_setDate:function(e,t,n){var r=!t,i=e.selectedMonth,s=e.selectedYear,o=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=o.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=o.getMonth(),e.drawYear=e.selectedYear=e.currentYear=o.getFullYear(),(i!=e.selectedMonth||s!=e.selectedYear)&&!n&&this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(r?\"\":this._formatDate(e))},_getDate:function(e){var t=!e.currentYear||e.input&&e.input.val()==\"\"?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return t},_attachHandlers:function(e){var t=this._get(e,\"stepMonths\"),n=\"#\"+e.id.replace(/\\\\\\\\/g,\"\\\\\");e.dpDiv.find(\"[data-handler]\").map(function(){var e={prev:function(){window[\"DP_jQuery_\"+dpuuid].datepicker._adjustDate(n,-t,\"M\")},next:function(){window[\"DP_jQuery_\"+dpuuid].datepicker._adjustDate(n,+t,\"M\")},hide:function(){window[\"DP_jQuery_\"+dpuuid].datepicker._hideDatepicker()},today:function(){window[\"DP_jQuery_\"+dpuuid].datepicker._gotoToday(n)},selectDay:function(){return window[\"DP_jQuery_\"+dpuuid].datepicker._selectDay(n,+this.getAttribute(\"data-month\"),+this.getAttribute(\"data-year\"),this),!1},selectMonth:function(){return window[\"DP_jQuery_\"+dpuuid].datepicker._selectMonthYear(n,this,\"M\"),!1},selectYear:function(){return window[\"DP_jQuery_\"+dpuuid].datepicker._selectMonthYear(n,this,\"Y\"),!1}};$(this).bind(this.getAttribute(\"data-event\"),e[this.getAttribute(\"data-handler\")])})},_generateHTML:function(e){var t=new Date;t=this._daylightSavingAdjust(new Date(t.getFullYear(),t.getMonth(),t.getDate()));var n=this._get(e,\"isRTL\"),r=this._get(e,\"showButtonPanel\"),i=this._get(e,\"hideIfNoPrevNext\"),s=this._get(e,\"navigationAsDateFormat\"),o=this._getNumberOfMonths(e),u=this._get(e,\"showCurrentAtPos\"),a=this._get(e,\"stepMonths\"),f=o[0]!=1||o[1]!=1,l=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),c=this._getMinMaxDate(e,\"min\"),h=this._getMinMaxDate(e,\"max\"),p=e.drawMonth-u,d=e.drawYear;p<0&&(p+=12,d--);if(h){var v=this._daylightSavingAdjust(new Date(h.getFullYear(),h.getMonth()-o[0]*o[1]+1,h.getDate()));v=c&&v<c?c:v;while(this._daylightSavingAdjust(new Date(d,p,1))>v)p--,p<0&&(p=11,d--)}e.drawMonth=p,e.drawYear=d;var m=this._get(e,\"prevText\");m=s?this.formatDate(m,this._daylightSavingAdjust(new Date(d,p-a,1)),this._getFormatConfig(e)):m;var g=this._canAdjustMonth(e,-1,d,p)?'<a class=\"ui-datepicker-prev ui-corner-all\" data-handler=\"prev\" data-event=\"click\" title=\"'+m+'\"><span class=\"ui-icon ui-icon-circle-triangle-'+(n?\"e\":\"w\")+'\">'+m+\"</span></a>\":i?\"\":'<a class=\"ui-datepicker-prev ui-corner-all ui-state-disabled\" title=\"'+m+'\"><span class=\"ui-icon ui-icon-circle-triangle-'+(n?\"e\":\"w\")+'\">'+m+\"</span></a>\",y=this._get(e,\"nextText\");y=s?this.formatDate(y,this._daylightSavingAdjust(new Date(d,p+a,1)),this._getFormatConfig(e)):y;var b=this._canAdjustMonth(e,1,d,p)?'<a class=\"ui-datepicker-next ui-corner-all\" data-handler=\"next\" data-event=\"click\" title=\"'+y+'\"><span class=\"ui-icon ui-icon-circle-triangle-'+(n?\"w\":\"e\")+'\">'+y+\"</span></a>\":i?\"\":'<a class=\"ui-datepicker-next ui-corner-all ui-state-disabled\" title=\"'+y+'\"><span class=\"ui-icon ui-icon-circle-triangle-'+(n?\"w\":\"e\")+'\">'+y+\"</span></a>\",w=this._get(e,\"currentText\"),E=this._get(e,\"gotoCurrent\")&&e.currentDay?l:t;w=s?this.formatDate(w,E,this._getFormatConfig(e)):w;var S=e.inline?\"\":'<button type=\"button\" class=\"ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all\" data-handler=\"hide\" data-event=\"click\">'+this._get(e,\"closeText\")+\"</button>\",x=r?'<div class=\"ui-datepicker-buttonpane ui-widget-content\">'+(n?S:\"\")+(this._isInRange(e,E)?'<button type=\"button\" class=\"ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all\" data-handler=\"today\" data-event=\"click\">'+w+\"</button>\":\"\")+(n?\"\":S)+\"</div>\":\"\",T=parseInt(this._get(e,\"firstDay\"),10);T=isNaN(T)?0:T;var N=this._get(e,\"showWeek\"),C=this._get(e,\"dayNames\"),k=this._get(e,\"dayNamesShort\"),L=this._get(e,\"dayNamesMin\"),A=this._get(e,\"monthNames\"),O=this._get(e,\"monthNamesShort\"),M=this._get(e,\"beforeShowDay\"),_=this._get(e,\"showOtherMonths\"),D=this._get(e,\"selectOtherMonths\"),P=this._get(e,\"calculateWeek\")||this.iso8601Week,H=this._getDefaultDate(e),B=\"\";for(var j=0;j<o[0];j++){var F=\"\";this.maxRows=4;for(var I=0;I<o[1];I++){var q=this._daylightSavingAdjust(new Date(d,p,e.selectedDay)),R=\" ui-corner-all\",U=\"\";if(f){U+='<div class=\"ui-datepicker-group';if(o[1]>1)switch(I){case 0:U+=\" ui-datepicker-group-first\",R=\" ui-corner-\"+(n?\"right\":\"left\");break;case o[1]-1:U+=\" ui-datepicker-group-last\",R=\" ui-corner-\"+(n?\"left\":\"right\");break;default:U+=\" ui-datepicker-group-middle\",R=\"\"}U+='\">'}U+='<div class=\"ui-datepicker-header ui-widget-header ui-helper-clearfix'+R+'\">'+(/all|left/.test(R)&&j==0?n?b:g:\"\")+(/all|right/.test(R)&&j==0?n?g:b:\"\")+this._generateMonthYearHeader(e,p,d,c,h,j>0||I>0,A,O)+'</div><table class=\"ui-datepicker-calendar\"><thead>'+\"<tr>\";var z=N?'<th class=\"ui-datepicker-week-col\">'+this._get(e,\"weekHeader\")+\"</th>\":\"\";for(var W=0;W<7;W++){var X=(W+T)%7;z+=\"<th\"+((W+T+6)%7>=5?' class=\"ui-datepicker-week-end\"':\"\")+\">\"+'<span title=\"'+C[X]+'\">'+L[X]+\"</span></th>\"}U+=z+\"</tr></thead><tbody>\";var V=this._getDaysInMonth(d,p);d==e.selectedYear&&p==e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,V));var J=(this._getFirstDayOfMonth(d,p)-T+7)%7,K=Math.ceil((J+V)/7),Q=f?this.maxRows>K?this.maxRows:K:K;this.maxRows=Q;var G=this._daylightSavingAdjust(new Date(d,p,1-J));for(var Y=0;Y<Q;Y++){U+=\"<tr>\";var Z=N?'<td class=\"ui-datepicker-week-col\">'+this._get(e,\"calculateWeek\")(G)+\"</td>\":\"\";for(var W=0;W<7;W++){var et=M?M.apply(e.input?e.input[0]:null,[G]):[!0,\"\"],tt=G.getMonth()!=p,nt=tt&&!D||!et[0]||c&&G<c||h&&G>h;Z+='<td class=\"'+((W+T+6)%7>=5?\" ui-datepicker-week-end\":\"\")+(tt?\" ui-datepicker-other-month\":\"\")+(G.getTime()==q.getTime()&&p==e.selectedMonth&&e._keyEvent||H.getTime()==G.getTime()&&H.getTime()==q.getTime()?\" \"+this._dayOverClass:\"\")+(nt?\" \"+this._unselectableClass+\" ui-state-disabled\":\"\")+(tt&&!_?\"\":\" \"+et[1]+(G.getTime()==l.getTime()?\" \"+this._currentClass:\"\")+(G.getTime()==t.getTime()?\" ui-datepicker-today\":\"\"))+'\"'+((!tt||_)&&et[2]?' title=\"'+et[2]+'\"':\"\")+(nt?\"\":' data-handler=\"selectDay\" data-event=\"click\" data-month=\"'+G.getMonth()+'\" data-year=\"'+G.getFullYear()+'\"')+\">\"+(tt&&!_?\"&#xa0;\":nt?'<span class=\"ui-state-default\">'+G.getDate()+\"</span>\":'<a class=\"ui-state-default'+(G.getTime()==t.getTime()?\" ui-state-highlight\":\"\")+(G.getTime()==l.getTime()?\" ui-state-active\":\"\")+(tt?\" ui-priority-secondary\":\"\")+'\" href=\"#\">'+G.getDate()+\"</a>\")+\"</td>\",G.setDate(G.getDate()+1),G=this._daylightSavingAdjust(G)}U+=Z+\"</tr>\"}p++,p>11&&(p=0,d++),U+=\"</tbody></table>\"+(f?\"</div>\"+(o[0]>0&&I==o[1]-1?'<div class=\"ui-datepicker-row-break\"></div>':\"\"):\"\"),F+=U}B+=F}return B+=x+($.browser.msie&&parseInt($.browser.version,10)<7&&!e.inline?'<iframe src=\"javascript:false;\" class=\"ui-datepicker-cover\" frameborder=\"0\"></iframe>':\"\"),e._keyEvent=!1,B},_generateMonthYearHeader:function(e,t,n,r,i,s,o,u){var a=this._get(e,\"changeMonth\"),f=this._get(e,\"changeYear\"),l=this._get(e,\"showMonthAfterYear\"),c='<div class=\"ui-datepicker-title\">',h=\"\";if(s||!a)h+='<span class=\"ui-datepicker-month\">'+o[t]+\"</span>\";else{var p=r&&r.getFullYear()==n,d=i&&i.getFullYear()==n;h+='<select class=\"ui-datepicker-month\" data-handler=\"selectMonth\" data-event=\"change\">';for(var v=0;v<12;v++)(!p||v>=r.getMonth())&&(!d||v<=i.getMonth())&&(h+='<option value=\"'+v+'\"'+(v==t?' selected=\"selected\"':\"\")+\">\"+u[v]+\"</option>\");h+=\"</select>\"}l||(c+=h+(s||!a||!f?\"&#xa0;\":\"\"));if(!e.yearshtml){e.yearshtml=\"\";if(s||!f)c+='<span class=\"ui-datepicker-year\">'+n+\"</span>\";else{var m=this._get(e,\"yearRange\").split(\":\"),g=(new Date).getFullYear(),y=function(e){var t=e.match(/c[+-].*/)?n+parseInt(e.substring(1),10):e.match(/[+-].*/)?g+parseInt(e,10):parseInt(e,10);return isNaN(t)?g:t},b=y(m[0]),w=Math.max(b,y(m[1]||\"\"));b=r?Math.max(b,r.getFullYear()):b,w=i?Math.min(w,i.getFullYear()):w,e.yearshtml+='<select class=\"ui-datepicker-year\" data-handler=\"selectYear\" data-event=\"change\">';for(;b<=w;b++)e.yearshtml+='<option value=\"'+b+'\"'+(b==n?' selected=\"selected\"':\"\")+\">\"+b+\"</option>\";e.yearshtml+=\"</select>\",c+=e.yearshtml,e.yearshtml=null}}return c+=this._get(e,\"yearSuffix\"),l&&(c+=(s||!a||!f?\"&#xa0;\":\"\")+h),c+=\"</div>\",c},_adjustInstDate:function(e,t,n){var r=e.drawYear+(n==\"Y\"?t:0),i=e.drawMonth+(n==\"M\"?t:0),s=Math.min(e.selectedDay,this._getDaysInMonth(r,i))+(n==\"D\"?t:0),o=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(r,i,s)));e.selectedDay=o.getDate(),e.drawMonth=e.selectedMonth=o.getMonth(),e.drawYear=e.selectedYear=o.getFullYear(),(n==\"M\"||n==\"Y\")&&this._notifyChange(e)},_restrictMinMax:function(e,t){var n=this._getMinMaxDate(e,\"min\"),r=this._getMinMaxDate(e,\"max\"),i=n&&t<n?n:t;return i=r&&i>r?r:i,i},_notifyChange:function(e){var t=this._get(e,\"onChangeMonthYear\");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,\"numberOfMonths\");return t==null?[1,1]:typeof t==\"number\"?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+\"Date\"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return(new Date(e,t,1)).getDay()},_canAdjustMonth:function(e,t,n,r){var i=this._getNumberOfMonths(e),s=this._daylightSavingAdjust(new Date(n,r+(t<0?t:i[0]*i[1]),1));return t<0&&s.setDate(this._getDaysInMonth(s.getFullYear(),s.getMonth())),this._isInRange(e,s)},_isInRange:function(e,t){var n=this._getMinMaxDate(e,\"min\"),r=this._getMinMaxDate(e,\"max\");return(!n||t.getTime()>=n.getTime())&&(!r||t.getTime()<=r.getTime())},_getFormatConfig:function(e){var t=this._get(e,\"shortYearCutoff\");return t=typeof t!=\"string\"?t:(new Date).getFullYear()%100+parseInt(t,10),{shortYearCutoff:t,dayNamesShort:this._get(e,\"dayNamesShort\"),dayNames:this._get(e,\"dayNames\"),monthNamesShort:this._get(e,\"monthNamesShort\"),monthNames:this._get(e,\"monthNames\")}},_formatDate:function(e,t,n,r){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var i=t?typeof t==\"object\"?t:this._daylightSavingAdjust(new Date(r,n,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,\"dateFormat\"),i,this._getFormatConfig(e))}}),$.fn.datepicker=function(e){if(!this.length)return this;$.datepicker.initialized||($(document).mousedown($.datepicker._checkExternalClick).find(document.body).append($.datepicker.dpDiv),$.datepicker.initialized=!0);var t=Array.prototype.slice.call(arguments,1);return typeof e!=\"string\"||e!=\"isDisabled\"&&e!=\"getDate\"&&e!=\"widget\"?e==\"option\"&&arguments.length==2&&typeof arguments[1]==\"string\"?$.datepicker[\"_\"+e+\"Datepicker\"].apply($.datepicker,[this[0]].concat(t)):this.each(function(){typeof e==\"string\"?$.datepicker[\"_\"+e+\"Datepicker\"].apply($.datepicker,[this].concat(t)):$.datepicker._attachDatepicker(this,e)}):$.datepicker[\"_\"+e+\"Datepicker\"].apply($.datepicker,[this[0]].concat(t))},$.datepicker=new Datepicker,$.datepicker.initialized=!1,$.datepicker.uuid=(new Date).getTime(),$.datepicker.version=\"1.9.0\",window[\"DP_jQuery_\"+dpuuid]=$})(jQuery);(function(e,t){var n=\"ui-dialog ui-widget ui-widget-content ui-corner-all \",r={buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},i={maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0};e.widget(\"ui.dialog\",{version:\"1.9.0\",options:{autoOpen:!0,buttons:{},closeOnEscape:!0,closeText:\"close\",dialogClass:\"\",draggable:!0,hide:null,height:\"auto\",maxHeight:!1,maxWidth:!1,minHeight:150,minWidth:150,modal:!1,position:{my:\"center\",at:\"center\",of:window,collision:\"fit\",using:function(t){var n=e(this).css(t).offset().top;n<0&&e(this).css(\"top\",t.top-n)}},resizable:!0,show:null,stack:!0,title:\"\",width:300,zIndex:1e3},_create:function(){this.originalTitle=this.element.attr(\"title\"),typeof this.originalTitle!=\"string\"&&(this.originalTitle=\"\"),this.oldPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.options.title=this.options.title||this.originalTitle;var t=this,r=this.options,i=r.title||\"&#160;\",s=(this.uiDialog=e(\"<div>\")).addClass(n+r.dialogClass).css({display:\"none\",outline:0,zIndex:r.zIndex}).attr(\"tabIndex\",-1).keydown(function(n){r.closeOnEscape&&!n.isDefaultPrevented()&&n.keyCode&&n.keyCode===e.ui.keyCode.ESCAPE&&(t.close(n),n.preventDefault())}).mousedown(function(e){t.moveToTop(!1,e)}).appendTo(\"body\"),o=this.element.show().removeAttr(\"title\").addClass(\"ui-dialog-content ui-widget-content\").appendTo(s),u=(this.uiDialogTitlebar=e(\"<div>\")).addClass(\"ui-dialog-titlebar  ui-widget-header  ui-corner-all  ui-helper-clearfix\").prependTo(s),a=e(\"<a href='#'></a>\").addClass(\"ui-dialog-titlebar-close  ui-corner-all\").attr(\"role\",\"button\").click(function(e){e.preventDefault(),t.close(e)}).appendTo(u),f=(this.uiDialogTitlebarCloseText=e(\"<span>\")).addClass(\"ui-icon ui-icon-closethick\").text(r.closeText).appendTo(a),l=e(\"<span>\").uniqueId().addClass(\"ui-dialog-title\").html(i).prependTo(u),c=(this.uiDialogButtonPane=e(\"<div>\")).addClass(\"ui-dialog-buttonpane ui-widget-content ui-helper-clearfix\"),h=(this.uiButtonSet=e(\"<div>\")).addClass(\"ui-dialog-buttonset\").appendTo(c);s.attr({role:\"dialog\",\"aria-labelledby\":l.attr(\"id\")}),u.find(\"*\").add(u).disableSelection(),this._hoverable(a),this._focusable(a),r.draggable&&e.fn.draggable&&this._makeDraggable(),r.resizable&&e.fn.resizable&&this._makeResizable(),this._createButtons(r.buttons),this._isOpen=!1,e.fn.bgiframe&&s.bgiframe(),this._on(s,{keydown:function(t){if(!r.modal||t.keyCode!==e.ui.keyCode.TAB)return;var n=e(\":tabbable\",s),i=n.filter(\":first\"),o=n.filter(\":last\");if(t.target===o[0]&&!t.shiftKey)return i.focus(1),!1;if(t.target===i[0]&&t.shiftKey)return o.focus(1),!1}})},_init:function(){this.options.autoOpen&&this.open()},_destroy:function(){var e,t=this.oldPosition;this.overlay&&this.overlay.destroy(),this.uiDialog.hide(),this.element.removeClass(\"ui-dialog-content ui-widget-content\").hide().appendTo(\"body\"),this.uiDialog.remove(),this.originalTitle&&this.element.attr(\"title\",this.originalTitle),e=t.parent.children().eq(t.index),e.length&&e[0]!==this.element[0]?e.before(this.element):t.parent.append(this.element)},widget:function(){return this.uiDialog},close:function(t){var n=this,r,i;if(!this._isOpen)return;if(!1===this._trigger(\"beforeClose\",t))return;return this._isOpen=!1,this.overlay&&this.overlay.destroy(),this.options.hide?this.uiDialog.hide(this.options.hide,function(){n._trigger(\"close\",t)}):(this.uiDialog.hide(),this._trigger(\"close\",t)),e.ui.dialog.overlay.resize(),this.options.modal&&(r=0,e(\".ui-dialog\").each(function(){this!==n.uiDialog[0]&&(i=e(this).css(\"z-index\"),isNaN(i)||(r=Math.max(r,i)))}),e.ui.dialog.maxZ=r),this},isOpen:function(){return this._isOpen},moveToTop:function(t,n){var r=this.options,i;return r.modal&&!t||!r.stack&&!r.modal?this._trigger(\"focus\",n):(r.zIndex>e.ui.dialog.maxZ&&(e.ui.dialog.maxZ=r.zIndex),this.overlay&&(e.ui.dialog.maxZ+=1,e.ui.dialog.overlay.maxZ=e.ui.dialog.maxZ,this.overlay.$el.css(\"z-index\",e.ui.dialog.overlay.maxZ)),i={scrollTop:this.element.scrollTop(),scrollLeft:this.element.scrollLeft()},e.ui.dialog.maxZ+=1,this.uiDialog.css(\"z-index\",e.ui.dialog.maxZ),this.element.attr(i),this._trigger(\"focus\",n),this)},open:function(){if(this._isOpen)return;var t,n=this.options,r=this.uiDialog;return this._size(),this._position(n.position),r.show(n.show),this.overlay=n.modal?new e.ui.dialog.overlay(this):null,this.moveToTop(!0),t=this.element.find(\":tabbable\"),t.length||(t=this.uiDialogButtonPane.find(\":tabbable\"),t.length||(t=r)),t.eq(0).focus(),this._isOpen=!0,this._trigger(\"open\"),this},_createButtons:function(t){var n,r,i=this,s=!1;this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),typeof t==\"object\"&&t!==null&&e.each(t,function(){return!(s=!0)}),s?(e.each(t,function(t,n){n=e.isFunction(n)?{click:n,text:t}:n;var r=e(\"<button type='button'>\").attr(n,!0).unbind(\"click\").click(function(){n.click.apply(i.element[0],arguments)}).appendTo(i.uiButtonSet);e.fn.button&&r.button()}),this.uiDialog.addClass(\"ui-dialog-buttons\"),this.uiDialogButtonPane.appendTo(this.uiDialog)):this.uiDialog.removeClass(\"ui-dialog-buttons\")},_makeDraggable:function(){function r(e){return{position:e.position,offset:e.offset}}var t=this,n=this.options;this.uiDialog.draggable({cancel:\".ui-dialog-content, .ui-dialog-titlebar-close\",handle:\".ui-dialog-titlebar\",containment:\"document\",start:function(n,i){e(this).addClass(\"ui-dialog-dragging\"),t._trigger(\"dragStart\",n,r(i))},drag:function(e,n){t._trigger(\"drag\",e,r(n))},stop:function(i,s){n.position=[s.position.left-t.document.scrollLeft(),s.position.top-t.document.scrollTop()],e(this).removeClass(\"ui-dialog-dragging\"),t._trigger(\"dragStop\",i,r(s)),e.ui.dialog.overlay.resize()}})},_makeResizable:function(n){function u(e){return{originalPosition:e.originalPosition,originalSize:e.originalSize,position:e.position,size:e.size}}n=n===t?this.options.resizable:n;var r=this,i=this.options,s=this.uiDialog.css(\"position\"),o=typeof n==\"string\"?n:\"n,e,s,w,se,sw,ne,nw\";this.uiDialog.resizable({cancel:\".ui-dialog-content\",containment:\"document\",alsoResize:this.element,maxWidth:i.maxWidth,maxHeight:i.maxHeight,minWidth:i.minWidth,minHeight:this._minHeight(),handles:o,start:function(t,n){e(this).addClass(\"ui-dialog-resizing\"),r._trigger(\"resizeStart\",t,u(n))},resize:function(e,t){r._trigger(\"resize\",e,u(t))},stop:function(t,n){e(this).removeClass(\"ui-dialog-resizing\"),i.height=e(this).height(),i.width=e(this).width(),r._trigger(\"resizeStop\",t,u(n)),e.ui.dialog.overlay.resize()}}).css(\"position\",s).find(\".ui-resizable-se\").addClass(\"ui-icon ui-icon-grip-diagonal-se\")},_minHeight:function(){var e=this.options;return e.height===\"auto\"?e.minHeight:Math.min(e.minHeight,e.height)},_position:function(t){var n=[],r=[0,0],i;if(t){if(typeof t==\"string\"||typeof t==\"object\"&&\"0\"in t)n=t.split?t.split(\" \"):[t[0],t[1]],n.length===1&&(n[1]=n[0]),e.each([\"left\",\"top\"],function(e,t){+n[e]===n[e]&&(r[e]=n[e],n[e]=t)}),t={my:n.join(\" \"),at:n.join(\" \"),offset:r.join(\" \")};t=e.extend({},e.ui.dialog.prototype.options.position,t)}else t=e.ui.dialog.prototype.options.position;i=this.uiDialog.is(\":visible\"),i||this.uiDialog.show(),this.uiDialog.position(t),i||this.uiDialog.hide()},_setOptions:function(t){var n=this,s={},o=!1;e.each(t,function(e,t){n._setOption(e,t),e in r&&(o=!0),e in i&&(s[e]=t)}),o&&this._size(),this.uiDialog.is(\":data(resizable)\")&&this.uiDialog.resizable(\"option\",s)},_setOption:function(t,r){var i,s,o=this.uiDialog;switch(t){case\"buttons\":this._createButtons(r);break;case\"closeText\":this.uiDialogTitlebarCloseText.text(\"\"+r);break;case\"dialogClass\":o.removeClass(this.options.dialogClass).addClass(n+r);break;case\"disabled\":r?o.addClass(\"ui-dialog-disabled\"):o.removeClass(\"ui-dialog-disabled\");break;case\"draggable\":i=o.is(\":data(draggable)\"),i&&!r&&o.draggable(\"destroy\"),!i&&r&&this._makeDraggable();break;case\"position\":this._position(r);break;case\"resizable\":s=o.is(\":data(resizable)\"),s&&!r&&o.resizable(\"destroy\"),s&&typeof r==\"string\"&&o.resizable(\"option\",\"handles\",r),!s&&r!==!1&&this._makeResizable(r);break;case\"title\":e(\".ui-dialog-title\",this.uiDialogTitlebar).html(\"\"+(r||\"&#160;\"))}this._super(t,r)},_size:function(){var t,n,r,i=this.options,s=this.uiDialog.is(\":visible\");this.element.show().css({width:\"auto\",minHeight:0,height:0}),i.minWidth>i.width&&(i.width=i.minWidth),t=this.uiDialog.css({height:\"auto\",width:i.width}).outerHeight(),n=Math.max(0,i.minHeight-t),i.height===\"auto\"?e.support.minHeight?this.element.css({minHeight:n,height:\"auto\"}):(this.uiDialog.show(),r=this.element.css(\"height\",\"auto\").height(),s||this.uiDialog.hide(),this.element.height(Math.max(r,n))):this.element.height(Math.max(i.height-t,0)),this.uiDialog.is(\":data(resizable)\")&&this.uiDialog.resizable(\"option\",\"minHeight\",this._minHeight())}}),e.extend(e.ui.dialog,{uuid:0,maxZ:0,getTitleId:function(e){var t=e.attr(\"id\");return t||(this.uuid+=1,t=this.uuid),\"ui-dialog-title-\"+t},overlay:function(t){this.$el=e.ui.dialog.overlay.create(t)}}),e.extend(e.ui.dialog.overlay,{instances:[],oldInstances:[],maxZ:0,events:e.map(\"focus,mousedown,mouseup,keydown,keypress,click\".split(\",\"),function(e){return e+\".dialog-overlay\"}).join(\" \"),create:function(t){this.instances.length===0&&(setTimeout(function(){e.ui.dialog.overlay.instances.length&&e(document).bind(e.ui.dialog.overlay.events,function(t){if(e(t.target).zIndex()<e.ui.dialog.overlay.maxZ)return!1})},1),e(window).bind(\"resize.dialog-overlay\",e.ui.dialog.overlay.resize));var n=this.oldInstances.pop()||e(\"<div>\").addClass(\"ui-widget-overlay\");return e(document).bind(\"keydown.dialog-overlay\",function(r){var i=e.ui.dialog.overlay.instances;i.length!==0&&i[i.length-1]===n&&t.options.closeOnEscape&&!r.isDefaultPrevented()&&r.keyCode&&r.keyCode===e.ui.keyCode.ESCAPE&&(t.close(r),r.preventDefault())}),n.appendTo(document.body).css({width:this.width(),height:this.height()}),e.fn.bgiframe&&n.bgiframe(),this.instances.push(n),n},destroy:function(t){var n=e.inArray(t,this.instances),r=0;n!==-1&&this.oldInstances.push(this.instances.splice(n,1)[0]),this.instances.length===0&&e([document,window]).unbind(\".dialog-overlay\"),t.height(0).width(0).remove(),e.each(this.instances,function(){r=Math.max(r,this.css(\"z-index\"))}),this.maxZ=r},height:function(){var t,n;return e.browser.msie?(t=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),n=Math.max(document.documentElement.offsetHeight,document.body.offsetHeight),t<n?e(window).height()+\"px\":t+\"px\"):e(document).height()+\"px\"},width:function(){var t,n;return e.browser.msie?(t=Math.max(document.documentElement.scrollWidth,document.body.scrollWidth),n=Math.max(document.documentElement.offsetWidth,document.body.offsetWidth),t<n?e(window).width()+\"px\":t+\"px\"):e(document).width()+\"px\"},resize:function(){var t=e([]);e.each(e.ui.dialog.overlay.instances,function(){t=t.add(this)}),t.css({width:0,height:0}).css({width:e.ui.dialog.overlay.width(),height:e.ui.dialog.overlay.height()})}}),e.extend(e.ui.dialog.overlay.prototype,{destroy:function(){e.ui.dialog.overlay.destroy(this.$el)}})})(jQuery);(function(e,t){e.widget(\"ui.draggable\",e.ui.mouse,{version:\"1.9.0\",widgetEventPrefix:\"drag\",options:{addClasses:!0,appendTo:\"parent\",axis:!1,connectToSortable:!1,containment:!1,cursor:\"auto\",cursorAt:!1,grid:!1,handle:!1,helper:\"original\",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:\"default\",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:\"both\",snapTolerance:20,stack:!1,zIndex:!1},_create:function(){this.options.helper==\"original\"&&!/^(?:r|a|f)/.test(this.element.css(\"position\"))&&(this.element[0].style.position=\"relative\"),this.options.addClasses&&this.element.addClass(\"ui-draggable\"),this.options.disabled&&this.element.addClass(\"ui-draggable-disabled\"),this._mouseInit()},_destroy:function(){this.element.removeClass(\"ui-draggable ui-draggable-dragging ui-draggable-disabled\"),this._mouseDestroy()},_mouseCapture:function(t){var n=this.options;return this.helper||n.disabled||e(t.target).is(\".ui-resizable-handle\")?!1:(this.handle=this._getHandle(t),this.handle?(e(n.iframeFix===!0?\"iframe\":n.iframeFix).each(function(){e('<div class=\"ui-draggable-iframeFix\" style=\"background: #fff;\"></div>').css({width:this.offsetWidth+\"px\",height:this.offsetHeight+\"px\",position:\"absolute\",opacity:\"0.001\",zIndex:1e3}).css(e(this).offset()).appendTo(\"body\")}),!0):!1)},_mouseStart:function(t){var n=this.options;return this.helper=this._createHelper(t),this.helper.addClass(\"ui-draggable-dragging\"),this._cacheHelperProportions(),e.ui.ddmanager&&(e.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css(\"position\"),this.scrollParent=this.helper.scrollParent(),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,n.cursorAt&&this._adjustOffsetFromHelper(n.cursorAt),n.containment&&this._setContainment(),this._trigger(\"start\",t)===!1?(this._clear(),!1):(this._cacheHelperProportions(),e.ui.ddmanager&&!n.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this._mouseDrag(t,!0),e.ui.ddmanager&&e.ui.ddmanager.dragStart(this,t),!0)},_mouseDrag:function(t,n){this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo(\"absolute\");if(!n){var r=this._uiHash();if(this._trigger(\"drag\",t,r)===!1)return this._mouseUp({}),!1;this.position=r.position}if(!this.options.axis||this.options.axis!=\"y\")this.helper[0].style.left=this.position.left+\"px\";if(!this.options.axis||this.options.axis!=\"x\")this.helper[0].style.top=this.position.top+\"px\";return e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),!1},_mouseStop:function(t){var n=!1;e.ui.ddmanager&&!this.options.dropBehaviour&&(n=e.ui.ddmanager.drop(this,t)),this.dropped&&(n=this.dropped,this.dropped=!1);var r=this.element[0],i=!1;while(r&&(r=r.parentNode))r==document&&(i=!0);if(!i&&this.options.helper===\"original\")return!1;if(this.options.revert==\"invalid\"&&!n||this.options.revert==\"valid\"&&n||this.options.revert===!0||e.isFunction(this.options.revert)&&this.options.revert.call(this.element,n)){var s=this;e(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){s._trigger(\"stop\",t)!==!1&&s._clear()})}else this._trigger(\"stop\",t)!==!1&&this._clear();return!1},_mouseUp:function(t){return e(\"div.ui-draggable-iframeFix\").each(function(){this.parentNode.removeChild(this)}),e.ui.ddmanager&&e.ui.ddmanager.dragStop(this,t),e.ui.mouse.prototype._mouseUp.call(this,t)},cancel:function(){return this.helper.is(\".ui-draggable-dragging\")?this._mouseUp({}):this._clear(),this},_getHandle:function(t){var n=!this.options.handle||!e(this.options.handle,this.element).length?!0:!1;return e(this.options.handle,this.element).find(\"*\").andSelf().each(function(){this==t.target&&(n=!0)}),n},_createHelper:function(t){var n=this.options,r=e.isFunction(n.helper)?e(n.helper.apply(this.element[0],[t])):n.helper==\"clone\"?this.element.clone().removeAttr(\"id\"):this.element;return r.parents(\"body\").length||r.appendTo(n.appendTo==\"parent\"?this.element[0].parentNode:n.appendTo),r[0]!=this.element[0]&&!/(fixed|absolute)/.test(r.css(\"position\"))&&r.css(\"position\",\"absolute\"),r},_adjustOffsetFromHelper:function(t){typeof t==\"string\"&&(t=t.split(\" \")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),\"left\"in t&&(this.offset.click.left=t.left+this.margins.left),\"right\"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),\"top\"in t&&(this.offset.click.top=t.top+this.margins.top),\"bottom\"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();this.cssPosition==\"absolute\"&&this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()==\"html\"&&e.browser.msie)t={top:0,left:0};return{top:t.top+(parseInt(this.offsetParent.css(\"borderTopWidth\"),10)||0),left:t.left+(parseInt(this.offsetParent.css(\"borderLeftWidth\"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition==\"relative\"){var e=this.element.position();return{top:e.top-(parseInt(this.helper.css(\"top\"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css(\"left\"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css(\"marginLeft\"),10)||0,top:parseInt(this.element.css(\"marginTop\"),10)||0,right:parseInt(this.element.css(\"marginRight\"),10)||0,bottom:parseInt(this.element.css(\"marginBottom\"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t=this.options;t.containment==\"parent\"&&(t.containment=this.helper[0].parentNode);if(t.containment==\"document\"||t.containment==\"window\")this.containment=[t.containment==\"document\"?0:e(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t.containment==\"document\"?0:e(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,(t.containment==\"document\"?0:e(window).scrollLeft())+e(t.containment==\"document\"?document:window).width()-this.helperProportions.width-this.margins.left,(t.containment==\"document\"?0:e(window).scrollTop())+(e(t.containment==\"document\"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(t.containment)&&t.containment.constructor!=Array){var n=e(t.containment),r=n[0];if(!r)return;var i=n.offset(),s=e(r).css(\"overflow\")!=\"hidden\";this.containment=[(parseInt(e(r).css(\"borderLeftWidth\"),10)||0)+(parseInt(e(r).css(\"paddingLeft\"),10)||0),(parseInt(e(r).css(\"borderTopWidth\"),10)||0)+(parseInt(e(r).css(\"paddingTop\"),10)||0),(s?Math.max(r.scrollWidth,r.offsetWidth):r.offsetWidth)-(parseInt(e(r).css(\"borderLeftWidth\"),10)||0)-(parseInt(e(r).css(\"paddingRight\"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(s?Math.max(r.scrollHeight,r.offsetHeight):r.offsetHeight)-(parseInt(e(r).css(\"borderTopWidth\"),10)||0)-(parseInt(e(r).css(\"paddingBottom\"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=n}else t.containment.constructor==Array&&(this.containment=t.containment)},_convertPositionTo:function(t,n){n||(n=this.position);var r=t==\"absolute\"?1:-1,i=this.options,s=this.cssPosition!=\"absolute\"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(s[0].tagName);return{top:n.top+this.offset.relative.top*r+this.offset.parent.top*r-(this.cssPosition==\"fixed\"?-this.scrollParent.scrollTop():o?0:s.scrollTop())*r,left:n.left+this.offset.relative.left*r+this.offset.parent.left*r-(this.cssPosition==\"fixed\"?-this.scrollParent.scrollLeft():o?0:s.scrollLeft())*r}},_generatePosition:function(t){var n=this.options,r=this.cssPosition!=\"absolute\"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,i=/(html|body)/i.test(r[0].tagName),s=t.pageX,o=t.pageY;if(this.originalPosition){var u;if(this.containment){if(this.relative_container){var a=this.relative_container.offset();u=[this.containment[0]+a.left,this.containment[1]+a.top,this.containment[2]+a.left,this.containment[3]+a.top]}else u=this.containment;t.pageX-this.offset.click.left<u[0]&&(s=u[0]+this.offset.click.left),t.pageY-this.offset.click.top<u[1]&&(o=u[1]+this.offset.click.top),t.pageX-this.offset.click.left>u[2]&&(s=u[2]+this.offset.click.left),t.pageY-this.offset.click.top>u[3]&&(o=u[3]+this.offset.click.top)}if(n.grid){var f=n.grid[1]?this.originalPageY+Math.round((o-this.originalPageY)/n.grid[1])*n.grid[1]:this.originalPageY;o=u?f-this.offset.click.top<u[1]||f-this.offset.click.top>u[3]?f-this.offset.click.top<u[1]?f+n.grid[1]:f-n.grid[1]:f:f;var l=n.grid[0]?this.originalPageX+Math.round((s-this.originalPageX)/n.grid[0])*n.grid[0]:this.originalPageX;s=u?l-this.offset.click.left<u[0]||l-this.offset.click.left>u[2]?l-this.offset.click.left<u[0]?l+n.grid[0]:l-n.grid[0]:l:l}}return{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(this.cssPosition==\"fixed\"?-this.scrollParent.scrollTop():i?0:r.scrollTop()),left:s-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(this.cssPosition==\"fixed\"?-this.scrollParent.scrollLeft():i?0:r.scrollLeft())}},_clear:function(){this.helper.removeClass(\"ui-draggable-dragging\"),this.helper[0]!=this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(t,n,r){return r=r||this._uiHash(),e.ui.plugin.call(this,t,[n,r]),t==\"drag\"&&(this.positionAbs=this._convertPositionTo(\"absolute\")),e.Widget.prototype._trigger.call(this,t,n,r)},plugins:{},_uiHash:function(e){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),e.ui.plugin.add(\"draggable\",\"connectToSortable\",{start:function(t,n){var r=e(this).data(\"draggable\"),i=r.options,s=e.extend({},n,{item:r.element});r.sortables=[],e(i.connectToSortable).each(function(){var n=e.data(this,\"sortable\");n&&!n.options.disabled&&(r.sortables.push({instance:n,shouldRevert:n.options.revert}),n.refreshPositions(),n._trigger(\"activate\",t,s))})},stop:function(t,n){var r=e(this).data(\"draggable\"),i=e.extend({},n,{item:r.element});e.each(r.sortables,function(){this.instance.isOver?(this.instance.isOver=0,r.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=!0),this.instance._mouseStop(t),this.instance.options.helper=this.instance.options._helper,r.options.helper==\"original\"&&this.instance.currentItem.css({top:\"auto\",left:\"auto\"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger(\"deactivate\",t,i))})},drag:function(t,n){var r=e(this).data(\"draggable\"),i=this,s=function(t){var n=this.offset.click.top,r=this.offset.click.left,i=this.positionAbs.top,s=this.positionAbs.left,o=t.height,u=t.width,a=t.top,f=t.left;return e.ui.isOver(i+n,s+r,a,f,o,u)};e.each(r.sortables,function(s){this.instance.positionAbs=r.positionAbs,this.instance.helperProportions=r.helperProportions,this.instance.offset.click=r.offset.click,this.instance._intersectsWith(this.instance.containerCache)?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=e(i).clone().removeAttr(\"id\").appendTo(this.instance.element).data(\"sortable-item\",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return n.helper[0]},t.target=this.instance.currentItem[0],this.instance._mouseCapture(t,!0),this.instance._mouseStart(t,!0,!0),this.instance.offset.click.top=r.offset.click.top,this.instance.offset.click.left=r.offset.click.left,this.instance.offset.parent.left-=r.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=r.offset.parent.top-this.instance.offset.parent.top,r._trigger(\"toSortable\",t),r.dropped=this.instance.element,r.currentItem=r.element,this.instance.fromOutside=r),this.instance.currentItem&&this.instance._mouseDrag(t)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger(\"out\",t,this.instance._uiHash(this.instance)),this.instance._mouseStop(t,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),r._trigger(\"fromSortable\",t),r.dropped=!1)})}}),e.ui.plugin.add(\"draggable\",\"cursor\",{start:function(t,n){var r=e(\"body\"),i=e(this).data(\"draggable\").options;r.css(\"cursor\")&&(i._cursor=r.css(\"cursor\")),r.css(\"cursor\",i.cursor)},stop:function(t,n){var r=e(this).data(\"draggable\").options;r._cursor&&e(\"body\").css(\"cursor\",r._cursor)}}),e.ui.plugin.add(\"draggable\",\"opacity\",{start:function(t,n){var r=e(n.helper),i=e(this).data(\"draggable\").options;r.css(\"opacity\")&&(i._opacity=r.css(\"opacity\")),r.css(\"opacity\",i.opacity)},stop:function(t,n){var r=e(this).data(\"draggable\").options;r._opacity&&e(n.helper).css(\"opacity\",r._opacity)}}),e.ui.plugin.add(\"draggable\",\"scroll\",{start:function(t,n){var r=e(this).data(\"draggable\");r.scrollParent[0]!=document&&r.scrollParent[0].tagName!=\"HTML\"&&(r.overflowOffset=r.scrollParent.offset())},drag:function(t,n){var r=e(this).data(\"draggable\"),i=r.options,s=!1;if(r.scrollParent[0]!=document&&r.scrollParent[0].tagName!=\"HTML\"){if(!i.axis||i.axis!=\"x\")r.overflowOffset.top+r.scrollParent[0].offsetHeight-t.pageY<i.scrollSensitivity?r.scrollParent[0].scrollTop=s=r.scrollParent[0].scrollTop+i.scrollSpeed:t.pageY-r.overflowOffset.top<i.scrollSensitivity&&(r.scrollParent[0].scrollTop=s=r.scrollParent[0].scrollTop-i.scrollSpeed);if(!i.axis||i.axis!=\"y\")r.overflowOffset.left+r.scrollParent[0].offsetWidth-t.pageX<i.scrollSensitivity?r.scrollParent[0].scrollLeft=s=r.scrollParent[0].scrollLeft+i.scrollSpeed:t.pageX-r.overflowOffset.left<i.scrollSensitivity&&(r.scrollParent[0].scrollLeft=s=r.scrollParent[0].scrollLeft-i.scrollSpeed)}else{if(!i.axis||i.axis!=\"x\")t.pageY-e(document).scrollTop()<i.scrollSensitivity?s=e(document).scrollTop(e(document).scrollTop()-i.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<i.scrollSensitivity&&(s=e(document).scrollTop(e(document).scrollTop()+i.scrollSpeed));if(!i.axis||i.axis!=\"y\")t.pageX-e(document).scrollLeft()<i.scrollSensitivity?s=e(document).scrollLeft(e(document).scrollLeft()-i.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<i.scrollSensitivity&&(s=e(document).scrollLeft(e(document).scrollLeft()+i.scrollSpeed))}s!==!1&&e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(r,t)}}),e.ui.plugin.add(\"draggable\",\"snap\",{start:function(t,n){var r=e(this).data(\"draggable\"),i=r.options;r.snapElements=[],e(i.snap.constructor!=String?i.snap.items||\":data(draggable)\":i.snap).each(function(){var t=e(this),n=t.offset();this!=r.element[0]&&r.snapElements.push({item:this,width:t.outerWidth(),height:t.outerHeight(),top:n.top,left:n.left})})},drag:function(t,n){var r=e(this).data(\"draggable\"),i=r.options,s=i.snapTolerance,o=n.offset.left,u=o+r.helperProportions.width,a=n.offset.top,f=a+r.helperProportions.height;for(var l=r.snapElements.length-1;l>=0;l--){var c=r.snapElements[l].left,h=c+r.snapElements[l].width,p=r.snapElements[l].top,d=p+r.snapElements[l].height;if(!(c-s<o&&o<h+s&&p-s<a&&a<d+s||c-s<o&&o<h+s&&p-s<f&&f<d+s||c-s<u&&u<h+s&&p-s<a&&a<d+s||c-s<u&&u<h+s&&p-s<f&&f<d+s)){r.snapElements[l].snapping&&r.options.snap.release&&r.options.snap.release.call(r.element,t,e.extend(r._uiHash(),{snapItem:r.snapElements[l].item})),r.snapElements[l].snapping=!1;continue}if(i.snapMode!=\"inner\"){var v=Math.abs(p-f)<=s,m=Math.abs(d-a)<=s,g=Math.abs(c-u)<=s,y=Math.abs(h-o)<=s;v&&(n.position.top=r._convertPositionTo(\"relative\",{top:p-r.helperProportions.height,left:0}).top-r.margins.top),m&&(n.position.top=r._convertPositionTo(\"relative\",{top:d,left:0}).top-r.margins.top),g&&(n.position.left=r._convertPositionTo(\"relative\",{top:0,left:c-r.helperProportions.width}).left-r.margins.left),y&&(n.position.left=r._convertPositionTo(\"relative\",{top:0,left:h}).left-r.margins.left)}var b=v||m||g||y;if(i.snapMode!=\"outer\"){var v=Math.abs(p-a)<=s,m=Math.abs(d-f)<=s,g=Math.abs(c-o)<=s,y=Math.abs(h-u)<=s;v&&(n.position.top=r._convertPositionTo(\"relative\",{top:p,left:0}).top-r.margins.top),m&&(n.position.top=r._convertPositionTo(\"relative\",{top:d-r.helperProportions.height,left:0}).top-r.margins.top),g&&(n.position.left=r._convertPositionTo(\"relative\",{top:0,left:c}).left-r.margins.left),y&&(n.position.left=r._convertPositionTo(\"relative\",{top:0,left:h-r.helperProportions.width}).left-r.margins.left)}!r.snapElements[l].snapping&&(v||m||g||y||b)&&r.options.snap.snap&&r.options.snap.snap.call(r.element,t,e.extend(r._uiHash(),{snapItem:r.snapElements[l].item})),r.snapElements[l].snapping=v||m||g||y||b}}}),e.ui.plugin.add(\"draggable\",\"stack\",{start:function(t,n){var r=e(this).data(\"draggable\").options,i=e.makeArray(e(r.stack)).sort(function(t,n){return(parseInt(e(t).css(\"zIndex\"),10)||0)-(parseInt(e(n).css(\"zIndex\"),10)||0)});if(!i.length)return;var s=parseInt(i[0].style.zIndex)||0;e(i).each(function(e){this.style.zIndex=s+e}),this[0].style.zIndex=s+i.length}}),e.ui.plugin.add(\"draggable\",\"zIndex\",{start:function(t,n){var r=e(n.helper),i=e(this).data(\"draggable\").options;r.css(\"zIndex\")&&(i._zIndex=r.css(\"zIndex\")),r.css(\"zIndex\",i.zIndex)},stop:function(t,n){var r=e(this).data(\"draggable\").options;r._zIndex&&e(n.helper).css(\"zIndex\",r._zIndex)}})})(jQuery);(function(e,t){e.widget(\"ui.droppable\",{version:\"1.9.0\",widgetEventPrefix:\"drop\",options:{accept:\"*\",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:\"default\",tolerance:\"intersect\"},_create:function(){var t=this.options,n=t.accept;this.isover=0,this.isout=1,this.accept=e.isFunction(n)?n:function(e){return e.is(n)},this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight},e.ui.ddmanager.droppables[t.scope]=e.ui.ddmanager.droppables[t.scope]||[],e.ui.ddmanager.droppables[t.scope].push(this),t.addClasses&&this.element.addClass(\"ui-droppable\")},_destroy:function(){var t=e.ui.ddmanager.droppables[this.options.scope];for(var n=0;n<t.length;n++)t[n]==this&&t.splice(n,1);this.element.removeClass(\"ui-droppable ui-droppable-disabled\")},_setOption:function(t,n){t==\"accept\"&&(this.accept=e.isFunction(n)?n:function(e){return e.is(n)}),e.Widget.prototype._setOption.apply(this,arguments)},_activate:function(t){var n=e.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),n&&this._trigger(\"activate\",t,this.ui(n))},_deactivate:function(t){var n=e.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),n&&this._trigger(\"deactivate\",t,this.ui(n))},_over:function(t){var n=e.ui.ddmanager.current;if(!n||(n.currentItem||n.element)[0]==this.element[0])return;this.accept.call(this.element[0],n.currentItem||n.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger(\"over\",t,this.ui(n)))},_out:function(t){var n=e.ui.ddmanager.current;if(!n||(n.currentItem||n.element)[0]==this.element[0])return;this.accept.call(this.element[0],n.currentItem||n.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger(\"out\",t,this.ui(n)))},_drop:function(t,n){var r=n||e.ui.ddmanager.current;if(!r||(r.currentItem||r.element)[0]==this.element[0])return!1;var i=!1;return this.element.find(\":data(droppable)\").not(\".ui-draggable-dragging\").each(function(){var t=e.data(this,\"droppable\");if(t.options.greedy&&!t.options.disabled&&t.options.scope==r.options.scope&&t.accept.call(t.element[0],r.currentItem||r.element)&&e.ui.intersect(r,e.extend(t,{offset:t.element.offset()}),t.options.tolerance))return i=!0,!1}),i?!1:this.accept.call(this.element[0],r.currentItem||r.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger(\"drop\",t,this.ui(r)),this.element):!1},ui:function(e){return{draggable:e.currentItem||e.element,helper:e.helper,position:e.position,offset:e.positionAbs}}}),e.ui.intersect=function(t,n,r){if(!n.offset)return!1;var i=(t.positionAbs||t.position.absolute).left,s=i+t.helperProportions.width,o=(t.positionAbs||t.position.absolute).top,u=o+t.helperProportions.height,a=n.offset.left,f=a+n.proportions.width,l=n.offset.top,c=l+n.proportions.height;switch(r){case\"fit\":return a<=i&&s<=f&&l<=o&&u<=c;case\"intersect\":return a<i+t.helperProportions.width/2&&s-t.helperProportions.width/2<f&&l<o+t.helperProportions.height/2&&u-t.helperProportions.height/2<c;case\"pointer\":var h=(t.positionAbs||t.position.absolute).left+(t.clickOffset||t.offset.click).left,p=(t.positionAbs||t.position.absolute).top+(t.clickOffset||t.offset.click).top,d=e.ui.isOver(p,h,l,a,n.proportions.height,n.proportions.width);return d;case\"touch\":return(o>=l&&o<=c||u>=l&&u<=c||o<l&&u>c)&&(i>=a&&i<=f||s>=a&&s<=f||i<a&&s>f);default:return!1}},e.ui.ddmanager={current:null,droppables:{\"default\":[]},prepareOffsets:function(t,n){var r=e.ui.ddmanager.droppables[t.options.scope]||[],i=n?n.type:null,s=(t.currentItem||t.element).find(\":data(droppable)\").andSelf();e:for(var o=0;o<r.length;o++){if(r[o].options.disabled||t&&!r[o].accept.call(r[o].element[0],t.currentItem||t.element))continue;for(var u=0;u<s.length;u++)if(s[u]==r[o].element[0]){r[o].proportions.height=0;continue e}r[o].visible=r[o].element.css(\"display\")!=\"none\";if(!r[o].visible)continue;i==\"mousedown\"&&r[o]._activate.call(r[o],n),r[o].offset=r[o].element.offset(),r[o].proportions={width:r[o].element[0].offsetWidth,height:r[o].element[0].offsetHeight}}},drop:function(t,n){var r=!1;return e.each(e.ui.ddmanager.droppables[t.options.scope]||[],function(){if(!this.options)return;!this.options.disabled&&this.visible&&e.ui.intersect(t,this,this.options.tolerance)&&(r=this._drop.call(this,n)||r),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],t.currentItem||t.element)&&(this.isout=1,this.isover=0,this._deactivate.call(this,n))}),r},dragStart:function(t,n){t.element.parentsUntil(\"body\").bind(\"scroll.droppable\",function(){t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,n)})},drag:function(t,n){t.options.refreshPositions&&e.ui.ddmanager.prepareOffsets(t,n),e.each(e.ui.ddmanager.droppables[t.options.scope]||[],function(){if(this.options.disabled||this.greedyChild||!this.visible)return;var r=e.ui.intersect(t,this,this.options.tolerance),i=!r&&this.isover==1?\"isout\":r&&this.isover==0?\"isover\":null;if(!i)return;var s;if(this.options.greedy){var o=this.options.scope,u=this.element.parents(\":data(droppable)\").filter(function(){return e.data(this,\"droppable\").options.scope===o});u.length&&(s=e.data(u[0],\"droppable\"),s.greedyChild=i==\"isover\"?1:0)}s&&i==\"isover\"&&(s.isover=0,s.isout=1,s._out.call(s,n)),this[i]=1,this[i==\"isout\"?\"isover\":\"isout\"]=0,this[i==\"isover\"?\"_over\":\"_out\"].call(this,n),s&&i==\"isout\"&&(s.isout=0,s.isover=1,s._over.call(s,n))})},dragStop:function(t,n){t.element.parentsUntil(\"body\").unbind(\"scroll.droppable\"),t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,n)}}})(jQuery);jQuery.effects||function(e,t){var n=e.uiBackCompat!==!1,r=\"ui-effects-\";e.effects={effect:{}},function(t,n){function p(e,t,n){var r=a[t.type]||{};return e==null?n||!t.def?null:t.def:(e=r.floor?~~e:parseFloat(e),isNaN(e)?t.def:r.mod?(e+r.mod)%r.mod:0>e?0:r.max<e?r.max:e)}function d(e){var n=o(),r=n._rgba=[];return e=e.toLowerCase(),h(s,function(t,i){var s,o=i.re.exec(e),a=o&&i.parse(o),f=i.space||\"rgba\";if(a)return s=n[f](a),n[u[f].cache]=s[u[f].cache],r=n._rgba=s._rgba,!1}),r.length?(r.join()===\"0,0,0,0\"&&t.extend(r,c.transparent),n):c[e]}function v(e,t,n){return n=(n+1)%1,n*6<1?e+(t-e)*n*6:n*2<1?t:n*3<2?e+(t-e)*(2/3-n)*6:e}var r=\"backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor\".split(\" \"),i=/^([\\-+])=\\s*(\\d+\\.?\\d*)/,s=[{re:/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,parse:function(e){return[e[1],e[2],e[3],e[4]]}},{re:/rgba?\\(\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,parse:function(e){return[e[1]*2.55,e[2]*2.55,e[3]*2.55,e[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(e){return[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(e){return[parseInt(e[1]+e[1],16),parseInt(e[2]+e[2],16),parseInt(e[3]+e[3],16)]}},{re:/hsla?\\(\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,space:\"hsla\",parse:function(e){return[e[1],e[2]/100,e[3]/100,e[4]]}}],o=t.Color=function(e,n,r,i){return new t.Color.fn.parse(e,n,r,i)},u={rgba:{props:{red:{idx:0,type:\"byte\"},green:{idx:1,type:\"byte\"},blue:{idx:2,type:\"byte\"}}},hsla:{props:{hue:{idx:0,type:\"degrees\"},saturation:{idx:1,type:\"percent\"},lightness:{idx:2,type:\"percent\"}}}},a={\"byte\":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},f=o.support={},l=t(\"<p>\")[0],c,h=t.each;l.style.cssText=\"background-color:rgba(1,1,1,.5)\",f.rgba=l.style.backgroundColor.indexOf(\"rgba\")>-1,h(u,function(e,t){t.cache=\"_\"+e,t.props.alpha={idx:3,type:\"percent\",def:1}}),o.fn=t.extend(o.prototype,{parse:function(r,i,s,a){if(r===n)return this._rgba=[null,null,null,null],this;if(r.jquery||r.nodeType)r=t(r).css(i),i=n;var f=this,l=t.type(r),v=this._rgba=[],m;i!==n&&(r=[r,i,s,a],l=\"array\");if(l===\"string\")return this.parse(d(r)||c._default);if(l===\"array\")return h(u.rgba.props,function(e,t){v[t.idx]=p(r[t.idx],t)}),this;if(l===\"object\")return r instanceof o?h(u,function(e,t){r[t.cache]&&(f[t.cache]=r[t.cache].slice())}):h(u,function(t,n){var i=n.cache;h(n.props,function(e,t){if(!f[i]&&n.to){if(e===\"alpha\"||r[e]==null)return;f[i]=n.to(f._rgba)}f[i][t.idx]=p(r[e],t,!0)}),f[i]&&e.inArray(null,f[i].slice(0,3))<0&&(f[i][3]=1,n.from&&(f._rgba=n.from(f[i])))}),this},is:function(e){var t=o(e),n=!0,r=this;return h(u,function(e,i){var s,o=t[i.cache];return o&&(s=r[i.cache]||i.to&&i.to(r._rgba)||[],h(i.props,function(e,t){if(o[t.idx]!=null)return n=o[t.idx]===s[t.idx],n})),n}),n},_space:function(){var e=[],t=this;return h(u,function(n,r){t[r.cache]&&e.push(n)}),e.pop()},transition:function(e,t){var n=o(e),r=n._space(),i=u[r],s=this.alpha()===0?o(\"transparent\"):this,f=s[i.cache]||i.to(s._rgba),l=f.slice();return n=n[i.cache],h(i.props,function(e,r){var i=r.idx,s=f[i],o=n[i],u=a[r.type]||{};if(o===null)return;s===null?l[i]=o:(u.mod&&(o-s>u.mod/2?s+=u.mod:s-o>u.mod/2&&(s-=u.mod)),l[i]=p((o-s)*t+s,r))}),this[r](l)},blend:function(e){if(this._rgba[3]===1)return this;var n=this._rgba.slice(),r=n.pop(),i=o(e)._rgba;return o(t.map(n,function(e,t){return(1-r)*i[t]+r*e}))},toRgbaString:function(){var e=\"rgba(\",n=t.map(this._rgba,function(e,t){return e==null?t>2?1:0:e});return n[3]===1&&(n.pop(),e=\"rgb(\"),e+n.join()+\")\"},toHslaString:function(){var e=\"hsla(\",n=t.map(this.hsla(),function(e,t){return e==null&&(e=t>2?1:0),t&&t<3&&(e=Math.round(e*100)+\"%\"),e});return n[3]===1&&(n.pop(),e=\"hsl(\"),e+n.join()+\")\"},toHexString:function(e){var n=this._rgba.slice(),r=n.pop();return e&&n.push(~~(r*255)),\"#\"+t.map(n,function(e,t){return e=(e||0).toString(16),e.length===1?\"0\"+e:e}).join(\"\")},toString:function(){return this._rgba[3]===0?\"transparent\":this.toRgbaString()}}),o.fn.parse.prototype=o.fn,u.hsla.to=function(e){if(e[0]==null||e[1]==null||e[2]==null)return[null,null,null,e[3]];var t=e[0]/255,n=e[1]/255,r=e[2]/255,i=e[3],s=Math.max(t,n,r),o=Math.min(t,n,r),u=s-o,a=s+o,f=a*.5,l,c;return o===s?l=0:t===s?l=60*(n-r)/u+360:n===s?l=60*(r-t)/u+120:l=60*(t-n)/u+240,f===0||f===1?c=f:f<=.5?c=u/a:c=u/(2-a),[Math.round(l)%360,c,f,i==null?1:i]},u.hsla.from=function(e){if(e[0]==null||e[1]==null||e[2]==null)return[null,null,null,e[3]];var t=e[0]/360,n=e[1],r=e[2],i=e[3],s=r<=.5?r*(1+n):r+n-r*n,o=2*r-s,u,a,f;return[Math.round(v(o,s,t+1/3)*255),Math.round(v(o,s,t)*255),Math.round(v(o,s,t-1/3)*255),i]},h(u,function(e,r){var s=r.props,u=r.cache,a=r.to,f=r.from;o.fn[e]=function(e){a&&!this[u]&&(this[u]=a(this._rgba));if(e===n)return this[u].slice();var r,i=t.type(e),l=i===\"array\"||i===\"object\"?e:arguments,c=this[u].slice();return h(s,function(e,t){var n=l[i===\"object\"?e:t.idx];n==null&&(n=c[t.idx]),c[t.idx]=p(n,t)}),f?(r=o(f(c)),r[u]=c,r):o(c)},h(s,function(n,r){if(o.fn[n])return;o.fn[n]=function(s){var o=t.type(s),u=n===\"alpha\"?this._hsla?\"hsla\":\"rgba\":e,a=this[u](),f=a[r.idx],l;return o===\"undefined\"?f:(o===\"function\"&&(s=s.call(this,f),o=t.type(s)),s==null&&r.empty?this:(o===\"string\"&&(l=i.exec(s),l&&(s=f+parseFloat(l[2])*(l[1]===\"+\"?1:-1))),a[r.idx]=s,this[u](a)))}})}),h(r,function(e,n){t.cssHooks[n]={set:function(e,r){var i,s,u=\"\";if(t.type(r)!==\"string\"||(i=d(r))){r=o(i||r);if(!f.rgba&&r._rgba[3]!==1){s=n===\"backgroundColor\"?e.parentNode:e;while((u===\"\"||u===\"transparent\")&&s&&s.style)try{u=t.css(s,\"backgroundColor\"),s=s.parentNode}catch(a){}r=r.blend(u&&u!==\"transparent\"?u:\"_default\")}r=r.toRgbaString()}try{e.style[n]=r}catch(r){}}},t.fx.step[n]=function(e){e.colorInit||(e.start=o(e.elem,n),e.end=o(e.end),e.colorInit=!0),t.cssHooks[n].set(e.elem,e.start.transition(e.end,e.pos))}}),t.cssHooks.borderColor={expand:function(e){var t={};return h([\"Top\",\"Right\",\"Bottom\",\"Left\"],function(n,r){t[\"border\"+r+\"Color\"]=e}),t}},c=t.Color.names={aqua:\"#00ffff\",black:\"#000000\",blue:\"#0000ff\",fuchsia:\"#ff00ff\",gray:\"#808080\",green:\"#008000\",lime:\"#00ff00\",maroon:\"#800000\",navy:\"#000080\",olive:\"#808000\",purple:\"#800080\",red:\"#ff0000\",silver:\"#c0c0c0\",teal:\"#008080\",white:\"#ffffff\",yellow:\"#ffff00\",transparent:[null,null,null,0],_default:\"#ffffff\"}}(jQuery),function(){function i(){var t=this.ownerDocument.defaultView?this.ownerDocument.defaultView.getComputedStyle(this,null):this.currentStyle,n={},r,i,s;if(t&&t.length&&t[0]&&t[t[0]]){s=t.length;while(s--)r=t[s],typeof t[r]==\"string\"&&(n[e.camelCase(r)]=t[r])}else for(r in t)typeof t[r]==\"string\"&&(n[r]=t[r]);return n}function s(t,n){var i={},s,o;for(s in n)o=n[s],t[s]!==o&&!r[s]&&(e.fx.step[s]||!isNaN(parseFloat(o)))&&(i[s]=o);return i}var n=[\"add\",\"remove\",\"toggle\"],r={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};e.each([\"borderLeftStyle\",\"borderRightStyle\",\"borderBottomStyle\",\"borderTopStyle\"],function(t,n){e.fx.step[n]=function(e){if(e.end!==\"none\"&&!e.setAttr||e.pos===1&&!e.setAttr)jQuery.style(e.elem,n,e.end),e.setAttr=!0}}),e.effects.animateClass=function(t,r,o,u){var a=e.speed(r,o,u);return this.queue(function(){var r=e(this),o=r.attr(\"class\")||\"\",u,f=a.children?r.find(\"*\").andSelf():r;f=f.map(function(){var t=e(this);return{el:t,start:i.call(this)}}),u=function(){e.each(n,function(e,n){t[n]&&r[n+\"Class\"](t[n])})},u(),f=f.map(function(){return this.end=i.call(this.el[0]),this.diff=s(this.start,this.end),this}),r.attr(\"class\",o),f=f.map(function(){var t=this,n=e.Deferred(),r=jQuery.extend({},a,{queue:!1,complete:function(){n.resolve(t)}});return this.el.animate(this.diff,r),n.promise()}),e.when.apply(e,f.get()).done(function(){u(),e.each(arguments,function(){var t=this.el;e.each(this.diff,function(e){t.css(e,\"\")})}),a.complete.call(r[0])})})},e.fn.extend({_addClass:e.fn.addClass,addClass:function(t,n,r,i){return n?e.effects.animateClass.call(this,{add:t},n,r,i):this._addClass(t)},_removeClass:e.fn.removeClass,removeClass:function(t,n,r,i){return n?e.effects.animateClass.call(this,{remove:t},n,r,i):this._removeClass(t)},_toggleClass:e.fn.toggleClass,toggleClass:function(n,r,i,s,o){return typeof r==\"boolean\"||r===t?i?e.effects.animateClass.call(this,r?{add:n}:{remove:n},i,s,o):this._toggleClass(n,r):e.effects.animateClass.call(this,{toggle:n},r,i,s)},switchClass:function(t,n,r,i,s){return e.effects.animateClass.call(this,{add:n,remove:t},r,i,s)}})}(),function(){function i(n,r,i,s){e.isPlainObject(n)&&(r=n,n=n.effect),n={effect:n},r===t&&(r={}),e.isFunction(r)&&(s=r,i=null,r={});if(typeof r==\"number\"||e.fx.speeds[r])s=i,i=r,r={};return e.isFunction(i)&&(s=i,i=null),r&&e.extend(n,r),i=i||r.duration,n.duration=e.fx.off?0:typeof i==\"number\"?i:i in e.fx.speeds?e.fx.speeds[i]:e.fx.speeds._default,n.complete=s||r.complete,n}function s(t){return!t||typeof t==\"number\"||e.fx.speeds[t]?!0:typeof t==\"string\"&&!e.effects.effect[t]?n&&e.effects[t]?!1:!0:!1}e.extend(e.effects,{version:\"1.9.0\",save:function(e,t){for(var n=0;n<t.length;n++)t[n]!==null&&e.data(r+t[n],e[0].style[t[n]])},restore:function(e,n){var i,s;for(s=0;s<n.length;s++)n[s]!==null&&(i=e.data(r+n[s]),i===t&&(i=\"\"),e.css(n[s],i))},setMode:function(e,t){return t===\"toggle\"&&(t=e.is(\":hidden\")?\"show\":\"hide\"),t},getBaseline:function(e,t){var n,r;switch(e[0]){case\"top\":n=0;break;case\"middle\":n=.5;break;case\"bottom\":n=1;break;default:n=e[0]/t.height}switch(e[1]){case\"left\":r=0;break;case\"center\":r=.5;break;case\"right\":r=1;break;default:r=e[1]/t.width}return{x:r,y:n}},createWrapper:function(t){if(t.parent().is(\".ui-effects-wrapper\"))return t.parent();var n={width:t.outerWidth(!0),height:t.outerHeight(!0),\"float\":t.css(\"float\")},r=e(\"<div></div>\").addClass(\"ui-effects-wrapper\").css({fontSize:\"100%\",background:\"transparent\",border:\"none\",margin:0,padding:0}),i={width:t.width(),height:t.height()},s=document.activeElement;try{s.id}catch(o){s=document.body}return t.wrap(r),(t[0]===s||e.contains(t[0],s))&&e(s).focus(),r=t.parent(),t.css(\"position\")===\"static\"?(r.css({position:\"relative\"}),t.css({position:\"relative\"})):(e.extend(n,{position:t.css(\"position\"),zIndex:t.css(\"z-index\")}),e.each([\"top\",\"left\",\"bottom\",\"right\"],function(e,r){n[r]=t.css(r),isNaN(parseInt(n[r],10))&&(n[r]=\"auto\")}),t.css({position:\"relative\",top:0,left:0,right:\"auto\",bottom:\"auto\"})),t.css(i),r.css(n).show()},removeWrapper:function(t){var n=document.activeElement;return t.parent().is(\".ui-effects-wrapper\")&&(t.parent().replaceWith(t),(t[0]===n||e.contains(t[0],n))&&e(n).focus()),t},setTransition:function(t,n,r,i){return i=i||{},e.each(n,function(e,n){var s=t.cssUnit(n);s[0]>0&&(i[n]=s[0]*r+s[1])}),i}}),e.fn.extend({effect:function(t,r,s,o){function h(t){function s(){e.isFunction(r)&&r.call(n[0]),e.isFunction(t)&&t()}var n=e(this),r=u.complete,i=u.mode;(n.is(\":hidden\")?i===\"hide\":i===\"show\")?s():l.call(n[0],u,s)}var u=i.apply(this,arguments),a=u.mode,f=u.queue,l=e.effects.effect[u.effect],c=!l&&n&&e.effects[u.effect];return e.fx.off||!l&&!c?a?this[a](u.duration,u.complete):this.each(function(){u.complete&&u.complete.call(this)}):l?f===!1?this.each(h):this.queue(f||\"fx\",h):c.call(this,{options:u,duration:u.duration,callback:u.complete,mode:u.mode})},_show:e.fn.show,show:function(e){if(s(e))return this._show.apply(this,arguments);var t=i.apply(this,arguments);return t.mode=\"show\",this.effect.call(this,t)},_hide:e.fn.hide,hide:function(e){if(s(e))return this._hide.apply(this,arguments);var t=i.apply(this,arguments);return t.mode=\"hide\",this.effect.call(this,t)},__toggle:e.fn.toggle,toggle:function(t){if(s(t)||typeof t==\"boolean\"||e.isFunction(t))return this.__toggle.apply(this,arguments);var n=i.apply(this,arguments);return n.mode=\"toggle\",this.effect.call(this,n)},cssUnit:function(t){var n=this.css(t),r=[];return e.each([\"em\",\"px\",\"%\",\"pt\"],function(e,t){n.indexOf(t)>0&&(r=[parseFloat(n),t])}),r}})}(),function(){var t={};e.each([\"Quad\",\"Cubic\",\"Quart\",\"Quint\",\"Expo\"],function(e,n){t[n]=function(t){return Math.pow(t,e+2)}}),e.extend(t,{Sine:function(e){return 1-Math.cos(e*Math.PI/2)},Circ:function(e){return 1-Math.sqrt(1-e*e)},Elastic:function(e){return e===0||e===1?e:-Math.pow(2,8*(e-1))*Math.sin(((e-1)*80-7.5)*Math.PI/15)},Back:function(e){return e*e*(3*e-2)},Bounce:function(e){var t,n=4;while(e<((t=Math.pow(2,--n))-1)/11);return 1/Math.pow(4,3-n)-7.5625*Math.pow((t*3-2)/22-e,2)}}),e.each(t,function(t,n){e.easing[\"easeIn\"+t]=n,e.easing[\"easeOut\"+t]=function(e){return 1-n(1-e)},e.easing[\"easeInOut\"+t]=function(e){return e<.5?n(e*2)/2:1-n(e*-2+2)/2}})}()}(jQuery);(function(e,t){var n=/up|down|vertical/,r=/up|left|vertical|horizontal/;e.effects.effect.blind=function(t,i){var s=e(this),o=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],u=e.effects.setMode(s,t.mode||\"hide\"),a=t.direction||\"up\",f=n.test(a),l=f?\"height\":\"width\",c=f?\"top\":\"left\",h=r.test(a),p={},d=u===\"show\",v,m,g;s.parent().is(\".ui-effects-wrapper\")?e.effects.save(s.parent(),o):e.effects.save(s,o),s.show(),v=e.effects.createWrapper(s).css({overflow:\"hidden\"}),m=v[l](),g=parseFloat(v.css(c))||0,p[l]=d?m:0,h||(s.css(f?\"bottom\":\"right\",0).css(f?\"top\":\"left\",\"auto\").css({position:\"absolute\"}),p[c]=d?g:m+g),d&&(v.css(l,0),h||v.css(c,g+m)),v.animate(p,{duration:t.duration,easing:t.easing,queue:!1,complete:function(){u===\"hide\"&&s.hide(),e.effects.restore(s,o),e.effects.removeWrapper(s),i()}})}})(jQuery);(function(e,t){e.effects.effect.bounce=function(t,n){var r=e(this),i=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],s=e.effects.setMode(r,t.mode||\"effect\"),o=s===\"hide\",u=s===\"show\",a=t.direction||\"up\",f=t.distance,l=t.times||5,c=l*2+(u||o?1:0),h=t.duration/c,p=t.easing,d=a===\"up\"||a===\"down\"?\"top\":\"left\",v=a===\"up\"||a===\"left\",m,g,y,b=r.queue(),w=b.length;(u||o)&&i.push(\"opacity\"),e.effects.save(r,i),r.show(),e.effects.createWrapper(r),f||(f=r[d===\"top\"?\"outerHeight\":\"outerWidth\"]()/3),u&&(y={opacity:1},y[d]=0,r.css(\"opacity\",0).css(d,v?-f*2:f*2).animate(y,h,p)),o&&(f/=Math.pow(2,l-1)),y={},y[d]=0;for(m=0;m<l;m++)g={},g[d]=(v?\"-=\":\"+=\")+f,r.animate(g,h,p).animate(y,h,p),f=o?f*2:f/2;o&&(g={opacity:0},g[d]=(v?\"-=\":\"+=\")+f,r.animate(g,h,p)),r.queue(function(){o&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}),w>1&&b.splice.apply(b,[1,0].concat(b.splice(w,c+1))),r.dequeue()}})(jQuery);(function(e,t){e.effects.effect.clip=function(t,n){var r=e(this),i=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],s=e.effects.setMode(r,t.mode||\"hide\"),o=s===\"show\",u=t.direction||\"vertical\",a=u===\"vertical\",f=a?\"height\":\"width\",l=a?\"top\":\"left\",c={},h,p,d;e.effects.save(r,i),r.show(),h=e.effects.createWrapper(r).css({overflow:\"hidden\"}),p=r[0].tagName===\"IMG\"?h:r,d=p[f](),o&&(p.css(f,0),p.css(l,d/2)),c[f]=o?d:0,c[l]=o?0:d/2,p.animate(c,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){o||r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}})}})(jQuery);(function(e,t){e.effects.effect.drop=function(t,n){var r=e(this),i=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"opacity\",\"height\",\"width\"],s=e.effects.setMode(r,t.mode||\"hide\"),o=s===\"show\",u=t.direction||\"left\",a=u===\"up\"||u===\"down\"?\"top\":\"left\",f=u===\"up\"||u===\"left\"?\"pos\":\"neg\",l={opacity:o?1:0},c;e.effects.save(r,i),r.show(),e.effects.createWrapper(r),c=t.distance||r[a===\"top\"?\"outerHeight\":\"outerWidth\"](!0)/2,o&&r.css(\"opacity\",0).css(a,f===\"pos\"?-c:c),l[a]=(o?f===\"pos\"?\"+=\":\"-=\":f===\"pos\"?\"-=\":\"+=\")+c,r.animate(l,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){s===\"hide\"&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}})}})(jQuery);(function(e,t){e.effects.effect.explode=function(t,n){function y(){c.push(this),c.length===r*i&&b()}function b(){s.css({visibility:\"visible\"}),e(c).remove(),u||s.hide(),n()}var r=t.pieces?Math.round(Math.sqrt(t.pieces)):3,i=r,s=e(this),o=e.effects.setMode(s,t.mode||\"hide\"),u=o===\"show\",a=s.show().css(\"visibility\",\"hidden\").offset(),f=Math.ceil(s.outerWidth()/i),l=Math.ceil(s.outerHeight()/r),c=[],h,p,d,v,m,g;for(h=0;h<r;h++){v=a.top+h*l,g=h-(r-1)/2;for(p=0;p<i;p++)d=a.left+p*f,m=p-(i-1)/2,s.clone().appendTo(\"body\").wrap(\"<div></div>\").css({position:\"absolute\",visibility:\"visible\",left:-p*f,top:-h*l}).parent().addClass(\"ui-effects-explode\").css({position:\"absolute\",overflow:\"hidden\",width:f,height:l,left:d+(u?m*f:0),top:v+(u?g*l:0),opacity:u?0:1}).animate({left:d+(u?0:m*f),top:v+(u?0:g*l),opacity:u?1:0},t.duration||500,t.easing,y)}}})(jQuery);(function(e,t){e.effects.effect.fade=function(t,n){var r=e(this),i=e.effects.setMode(r,t.mode||\"toggle\");r.animate({opacity:i},{queue:!1,duration:t.duration,easing:t.easing,complete:n})}})(jQuery);(function(e,t){e.effects.effect.fold=function(t,n){var r=e(this),i=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],s=e.effects.setMode(r,t.mode||\"hide\"),o=s===\"show\",u=s===\"hide\",a=t.size||15,f=/([0-9]+)%/.exec(a),l=!!t.horizFirst,c=o!==l,h=c?[\"width\",\"height\"]:[\"height\",\"width\"],p=t.duration/2,d,v,m={},g={};e.effects.save(r,i),r.show(),d=e.effects.createWrapper(r).css({overflow:\"hidden\"}),v=c?[d.width(),d.height()]:[d.height(),d.width()],f&&(a=parseInt(f[1],10)/100*v[u?0:1]),o&&d.css(l?{height:0,width:a}:{height:a,width:0}),m[h[0]]=o?v[0]:a,g[h[1]]=o?v[1]:0,d.animate(m,p,t.easing).animate(g,p,t.easing,function(){u&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()})}})(jQuery);(function(e,t){e.effects.effect.highlight=function(t,n){var r=e(this),i=[\"backgroundImage\",\"backgroundColor\",\"opacity\"],s=e.effects.setMode(r,t.mode||\"show\"),o={backgroundColor:r.css(\"backgroundColor\")};s===\"hide\"&&(o.opacity=0),e.effects.save(r,i),r.show().css({backgroundImage:\"none\",backgroundColor:t.color||\"#ffff99\"}).animate(o,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){s===\"hide\"&&r.hide(),e.effects.restore(r,i),n()}})}})(jQuery);(function(e,t){e.effects.effect.pulsate=function(t,n){var r=e(this),i=e.effects.setMode(r,t.mode||\"show\"),s=i===\"show\",o=i===\"hide\",u=s||i===\"hide\",a=(t.times||5)*2+(u?1:0),f=t.duration/a,l=0,c=r.queue(),h=c.length,p;if(s||!r.is(\":visible\"))r.css(\"opacity\",0).show(),l=1;for(p=1;p<a;p++)r.animate({opacity:l},f,t.easing),l=1-l;r.animate({opacity:l},f,t.easing),r.queue(function(){o&&r.hide(),n()}),h>1&&c.splice.apply(c,[1,0].concat(c.splice(h,a+1))),r.dequeue()}})(jQuery);(function(e,t){e.effects.effect.puff=function(t,n){var r=e(this),i=e.effects.setMode(r,t.mode||\"hide\"),s=i===\"hide\",o=parseInt(t.percent,10)||150,u=o/100,a={height:r.height(),width:r.width()};e.extend(t,{effect:\"scale\",queue:!1,fade:!0,mode:i,complete:n,percent:s?o:100,from:s?a:{height:a.height*u,width:a.width*u}}),r.effect(t)},e.effects.effect.scale=function(t,n){var r=e(this),i=e.extend(!0,{},t),s=e.effects.setMode(r,t.mode||\"effect\"),o=parseInt(t.percent,10)||(parseInt(t.percent,10)===0?0:s===\"hide\"?0:100),u=t.direction||\"both\",a=t.origin,f={height:r.height(),width:r.width(),outerHeight:r.outerHeight(),outerWidth:r.outerWidth()},l={y:u!==\"horizontal\"?o/100:1,x:u!==\"vertical\"?o/100:1};i.effect=\"size\",i.queue=!1,i.complete=n,s!==\"effect\"&&(i.origin=a||[\"middle\",\"center\"],i.restore=!0),i.from=t.from||(s===\"show\"?{height:0,width:0}:f),i.to={height:f.height*l.y,width:f.width*l.x,outerHeight:f.outerHeight*l.y,outerWidth:f.outerWidth*l.x},i.fade&&(s===\"show\"&&(i.from.opacity=0,i.to.opacity=1),s===\"hide\"&&(i.from.opacity=1,i.to.opacity=0)),r.effect(i)},e.effects.effect.size=function(t,n){var r=e(this),i=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"width\",\"height\",\"overflow\",\"opacity\"],s=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"overflow\",\"opacity\"],o=[\"width\",\"height\",\"overflow\"],u=[\"fontSize\"],a=[\"borderTopWidth\",\"borderBottomWidth\",\"paddingTop\",\"paddingBottom\"],f=[\"borderLeftWidth\",\"borderRightWidth\",\"paddingLeft\",\"paddingRight\"],l=e.effects.setMode(r,t.mode||\"effect\"),c=t.restore||l!==\"effect\",h=t.scale||\"both\",p=t.origin||[\"middle\",\"center\"],d,v,m,g=r.css(\"position\");l===\"show\"&&r.show(),d={height:r.height(),width:r.width(),outerHeight:r.outerHeight(),outerWidth:r.outerWidth()},r.from=t.from||d,r.to=t.to||d,m={from:{y:r.from.height/d.height,x:r.from.width/d.width},to:{y:r.to.height/d.height,x:r.to.width/d.width}};if(h===\"box\"||h===\"both\")m.from.y!==m.to.y&&(i=i.concat(a),r.from=e.effects.setTransition(r,a,m.from.y,r.from),r.to=e.effects.setTransition(r,a,m.to.y,r.to)),m.from.x!==m.to.x&&(i=i.concat(f),r.from=e.effects.setTransition(r,f,m.from.x,r.from),r.to=e.effects.setTransition(r,f,m.to.x,r.to));(h===\"content\"||h===\"both\")&&m.from.y!==m.to.y&&(i=i.concat(u),r.from=e.effects.setTransition(r,u,m.from.y,r.from),r.to=e.effects.setTransition(r,u,m.to.y,r.to)),e.effects.save(r,c?i:s),r.show(),e.effects.createWrapper(r),r.css(\"overflow\",\"hidden\").css(r.from),p&&(v=e.effects.getBaseline(p,d),r.from.top=(d.outerHeight-r.outerHeight())*v.y,r.from.left=(d.outerWidth-r.outerWidth())*v.x,r.to.top=(d.outerHeight-r.to.outerHeight)*v.y,r.to.left=(d.outerWidth-r.to.outerWidth)*v.x),r.css(r.from);if(h===\"content\"||h===\"both\")a=a.concat([\"marginTop\",\"marginBottom\"]).concat(u),f=f.concat([\"marginLeft\",\"marginRight\"]),o=i.concat(a).concat(f),r.find(\"*[width]\").each(function(){var n=e(this),r={height:n.height(),width:n.width()};c&&e.effects.save(n,o),n.from={height:r.height*m.from.y,width:r.width*m.from.x},n.to={height:r.height*m.to.y,width:r.width*m.to.x},m.from.y!==m.to.y&&(n.from=e.effects.setTransition(n,a,m.from.y,n.from),n.to=e.effects.setTransition(n,a,m.to.y,n.to)),m.from.x!==m.to.x&&(n.from=e.effects.setTransition(n,f,m.from.x,n.from),n.to=e.effects.setTransition(n,f,m.to.x,n.to)),n.css(n.from),n.animate(n.to,t.duration,t.easing,function(){c&&e.effects.restore(n,o)})});r.animate(r.to,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){r.to.opacity===0&&r.css(\"opacity\",r.from.opacity),l===\"hide\"&&r.hide(),e.effects.restore(r,c?i:s),c||(g===\"static\"?r.css({position:\"relative\",top:r.to.top,left:r.to.left}):e.each([\"top\",\"left\"],function(e,t){r.css(t,function(t,n){var i=parseInt(n,10),s=e?r.to.left:r.to.top;return n===\"auto\"?s+\"px\":i+s+\"px\"})})),e.effects.removeWrapper(r),n()}})}})(jQuery);(function(e,t){e.effects.effect.shake=function(t,n){var r=e(this),i=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],s=e.effects.setMode(r,t.mode||\"effect\"),o=t.direction||\"left\",u=t.distance||20,a=t.times||3,f=a*2+1,l=Math.round(t.duration/f),c=o===\"up\"||o===\"down\"?\"top\":\"left\",h=o===\"up\"||o===\"left\",p={},d={},v={},m,g=r.queue(),y=g.length;e.effects.save(r,i),r.show(),e.effects.createWrapper(r),p[c]=(h?\"-=\":\"+=\")+u,d[c]=(h?\"+=\":\"-=\")+u*2,v[c]=(h?\"-=\":\"+=\")+u*2,r.animate(p,l,t.easing);for(m=1;m<a;m++)r.animate(d,l,t.easing).animate(v,l,t.easing);r.animate(d,l,t.easing).animate(p,l/2,t.easing).queue(function(){s===\"hide\"&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}),y>1&&g.splice.apply(g,[1,0].concat(g.splice(y,f+1))),r.dequeue()}})(jQuery);(function(e,t){e.effects.effect.slide=function(t,n){var r=e(this),i=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"width\",\"height\"],s=e.effects.setMode(r,t.mode||\"show\"),o=s===\"show\",u=t.direction||\"left\",a=u===\"up\"||u===\"down\"?\"top\":\"left\",f=u===\"up\"||u===\"left\",l,c={};e.effects.save(r,i),r.show(),l=t.distance||r[a===\"top\"?\"outerHeight\":\"outerWidth\"](!0),e.effects.createWrapper(r).css({overflow:\"hidden\"}),o&&r.css(a,f?isNaN(l)?\"-\"+l:-l:l),c[a]=(o?f?\"+=\":\"-=\":f?\"-=\":\"+=\")+l,r.animate(c,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){s===\"hide\"&&r.hide(),e.effects.restore(r,i),e.effects.removeWrapper(r),n()}})}})(jQuery);(function(e,t){e.effects.effect.transfer=function(t,n){var r=e(this),i=e(t.to),s=i.css(\"position\")===\"fixed\",o=e(\"body\"),u=s?o.scrollTop():0,a=s?o.scrollLeft():0,f=i.offset(),l={top:f.top-u,left:f.left-a,height:i.innerHeight(),width:i.innerWidth()},c=r.offset(),h=e('<div class=\"ui-effects-transfer\"></div>').appendTo(document.body).addClass(t.className).css({top:c.top-u,left:c.left-a,height:r.innerHeight(),width:r.innerWidth(),position:s?\"fixed\":\"absolute\"}).animate(l,t.duration,t.easing,function(){h.remove(),n()})}})(jQuery);(function(e,t){var n=!1;e.widget(\"ui.menu\",{version:\"1.9.0\",defaultElement:\"<ul>\",delay:300,options:{icons:{submenu:\"ui-icon-carat-1-e\"},menus:\"ul\",position:{my:\"left top\",at:\"right top\"},role:\"menu\",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.element.uniqueId().addClass(\"ui-menu ui-widget ui-widget-content ui-corner-all\").toggleClass(\"ui-menu-icons\",!!this.element.find(\".ui-icon\").length).attr({role:this.options.role,tabIndex:0}).bind(\"click\"+this.eventNamespace,e.proxy(function(e){this.options.disabled&&e.preventDefault()},this)),this.options.disabled&&this.element.addClass(\"ui-state-disabled\").attr(\"aria-disabled\",\"true\"),this._on({\"mousedown .ui-menu-item > a\":function(e){e.preventDefault()},\"click .ui-state-disabled > a\":function(e){e.preventDefault()},\"click .ui-menu-item:has(a)\":function(t){var r=e(t.target).closest(\".ui-menu-item\");!n&&r.not(\".ui-state-disabled\").length&&(n=!0,this.select(t),r.has(\".ui-menu\").length?this.expand(t):this.element.is(\":focus\")||(this.element.trigger(\"focus\",[!0]),this.active&&this.active.parents(\".ui-menu\").length===1&&clearTimeout(this.timer)))},\"mouseenter .ui-menu-item\":function(t){var n=e(t.currentTarget);n.siblings().children(\".ui-state-active\").removeClass(\"ui-state-active\"),this.focus(t,n)},mouseleave:\"collapseAll\",\"mouseleave .ui-menu\":\"collapseAll\",focus:function(e,t){var n=this.active||this.element.children(\".ui-menu-item\").eq(0);t||this.focus(e,n)},blur:function(t){this._delay(function(){e.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(t)})},keydown:\"_keydown\"}),this.refresh(),this._on(this.document,{click:function(t){e(t.target).closest(\".ui-menu\").length||this.collapseAll(t),n=!1}})},_destroy:function(){this.element.removeAttr(\"aria-activedescendant\").find(\".ui-menu\").andSelf().removeClass(\"ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons\").removeAttr(\"role\").removeAttr(\"tabIndex\").removeAttr(\"aria-labelledby\").removeAttr(\"aria-expanded\").removeAttr(\"aria-hidden\").removeAttr(\"aria-disabled\").removeUniqueId().show(),this.element.find(\".ui-menu-item\").removeClass(\"ui-menu-item\").removeAttr(\"role\").removeAttr(\"aria-disabled\").children(\"a\").removeUniqueId().removeClass(\"ui-corner-all ui-state-hover\").removeAttr(\"tabIndex\").removeAttr(\"role\").removeAttr(\"aria-haspopup\").children().each(function(){var t=e(this);t.data(\"ui-menu-submenu-carat\")&&t.remove()}),this.element.find(\".ui-menu-divider\").removeClass(\"ui-menu-divider ui-widget-content\")},_keydown:function(t){function a(e){return e.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g,\"\\\\$&\")}var n,r,i,s,o,u=!0;switch(t.keyCode){case e.ui.keyCode.PAGE_UP:this.previousPage(t);break;case e.ui.keyCode.PAGE_DOWN:this.nextPage(t);break;case e.ui.keyCode.HOME:this._move(\"first\",\"first\",t);break;case e.ui.keyCode.END:this._move(\"last\",\"last\",t);break;case e.ui.keyCode.UP:this.previous(t);break;case e.ui.keyCode.DOWN:this.next(t);break;case e.ui.keyCode.LEFT:this.collapse(t);break;case e.ui.keyCode.RIGHT:this.active&&!this.active.is(\".ui-state-disabled\")&&this.expand(t);break;case e.ui.keyCode.ENTER:case e.ui.keyCode.SPACE:this._activate(t);break;case e.ui.keyCode.ESCAPE:this.collapse(t);break;default:u=!1,r=this.previousFilter||\"\",i=String.fromCharCode(t.keyCode),s=!1,clearTimeout(this.filterTimer),i===r?s=!0:i=r+i,o=new RegExp(\"^\"+a(i),\"i\"),n=this.activeMenu.children(\".ui-menu-item\").filter(function(){return o.test(e(this).children(\"a\").text())}),n=s&&n.index(this.active.next())!==-1?this.active.nextAll(\".ui-menu-item\"):n,n.length||(i=String.fromCharCode(t.keyCode),o=new RegExp(\"^\"+a(i),\"i\"),n=this.activeMenu.children(\".ui-menu-item\").filter(function(){return o.test(e(this).children(\"a\").text())})),n.length?(this.focus(t,n),n.length>1?(this.previousFilter=i,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter):delete this.previousFilter}u&&t.preventDefault()},_activate:function(e){this.active.is(\".ui-state-disabled\")||(this.active.children(\"a[aria-haspopup='true']\").length?this.expand(e):this.select(e))},refresh:function(){var t,n=this.options.icons.submenu,r=this.element.find(this.options.menus+\":not(.ui-menu)\").addClass(\"ui-menu ui-widget ui-widget-content ui-corner-all\").hide().attr({role:this.options.role,\"aria-hidden\":\"true\",\"aria-expanded\":\"false\"});t=r.add(this.element),t.children(\":not(.ui-menu-item):has(a)\").addClass(\"ui-menu-item\").attr(\"role\",\"presentation\").children(\"a\").uniqueId().addClass(\"ui-corner-all\").attr({tabIndex:-1,role:this._itemRole()}),t.children(\":not(.ui-menu-item)\").each(function(){var t=e(this);/[^\\-—–\\s]/.test(t.text())||t.addClass(\"ui-widget-content ui-menu-divider\")}),t.children(\".ui-state-disabled\").attr(\"aria-disabled\",\"true\"),r.each(function(){var t=e(this),r=t.prev(\"a\"),i=e(\"<span>\").addClass(\"ui-menu-icon ui-icon \"+n).data(\"ui-menu-submenu-carat\",!0);r.attr(\"aria-haspopup\",\"true\").prepend(i),t.attr(\"aria-labelledby\",r.attr(\"id\"))}),this.active&&!e.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:\"menuitem\",listbox:\"option\"}[this.options.role]},focus:function(e,t){var n,r;this.blur(e,e&&e.type===\"focus\"),this._scrollIntoView(t),this.active=t.first(),r=this.active.children(\"a\").addClass(\"ui-state-focus\"),this.options.role&&this.element.attr(\"aria-activedescendant\",r.attr(\"id\")),this.active.parent().closest(\".ui-menu-item\").children(\"a:first\").addClass(\"ui-state-active\"),e&&e.type===\"keydown\"?this._close():this.timer=this._delay(function(){this._close()},this.delay),n=t.children(\".ui-menu\"),n.length&&/^mouse/.test(e.type)&&this._startOpening(n),this.activeMenu=t.parent(),this._trigger(\"focus\",e,{item:t})},_scrollIntoView:function(t){var n,r,i,s,o,u;this._hasScroll()&&(n=parseFloat(e.css(this.activeMenu[0],\"borderTopWidth\"))||0,r=parseFloat(e.css(this.activeMenu[0],\"paddingTop\"))||0,i=t.offset().top-this.activeMenu.offset().top-n-r,s=this.activeMenu.scrollTop(),o=this.activeMenu.height(),u=t.height(),i<0?this.activeMenu.scrollTop(s+i):i+u>o&&this.activeMenu.scrollTop(s+i-o+u))},blur:function(e,t){t||clearTimeout(this.timer);if(!this.active)return;this.active.children(\"a\").removeClass(\"ui-state-focus\"),this.active=null,this._trigger(\"blur\",e,{item:this.active})},_startOpening:function(e){clearTimeout(this.timer);if(e.attr(\"aria-hidden\")!==\"true\")return;this.timer=this._delay(function(){this._close(),this._open(e)},this.delay)},_open:function(t){var n=e.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(\".ui-menu\").not(t.parents(\".ui-menu\")).hide().attr(\"aria-hidden\",\"true\"),t.show().removeAttr(\"aria-hidden\").attr(\"aria-expanded\",\"true\").position(n)},collapseAll:function(t,n){clearTimeout(this.timer),this.timer=this._delay(function(){var r=n?this.element:e(t&&t.target).closest(this.element.find(\".ui-menu\"));r.length||(r=this.element),this._close(r),this.blur(t),this.activeMenu=r},this.delay)},_close:function(e){e||(e=this.active?this.active.parent():this.element),e.find(\".ui-menu\").hide().attr(\"aria-hidden\",\"true\").attr(\"aria-expanded\",\"false\").end().find(\"a.ui-state-active\").removeClass(\"ui-state-active\")},collapse:function(e){var t=this.active&&this.active.parent().closest(\".ui-menu-item\",this.element);t&&t.length&&(this._close(),this.focus(e,t))},expand:function(e){var t=this.active&&this.active.children(\".ui-menu \").children(\".ui-menu-item\").first();t&&t.length&&(this._open(t.parent()),this._delay(function(){this.focus(e,t)}))},next:function(e){this._move(\"next\",\"first\",e)},previous:function(e){this._move(\"prev\",\"last\",e)},isFirstItem:function(){return this.active&&!this.active.prevAll(\".ui-menu-item\").length},isLastItem:function(){return this.active&&!this.active.nextAll(\".ui-menu-item\").length},_move:function(e,t,n){var r;this.active&&(e===\"first\"||e===\"last\"?r=this.active[e===\"first\"?\"prevAll\":\"nextAll\"](\".ui-menu-item\").eq(-1):r=this.active[e+\"All\"](\".ui-menu-item\").eq(0));if(!r||!r.length||!this.active)r=this.activeMenu.children(\".ui-menu-item\")[t]();this.focus(n,r)},nextPage:function(t){var n,r,i;if(!this.active){this.next(t);return}if(this.isLastItem())return;this._hasScroll()?(r=this.active.offset().top,i=this.element.height(),this.active.nextAll(\".ui-menu-item\").each(function(){return n=e(this),n.offset().top-r-i<0}),this.focus(t,n)):this.focus(t,this.activeMenu.children(\".ui-menu-item\")[this.active?\"last\":\"first\"]())},previousPage:function(t){var n,r,i;if(!this.active){this.next(t);return}if(this.isFirstItem())return;this._hasScroll()?(r=this.active.offset().top,i=this.element.height(),this.active.prevAll(\".ui-menu-item\").each(function(){return n=e(this),n.offset().top-r+i>0}),this.focus(t,n)):this.focus(t,this.activeMenu.children(\".ui-menu-item\").first())},_hasScroll:function(){return this.element.outerHeight()<this.element.prop(\"scrollHeight\")},select:function(t){this.active=this.active||e(t.target).closest(\".ui-menu-item\");var n={item:this.active};this.active.has(\".ui-menu\").length||this.collapseAll(t,!0),this._trigger(\"select\",t,n)}})})(jQuery);(function(e,t){e.widget(\"ui.progressbar\",{version:\"1.9.0\",options:{value:0,max:100},min:0,_create:function(){this.element.addClass(\"ui-progressbar ui-widget ui-widget-content ui-corner-all\").attr({role:\"progressbar\",\"aria-valuemin\":this.min,\"aria-valuemax\":this.options.max,\"aria-valuenow\":this._value()}),this.valueDiv=e(\"<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>\").appendTo(this.element),this.oldValue=this._value(),this._refreshValue()},_destroy:function(){this.element.removeClass(\"ui-progressbar ui-widget ui-widget-content ui-corner-all\").removeAttr(\"role\").removeAttr(\"aria-valuemin\").removeAttr(\"aria-valuemax\").removeAttr(\"aria-valuenow\"),this.valueDiv.remove()},value:function(e){return e===t?this._value():(this._setOption(\"value\",e),this)},_setOption:function(e,t){e===\"value\"&&(this.options.value=t,this._refreshValue(),this._value()===this.options.max&&this._trigger(\"complete\")),this._super(e,t)},_value:function(){var e=this.options.value;return typeof e!=\"number\"&&(e=0),Math.min(this.options.max,Math.max(this.min,e))},_percentage:function(){return 100*this._value()/this.options.max},_refreshValue:function(){var e=this.value(),t=this._percentage();this.oldValue!==e&&(this.oldValue=e,this._trigger(\"change\")),this.valueDiv.toggle(e>this.min).toggleClass(\"ui-corner-right\",e===this.options.max).width(t.toFixed(0)+\"%\"),this.element.attr(\"aria-valuenow\",e)}})})(jQuery);(function(e,t){e.widget(\"ui.resizable\",e.ui.mouse,{version:\"1.9.0\",widgetEventPrefix:\"resize\",options:{alsoResize:!1,animate:!1,animateDuration:\"slow\",animateEasing:\"swing\",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:\"e,s,se\",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1e3},_create:function(){var t=this,n=this.options;this.element.addClass(\"ui-resizable\"),e.extend(this,{_aspectRatio:!!n.aspectRatio,aspectRatio:n.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:n.helper||n.ghost||n.animate?n.helper||\"ui-resizable-helper\":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(e('<div class=\"ui-wrapper\" style=\"overflow: hidden;\"></div>').css({position:this.element.css(\"position\"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css(\"top\"),left:this.element.css(\"left\")})),this.element=this.element.parent().data(\"resizable\",this.element.data(\"resizable\")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css(\"marginLeft\"),marginTop:this.originalElement.css(\"marginTop\"),marginRight:this.originalElement.css(\"marginRight\"),marginBottom:this.originalElement.css(\"marginBottom\")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css(\"resize\"),this.originalElement.css(\"resize\",\"none\"),this._proportionallyResizeElements.push(this.originalElement.css({position:\"static\",zoom:1,display:\"block\"})),this.originalElement.css({margin:this.originalElement.css(\"margin\")}),this._proportionallyResize()),this.handles=n.handles||(e(\".ui-resizable-handle\",this.element).length?{n:\".ui-resizable-n\",e:\".ui-resizable-e\",s:\".ui-resizable-s\",w:\".ui-resizable-w\",se:\".ui-resizable-se\",sw:\".ui-resizable-sw\",ne:\".ui-resizable-ne\",nw:\".ui-resizable-nw\"}:\"e,s,se\");if(this.handles.constructor==String){this.handles==\"all\"&&(this.handles=\"n,e,s,w,se,sw,ne,nw\");var r=this.handles.split(\",\");this.handles={};for(var i=0;i<r.length;i++){var s=e.trim(r[i]),o=\"ui-resizable-\"+s,u=e('<div class=\"ui-resizable-handle '+o+'\"></div>');u.css({zIndex:n.zIndex}),\"se\"==s&&u.addClass(\"ui-icon ui-icon-gripsmall-diagonal-se\"),this.handles[s]=\".ui-resizable-\"+s,this.element.append(u)}}this._renderAxis=function(t){t=t||this.element;for(var n in this.handles){this.handles[n].constructor==String&&(this.handles[n]=e(this.handles[n],this.element).show());if(this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var r=e(this.handles[n],this.element),i=0;i=/sw|ne|nw|se|n|s/.test(n)?r.outerHeight():r.outerWidth();var s=[\"padding\",/ne|nw|n/.test(n)?\"Top\":/se|sw|s/.test(n)?\"Bottom\":/^e$/.test(n)?\"Right\":\"Left\"].join(\"\");t.css(s,i),this._proportionallyResize()}if(!e(this.handles[n]).length)continue}},this._renderAxis(this.element),this._handles=e(\".ui-resizable-handle\",this.element).disableSelection(),this._handles.mouseover(function(){if(!t.resizing){if(this.className)var e=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);t.axis=e&&e[1]?e[1]:\"se\"}}),n.autoHide&&(this._handles.hide(),e(this.element).addClass(\"ui-resizable-autohide\").mouseenter(function(){if(n.disabled)return;e(this).removeClass(\"ui-resizable-autohide\"),t._handles.show()}).mouseleave(function(){if(n.disabled)return;t.resizing||(e(this).addClass(\"ui-resizable-autohide\"),t._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var t=function(t){e(t).removeClass(\"ui-resizable ui-resizable-disabled ui-resizable-resizing\").removeData(\"resizable\").removeData(\"ui-resizable\").unbind(\".resizable\").find(\".ui-resizable-handle\").remove()};if(this.elementIsWrapper){t(this.element);var n=this.element;n.after(this.originalElement.css({position:n.css(\"position\"),width:n.outerWidth(),height:n.outerHeight(),top:n.css(\"top\"),left:n.css(\"left\")})).remove()}return this.originalElement.css(\"resize\",this.originalResizeStyle),t(this.originalElement),this},_mouseCapture:function(t){var n=!1;for(var r in this.handles)e(this.handles[r])[0]==t.target&&(n=!0);return!this.options.disabled&&n},_mouseStart:function(t){var r=this.options,i=this.element.position(),s=this.element;this.resizing=!0,this.documentScroll={top:e(document).scrollTop(),left:e(document).scrollLeft()},(s.is(\".ui-draggable\")||/absolute/.test(s.css(\"position\")))&&s.css({position:\"absolute\",top:i.top,left:i.left}),this._renderProxy();var o=n(this.helper.css(\"left\")),u=n(this.helper.css(\"top\"));r.containment&&(o+=e(r.containment).scrollLeft()||0,u+=e(r.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:o,top:u},this.size=this._helper?{width:s.outerWidth(),height:s.outerHeight()}:{width:s.width(),height:s.height()},this.originalSize=this._helper?{width:s.outerWidth(),height:s.outerHeight()}:{width:s.width(),height:s.height()},this.originalPosition={left:o,top:u},this.sizeDiff={width:s.outerWidth()-s.width(),height:s.outerHeight()-s.height()},this.originalMousePosition={left:t.pageX,top:t.pageY},this.aspectRatio=typeof r.aspectRatio==\"number\"?r.aspectRatio:this.originalSize.width/this.originalSize.height||1;var a=e(\".ui-resizable-\"+this.axis).css(\"cursor\");return e(\"body\").css(\"cursor\",a==\"auto\"?this.axis+\"-resize\":a),s.addClass(\"ui-resizable-resizing\"),this._propagate(\"start\",t),!0},_mouseDrag:function(e){var t=this.helper,n=this.options,r={},i=this,s=this.originalMousePosition,o=this.axis,u=e.pageX-s.left||0,a=e.pageY-s.top||0,f=this._change[o];if(!f)return!1;var l=f.apply(this,[e,u,a]);this._updateVirtualBoundaries(e.shiftKey);if(this._aspectRatio||e.shiftKey)l=this._updateRatio(l,e);return l=this._respectSize(l,e),this._propagate(\"resize\",e),t.css({top:this.position.top+\"px\",left:this.position.left+\"px\",width:this.size.width+\"px\",height:this.size.height+\"px\"}),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),this._updateCache(l),this._trigger(\"resize\",e,this.ui()),!1},_mouseStop:function(t){this.resizing=!1;var n=this.options,r=this;if(this._helper){var i=this._proportionallyResizeElements,s=i.length&&/textarea/i.test(i[0].nodeName),o=s&&e.ui.hasScroll(i[0],\"left\")?0:r.sizeDiff.height,u=s?0:r.sizeDiff.width,a={width:r.helper.width()-u,height:r.helper.height()-o},f=parseInt(r.element.css(\"left\"),10)+(r.position.left-r.originalPosition.left)||null,l=parseInt(r.element.css(\"top\"),10)+(r.position.top-r.originalPosition.top)||null;n.animate||this.element.css(e.extend(a,{top:l,left:f})),r.helper.height(r.size.height),r.helper.width(r.size.width),this._helper&&!n.animate&&this._proportionallyResize()}return e(\"body\").css(\"cursor\",\"auto\"),this.element.removeClass(\"ui-resizable-resizing\"),this._propagate(\"stop\",t),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(e){var t=this.options,n,i,s,o,u;u={minWidth:r(t.minWidth)?t.minWidth:0,maxWidth:r(t.maxWidth)?t.maxWidth:Infinity,minHeight:r(t.minHeight)?t.minHeight:0,maxHeight:r(t.maxHeight)?t.maxHeight:Infinity};if(this._aspectRatio||e)n=u.minHeight*this.aspectRatio,s=u.minWidth/this.aspectRatio,i=u.maxHeight*this.aspectRatio,o=u.maxWidth/this.aspectRatio,n>u.minWidth&&(u.minWidth=n),s>u.minHeight&&(u.minHeight=s),i<u.maxWidth&&(u.maxWidth=i),o<u.maxHeight&&(u.maxHeight=o);this._vBoundaries=u},_updateCache:function(e){var t=this.options;this.offset=this.helper.offset(),r(e.left)&&(this.position.left=e.left),r(e.top)&&(this.position.top=e.top),r(e.height)&&(this.size.height=e.height),r(e.width)&&(this.size.width=e.width)},_updateRatio:function(e,t){var n=this.options,i=this.position,s=this.size,o=this.axis;return r(e.height)?e.width=e.height*this.aspectRatio:r(e.width)&&(e.height=e.width/this.aspectRatio),o==\"sw\"&&(e.left=i.left+(s.width-e.width),e.top=null),o==\"nw\"&&(e.top=i.top+(s.height-e.height),e.left=i.left+(s.width-e.width)),e},_respectSize:function(e,t){var n=this.helper,i=this._vBoundaries,s=this._aspectRatio||t.shiftKey,o=this.axis,u=r(e.width)&&i.maxWidth&&i.maxWidth<e.width,a=r(e.height)&&i.maxHeight&&i.maxHeight<e.height,f=r(e.width)&&i.minWidth&&i.minWidth>e.width,l=r(e.height)&&i.minHeight&&i.minHeight>e.height;f&&(e.width=i.minWidth),l&&(e.height=i.minHeight),u&&(e.width=i.maxWidth),a&&(e.height=i.maxHeight);var c=this.originalPosition.left+this.originalSize.width,h=this.position.top+this.size.height,p=/sw|nw|w/.test(o),d=/nw|ne|n/.test(o);f&&p&&(e.left=c-i.minWidth),u&&p&&(e.left=c-i.maxWidth),l&&d&&(e.top=h-i.minHeight),a&&d&&(e.top=h-i.maxHeight);var v=!e.width&&!e.height;return v&&!e.left&&e.top?e.top=null:v&&!e.top&&e.left&&(e.left=null),e},_proportionallyResize:function(){var t=this.options;if(!this._proportionallyResizeElements.length)return;var n=this.helper||this.element;for(var r=0;r<this._proportionallyResizeElements.length;r++){var i=this._proportionallyResizeElements[r];if(!this.borderDif){var s=[i.css(\"borderTopWidth\"),i.css(\"borderRightWidth\"),i.css(\"borderBottomWidth\"),i.css(\"borderLeftWidth\")],o=[i.css(\"paddingTop\"),i.css(\"paddingRight\"),i.css(\"paddingBottom\"),i.css(\"paddingLeft\")];this.borderDif=e.map(s,function(e,t){var n=parseInt(e,10)||0,r=parseInt(o[t],10)||0;return n+r})}i.css({height:n.height()-this.borderDif[0]-this.borderDif[2]||0,width:n.width()-this.borderDif[1]-this.borderDif[3]||0})}},_renderProxy:function(){var t=this.element,n=this.options;this.elementOffset=t.offset();if(this._helper){this.helper=this.helper||e('<div style=\"overflow:hidden;\"></div>');var r=e.browser.msie&&e.browser.version<7,i=r?1:0,s=r?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+s,height:this.element.outerHeight()+s,position:\"absolute\",left:this.elementOffset.left-i+\"px\",top:this.elementOffset.top-i+\"px\",zIndex:++n.zIndex}),this.helper.appendTo(\"body\").disableSelection()}else this.helper=this.element},_change:{e:function(e,t,n){return{width:this.originalSize.width+t}},w:function(e,t,n){var r=this.options,i=this.originalSize,s=this.originalPosition;return{left:s.left+t,width:i.width-t}},n:function(e,t,n){var r=this.options,i=this.originalSize,s=this.originalPosition;return{top:s.top+n,height:i.height-n}},s:function(e,t,n){return{height:this.originalSize.height+n}},se:function(t,n,r){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[t,n,r]))},sw:function(t,n,r){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[t,n,r]))},ne:function(t,n,r){return e.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[t,n,r]))},nw:function(t,n,r){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[t,n,r]))}},_propagate:function(t,n){e.ui.plugin.call(this,t,[n,this.ui()]),t!=\"resize\"&&this._trigger(t,n,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),e.ui.plugin.add(\"resizable\",\"alsoResize\",{start:function(t,n){var r=e(this).data(\"resizable\"),i=r.options,s=function(t){e(t).each(function(){var t=e(this);t.data(\"resizable-alsoresize\",{width:parseInt(t.width(),10),height:parseInt(t.height(),10),left:parseInt(t.css(\"left\"),10),top:parseInt(t.css(\"top\"),10)})})};typeof i.alsoResize==\"object\"&&!i.alsoResize.parentNode?i.alsoResize.length?(i.alsoResize=i.alsoResize[0],s(i.alsoResize)):e.each(i.alsoResize,function(e){s(e)}):s(i.alsoResize)},resize:function(t,n){var r=e(this).data(\"resizable\"),i=r.options,s=r.originalSize,o=r.originalPosition,u={height:r.size.height-s.height||0,width:r.size.width-s.width||0,top:r.position.top-o.top||0,left:r.position.left-o.left||0},a=function(t,r){e(t).each(function(){var t=e(this),i=e(this).data(\"resizable-alsoresize\"),s={},o=r&&r.length?r:t.parents(n.originalElement[0]).length?[\"width\",\"height\"]:[\"width\",\"height\",\"top\",\"left\"];e.each(o,function(e,t){var n=(i[t]||0)+(u[t]||0);n&&n>=0&&(s[t]=n||null)}),t.css(s)})};typeof i.alsoResize==\"object\"&&!i.alsoResize.nodeType?e.each(i.alsoResize,function(e,t){a(e,t)}):a(i.alsoResize)},stop:function(t,n){e(this).removeData(\"resizable-alsoresize\")}}),e.ui.plugin.add(\"resizable\",\"animate\",{stop:function(t,n){var r=e(this).data(\"resizable\"),i=r.options,s=r._proportionallyResizeElements,o=s.length&&/textarea/i.test(s[0].nodeName),u=o&&e.ui.hasScroll(s[0],\"left\")?0:r.sizeDiff.height,a=o?0:r.sizeDiff.width,f={width:r.size.width-a,height:r.size.height-u},l=parseInt(r.element.css(\"left\"),10)+(r.position.left-r.originalPosition.left)||null,c=parseInt(r.element.css(\"top\"),10)+(r.position.top-r.originalPosition.top)||null;r.element.animate(e.extend(f,c&&l?{top:c,left:l}:{}),{duration:i.animateDuration,easing:i.animateEasing,step:function(){var n={width:parseInt(r.element.css(\"width\"),10),height:parseInt(r.element.css(\"height\"),10),top:parseInt(r.element.css(\"top\"),10),left:parseInt(r.element.css(\"left\"),10)};s&&s.length&&e(s[0]).css({width:n.width,height:n.height}),r._updateCache(n),r._propagate(\"resize\",t)}})}}),e.ui.plugin.add(\"resizable\",\"containment\",{start:function(t,r){var i=e(this).data(\"resizable\"),s=i.options,o=i.element,u=s.containment,a=u instanceof e?u.get(0):/parent/.test(u)?o.parent().get(0):u;if(!a)return;i.containerElement=e(a);if(/document/.test(u)||u==document)i.containerOffset={left:0,top:0},i.containerPosition={left:0,top:0},i.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight};else{var f=e(a),l=[];e([\"Top\",\"Right\",\"Left\",\"Bottom\"]).each(function(e,t){l[e]=n(f.css(\"padding\"+t))}),i.containerOffset=f.offset(),i.containerPosition=f.position(),i.containerSize={height:f.innerHeight()-l[3],width:f.innerWidth()-l[1]};var c=i.containerOffset,h=i.containerSize.height,p=i.containerSize.width,d=e.ui.hasScroll(a,\"left\")?a.scrollWidth:p,v=e.ui.hasScroll(a)?a.scrollHeight:h;i.parentData={element:a,left:c.left,top:c.top,width:d,height:v}}},resize:function(t,n){var r=e(this).data(\"resizable\"),i=r.options,s=r.containerSize,o=r.containerOffset,u=r.size,a=r.position,f=r._aspectRatio||t.shiftKey,l={top:0,left:0},c=r.containerElement;c[0]!=document&&/static/.test(c.css(\"position\"))&&(l=o),a.left<(r._helper?o.left:0)&&(r.size.width=r.size.width+(r._helper?r.position.left-o.left:r.position.left-l.left),f&&(r.size.height=r.size.width/r.aspectRatio),r.position.left=i.helper?o.left:0),a.top<(r._helper?o.top:0)&&(r.size.height=r.size.height+(r._helper?r.position.top-o.top:r.position.top),f&&(r.size.width=r.size.height*r.aspectRatio),r.position.top=r._helper?o.top:0),r.offset.left=r.parentData.left+r.position.left,r.offset.top=r.parentData.top+r.position.top;var h=Math.abs((r._helper?r.offset.left-l.left:r.offset.left-l.left)+r.sizeDiff.width),p=Math.abs((r._helper?r.offset.top-l.top:r.offset.top-o.top)+r.sizeDiff.height),d=r.containerElement.get(0)==r.element.parent().get(0),v=/relative|absolute/.test(r.containerElement.css(\"position\"));d&&v&&(h-=r.parentData.left),h+r.size.width>=r.parentData.width&&(r.size.width=r.parentData.width-h,f&&(r.size.height=r.size.width/r.aspectRatio)),p+r.size.height>=r.parentData.height&&(r.size.height=r.parentData.height-p,f&&(r.size.width=r.size.height*r.aspectRatio))},stop:function(t,n){var r=e(this).data(\"resizable\"),i=r.options,s=r.position,o=r.containerOffset,u=r.containerPosition,a=r.containerElement,f=e(r.helper),l=f.offset(),c=f.outerWidth()-r.sizeDiff.width,h=f.outerHeight()-r.sizeDiff.height;r._helper&&!i.animate&&/relative/.test(a.css(\"position\"))&&e(this).css({left:l.left-u.left-o.left,width:c,height:h}),r._helper&&!i.animate&&/static/.test(a.css(\"position\"))&&e(this).css({left:l.left-u.left-o.left,width:c,height:h})}}),e.ui.plugin.add(\"resizable\",\"ghost\",{start:function(t,n){var r=e(this).data(\"resizable\"),i=r.options,s=r.size;r.ghost=r.originalElement.clone(),r.ghost.css({opacity:.25,display:\"block\",position:\"relative\",height:s.height,width:s.width,margin:0,left:0,top:0}).addClass(\"ui-resizable-ghost\").addClass(typeof i.ghost==\"string\"?i.ghost:\"\"),r.ghost.appendTo(r.helper)},resize:function(t,n){var r=e(this).data(\"resizable\"),i=r.options;r.ghost&&r.ghost.css({position:\"relative\",height:r.size.height,width:r.size.width})},stop:function(t,n){var r=e(this).data(\"resizable\"),i=r.options;r.ghost&&r.helper&&r.helper.get(0).removeChild(r.ghost.get(0))}}),e.ui.plugin.add(\"resizable\",\"grid\",{resize:function(t,n){var r=e(this).data(\"resizable\"),i=r.options,s=r.size,o=r.originalSize,u=r.originalPosition,a=r.axis,f=i._aspectRatio||t.shiftKey;i.grid=typeof i.grid==\"number\"?[i.grid,i.grid]:i.grid;var l=Math.round((s.width-o.width)/(i.grid[0]||1))*(i.grid[0]||1),c=Math.round((s.height-o.height)/(i.grid[1]||1))*(i.grid[1]||1);/^(se|s|e)$/.test(a)?(r.size.width=o.width+l,r.size.height=o.height+c):/^(ne)$/.test(a)?(r.size.width=o.width+l,r.size.height=o.height+c,r.position.top=u.top-c):/^(sw)$/.test(a)?(r.size.width=o.width+l,r.size.height=o.height+c,r.position.left=u.left-l):(r.size.width=o.width+l,r.size.height=o.height+c,r.position.top=u.top-c,r.position.left=u.left-l)}});var n=function(e){return parseInt(e,10)||0},r=function(e){return!isNaN(parseInt(e,10))}})(jQuery);(function(e,t){e.widget(\"ui.selectable\",e.ui.mouse,{version:\"1.9.0\",options:{appendTo:\"body\",autoRefresh:!0,distance:0,filter:\"*\",tolerance:\"touch\"},_create:function(){var t=this;this.element.addClass(\"ui-selectable\"),this.dragged=!1;var n;this.refresh=function(){n=e(t.options.filter,t.element[0]),n.addClass(\"ui-selectee\"),n.each(function(){var t=e(this),n=t.offset();e.data(this,\"selectable-item\",{element:this,$element:t,left:n.left,top:n.top,right:n.left+t.outerWidth(),bottom:n.top+t.outerHeight(),startselected:!1,selected:t.hasClass(\"ui-selected\"),selecting:t.hasClass(\"ui-selecting\"),unselecting:t.hasClass(\"ui-unselecting\")})})},this.refresh(),this.selectees=n.addClass(\"ui-selectee\"),this._mouseInit(),this.helper=e(\"<div class='ui-selectable-helper'></div>\")},_destroy:function(){this.selectees.removeClass(\"ui-selectee\").removeData(\"selectable-item\"),this.element.removeClass(\"ui-selectable ui-selectable-disabled\"),this._mouseDestroy()},_mouseStart:function(t){var n=this;this.opos=[t.pageX,t.pageY];if(this.options.disabled)return;var r=this.options;this.selectees=e(r.filter,this.element[0]),this._trigger(\"start\",t),e(r.appendTo).append(this.helper),this.helper.css({left:t.clientX,top:t.clientY,width:0,height:0}),r.autoRefresh&&this.refresh(),this.selectees.filter(\".ui-selected\").each(function(){var r=e.data(this,\"selectable-item\");r.startselected=!0,!t.metaKey&&!t.ctrlKey&&(r.$element.removeClass(\"ui-selected\"),r.selected=!1,r.$element.addClass(\"ui-unselecting\"),r.unselecting=!0,n._trigger(\"unselecting\",t,{unselecting:r.element}))}),e(t.target).parents().andSelf().each(function(){var r=e.data(this,\"selectable-item\");if(r){var i=!t.metaKey&&!t.ctrlKey||!r.$element.hasClass(\"ui-selected\");return r.$element.removeClass(i?\"ui-unselecting\":\"ui-selected\").addClass(i?\"ui-selecting\":\"ui-unselecting\"),r.unselecting=!i,r.selecting=i,r.selected=i,i?n._trigger(\"selecting\",t,{selecting:r.element}):n._trigger(\"unselecting\",t,{unselecting:r.element}),!1}})},_mouseDrag:function(t){var n=this;this.dragged=!0;if(this.options.disabled)return;var r=this.options,i=this.opos[0],s=this.opos[1],o=t.pageX,u=t.pageY;if(i>o){var a=o;o=i,i=a}if(s>u){var a=u;u=s,s=a}return this.helper.css({left:i,top:s,width:o-i,height:u-s}),this.selectees.each(function(){var a=e.data(this,\"selectable-item\");if(!a||a.element==n.element[0])return;var f=!1;r.tolerance==\"touch\"?f=!(a.left>o||a.right<i||a.top>u||a.bottom<s):r.tolerance==\"fit\"&&(f=a.left>i&&a.right<o&&a.top>s&&a.bottom<u),f?(a.selected&&(a.$element.removeClass(\"ui-selected\"),a.selected=!1),a.unselecting&&(a.$element.removeClass(\"ui-unselecting\"),a.unselecting=!1),a.selecting||(a.$element.addClass(\"ui-selecting\"),a.selecting=!0,n._trigger(\"selecting\",t,{selecting:a.element}))):(a.selecting&&((t.metaKey||t.ctrlKey)&&a.startselected?(a.$element.removeClass(\"ui-selecting\"),a.selecting=!1,a.$element.addClass(\"ui-selected\"),a.selected=!0):(a.$element.removeClass(\"ui-selecting\"),a.selecting=!1,a.startselected&&(a.$element.addClass(\"ui-unselecting\"),a.unselecting=!0),n._trigger(\"unselecting\",t,{unselecting:a.element}))),a.selected&&!t.metaKey&&!t.ctrlKey&&!a.startselected&&(a.$element.removeClass(\"ui-selected\"),a.selected=!1,a.$element.addClass(\"ui-unselecting\"),a.unselecting=!0,n._trigger(\"unselecting\",t,{unselecting:a.element})))}),!1},_mouseStop:function(t){var n=this;this.dragged=!1;var r=this.options;return e(\".ui-unselecting\",this.element[0]).each(function(){var r=e.data(this,\"selectable-item\");r.$element.removeClass(\"ui-unselecting\"),r.unselecting=!1,r.startselected=!1,n._trigger(\"unselected\",t,{unselected:r.element})}),e(\".ui-selecting\",this.element[0]).each(function(){var r=e.data(this,\"selectable-item\");r.$element.removeClass(\"ui-selecting\").addClass(\"ui-selected\"),r.selecting=!1,r.selected=!0,r.startselected=!0,n._trigger(\"selected\",t,{selected:r.element})}),this._trigger(\"stop\",t),this.helper.remove(),!1}})})(jQuery);(function(e,t){var n=5;e.widget(\"ui.slider\",e.ui.mouse,{version:\"1.9.0\",widgetEventPrefix:\"slide\",options:{animate:!1,distance:0,max:100,min:0,orientation:\"horizontal\",range:!1,step:1,value:0,values:null},_create:function(){var t,r=this.options,i=this.element.find(\".ui-slider-handle\").addClass(\"ui-state-default ui-corner-all\"),s=\"<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>\",o=r.values&&r.values.length||1,u=[];this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this.element.addClass(\"ui-slider ui-slider-\"+this.orientation+\" ui-widget\"+\" ui-widget-content\"+\" ui-corner-all\"+(r.disabled?\" ui-slider-disabled ui-disabled\":\"\")),this.range=e([]),r.range&&(r.range===!0&&(r.values||(r.values=[this._valueMin(),this._valueMin()]),r.values.length&&r.values.length!==2&&(r.values=[r.values[0],r.values[0]])),this.range=e(\"<div></div>\").appendTo(this.element).addClass(\"ui-slider-range ui-widget-header\"+(r.range===\"min\"||r.range===\"max\"?\" ui-slider-range-\"+r.range:\"\")));for(t=i.length;t<o;t++)u.push(s);this.handles=i.add(e(u.join(\"\")).appendTo(this.element)),this.handle=this.handles.eq(0),this.handles.add(this.range).filter(\"a\").click(function(e){e.preventDefault()}).mouseenter(function(){r.disabled||e(this).addClass(\"ui-state-hover\")}).mouseleave(function(){e(this).removeClass(\"ui-state-hover\")}).focus(function(){r.disabled?e(this).blur():(e(\".ui-slider .ui-state-focus\").removeClass(\"ui-state-focus\"),e(this).addClass(\"ui-state-focus\"))}).blur(function(){e(this).removeClass(\"ui-state-focus\")}),this.handles.each(function(t){e(this).data(\"ui-slider-handle-index\",t)}),this._on(this.handles,{keydown:function(t){var r,i,s,o,u=e(t.target).data(\"ui-slider-handle-index\");switch(t.keyCode){case e.ui.keyCode.HOME:case e.ui.keyCode.END:case e.ui.keyCode.PAGE_UP:case e.ui.keyCode.PAGE_DOWN:case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:t.preventDefault();if(!this._keySliding){this._keySliding=!0,e(t.target).addClass(\"ui-state-active\"),r=this._start(t,u);if(r===!1)return}}o=this.options.step,this.options.values&&this.options.values.length?i=s=this.values(u):i=s=this.value();switch(t.keyCode){case e.ui.keyCode.HOME:s=this._valueMin();break;case e.ui.keyCode.END:s=this._valueMax();break;case e.ui.keyCode.PAGE_UP:s=this._trimAlignValue(i+(this._valueMax()-this._valueMin())/n);break;case e.ui.keyCode.PAGE_DOWN:s=this._trimAlignValue(i-(this._valueMax()-this._valueMin())/n);break;case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:if(i===this._valueMax())return;s=this._trimAlignValue(i+o);break;case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(i===this._valueMin())return;s=this._trimAlignValue(i-o)}this._slide(t,u,s)},keyup:function(t){var n=e(t.target).data(\"ui-slider-handle-index\");this._keySliding&&(this._keySliding=!1,this._stop(t,n),this._change(t,n),e(t.target).removeClass(\"ui-state-active\"))}}),this._refreshValue(),this._animateOff=!1},_destroy:function(){this.handles.remove(),this.range.remove(),this.element.removeClass(\"ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all\"),this._mouseDestroy()},_mouseCapture:function(t){var n,r,i,s,o,u,a,f,l=this,c=this.options;return c.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),n={x:t.pageX,y:t.pageY},r=this._normValueFromMouse(n),i=this._valueMax()-this._valueMin()+1,this.handles.each(function(t){var n=Math.abs(r-l.values(t));i>n&&(i=n,s=e(this),o=t)}),c.range===!0&&this.values(1)===c.min&&(o+=1,s=e(this.handles[o])),u=this._start(t,o),u===!1?!1:(this._mouseSliding=!0,this._handleIndex=o,s.addClass(\"ui-state-active\").focus(),a=s.offset(),f=!e(t.target).parents().andSelf().is(\".ui-slider-handle\"),this._clickOffset=f?{left:0,top:0}:{left:t.pageX-a.left-s.width()/2,top:t.pageY-a.top-s.height()/2-(parseInt(s.css(\"borderTopWidth\"),10)||0)-(parseInt(s.css(\"borderBottomWidth\"),10)||0)+(parseInt(s.css(\"marginTop\"),10)||0)},this.handles.hasClass(\"ui-state-hover\")||this._slide(t,o,r),this._animateOff=!0,!0))},_mouseStart:function(e){return!0},_mouseDrag:function(e){var t={x:e.pageX,y:e.pageY},n=this._normValueFromMouse(t);return this._slide(e,this._handleIndex,n),!1},_mouseStop:function(e){return this.handles.removeClass(\"ui-state-active\"),this._mouseSliding=!1,this._stop(e,this._handleIndex),this._change(e,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation=this.options.orientation===\"vertical\"?\"vertical\":\"horizontal\"},_normValueFromMouse:function(e){var t,n,r,i,s;return this.orientation===\"horizontal\"?(t=this.elementSize.width,n=e.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(t=this.elementSize.height,n=e.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),r=n/t,r>1&&(r=1),r<0&&(r=0),this.orientation===\"vertical\"&&(r=1-r),i=this._valueMax()-this._valueMin(),s=this._valueMin()+r*i,this._trimAlignValue(s)},_start:function(e,t){var n={handle:this.handles[t],value:this.value()};return this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger(\"start\",e,n)},_slide:function(e,t,n){var r,i,s;this.options.values&&this.options.values.length?(r=this.values(t?0:1),this.options.values.length===2&&this.options.range===!0&&(t===0&&n>r||t===1&&n<r)&&(n=r),n!==this.values(t)&&(i=this.values(),i[t]=n,s=this._trigger(\"slide\",e,{handle:this.handles[t],value:n,values:i}),r=this.values(t?0:1),s!==!1&&this.values(t,n,!0))):n!==this.value()&&(s=this._trigger(\"slide\",e,{handle:this.handles[t],value:n}),s!==!1&&this.value(n))},_stop:function(e,t){var n={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger(\"stop\",e,n)},_change:function(e,t){if(!this._keySliding&&!this._mouseSliding){var n={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger(\"change\",e,n)}},value:function(e){if(arguments.length){this.options.value=this._trimAlignValue(e),this._refreshValue(),this._change(null,0);return}return this._value()},values:function(t,n){var r,i,s;if(arguments.length>1){this.options.values[t]=this._trimAlignValue(n),this._refreshValue(),this._change(null,t);return}if(!arguments.length)return this._values();if(!e.isArray(arguments[0]))return this.options.values&&this.options.values.length?this._values(t):this.value();r=this.options.values,i=arguments[0];for(s=0;s<r.length;s+=1)r[s]=this._trimAlignValue(i[s]),this._change(null,s);this._refreshValue()},_setOption:function(t,n){var r,i=0;e.isArray(this.options.values)&&(i=this.options.values.length),e.Widget.prototype._setOption.apply(this,arguments);switch(t){case\"disabled\":n?(this.handles.filter(\".ui-state-focus\").blur(),this.handles.removeClass(\"ui-state-hover\"),this.handles.prop(\"disabled\",!0),this.element.addClass(\"ui-disabled\")):(this.handles.prop(\"disabled\",!1),this.element.removeClass(\"ui-disabled\"));break;case\"orientation\":this._detectOrientation(),this.element.removeClass(\"ui-slider-horizontal ui-slider-vertical\").addClass(\"ui-slider-\"+this.orientation),this._refreshValue();break;case\"value\":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case\"values\":this._animateOff=!0,this._refreshValue();for(r=0;r<i;r+=1)this._change(null,r);this._animateOff=!1}},_value:function(){var e=this.options.value;return e=this._trimAlignValue(e),e},_values:function(e){var t,n,r;if(arguments.length)return t=this.options.values[e],t=this._trimAlignValue(t),t;n=this.options.values.slice();for(r=0;r<n.length;r+=1)n[r]=this._trimAlignValue(n[r]);return n},_trimAlignValue:function(e){if(e<=this._valueMin())return this._valueMin();if(e>=this._valueMax())return this._valueMax();var t=this.options.step>0?this.options.step:1,n=(e-this._valueMin())%t,r=e-n;return Math.abs(n)*2>=t&&(r+=n>0?t:-t),parseFloat(r.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var t,n,r,i,s,o=this.options.range,u=this.options,a=this,f=this._animateOff?!1:u.animate,l={};this.options.values&&this.options.values.length?this.handles.each(function(r,i){n=(a.values(r)-a._valueMin())/(a._valueMax()-a._valueMin())*100,l[a.orientation===\"horizontal\"?\"left\":\"bottom\"]=n+\"%\",e(this).stop(1,1)[f?\"animate\":\"css\"](l,u.animate),a.options.range===!0&&(a.orientation===\"horizontal\"?(r===0&&a.range.stop(1,1)[f?\"animate\":\"css\"]({left:n+\"%\"},u.animate),r===1&&a.range[f?\"animate\":\"css\"]({width:n-t+\"%\"},{queue:!1,duration:u.animate})):(r===0&&a.range.stop(1,1)[f?\"animate\":\"css\"]({bottom:n+\"%\"},u.animate),r===1&&a.range[f?\"animate\":\"css\"]({height:n-t+\"%\"},{queue:!1,duration:u.animate}))),t=n}):(r=this.value(),i=this._valueMin(),s=this._valueMax(),n=s!==i?(r-i)/(s-i)*100:0,l[this.orientation===\"horizontal\"?\"left\":\"bottom\"]=n+\"%\",this.handle.stop(1,1)[f?\"animate\":\"css\"](l,u.animate),o===\"min\"&&this.orientation===\"horizontal\"&&this.range.stop(1,1)[f?\"animate\":\"css\"]({width:n+\"%\"},u.animate),o===\"max\"&&this.orientation===\"horizontal\"&&this.range[f?\"animate\":\"css\"]({width:100-n+\"%\"},{queue:!1,duration:u.animate}),o===\"min\"&&this.orientation===\"vertical\"&&this.range.stop(1,1)[f?\"animate\":\"css\"]({height:n+\"%\"},u.animate),o===\"max\"&&this.orientation===\"vertical\"&&this.range[f?\"animate\":\"css\"]({height:100-n+\"%\"},{queue:!1,duration:u.animate}))}})})(jQuery);(function(e,t){e.widget(\"ui.sortable\",e.ui.mouse,{version:\"1.9.0\",widgetEventPrefix:\"sort\",ready:!1,options:{appendTo:\"parent\",axis:!1,connectWith:!1,containment:!1,cursor:\"auto\",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:\"original\",items:\"> *\",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:\"default\",tolerance:\"intersect\",zIndex:1e3},_create:function(){var e=this.options;this.containerCache={},this.element.addClass(\"ui-sortable\"),this.refresh(),this.floating=this.items.length?e.axis===\"x\"||/left|right/.test(this.items[0].item.css(\"float\"))||/inline|table-cell/.test(this.items[0].item.css(\"display\")):!1,this.offset=this.element.offset(),this._mouseInit(),this.ready=!0},_destroy:function(){this.element.removeClass(\"ui-sortable ui-sortable-disabled\"),this._mouseDestroy();for(var e=this.items.length-1;e>=0;e--)this.items[e].item.removeData(this.widgetName+\"-item\");return this},_setOption:function(t,n){t===\"disabled\"?(this.options[t]=n,this.widget().toggleClass(\"ui-sortable-disabled\",!!n)):e.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(t,n){var r=this;if(this.reverting)return!1;if(this.options.disabled||this.options.type==\"static\")return!1;this._refreshItems(t);var i=null,s=e(t.target).parents().each(function(){if(e.data(this,r.widgetName+\"-item\")==r)return i=e(this),!1});e.data(t.target,r.widgetName+\"-item\")==r&&(i=e(t.target));if(!i)return!1;if(this.options.handle&&!n){var o=!1;e(this.options.handle,i).find(\"*\").andSelf().each(function(){this==t.target&&(o=!0)});if(!o)return!1}return this.currentItem=i,this._removeCurrentsFromItems(),!0},_mouseStart:function(t,n,r){var i=this.options;this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(t),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css(\"position\",\"absolute\"),this.cssPosition=this.helper.css(\"position\"),this.originalPosition=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!=this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),i.containment&&this._setContainment(),i.cursor&&(e(\"body\").css(\"cursor\")&&(this._storedCursor=e(\"body\").css(\"cursor\")),e(\"body\").css(\"cursor\",i.cursor)),i.opacity&&(this.helper.css(\"opacity\")&&(this._storedOpacity=this.helper.css(\"opacity\")),this.helper.css(\"opacity\",i.opacity)),i.zIndex&&(this.helper.css(\"zIndex\")&&(this._storedZIndex=this.helper.css(\"zIndex\")),this.helper.css(\"zIndex\",i.zIndex)),this.scrollParent[0]!=document&&this.scrollParent[0].tagName!=\"HTML\"&&(this.overflowOffset=this.scrollParent.offset()),this._trigger(\"start\",t,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions();if(!r)for(var s=this.containers.length-1;s>=0;s--)this.containers[s]._trigger(\"activate\",t,this._uiHash(this));return e.ui.ddmanager&&(e.ui.ddmanager.current=this),e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this.dragging=!0,this.helper.addClass(\"ui-sortable-helper\"),this._mouseDrag(t),!0},_mouseDrag:function(t){this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo(\"absolute\"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs);if(this.options.scroll){var n=this.options,r=!1;this.scrollParent[0]!=document&&this.scrollParent[0].tagName!=\"HTML\"?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-t.pageY<n.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+n.scrollSpeed:t.pageY-this.overflowOffset.top<n.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-n.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-t.pageX<n.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+n.scrollSpeed:t.pageX-this.overflowOffset.left<n.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-n.scrollSpeed)):(t.pageY-e(document).scrollTop()<n.scrollSensitivity?r=e(document).scrollTop(e(document).scrollTop()-n.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<n.scrollSensitivity&&(r=e(document).scrollTop(e(document).scrollTop()+n.scrollSpeed)),t.pageX-e(document).scrollLeft()<n.scrollSensitivity?r=e(document).scrollLeft(e(document).scrollLeft()-n.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<n.scrollSensitivity&&(r=e(document).scrollLeft(e(document).scrollLeft()+n.scrollSpeed))),r!==!1&&e.ui.ddmanager&&!n.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t)}this.positionAbs=this._convertPositionTo(\"absolute\");if(!this.options.axis||this.options.axis!=\"y\")this.helper[0].style.left=this.position.left+\"px\";if(!this.options.axis||this.options.axis!=\"x\")this.helper[0].style.top=this.position.top+\"px\";for(var i=this.items.length-1;i>=0;i--){var s=this.items[i],o=s.item[0],u=this._intersectsWithPointer(s);if(!u)continue;if(s.instance!==this.currentContainer)continue;if(o!=this.currentItem[0]&&this.placeholder[u==1?\"next\":\"prev\"]()[0]!=o&&!e.contains(this.placeholder[0],o)&&(this.options.type==\"semi-dynamic\"?!e.contains(this.element[0],o):!0)){this.direction=u==1?\"down\":\"up\";if(this.options.tolerance!=\"pointer\"&&!this._intersectsWithSides(s))break;this._rearrange(t,s),this._trigger(\"change\",t,this._uiHash());break}}return this._contactContainers(t),e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),this._trigger(\"sort\",t,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(t,n){if(!t)return;e.ui.ddmanager&&!this.options.dropBehaviour&&e.ui.ddmanager.drop(this,t);if(this.options.revert){var r=this,i=this.placeholder.offset();this.reverting=!0,e(this.helper).animate({left:i.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollLeft),top:i.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){r._clear(t)})}else this._clear(t,n);return!1},cancel:function(){if(this.dragging){this._mouseUp({target:null}),this.options.helper==\"original\"?this.currentItem.css(this._storedCSS).removeClass(\"ui-sortable-helper\"):this.currentItem.show();for(var t=this.containers.length-1;t>=0;t--)this.containers[t]._trigger(\"deactivate\",null,this._uiHash(this)),this.containers[t].containerCache.over&&(this.containers[t]._trigger(\"out\",null,this._uiHash(this)),this.containers[t].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.options.helper!=\"original\"&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),e.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?e(this.domPosition.prev).after(this.currentItem):e(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(t){var n=this._getItemsAsjQuery(t&&t.connected),r=[];return t=t||{},e(n).each(function(){var n=(e(t.item||this).attr(t.attribute||\"id\")||\"\").match(t.expression||/(.+)[-=_](.+)/);n&&r.push((t.key||n[1]+\"[]\")+\"=\"+(t.key&&t.expression?n[1]:n[2]))}),!r.length&&t.key&&r.push(t.key+\"=\"),r.join(\"&\")},toArray:function(t){var n=this._getItemsAsjQuery(t&&t.connected),r=[];return t=t||{},n.each(function(){r.push(e(t.item||this).attr(t.attribute||\"id\")||\"\")}),r},_intersectsWith:function(e){var t=this.positionAbs.left,n=t+this.helperProportions.width,r=this.positionAbs.top,i=r+this.helperProportions.height,s=e.left,o=s+e.width,u=e.top,a=u+e.height,f=this.offset.click.top,l=this.offset.click.left,c=r+f>u&&r+f<a&&t+l>s&&t+l<o;return this.options.tolerance==\"pointer\"||this.options.forcePointerForContainers||this.options.tolerance!=\"pointer\"&&this.helperProportions[this.floating?\"width\":\"height\"]>e[this.floating?\"width\":\"height\"]?c:s<t+this.helperProportions.width/2&&n-this.helperProportions.width/2<o&&u<r+this.helperProportions.height/2&&i-this.helperProportions.height/2<a},_intersectsWithPointer:function(t){var n=this.options.axis===\"x\"||e.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),r=this.options.axis===\"y\"||e.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width),i=n&&r,s=this._getDragVerticalDirection(),o=this._getDragHorizontalDirection();return i?this.floating?o&&o==\"right\"||s==\"down\"?2:1:s&&(s==\"down\"?2:1):!1},_intersectsWithSides:function(t){var n=e.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),r=e.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),i=this._getDragVerticalDirection(),s=this._getDragHorizontalDirection();return this.floating&&s?s==\"right\"&&r||s==\"left\"&&!r:i&&(i==\"down\"&&n||i==\"up\"&&!n)},_getDragVerticalDirection:function(){var e=this.positionAbs.top-this.lastPositionAbs.top;return e!=0&&(e>0?\"down\":\"up\")},_getDragHorizontalDirection:function(){var e=this.positionAbs.left-this.lastPositionAbs.left;return e!=0&&(e>0?\"right\":\"left\")},refresh:function(e){return this._refreshItems(e),this.refreshPositions(),this},_connectWith:function(){var e=this.options;return e.connectWith.constructor==String?[e.connectWith]:e.connectWith},_getItemsAsjQuery:function(t){var n=[],r=[],i=this._connectWith();if(i&&t)for(var s=i.length-1;s>=0;s--){var o=e(i[s]);for(var u=o.length-1;u>=0;u--){var a=e.data(o[u],this.widgetName);a&&a!=this&&!a.options.disabled&&r.push([e.isFunction(a.options.items)?a.options.items.call(a.element):e(a.options.items,a.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"),a])}}r.push([e.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):e(this.options.items,this.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"),this]);for(var s=r.length-1;s>=0;s--)r[s][0].each(function(){n.push(this)});return e(n)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(\":data(\"+this.widgetName+\"-item)\");for(var t=0;t<this.items.length;t++)for(var n=0;n<e.length;n++)e[n]==this.items[t].item[0]&&this.items.splice(t,1)},_refreshItems:function(t){this.items=[],this.containers=[this];var n=this.items,r=[[e.isFunction(this.options.items)?this.options.items.call(this.element[0],t,{item:this.currentItem}):e(this.options.items,this.element),this]],i=this._connectWith();if(i&&this.ready)for(var s=i.length-1;s>=0;s--){var o=e(i[s]);for(var u=o.length-1;u>=0;u--){var a=e.data(o[u],this.widgetName);a&&a!=this&&!a.options.disabled&&(r.push([e.isFunction(a.options.items)?a.options.items.call(a.element[0],t,{item:this.currentItem}):e(a.options.items,a.element),a]),this.containers.push(a))}}for(var s=r.length-1;s>=0;s--){var f=r[s][1],l=r[s][0];for(var u=0,c=l.length;u<c;u++){var h=e(l[u]);h.data(this.widgetName+\"-item\",f),n.push({item:h,instance:f,width:0,height:0,left:0,top:0})}}},refreshPositions:function(t){this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());for(var n=this.items.length-1;n>=0;n--){var r=this.items[n];if(r.instance!=this.currentContainer&&this.currentContainer&&r.item[0]!=this.currentItem[0])continue;var i=this.options.toleranceElement?e(this.options.toleranceElement,r.item):r.item;t||(r.width=i.outerWidth(),r.height=i.outerHeight());var s=i.offset();r.left=s.left,r.top=s.top}if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(var n=this.containers.length-1;n>=0;n--){var s=this.containers[n].element.offset();this.containers[n].containerCache.left=s.left,this.containers[n].containerCache.top=s.top,this.containers[n].containerCache.width=this.containers[n].element.outerWidth(),this.containers[n].containerCache.height=this.containers[n].element.outerHeight()}return this},_createPlaceholder:function(t){t=t||this;var n=t.options;if(!n.placeholder||n.placeholder.constructor==String){var r=n.placeholder;n.placeholder={element:function(){var n=e(document.createElement(t.currentItem[0].nodeName)).addClass(r||t.currentItem[0].className+\" ui-sortable-placeholder\").removeClass(\"ui-sortable-helper\")[0];return r||(n.style.visibility=\"hidden\"),n},update:function(e,i){if(r&&!n.forcePlaceholderSize)return;i.height()||i.height(t.currentItem.innerHeight()-parseInt(t.currentItem.css(\"paddingTop\")||0,10)-parseInt(t.currentItem.css(\"paddingBottom\")||0,10)),i.width()||i.width(t.currentItem.innerWidth()-parseInt(t.currentItem.css(\"paddingLeft\")||0,10)-parseInt(t.currentItem.css(\"paddingRight\")||0,10))}}}t.placeholder=e(n.placeholder.element.call(t.element,t.currentItem)),t.currentItem.after(t.placeholder),n.placeholder.update(t,t.placeholder)},_contactContainers:function(t){var n=null,r=null;for(var i=this.containers.length-1;i>=0;i--){if(e.contains(this.currentItem[0],this.containers[i].element[0]))continue;if(this._intersectsWith(this.containers[i].containerCache)){if(n&&e.contains(this.containers[i].element[0],n.element[0]))continue;n=this.containers[i],r=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger(\"out\",t,this._uiHash(this)),this.containers[i].containerCache.over=0)}if(!n)return;if(this.containers.length===1)this.containers[r]._trigger(\"over\",t,this._uiHash(this)),this.containers[r].containerCache.over=1;else if(this.currentContainer!=this.containers[r]){var s=1e4,o=null,u=this.positionAbs[this.containers[r].floating?\"left\":\"top\"];for(var a=this.items.length-1;a>=0;a--){if(!e.contains(this.containers[r].element[0],this.items[a].item[0]))continue;var f=this.containers[r].floating?this.items[a].item.offset().left:this.items[a].item.offset().top;Math.abs(f-u)<s&&(s=Math.abs(f-u),o=this.items[a],this.direction=f-u>0?\"down\":\"up\")}if(!o&&!this.options.dropOnEmpty)return;this.currentContainer=this.containers[r],o?this._rearrange(t,o,null,!0):this._rearrange(t,null,this.containers[r].element,!0),this._trigger(\"change\",t,this._uiHash()),this.containers[r]._trigger(\"change\",t,this._uiHash(this)),this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[r]._trigger(\"over\",t,this._uiHash(this)),this.containers[r].containerCache.over=1}},_createHelper:function(t){var n=this.options,r=e.isFunction(n.helper)?e(n.helper.apply(this.element[0],[t,this.currentItem])):n.helper==\"clone\"?this.currentItem.clone():this.currentItem;return r.parents(\"body\").length||e(n.appendTo!=\"parent\"?n.appendTo:this.currentItem[0].parentNode)[0].appendChild(r[0]),r[0]==this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css(\"position\"),top:this.currentItem.css(\"top\"),left:this.currentItem.css(\"left\")}),(r[0].style.width==\"\"||n.forceHelperSize)&&r.width(this.currentItem.width()),(r[0].style.height==\"\"||n.forceHelperSize)&&r.height(this.currentItem.height()),r},_adjustOffsetFromHelper:function(t){typeof t==\"string\"&&(t=t.split(\" \")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),\"left\"in t&&(this.offset.click.left=t.left+this.margins.left),\"right\"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),\"top\"in t&&(this.offset.click.top=t.top+this.margins.top),\"bottom\"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();this.cssPosition==\"absolute\"&&this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()==\"html\"&&e.browser.msie)t={top:0,left:0};return{top:t.top+(parseInt(this.offsetParent.css(\"borderTopWidth\"),10)||0),left:t.left+(parseInt(this.offsetParent.css(\"borderLeftWidth\"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition==\"relative\"){var e=this.currentItem.position();return{top:e.top-(parseInt(this.helper.css(\"top\"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css(\"left\"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css(\"marginLeft\"),10)||0,top:parseInt(this.currentItem.css(\"marginTop\"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t=this.options;t.containment==\"parent\"&&(t.containment=this.helper[0].parentNode);if(t.containment==\"document\"||t.containment==\"window\")this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,e(t.containment==\"document\"?document:window).width()-this.helperProportions.width-this.margins.left,(e(t.containment==\"document\"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(t.containment)){var n=e(t.containment)[0],r=e(t.containment).offset(),i=e(n).css(\"overflow\")!=\"hidden\";this.containment=[r.left+(parseInt(e(n).css(\"borderLeftWidth\"),10)||0)+(parseInt(e(n).css(\"paddingLeft\"),10)||0)-this.margins.left,r.top+(parseInt(e(n).css(\"borderTopWidth\"),10)||0)+(parseInt(e(n).css(\"paddingTop\"),10)||0)-this.margins.top,r.left+(i?Math.max(n.scrollWidth,n.offsetWidth):n.offsetWidth)-(parseInt(e(n).css(\"borderLeftWidth\"),10)||0)-(parseInt(e(n).css(\"paddingRight\"),10)||0)-this.helperProportions.width-this.margins.left,r.top+(i?Math.max(n.scrollHeight,n.offsetHeight):n.offsetHeight)-(parseInt(e(n).css(\"borderTopWidth\"),10)||0)-(parseInt(e(n).css(\"paddingBottom\"),10)||0)-this.helperProportions.height-this.margins.top]}},_convertPositionTo:function(t,n){n||(n=this.position);var r=t==\"absolute\"?1:-1,i=this.options,s=this.cssPosition!=\"absolute\"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(s[0].tagName);return{top:n.top+this.offset.relative.top*r+this.offset.parent.top*r-(this.cssPosition==\"fixed\"?-this.scrollParent.scrollTop():o?0:s.scrollTop())*r,left:n.left+this.offset.relative.left*r+this.offset.parent.left*r-(this.cssPosition==\"fixed\"?-this.scrollParent.scrollLeft():o?0:s.scrollLeft())*r}},_generatePosition:function(t){var n=this.options,r=this.cssPosition!=\"absolute\"||this.scrollParent[0]!=document&&!!e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,i=/(html|body)/i.test(r[0].tagName);this.cssPosition==\"relative\"&&(this.scrollParent[0]==document||this.scrollParent[0]==this.offsetParent[0])&&(this.offset.relative=this._getRelativeOffset());var s=t.pageX,o=t.pageY;if(this.originalPosition){this.containment&&(t.pageX-this.offset.click.left<this.containment[0]&&(s=this.containment[0]+this.offset.click.left),t.pageY-this.offset.click.top<this.containment[1]&&(o=this.containment[1]+this.offset.click.top),t.pageX-this.offset.click.left>this.containment[2]&&(s=this.containment[2]+this.offset.click.left),t.pageY-this.offset.click.top>this.containment[3]&&(o=this.containment[3]+this.offset.click.top));if(n.grid){var u=this.originalPageY+Math.round((o-this.originalPageY)/n.grid[1])*n.grid[1];o=this.containment?u-this.offset.click.top<this.containment[1]||u-this.offset.click.top>this.containment[3]?u-this.offset.click.top<this.containment[1]?u+n.grid[1]:u-n.grid[1]:u:u;var a=this.originalPageX+Math.round((s-this.originalPageX)/n.grid[0])*n.grid[0];s=this.containment?a-this.offset.click.left<this.containment[0]||a-this.offset.click.left>this.containment[2]?a-this.offset.click.left<this.containment[0]?a+n.grid[0]:a-n.grid[0]:a:a}}return{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(this.cssPosition==\"fixed\"?-this.scrollParent.scrollTop():i?0:r.scrollTop()),left:s-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(this.cssPosition==\"fixed\"?-this.scrollParent.scrollLeft():i?0:r.scrollLeft())}},_rearrange:function(e,t,n,r){n?n[0].appendChild(this.placeholder[0]):t.item[0].parentNode.insertBefore(this.placeholder[0],this.direction==\"down\"?t.item[0]:t.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var i=this.counter;this._delay(function(){i==this.counter&&this.refreshPositions(!r)})},_clear:function(t,n){this.reverting=!1;var r=[];!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null;if(this.helper[0]==this.currentItem[0]){for(var i in this._storedCSS)if(this._storedCSS[i]==\"auto\"||this._storedCSS[i]==\"static\")this._storedCSS[i]=\"\";this.currentItem.css(this._storedCSS).removeClass(\"ui-sortable-helper\")}else this.currentItem.show();this.fromOutside&&!n&&r.push(function(e){this._trigger(\"receive\",e,this._uiHash(this.fromOutside))}),(this.fromOutside||this.domPosition.prev!=this.currentItem.prev().not(\".ui-sortable-helper\")[0]||this.domPosition.parent!=this.currentItem.parent()[0])&&!n&&r.push(function(e){this._trigger(\"update\",e,this._uiHash())}),this!==this.currentContainer&&(n||(r.push(function(e){this._trigger(\"remove\",e,this._uiHash())}),r.push(function(e){return function(t){e._trigger(\"receive\",t,this._uiHash(this))}}.call(this,this.currentContainer)),r.push(function(e){return function(t){e._trigger(\"update\",t,this._uiHash(this))}}.call(this,this.currentContainer))));for(var i=this.containers.length-1;i>=0;i--)n||r.push(function(e){return function(t){e._trigger(\"deactivate\",t,this._uiHash(this))}}.call(this,this.containers[i])),this.containers[i].containerCache.over&&(r.push(function(e){return function(t){e._trigger(\"out\",t,this._uiHash(this))}}.call(this,this.containers[i])),this.containers[i].containerCache.over=0);this._storedCursor&&e(\"body\").css(\"cursor\",this._storedCursor),this._storedOpacity&&this.helper.css(\"opacity\",this._storedOpacity),this._storedZIndex&&this.helper.css(\"zIndex\",this._storedZIndex==\"auto\"?\"\":this._storedZIndex),this.dragging=!1;if(this.cancelHelperRemoval){if(!n){this._trigger(\"beforeStop\",t,this._uiHash());for(var i=0;i<r.length;i++)r[i].call(this,t);this._trigger(\"stop\",t,this._uiHash())}return this.fromOutside=!1,!1}n||this._trigger(\"beforeStop\",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.helper[0]!=this.currentItem[0]&&this.helper.remove(),this.helper=null;if(!n){for(var i=0;i<r.length;i++)r[i].call(this,t);this._trigger(\"stop\",t,this._uiHash())}return this.fromOutside=!1,!0},_trigger:function(){e.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(t){var n=t||this;return{helper:n.helper,placeholder:n.placeholder||e([]),position:n.position,originalPosition:n.originalPosition,offset:n.positionAbs,item:n.currentItem,sender:t?t.element:null}}})})(jQuery);(function(e){function t(e){return function(){var t=this.element.val();e.apply(this,arguments),this._refresh(),t!==this.element.val()&&this._trigger(\"change\")}}e.widget(\"ui.spinner\",{version:\"1.9.0\",defaultElement:\"<input>\",widgetEventPrefix:\"spin\",options:{culture:null,icons:{down:\"ui-icon-triangle-1-s\",up:\"ui-icon-triangle-1-n\"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption(\"max\",this.options.max),this._setOption(\"min\",this.options.min),this._setOption(\"step\",this.options.step),this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr(\"autocomplete\")}})},_getCreateOptions:function(){var t={},n=this.element;return e.each([\"min\",\"max\",\"step\"],function(e,r){var i=n.attr(r);i!==undefined&&i.length&&(t[r]=i)}),t},_events:{keydown:function(e){this._start(e)&&this._keydown(e)&&e.preventDefault()},keyup:\"_stop\",focus:function(){this.uiSpinner.addClass(\"ui-state-active\"),this.previous=this.element.val()},blur:function(e){if(this.cancelBlur){delete this.cancelBlur;return}this._refresh(),this.uiSpinner.removeClass(\"ui-state-active\"),this.previous!==this.element.val()&&this._trigger(\"change\",e)},mousewheel:function(e,t){if(!t)return;if(!this.spinning&&!this._start(e))return!1;this._spin((t>0?1:-1)*this.options.step,e),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(e)},100),e.preventDefault()},\"mousedown .ui-spinner-button\":function(t){function r(){var e=this.element[0]===this.document[0].activeElement;e||(this.element.focus(),this.previous=n,this._delay(function(){this.previous=n}))}var n;n=this.element[0]===this.document[0].activeElement?this.previous:this.element.val(),t.preventDefault(),r.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,r.call(this)});if(this._start(t)===!1)return;this._repeat(null,e(t.currentTarget).hasClass(\"ui-spinner-up\")?1:-1,t)},\"mouseup .ui-spinner-button\":\"_stop\",\"mouseenter .ui-spinner-button\":function(t){if(!e(t.currentTarget).hasClass(\"ui-state-active\"))return;if(this._start(t)===!1)return!1;this._repeat(null,e(t.currentTarget).hasClass(\"ui-spinner-up\")?1:-1,t)},\"mouseleave .ui-spinner-button\":\"_stop\"},_draw:function(){var e=this.uiSpinner=this.element.addClass(\"ui-spinner-input\").attr(\"autocomplete\",\"off\").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());this._hoverable(e),this.element.attr(\"role\",\"spinbutton\"),this.buttons=e.find(\".ui-spinner-button\").attr(\"tabIndex\",-1).button().removeClass(\"ui-corner-all\"),this.buttons.height()>Math.ceil(e.height()*.5)&&e.height()>0&&e.height(e.height()),this.options.disabled&&this.disable()},_keydown:function(t){var n=this.options,r=e.ui.keyCode;switch(t.keyCode){case r.UP:return this._repeat(null,1,t),!0;case r.DOWN:return this._repeat(null,-1,t),!0;case r.PAGE_UP:return this._repeat(null,n.page,t),!0;case r.PAGE_DOWN:return this._repeat(null,-n.page,t),!0}return!1},_uiSpinnerHtml:function(){return\"<span class='ui-spinner ui-state-default ui-widget ui-widget-content ui-corner-all'></span>\"},_buttonHtml:function(){return\"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon \"+this.options.icons.up+\"'>&#9650;</span>\"+\"</a>\"+\"<a class='ui-spinner-button ui-spinner-down ui-corner-br'>\"+\"<span class='ui-icon \"+this.options.icons.down+\"'>&#9660;</span>\"+\"</a>\"},_start:function(e){return!this.spinning&&this._trigger(\"start\",e)===!1?!1:(this.counter||(this.counter=1),this.spinning=!0,!0)},_repeat:function(e,t,n){e=e||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,t,n)},e),this._spin(t*this.options.step,n)},_spin:function(e,t){var n=this.value()||0;this.counter||(this.counter=1),n=this._adjustValue(n+e*this._increment(this.counter));if(!this.spinning||this._trigger(\"spin\",t,{value:n})!==!1)this._value(n),this.counter++},_increment:function(t){var n=this.options.incremental;return n?e.isFunction(n)?n(t):Math.floor(t*t*t/5e4-t*t/500+17*t/200+1):1},_precision:function(){var e=this._precisionOf(this.options.step);return this.options.min!==null&&(e=Math.max(e,this._precisionOf(this.options.min))),e},_precisionOf:function(e){var t=e.toString(),n=t.indexOf(\".\");return n===-1?0:t.length-n-1},_adjustValue:function(e){var t,n,r=this.options;return t=r.min!==null?r.min:0,n=e-t,n=Math.round(n/r.step)*r.step,e=t+n,e=parseFloat(e.toFixed(this._precision())),r.max!==null&&e>r.max?r.max:r.min!==null&&e<r.min?r.min:e},_stop:function(e){if(!this.spinning)return;clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger(\"stop\",e)},_setOption:function(e,t){if(e===\"culture\"||e===\"numberFormat\"){var n=this._parse(this.element.val());this.options[e]=t,this.element.val(this._format(n));return}(e===\"max\"||e===\"min\"||e===\"step\")&&typeof t==\"string\"&&(t=this._parse(t)),this._super(e,t),e===\"disabled\"&&(t?(this.element.prop(\"disabled\",!0),this.buttons.button(\"disable\")):(this.element.prop(\"disabled\",!1),this.buttons.button(\"enable\")))},_setOptions:t(function(e){this._super(e),this._value(this.element.val())}),_parse:function(e){return typeof e==\"string\"&&e!==\"\"&&(e=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(e,10,this.options.culture):+e),e===\"\"||isNaN(e)?null:e},_format:function(e){return e===\"\"?\"\":window.Globalize&&this.options.numberFormat?Globalize.format(e,this.options.numberFormat,this.options.culture):e},_refresh:function(){this.element.attr({\"aria-valuemin\":this.options.min,\"aria-valuemax\":this.options.max,\"aria-valuenow\":this._parse(this.element.val())})},_value:function(e,t){var n;e!==\"\"&&(n=this._parse(e),n!==null&&(t||(n=this._adjustValue(n)),e=this._format(n))),this.element.val(e),this._refresh()},_destroy:function(){this.element.removeClass(\"ui-spinner-input\").prop(\"disabled\",!1).removeAttr(\"autocomplete\").removeAttr(\"role\").removeAttr(\"aria-valuemin\").removeAttr(\"aria-valuemax\").removeAttr(\"aria-valuenow\"),this.uiSpinner.replaceWith(this.element)},stepUp:t(function(e){this._stepUp(e)}),_stepUp:function(e){this._spin((e||1)*this.options.step)},stepDown:t(function(e){this._stepDown(e)}),_stepDown:function(e){this._spin((e||1)*-this.options.step)},pageUp:t(function(e){this._stepUp((e||1)*this.options.page)}),pageDown:t(function(e){this._stepDown((e||1)*this.options.page)}),value:function(e){if(!arguments.length)return this._parse(this.element.val());t(this._value).call(this,e)},widget:function(){return this.uiSpinner}})})(jQuery);(function(e,t){function i(){return++n}function s(e){return e=e.cloneNode(!1),e.hash.length>1&&e.href.replace(r,\"\")===location.href.replace(r,\"\")}var n=0,r=/#.*$/;e.widget(\"ui.tabs\",{version:\"1.9.0\",delay:300,options:{active:null,collapsible:!1,event:\"click\",heightStyle:\"content\",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_create:function(){var t,n=this,r=this.options,i=r.active;this.running=!1,this.element.addClass(\"ui-tabs ui-widget ui-widget-content ui-corner-all\").toggleClass(\"ui-tabs-collapsible\",r.collapsible).delegate(\".ui-tabs-nav > li\",\"mousedown\"+this.eventNamespace,function(t){e(this).is(\".ui-state-disabled\")&&t.preventDefault()}).delegate(\".ui-tabs-anchor\",\"focus\"+this.eventNamespace,function(){e(this).closest(\"li\").is(\".ui-state-disabled\")&&this.blur()}),this._processTabs();if(i===null){location.hash&&this.anchors.each(function(e,t){if(t.hash===location.hash)return i=e,!1}),i===null&&(i=this.tabs.filter(\".ui-tabs-active\").index());if(i===null||i===-1)i=this.tabs.length?0:!1}i!==!1&&(i=this.tabs.index(this.tabs.eq(i)),i===-1&&(i=r.collapsible?!1:0)),r.active=i,!r.collapsible&&r.active===!1&&this.anchors.length&&(r.active=0),e.isArray(r.disabled)&&(r.disabled=e.unique(r.disabled.concat(e.map(this.tabs.filter(\".ui-state-disabled\"),function(e){return n.tabs.index(e)}))).sort()),this.options.active!==!1&&this.anchors.length?this.active=this._findActive(this.options.active):this.active=e(),this._refresh(),this.active.length&&this.load(r.active)},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):e()}},_tabKeydown:function(t){var n=e(this.document[0].activeElement).closest(\"li\"),r=this.tabs.index(n),i=!0;if(this._handlePageNav(t))return;switch(t.keyCode){case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:r++;break;case e.ui.keyCode.UP:case e.ui.keyCode.LEFT:i=!1,r--;break;case e.ui.keyCode.END:r=this.anchors.length-1;break;case e.ui.keyCode.HOME:r=0;break;case e.ui.keyCode.SPACE:t.preventDefault(),clearTimeout(this.activating),this._activate(r);return;case e.ui.keyCode.ENTER:t.preventDefault(),clearTimeout(this.activating),this._activate(r===this.options.active?!1:r);return;default:return}t.preventDefault(),clearTimeout(this.activating),r=this._focusNextTab(r,i),t.ctrlKey||(n.attr(\"aria-selected\",\"false\"),this.tabs.eq(r).attr(\"aria-selected\",\"true\"),this.activating=this._delay(function(){this.option(\"active\",r)},this.delay))},_panelKeydown:function(t){if(this._handlePageNav(t))return;t.ctrlKey&&t.keyCode===e.ui.keyCode.UP&&(t.preventDefault(),this.active.focus())},_handlePageNav:function(t){if(t.altKey&&t.keyCode===e.ui.keyCode.PAGE_UP)return this._activate(this._focusNextTab(this.options.active-1,!1)),!0;if(t.altKey&&t.keyCode===e.ui.keyCode.PAGE_DOWN)return this._activate(this._focusNextTab(this.options.active+1,!0)),!0},_findNextTab:function(t,n){function i(){return t>r&&(t=0),t<0&&(t=r),t}var r=this.tabs.length-1;while(e.inArray(i(),this.options.disabled)!==-1)t=n?t+1:t-1;return t},_focusNextTab:function(e,t){return e=this._findNextTab(e,t),this.tabs.eq(e).focus(),e},_setOption:function(e,t){if(e===\"active\"){this._activate(t);return}if(e===\"disabled\"){this._setupDisabled(t);return}this._super(e,t),e===\"collapsible\"&&(this.element.toggleClass(\"ui-tabs-collapsible\",t),!t&&this.options.active===!1&&this._activate(0)),e===\"event\"&&this._setupEvents(t),e===\"heightStyle\"&&this._setupHeightStyle(t)},_tabId:function(e){return e.attr(\"aria-controls\")||\"ui-tabs-\"+i()},_sanitizeSelector:function(e){return e?e.replace(/[!\"$%&'()*+,.\\/:;<=>?@\\[\\]\\^`{|}~]/g,\"\\\\$&\"):\"\"},refresh:function(){var t,n=this.options,r=this.tablist.children(\":has(a[href])\");n.disabled=e.map(r.filter(\".ui-state-disabled\"),function(e){return r.index(e)}),this._processTabs(),n.active===!1||!this.anchors.length?(n.active=!1,this.active=e()):this.active.length&&!e.contains(this.tablist[0],this.active[0])?this.tabs.length===n.disabled.length?(n.active=!1,this.active=e()):this._activate(this._findNextTab(Math.max(0,n.active-1),!1)):n.active=this.tabs.index(this.active),this._refresh()},_refresh:function(){this._setupDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({\"aria-selected\":\"false\",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({\"aria-expanded\":\"false\",\"aria-hidden\":\"true\"}),this.active.length?(this.active.addClass(\"ui-tabs-active ui-state-active\").attr({\"aria-selected\":\"true\",tabIndex:0}),this._getPanelForTab(this.active).show().attr({\"aria-expanded\":\"true\",\"aria-hidden\":\"false\"})):this.tabs.eq(0).attr(\"tabIndex\",0)},_processTabs:function(){var t=this;this.tablist=this._getList().addClass(\"ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\").attr(\"role\",\"tablist\"),this.tabs=this.tablist.find(\"> li:has(a[href])\").addClass(\"ui-state-default ui-corner-top\").attr({role:\"tab\",tabIndex:-1}),this.anchors=this.tabs.map(function(){return e(\"a\",this)[0]}).addClass(\"ui-tabs-anchor\").attr({role:\"presentation\",tabIndex:-1}),this.panels=e(),this.anchors.each(function(n,r){var i,o,u,a=e(r).uniqueId().attr(\"id\"),f=e(r).closest(\"li\"),l=f.attr(\"aria-controls\");s(r)?(i=r.hash,o=t.element.find(t._sanitizeSelector(i))):(u=t._tabId(f),i=\"#\"+u,o=t.element.find(i),o.length||(o=t._createPanel(u),o.insertAfter(t.panels[n-1]||t.tablist)),o.attr(\"aria-live\",\"polite\")),o.length&&(t.panels=t.panels.add(o)),l&&f.data(\"ui-tabs-aria-controls\",l),f.attr({\"aria-controls\":i.substring(1),\"aria-labelledby\":a}),o.attr(\"aria-labelledby\",a)}),this.panels.addClass(\"ui-tabs-panel ui-widget-content ui-corner-bottom\").attr(\"role\",\"tabpanel\")},_getList:function(){return this.element.find(\"ol,ul\").eq(0)},_createPanel:function(t){return e(\"<div>\").attr(\"id\",t).addClass(\"ui-tabs-panel ui-widget-content ui-corner-bottom\").data(\"ui-tabs-destroy\",!0)},_setupDisabled:function(t){e.isArray(t)&&(t.length?t.length===this.anchors.length&&(t=!0):t=!1);for(var n=0,r;r=this.tabs[n];n++)t===!0||e.inArray(n,t)!==-1?e(r).addClass(\"ui-state-disabled\").attr(\"aria-disabled\",\"true\"):e(r).removeClass(\"ui-state-disabled\").removeAttr(\"aria-disabled\");this.options.disabled=t},_setupEvents:function(t){var n={click:function(e){e.preventDefault()}};t&&e.each(t.split(\" \"),function(e,t){n[t]=\"_eventHandler\"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(this.anchors,n),this._on(this.tabs,{keydown:\"_tabKeydown\"}),this._on(this.panels,{keydown:\"_panelKeydown\"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(t){var n,r,i=this.element.parent();t===\"fill\"?(e.support.minHeight||(r=i.css(\"overflow\"),i.css(\"overflow\",\"hidden\")),n=i.height(),this.element.siblings(\":visible\").each(function(){var t=e(this),r=t.css(\"position\");if(r===\"absolute\"||r===\"fixed\")return;n-=t.outerHeight(!0)}),r&&i.css(\"overflow\",r),this.element.children().not(this.panels).each(function(){n-=e(this).outerHeight(!0)}),this.panels.each(function(){e(this).height(Math.max(0,n-e(this).innerHeight()+e(this).height()))}).css(\"overflow\",\"auto\")):t===\"auto\"&&(n=0,this.panels.each(function(){n=Math.max(n,e(this).height(\"\").height())}).height(n))},_eventHandler:function(t){var n=this.options,r=this.active,i=e(t.currentTarget),s=i.closest(\"li\"),o=s[0]===r[0],u=o&&n.collapsible,a=u?e():this._getPanelForTab(s),f=r.length?this._getPanelForTab(r):e(),l={oldTab:r,oldPanel:f,newTab:u?e():s,newPanel:a};t.preventDefault();if(s.hasClass(\"ui-state-disabled\")||s.hasClass(\"ui-tabs-loading\")||this.running||o&&!n.collapsible||this._trigger(\"beforeActivate\",t,l)===!1)return;n.active=u?!1:this.tabs.index(s),this.active=o?e():s,this.xhr&&this.xhr.abort(),!f.length&&!a.length&&e.error(\"jQuery UI Tabs: Mismatching fragment identifier.\"),a.length&&this.load(this.tabs.index(s),t),this._toggle(t,l)},_toggle:function(t,n){function o(){r.running=!1,r._trigger(\"activate\",t,n)}function u(){n.newTab.closest(\"li\").addClass(\"ui-tabs-active ui-state-active\"),i.length&&r.options.show?r._show(i,r.options.show,o):(i.show(),o())}var r=this,i=n.newPanel,s=n.oldPanel;this.running=!0,s.length&&this.options.hide?this._hide(s,this.options.hide,function(){n.oldTab.closest(\"li\").removeClass(\"ui-tabs-active ui-state-active\"),u()}):(n.oldTab.closest(\"li\").removeClass(\"ui-tabs-active ui-state-active\"),s.hide(),u()),s.attr({\"aria-expanded\":\"false\",\"aria-hidden\":\"true\"}),n.oldTab.attr(\"aria-selected\",\"false\"),i.length&&s.length?n.oldTab.attr(\"tabIndex\",-1):i.length&&this.tabs.filter(function(){return e(this).attr(\"tabIndex\")===0}).attr(\"tabIndex\",-1),i.attr({\"aria-expanded\":\"true\",\"aria-hidden\":\"false\"}),n.newTab.attr({\"aria-selected\":\"true\",tabIndex:0})},_activate:function(t){var n,r=this._findActive(t);if(r[0]===this.active[0])return;r.length||(r=this.active),n=r.find(\".ui-tabs-anchor\")[0],this._eventHandler({target:n,currentTarget:n,preventDefault:e.noop})},_findActive:function(t){return t===!1?e():this.tabs.eq(t)},_getIndex:function(e){return typeof e==\"string\"&&(e=this.anchors.index(this.anchors.filter(\"[href$='\"+e+\"']\"))),e},_destroy:function(){this.xhr&&this.xhr.abort(),this.element.removeClass(\"ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible\"),this.tablist.removeClass(\"ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\").removeAttr(\"role\"),this.anchors.removeClass(\"ui-tabs-anchor\").removeAttr(\"role\").removeAttr(\"tabIndex\").removeData(\"href.tabs\").removeData(\"load.tabs\").removeUniqueId(),this.tabs.add(this.panels).each(function(){e.data(this,\"ui-tabs-destroy\")?e(this).remove():e(this).removeClass(\"ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel\").removeAttr(\"tabIndex\").removeAttr(\"aria-live\").removeAttr(\"aria-busy\").removeAttr(\"aria-selected\").removeAttr(\"aria-labelledby\").removeAttr(\"aria-hidden\").removeAttr(\"aria-expanded\").removeAttr(\"role\")}),this.tabs.each(function(){var t=e(this),n=t.data(\"ui-tabs-aria-controls\");n?t.attr(\"aria-controls\",n):t.removeAttr(\"aria-controls\")}),this.options.heightStyle!==\"content\"&&this.panels.css(\"height\",\"\")},enable:function(n){var r=this.options.disabled;if(r===!1)return;n===t?r=!1:(n=this._getIndex(n),e.isArray(r)?r=e.map(r,function(e){return e!==n?e:null}):r=e.map(this.tabs,function(e,t){return t!==n?t:null})),this._setupDisabled(r)},disable:function(n){var r=this.options.disabled;if(r===!0)return;if(n===t)r=!0;else{n=this._getIndex(n);if(e.inArray(n,r)!==-1)return;e.isArray(r)?r=e.merge([n],r).sort():r=[n]}this._setupDisabled(r)},load:function(t,n){t=this._getIndex(t);var r=this,i=this.tabs.eq(t),o=i.find(\".ui-tabs-anchor\"),u=this._getPanelForTab(i),a={tab:i,panel:u};if(s(o[0]))return;this.xhr=e.ajax(this._ajaxSettings(o,n,a)),this.xhr&&this.xhr.statusText!==\"canceled\"&&(i.addClass(\"ui-tabs-loading\"),u.attr(\"aria-busy\",\"true\"),this.xhr.success(function(e){setTimeout(function(){u.html(e),r._trigger(\"load\",n,a)},1)}).complete(function(e,t){setTimeout(function(){t===\"abort\"&&r.panels.stop(!1,!0),i.removeClass(\"ui-tabs-loading\"),u.removeAttr(\"aria-busy\"),e===r.xhr&&delete r.xhr},1)}))},_ajaxSettings:function(t,n,r){var i=this;return{url:t.attr(\"href\"),beforeSend:function(t,s){return i._trigger(\"beforeLoad\",n,e.extend({jqXHR:t,ajaxSettings:s},r))}}},_getPanelForTab:function(t){var n=e(t).attr(\"aria-controls\");return this.element.find(this._sanitizeSelector(\"#\"+n))}}),e.uiBackCompat!==!1&&(e.ui.tabs.prototype._ui=function(e,t){return{tab:e,panel:t,index:this.anchors.index(e)}},e.widget(\"ui.tabs\",e.ui.tabs,{url:function(e,t){this.anchors.eq(e).attr(\"href\",t)}}),e.widget(\"ui.tabs\",e.ui.tabs,{options:{ajaxOptions:null,cache:!1},_create:function(){this._super();var t=this;this._on({tabsbeforeload:function(n,r){if(e.data(r.tab[0],\"cache.tabs\")){n.preventDefault();return}r.jqXHR.success(function(){t.options.cache&&e.data(r.tab[0],\"cache.tabs\",!0)})}})},_ajaxSettings:function(t,n,r){var i=this.options.ajaxOptions;return e.extend({},i,{error:function(e,t,n){try{i.error(e,t,r.tab.closest(\"li\").index(),r.tab[0])}catch(n){}}},this._superApply(arguments))},_setOption:function(e,t){e===\"cache\"&&t===!1&&this.anchors.removeData(\"cache.tabs\"),this._super(e,t)},_destroy:function(){this.anchors.removeData(\"cache.tabs\"),this._super()},url:function(e,t){this.anchors.eq(e).removeData(\"cache.tabs\"),this._superApply(arguments)}}),e.widget(\"ui.tabs\",e.ui.tabs,{abort:function(){this.xhr&&this.xhr.abort()}}),e.widget(\"ui.tabs\",e.ui.tabs,{options:{spinner:\"<em>Loading&#8230;</em>\"},_create:function(){this._super(),this._on({tabsbeforeload:function(e,t){if(e.target!==this.element[0]||!this.options.spinner)return;var n=t.tab.find(\"span\"),r=n.html();n.html(this.options.spinner),t.jqXHR.complete(function(){n.html(r)})}})}}),e.widget(\"ui.tabs\",e.ui.tabs,{options:{enable:null,disable:null},enable:function(t){var n=this.options,r;if(t&&n.disabled===!0||e.isArray(n.disabled)&&e.inArray(t,n.disabled)!==-1)r=!0;this._superApply(arguments),r&&this._trigger(\"enable\",null,this._ui(this.anchors[t],this.panels[t]))},disable:function(t){var n=this.options,r;if(t&&n.disabled===!1||e.isArray(n.disabled)&&e.inArray(t,n.disabled)===-1)r=!0;this._superApply(arguments),r&&this._trigger(\"disable\",null,this._ui(this.anchors[t],this.panels[t]))}}),e.widget(\"ui.tabs\",e.ui.tabs,{options:{add:null,remove:null,tabTemplate:\"<li><a href='#{href}'><span>#{label}</span></a></li>\"},add:function(n,r,i){i===t&&(i=this.anchors.length);var s,o,u=this.options,a=e(u.tabTemplate.replace(/#\\{href\\}/g,n).replace(/#\\{label\\}/g,r)),f=n.indexOf(\"#\")?this._tabId(a):n.replace(\"#\",\"\");return a.addClass(\"ui-state-default ui-corner-top\").data(\"ui-tabs-destroy\",!0),a.attr(\"aria-controls\",f),s=i>=this.tabs.length,o=this.element.find(\"#\"+f),o.length||(o=this._createPanel(f),s?i>0?o.insertAfter(this.panels.eq(-1)):o.appendTo(this.element):o.insertBefore(this.panels[i])),o.addClass(\"ui-tabs-panel ui-widget-content ui-corner-bottom\").hide(),s?a.appendTo(this.tablist):a.insertBefore(this.tabs[i]),u.disabled=e.map(u.disabled,function(e){return e>=i?++e:e}),this.refresh(),this.tabs.length===1&&u.active===!1&&this.option(\"active\",0),this._trigger(\"add\",null,this._ui(this.anchors[i],this.panels[i])),this},remove:function(t){t=this._getIndex(t);var n=this.options,r=this.tabs.eq(t).remove(),i=this._getPanelForTab(r).remove();return r.hasClass(\"ui-tabs-active\")&&this.anchors.length>2&&this._activate(t+(t+1<this.anchors.length?1:-1)),n.disabled=e.map(e.grep(n.disabled,function(e){return e!==t}),function(e){return e>=t?--e:e}),this.refresh(),this._trigger(\"remove\",null,this._ui(r.find(\"a\")[0],i[0])),this}}),e.widget(\"ui.tabs\",e.ui.tabs,{length:function(){return this.anchors.length}}),e.widget(\"ui.tabs\",e.ui.tabs,{options:{idPrefix:\"ui-tabs-\"},_tabId:function(t){var n=t.is(\"li\")?t.find(\"a[href]\"):t;return n=n[0],e(n).closest(\"li\").attr(\"aria-controls\")||n.title&&n.title.replace(/\\s/g,\"_\").replace(/[^\\w\\u00c0-\\uFFFF\\-]/g,\"\")||this.options.idPrefix+i()}}),e.widget(\"ui.tabs\",e.ui.tabs,{options:{panelTemplate:\"<div></div>\"},_createPanel:function(t){return e(this.options.panelTemplate).attr(\"id\",t).addClass(\"ui-tabs-panel ui-widget-content ui-corner-bottom\").data(\"ui-tabs-destroy\",!0)}}),e.widget(\"ui.tabs\",e.ui.tabs,{_create:function(){var e=this.options;e.active===null&&e.selected!==t&&(e.active=e.selected===-1?!1:e.selected),this._super(),e.selected=e.active,e.selected===!1&&(e.selected=-1)},_setOption:function(e,t){if(e!==\"selected\")return this._super(e,t);var n=this.options;this._super(\"active\",t===-1?!1:t),n.selected=n.active,n.selected===!1&&(n.selected=-1)},_eventHandler:function(e){this._superApply(arguments),this.options.selected=this.options.active,this.options.selected===!1&&(this.options.selected=-1)}}),e.widget(\"ui.tabs\",e.ui.tabs,{options:{show:null,select:null},_create:function(){this._super(),this.options.active!==!1&&this._trigger(\"show\",null,this._ui(this.active.find(\".ui-tabs-anchor\")[0],this._getPanelForTab(this.active)[0]))},_trigger:function(e,t,n){var r=this._superApply(arguments);return r?(e===\"beforeActivate\"&&n.newTab.length?r=this._super(\"select\",t,{tab:n.newTab.find(\".ui-tabs-anchor\")[0],panel:n.newPanel[0],index:n.newTab.closest(\"li\").index()}):e===\"activate\"&&n.newTab.length&&(r=this._super(\"show\",t,{tab:n.newTab.find(\".ui-tabs-anchor\")[0],panel:n.newPanel[0],index:n.newTab.closest(\"li\").index()})),r):!1}}),e.widget(\"ui.tabs\",e.ui.tabs,{select:function(e){e=this._getIndex(e);if(e===-1){if(!this.options.collapsible||this.options.selected===-1)return;e=this.options.selected}this.anchors.eq(e).trigger(this.options.event+this.eventNamespace)}}),function(){var t=0;e.widget(\"ui.tabs\",e.ui.tabs,{options:{cookie:null},_create:function(){var e=this.options,t;e.active==null&&e.cookie&&(t=parseInt(this._cookie(),10),t===-1&&(t=!1),e.active=t),this._super()},_cookie:function(n){var r=[this.cookie||(this.cookie=this.options.cookie.name||\"ui-tabs-\"+ ++t)];return arguments.length&&(r.push(n===!1?-1:n),r.push(this.options.cookie)),e.cookie.apply(null,r)},_refresh:function(){this._super(),this.options.cookie&&this._cookie(this.options.active,this.options.cookie)},_eventHandler:function(e){this._superApply(arguments),this.options.cookie&&this._cookie(this.options.active,this.options.cookie)},_destroy:function(){this._super(),this.options.cookie&&this._cookie(null,this.options.cookie)}})}(),e.widget(\"ui.tabs\",e.ui.tabs,{_trigger:function(t,n,r){var i=e.extend({},r);return t===\"load\"&&(i.panel=i.panel[0],i.tab=i.tab.find(\".ui-tabs-anchor\")[0]),this._super(t,n,i)}}),e.widget(\"ui.tabs\",e.ui.tabs,{options:{fx:null},_getFx:function(){var t,n,r=this.options.fx;return r&&(e.isArray(r)?(t=r[0],n=r[1]):t=n=r),r?{show:n,hide:t}:null},_toggle:function(e,t){function o(){n.running=!1,n._trigger(\"activate\",e,t)}function u(){t.newTab.closest(\"li\").addClass(\"ui-tabs-active ui-state-active\"),r.length&&s.show?r.animate(s.show,s.show.duration,function(){o()}):(r.show(),o())}var n=this,r=t.newPanel,i=t.oldPanel,s=this._getFx();if(!s)return this._super(e,t);n.running=!0,i.length&&s.hide?i.animate(s.hide,s.hide.duration,function(){t.oldTab.closest(\"li\").removeClass(\"ui-tabs-active ui-state-active\"),u()}):(t.oldTab.closest(\"li\").removeClass(\"ui-tabs-active ui-state-active\"),i.hide(),u())}}))})(jQuery);(function(e){function n(t,n){var r=(t.attr(\"aria-describedby\")||\"\").split(/\\s+/);r.push(n),t.data(\"ui-tooltip-id\",n).attr(\"aria-describedby\",e.trim(r.join(\" \")))}function r(t){var n=t.data(\"ui-tooltip-id\"),r=(t.attr(\"aria-describedby\")||\"\").split(/\\s+/),i=e.inArray(n,r);i!==-1&&r.splice(i,1),t.removeData(\"ui-tooltip-id\"),r=e.trim(r.join(\" \")),r?t.attr(\"aria-describedby\",r):t.removeAttr(\"aria-describedby\")}var t=0;e.widget(\"ui.tooltip\",{version:\"1.9.0\",options:{content:function(){return e(this).attr(\"title\")},hide:!0,items:\"[title]\",position:{my:\"left+15 center\",at:\"right center\",collision:\"flipfit flipfit\"},show:!0,tooltipClass:null,track:!1,close:null,open:null},_create:function(){this._on({mouseover:\"open\",focusin:\"open\"}),this.tooltips={}},_setOption:function(t,n){var r=this;if(t===\"disabled\"){this[n?\"_disable\":\"_enable\"](),this.options[t]=n;return}this._super(t,n),t===\"content\"&&e.each(this.tooltips,function(e,t){r._updateContent(t)})},_disable:function(){var t=this;e.each(this.tooltips,function(n,r){var i=e.Event(\"blur\");i.target=i.currentTarget=r[0],t.close(i,!0)}),this.element.find(this.options.items).andSelf().each(function(){var t=e(this);t.is(\"[title]\")&&t.data(\"ui-tooltip-title\",t.attr(\"title\")).attr(\"title\",\"\")})},_enable:function(){this.element.find(this.options.items).andSelf().each(function(){var t=e(this);t.data(\"ui-tooltip-title\")&&t.attr(\"title\",t.data(\"ui-tooltip-title\"))})},open:function(t){var n=e(t?t.target:this.element).closest(this.options.items);if(!n.length)return;if(this.options.track&&n.data(\"ui-tooltip-id\")){this._find(n).position(e.extend({of:n},this.options.position)),this._off(this.document,\"mousemove\");return}n.attr(\"title\")&&n.data(\"ui-tooltip-title\",n.attr(\"title\")),n.data(\"tooltip-open\",!0),this._updateContent(n,t)},_updateContent:function(e,t){var n,r=this.options.content,i=this;if(typeof r==\"string\")return this._open(t,e,r);n=r.call(e[0],function(n){if(!e.data(\"tooltip-open\"))return;i._delay(function(){this._open(t,e,n)})}),n&&this._open(t,e,n)},_open:function(t,r,i){function u(e){o.of=e,s.position(o)}var s,o;if(!i)return;s=this._find(r);if(s.length){s.find(\".ui-tooltip-content\").html(i);return}r.is(\"[title]\")&&(t&&t.type===\"mouseover\"?r.attr(\"title\",\"\"):r.removeAttr(\"title\")),s=this._tooltip(r),n(r,s.attr(\"id\")),s.find(\".ui-tooltip-content\").html(i),this.options.track&&t&&/^mouse/.test(t.originalEvent.type)?(o=e.extend({},this.options.position),this._on(this.document,{mousemove:u}),u(t)):s.position(e.extend({of:r},this.options.position)),s.hide(),this._show(s,this.options.show),this._trigger(\"open\",t,{tooltip:s}),this._on(r,{mouseleave:\"close\",focusout:\"close\",keyup:function(t){if(t.keyCode===e.ui.keyCode.ESCAPE){var n=e.Event(t);n.currentTarget=r[0],this.close(n,!0)}}})},close:function(t,n){var i=this,s=e(t?t.currentTarget:this.element),o=this._find(s);if(this.closing)return;if(!n&&t&&t.type!==\"focusout\"&&this.document[0].activeElement===s[0])return;s.data(\"ui-tooltip-title\")&&s.attr(\"title\",s.data(\"ui-tooltip-title\")),r(s),o.stop(!0),this._hide(o,this.options.hide,function(){e(this).remove(),delete i.tooltips[this.id]}),s.removeData(\"tooltip-open\"),this._off(s,\"mouseleave focusout keyup\"),this._off(this.document,\"mousemove\"),this.closing=!0,this._trigger(\"close\",t,{tooltip:o}),this.closing=!1},_tooltip:function(n){var r=\"ui-tooltip-\"+t++,i=e(\"<div>\").attr({id:r,role:\"tooltip\"}).addClass(\"ui-tooltip ui-widget ui-corner-all ui-widget-content \"+(this.options.tooltipClass||\"\"));return e(\"<div>\").addClass(\"ui-tooltip-content\").appendTo(i),i.appendTo(this.document[0].body),e.fn.bgiframe&&i.bgiframe(),this.tooltips[r]=n,i},_find:function(t){var n=t.data(\"ui-tooltip-id\");return n?e(\"#\"+n):e()},_destroy:function(){var t=this;e.each(this.tooltips,function(n,r){var i=e.Event(\"blur\");i.target=i.currentTarget=r[0],t.close(i,!0),e(\"#\"+n).remove(),r.data(\"ui-tooltip-title\")&&(r.attr(\"title\",r.data(\"ui-tooltip-title\")),r.removeData(\"ui-tooltip-title\"))})}})})(jQuery);\n\n/Users/vjovanov/code/scala/src/scaladoc/scala/tools/nsc/doc/model/Entity.scala:\n  245    /** The source file in which the current template is defined and the line where the definition starts, if they exist.\n  246      * A source file exists for all templates, except for those that are generated synthetically by Scaladoc. */\n  247:   def inSource: Option[(io.AbstractFile, Int)]\n  248  \n  249    /** An HTTP address at which the source of this template is available, if it is available. An address is available\n\n/Users/vjovanov/code/scala/src/scaladoc/scala/tools/nsc/doc/model/MemberLookup.scala:\n   45          sym.info.member(newTermName(\"package\"))\n   46        else sym\n   47:     Option(sym1.associatedFile) flatMap (_.underlyingSource) flatMap { src =>\n   48        val path = src.canonicalPath\n   49        settings.extUrlMapping get path map { url =>\n\n/Users/vjovanov/code/scala/src/scaladoc/scala/tools/nsc/doc/model/ModelFactory.scala:\n  285      protected def reprSymbol: Symbol = sym\n  286  \n  287:     def inSource =\n  288        if (reprSymbol.sourceFile != null && ! reprSymbol.isSynthetic)\n  289          Some((reprSymbol.sourceFile, reprSymbol.pos.line))\n  ...\n  293      def sourceUrl = {\n  294        def fixPath(s: String) = s.replaceAll(\"\\\\\" + java.io.File.separator, \"/\")\n  295:       val assumedSourceRoot  = fixPath(settings.sourcepath.value) stripSuffix \"/\"\n  296  \n  297        if (!settings.docsourceurl.isDefault)\n  298:         inSource map { case (file, _) =>\n  299:           val filePath = fixPath(file.path).replaceFirst(\"^\" + assumedSourceRoot, \"\").stripSuffix(\".scala\")\n  300            val tplOwner = this.inTemplate.qualifiedName\n  301            val tplName = this.name\n\n/Users/vjovanov/code/scala/src/scaladoc/scala/tools/nsc/doc/model/TreeFactory.scala:\n    4  \n    5  import scala.collection._\n    6: import scala.reflect.internal.util.{RangePosition, OffsetPosition, SourceFile}\n    7  \n    8  /** The goal of this trait is , using makeTree,\n    .\n   27      rhs.pos match {\n   28        case pos: RangePosition => {\n   29:         val source: SourceFile = pos.source\n   30          val firstIndex = pos.start\n   31          val lastIndex = pos.end\n\n/Users/vjovanov/code/scala/src/scaladoc/scala/tools/nsc/doc/ScaladocAnalyzer.scala:\n   10  import typechecker.Analyzer\n   11  import scala.reflect.internal.Chars._\n   12: import scala.reflect.internal.util.{ BatchSourceFile, Position }\n   13  import scala.tools.nsc.doc.base.{ CommentFactoryBase, MemberLookupBase, LinkTo, LinkToExternal }\n   14  \n   ..\n   55      def defineUseCases(useCase: UseCase): List[Symbol] = {\n   56        def stringParser(str: String): syntaxAnalyzer.Parser = {\n   57:         val file = new BatchSourceFile(context.unit.source.file, str) {\n   58:           override def positionInUltimateSource(pos: Position) = {\n   59:             pos withSource context.unit.source withShift useCase.pos.start\n   60            }\n   61          }\n\n/Users/vjovanov/code/scala/src/scaladoc/scala/tools/nsc/doc/ScaladocGlobal.scala:\n   10  import reporters.Reporter\n   11  import typechecker.Analyzer\n   12: import scala.reflect.internal.util.{ BatchSourceFile, RangePosition }\n   13  \n   14  \n\n/Users/vjovanov/code/scala/src/scalap/scala/tools/scalap/scalax/rules/scalasig/SourceFileAttributeParser.scala:\n    8   */\n    9  \n   10: object SourceFileAttributeParser extends ByteCodeReader {\n   11:   val sourceFile = u2 ^^ SourceFileInfo\n   12  \n   13    def parse(byteCode: ByteCode) = expect(sourceFile)(byteCode)\n   ..\n   16  /**\n   17   *\n   18:  * SourceFile_attribute {\n   19      	u2 attribute_name_index;\n   20      	u4 attribute_length;\n   ..\n   25   * by {@link scalax.rules.scalasig.ClassFile.attribute#attribute}\n   26   */\n   27: case class SourceFileInfo(sourceFileIndex: Int)\n   28  \n   29  \n\n771 matches across 132 files\n\n\nSearching 1598 files for \"SourceContext\" (case sensitive)\n\n0 matches\n\nSearching 18469 files for \"SourceContext\" (case sensitive)\n\n0 matches\n\nSearching 18469 files for \"SourcePosition\" (case sensitive)\n\n0 matches\n\nSearching 18469 files for \"trait Position\" (case sensitive)\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/ast/Positions.scala:\n    2  package ast\n    3  \n    4: trait Positions extends scala.reflect.internal.Positions {\n    5    self: Global =>\n    6  \n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/api/Position.scala:\n   52   *  @group ReflectionAPI\n   53   */\n   54: trait Position extends Attachments {\n   55  \n   56    /** @inheritdoc */\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/api/Positions.scala:\n   13   * @group ReflectionAPI\n   14   */\n   15: trait Positions {\n   16    self: Universe =>\n   17  \n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/Positions.scala:\n   23   *   Otherwise, the singleton consisting of the node itself.\n   24   */\n   25: trait Positions extends api.Positions { self: SymbolTable =>\n   26    type Position = scala.reflect.internal.util.Position\n   27    val NoPosition = scala.reflect.internal.util.NoPosition\n\n/Users/vjovanov/code/scala/test/files/pos/patmat.scala:\n   77    val NEXT = new Dir {}\n   78  \n   79:   trait Position extends Core\n   80  \n   81    (null: Core, null: Dir) match {\n\n5 matches across 5 files\n\n\nSearching 18469 files for \"protected[yinyang] class Reporter(private val c: Context) {\n  def echo(pos: Position, msg: String): Unit = c.echo(pos, msg)\n  def info(pos: Position, msg: String, force: Boolean): Unit = c.info(pos, msg, force)\n  def warning(pos: Position, msg: String): Unit = c.warning(pos, msg)\n  def error(pos: Position, msg: String): Unit = c.error(pos, msg)\n}\nextends Position\" (case sensitive)\n\n0 matches\n\nSearching 18469 files for \"protected[yinyang] class Reporter(private val c: Context) {\n  def echo(pos: Position, msg: String): Unit = c.echo(pos, msg)\n  def info(pos: Position, msg: String, force: Boolean): Unit = c.info(pos, msg, force)\n  def warning(pos: Position, msg: String): Unit = c.warning(pos, msg)\n  def error(pos: Position, msg: String): Unit = c.error(pos, msg)\n}\nextends Position\" (case sensitive)\n\n0 matches\n\nSearching 18469 files for \"extends Position\" (case sensitive)\n\n/Users/vjovanov/code/scala/src/library/scala/io/Position.scala:\n   69  }\n   70  \n   71: private[scala] object Position extends Position {\n   72    def checkInput(line: Int, column: Int) {\n   73      if (line < 0)\n\n/Users/vjovanov/code/scala/src/library/scala/io/Source.scala:\n  264     *  the positions.\n  265     */\n  266:   object RelaxedPosition extends Position {\n  267      def checkInput(line: Int, column: Int): Unit = ()\n  268    }\n  269:   object RelaxedPositioner extends Positioner(RelaxedPosition) { }\n  270:   object NoPositioner extends Positioner(Position) {\n  271      override def next(): Char = iter.next()\n  272    }\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/util/Position.scala:\n   17    protected def fail(what: String) = throw new UnsupportedOperationException(s\"Position.$what on $this\")\n   18  \n   19:   // If scala-refactoring extends Position directly it seems I have no\n   20    // choice but to offer all the concrete methods.\n   21    def isDefined          = false\n   ..\n   73  }\n   74  \n   75: sealed abstract class DefinedPosition extends Position {\n   76    final override def isDefined = true\n   77    override def equals(that: Any) = that match {\n   ..\n   88  }\n   89  \n   90: sealed abstract class UndefinedPosition extends Position {\n   91    final override def isDefined = false\n   92    override def isRange         = false\n\n7 matches across 3 files\n\n\nSearching 18469 files for \"type Position\" (case sensitive)\n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/Aliases.scala:\n   11    override type TypeName = universe.TypeName\n   12    override type Tree = universe.Tree\n   13:   override type Position = universe.Position\n   14    override type Scope = universe.Scope\n   15    override type Modifiers = universe.Modifiers\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/ast/parser/MarkupParsers.scala:\n   45      import Tokens.{ LBRACE, RBRACE }\n   46  \n   47:     type PositionType = Position\n   48      type InputType    = CharArrayReader\n   49      type ElementType  = Tree\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/ast/parser/xml/MarkupParserCommon.scala:\n   19    protected def unreachable = scala.sys.error(\"Cannot be reached.\")\n   20  \n   21:   type PositionType     // Int, Position\n   22    type ElementType      // NodeSeq, Tree\n   23    type NamespaceType    // NamespaceBinding, Any\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/util/package.scala:\n  105    // the sbt 0.12.4 compiler interface.\n  106    @deprecated(\"Moved to scala.reflect.internal.util.Position\", \"2.10.0\")\n  107:   type Position = scala.reflect.internal.util.Position\n  108    @deprecated(\"Moved to scala.reflect.internal.util.NoPosition\", \"2.10.0\")\n  109    val NoPosition = scala.reflect.internal.util.NoPosition\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/api/Positions.scala:\n   20     *  @group Positions\n   21     */\n   22:   type Position >: Null <: AnyRef with scala.reflect.api.Position { type Pos = Position }\n   23  \n   24    /** A special \"missing\" position.\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/Positions.scala:\n   24   */\n   25  trait Positions extends api.Positions { self: SymbolTable =>\n   26:   type Position = scala.reflect.internal.util.Position\n   27    val NoPosition = scala.reflect.internal.util.NoPosition\n   28    implicit val PositionTag = ClassTag[Position](classOf[Position])\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/macros/Aliases.scala:\n   33  \n   34    /** Defines a universe-specific notion of positions. */\n   35:   type Position = universe.Position\n   36  \n   37    /** The base type of all scopes. */\n\n7 matches across 7 files\n\n\nSearching 18469 files for \"def info\" (case sensitive)\n\n\n\nSearching 18469 files for \"def echo\" (case sensitive)\n\n/Users/vjovanov/code/scala/src/compiler/scala/reflect/macros/contexts/FrontEnds.scala:\n    7    self: Context =>\n    8  \n    9:   def echo(pos: Position, msg: String): Unit = universe.reporter.echo(pos, msg)\n   10  \n   11    def info(pos: Position, msg: String, force: Boolean): Unit = universe.reporter.info(pos, msg, force)\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/cmd/gen/Codegen.scala:\n   12  \n   13  object Codegen {\n   14:   def echo(msg: String) = Console println msg\n   15  \n   16    def main(args0: Array[String]): Unit = {\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/CompilationUnits.scala:\n  124  \n  125      @deprecated(\"Call global.reporter.echo directly instead.\", \"2.11.2\")\n  126:     final def echo(pos: Position, msg: String): Unit    = reporter.echo(pos, msg)\n  127      @deprecated(\"Call global.reporter.error (or typer.context.error) directly instead.\", \"2.11.2\")\n  128      final def error(pos: Position, msg: String): Unit   = reporter.error(pos, msg)\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/Global.scala:\n 1101    override def currentRunId = curRunId\n 1102  \n 1103:   def echoPhaseSummary(ph: Phase) = {\n 1104      /* Only output a summary message under debug if we aren't echoing each file. */\n 1105      if (settings.debug && !(settings.verbose || currentRun.size < 5))\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/reporters/Reporter.scala:\n   24     *  but also shouldn't require -verbose to be visible.\n   25     */\n   26:   def echo(msg: String): Unit = info(NoPosition, msg, force = true)\n   27  \n   28    // overridden by sbt, IDE -- should not be in the reporting interface\n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/typechecker/Contexts.scala:\n  577      /** Issue/throw the given error message according to the current mode for error reporting. */\n  578      def warning(pos: Position, msg: String)                                  = reporter.warning(pos, msg)\n  579:     def echo(pos: Position, msg: String)                                     = reporter.echo(pos, msg)\n  580  \n  581  \n\n/Users/vjovanov/code/scala/src/compiler/scala/tools/util/SocketServer.scala:\n   18  \n   19    def info(msg: String)  = if (verbose) echo(msg)\n   20:   def echo(msg: String)  = {Console println msg; Console.flush()}\n   21    def warn(msg: String)  = {Console.err println msg; Console.flush()}\n   22    def fatal(msg: String) = { warn(msg) ; sys.exit(1) }\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/Reporting.scala:\n   78    protected def info0(pos: Position, msg: String, severity: Severity, force: Boolean): Unit\n   79  \n   80:   def echo(pos: Position, msg: String): Unit    = info0(pos, msg, INFO, force = true)\n   81    def warning(pos: Position, msg: String): Unit = info0(pos, msg, WARNING, force = false)\n   82    def error(pos: Position, msg: String): Unit   = info0(pos, msg, ERROR, force = false)\n\n/Users/vjovanov/code/scala/src/reflect/scala/reflect/macros/FrontEnds.scala:\n   17     *  Use `enclosingPosition` if you're in doubt what position to pass to `pos`.\n   18     */\n   19:   def echo(pos: Position, msg: String): Unit\n   20  \n   21    /** Emits an informational message, suppressed unless `-verbose` or `force=true`.\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/ILoop.scala:\n   69    }\n   70  \n   71:   override def echoCommandMessage(msg: String) {\n   72      intp.reporter printUntruncatedMessage msg\n   73    }\n   ..\n  183    // When you know you are most likely breaking into the middle\n  184    // of a line being typed.  This softens the blow.\n  185:   protected def echoAndRefresh(msg: String) = {\n  186      echo(\"\\n\" + msg)\n  187      in.redrawLine()\n  188    }\n  189:   protected def echo(msg: String) = {\n  190      out println msg\n  191      out.flush()\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/IMain.scala:\n  120  \n  121    // This exists mostly because using the reporter too early leads to deadlock.\n  122:   private def echo(msg: String) { Console println msg }\n  123    private def _initSources = List(new BatchSourceFile(\"<init>\", \"class $repl_$init { }\"))\n  124    private def _initialize() = {\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/LoopCommands.scala:\n   29  \n   30    // So outputs can be suppressed.\n   31:   def echoCommandMessage(msg: String): Unit = out println msg\n   32  \n   33    // a single interpreter command\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/package.scala:\n   70      import definitions._\n   71  \n   72:     protected def echo(msg: String) = {\n   73        Console.out println msg\n   74        Console.out.flush()\n   ..\n  156      }\n  157  \n  158:     def echoKind(tpe: Type, kind: Kind, verbose: Boolean) {\n  159        def typeString(tpe: Type): String = {\n  160          tpe match {\n  ...\n  185        if (sym.isAccessor) dropNullaryMethod(sym.info) else sym.info\n  186  \n  187:     def echoTypeStructure(sym: Symbol) =\n  188        printAfterTyper(\"\" + deconstruct.show(replInfo(sym)))\n  189  \n  190:     def echoTypeSignature(sym: Symbol, verbose: Boolean) = {\n  191        if (verbose) echo(\"// Type signature\")\n  192        printAfterTyper(\"\" + replInfo(sym))\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/ReplConfig.scala:\n   23  \n   24    private def parens(x: Any) = \"(\" + x + \")\"\n   25:   private def echo(msg: => String) =\n   26      try Console println msg\n   27      catch { case x: AssertionError => Console.println(\"Assertion error printing debugging output: \" + x) }\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/ReplGlobal.scala:\n   14  trait ReplGlobal extends Global {\n   15    // This exists mostly because using the reporter too early leads to deadlock.\n   16:   private def echo(msg: String) { Console println msg }\n   17  \n   18    override def abort(msg: String): Nothing = {\n\n/Users/vjovanov/code/scala/src/repl/scala/tools/nsc/interpreter/SimpleReader.scala:\n   32  \n   33    protected def readOneLine(): String = in.readLine()\n   34:   protected def echo(s: String): Unit = if (interactive) {\n   35      out.print(s)\n   36      out.flush()\n\n/Users/vjovanov/code/scala/test/files/pos/t5604/ReplConfig.scala:\n   24  \n   25    private def parens(x: Any) = \"(\" + x + \")\"\n   26:   private def echo(msg: => String) =\n   27      try Console println msg\n   28      catch { case x: AssertionError => Console.println(\"Assertion error printing debugging output: \" + x) }\n\n/Users/vjovanov/code/scala/test/script-tests/jar-manifest/src/jar-test.scala:\n    4    object Runner {\n    5      var line = 0\n    6:     def echo(msgs: Any*) = {\n    7        line += 1\n    8        Console.println(\"%-2s %s\".format(line, msgs mkString \" \"))\n\n23 matches across 18 files\n\n\na\n\\newpage\na\n\\newpage\na\n\\newpage\na\n\\newpage\na\n\\newpage\na\n\\newpage\na\n\\newpage\na\n\\newpage\na\n\\newpage\na\n\\newpage\nSearching 18469 files for \"\\newpage\" (case sensitive)\n\n\n\nSearching 19081 files for \"\\newpage\" (case sensitive)\n\n/Users/vjovanov/dissertation/head/settings_epfl_template.tex:\n  102      \\hbox{}\n  103      \\thispagestyle{empty}\n  104:     \\newpage\n  105:     \\if@twocolumn\\hbox{}\\newpage\\fi\\fi\\fi}\n  106  \\makeatother \\clearpage{\\pagestyle{plain}\\cleardoublepage}\n  107  \n\n/Users/vjovanov/dissertation/main/ch1_introduction.tex:\n  139  \n  140  a\n  141: \\newpage\n  142  a\n  143: \\newpage\n  144  a\n  145: \\newpage\n  146  a\n  147: \\newpage\n  148  a\n  149: \\newpage\n  150  a\n  151: \\newpage\n  152  a\n  153: \\newpage\n  154  a\n  155: \\newpage\n  156  a\n  157: \\newpage\n  158  a\n  159: \\newpage\n  160  \n  161  \n  ...\n  292  \\label{sec:partial-evaluation}\n  293  a\n  294: \\newpage\n  295  a\n  296: \\newpage\n  297  a\n  298: \\newpage\n  299  a\n  300: \\newpage\n  301  a\n  302: \\newpage\n  303  \n\n/Users/vjovanov/dissertation/main/ch2_dsl_embedding.tex:\n 1881  \n 1882  a\n 1883: \\newpage\n 1884  a\n 1885: \\newpage\n 1886  a\n 1887: \\newpage\n 1888  a\n 1889: \\newpage\n 1890  \n 1891  \\chapter{Improving Error Reporting of DSLs}\n ....\n 2393  \\label{sec:dynamic-compilation}\n 2394  a\n 2395: \\newpage\n 2396  a\n 2397: \\newpage\n 2398  a\n 2399: \\newpage\n 2400  a\n 2401: \\newpage\n 2402  a\n 2403: \\newpage\n 2404  a\n 2405: \\newpage\n 2406  a\n 2407: \\newpage\n 2408  a\n 2409: \\newpage\n 2410  a\n 2411: \\newpage\n 2412  a\n 2413: \\newpage\n 2414  a\n 2415: \\newpage\n 2416  \n\n/Users/vjovanov/dissertation/main/ch3_polyvariant_staging.tex:\n    5  \n    6  a\n    7: \\newpage\n    8  a\n    9: \\newpage\n   10  a\n   11: \\newpage\n   12  a\n   13: \\newpage\n   14  a\n   15: \\newpage\n   16  a\n   17: \\newpage\n   18  a\n   19: \\newpage\n   20  a\n   21: \\newpage\n   22  a\n   23: \\newpage\n   24  a\n   25: \\newpage\n   26  \n   27  \n\n42 matches across 4 files\n\n\nSearching 19081 files for \"\\newpage\" (case sensitive)\n\n/Users/vjovanov/dissertation/head/settings_epfl_template.tex:\n  102      \\hbox{}\n  103      \\thispagestyle{empty}\n  104:     \\newpage\n  105:     \\if@twocolumn\\hbox{}\\newpage\\fi\\fi\\fi}\n  106  \\makeatother \\clearpage{\\pagestyle{plain}\\cleardoublepage}\n  107  \n\n2 matches in 1 file\n",
			"settings":
			{
				"buffer_size": 845525,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/util/Position.scala",
			"settings":
			{
				"buffer_size": 10139,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/Positions.scala",
			"settings":
			{
				"buffer_size": 11925,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/library/scala/io/Position.scala",
			"settings":
			{
				"buffer_size": 3118,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/api/Position.scala",
			"settings":
			{
				"buffer_size": 8340,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/build/scaladoc/reflect/package.html",
			"settings":
			{
				"buffer_size": 3956,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/library/scala/reflect/package.scala",
			"settings":
			{
				"buffer_size": 3203,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/macros/package.scala",
			"settings":
			{
				"buffer_size": 1346,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/VirtualAny.scala",
			"settings":
			{
				"buffer_size": 2809,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/VirtualAnyRef.scala",
			"settings":
			{
				"buffer_size": 3472,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Staged.scala",
			"settings":
			{
				"buffer_size": 465,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package ch.epfl.yinyang\npackage api\n\nimport language.experimental.macros\nimport scala.reflect.macros.blackbox.Context\n\n/**\n * Member method-based virtualization of the `Any` API.\n *\n * This trait provides implementations of the infix methods\n * corresponding to the `Any` API that delegate to virtualized method\n * calls on the first argument of the infix method.\n *\n * Example: When faced with an expression of the form `x == y`, the\n * `ch.epfl.yinyang.transformers.LanguageVirtualization`\n * transformation (or the `@virtualized` macro annotation)\n * will generate a method call:\n * `infix_==(x, y)`.  This method call will be bound to an\n * implementation based on normal rules of scoping.  If it binds to\n * the one in this trait, the corresponding macro will rewrite it to\n * `x.__==(y)`.\n */\ntrait VirtualAny {\n\n  import VirtualAny._\n\n  // Poor man's infix methods for `Any` methods\n  def $infix_==(x1: Any, x2: Any): Any = macro any_==\n  def $infix_!=(x1: Any, x2: Any): Any = macro any_!=\n  def $infix_##(x: Any): Any = macro any_##\n  def $infix_equals(x1: Any, x2: Any): Any = macro any_equals\n  def $infix_hashCode(x: Any): Any = macro any_hashCode\n  def $infix_asInstanceOf[T](x: Any): Any = macro any_asInstanceOf[T]\n  def $infix_isInstanceOf[T](x: Any): Any = macro any_isInstanceOf[T]\n  def $infix_toString(x: Any): Any = macro any_toString\n  def $infix_getClass(x: Any): Any = macro any_getClass\n}\n\n/* VirtualAny companion object containing macro implementations. */\nprivate object VirtualAny {\n\n  def any_==(c: Context)(\n    x1: c.Expr[Any], x2: c.Expr[Any]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr(q\"$x1.__==($x2)\")\n  }\n\n  def any_!=(c: Context)(\n    x1: c.Expr[Any], x2: c.Expr[Any]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr(q\"$x1.__!=($x2)\")\n  }\n\n  def any_##(c: Context)(x: c.Expr[Any]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr(q\"$x.__##()\")\n  }\n\n  def any_equals(c: Context)(\n    x1: c.Expr[Any], x2: c.Expr[Any]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr(q\"$x1.__equals($x2)\")\n  }\n\n  def any_hashCode(c: Context)(x: c.Expr[Any]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr(q\"$x.__hashCode()\")\n  }\n\n  def any_asInstanceOf[T](c: Context)(x: c.Expr[Any])(\n    implicit tt: c.WeakTypeTag[T]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr[Any](q\"$x.__asInstanceOf[${tt.tpe}]\")\n  }\n\n  def any_isInstanceOf[T](c: Context)(x: c.Expr[Any])(\n    implicit tt: c.WeakTypeTag[T]): c.Expr[Boolean] = {\n\n    import c.universe._\n    c.Expr[Boolean](q\"$x.__isInstanceOf[${tt.tpe}]\")\n  }\n\n  def any_toString(c: Context)(x: c.Expr[Any]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr(q\"$x.__toString()\")\n  }\n\n  def any_getClass(c: Context)(x: c.Expr[Any]): c.Expr[Any] = {\n\n    import c.universe._\n    c.Expr(q\"$x.__getClass()\")\n  }\n}\n",
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/old/VirtualAny.scala",
			"file_size": 2800,
			"file_write_time": 130879471930000000,
			"settings":
			{
				"buffer_size": 2809,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/annotation/Virtualize.scala",
			"settings":
			{
				"buffer_size": 1990,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/LanguageVirtualization.scala",
			"settings":
			{
				"buffer_size": 12381,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/analysis/FreeIdentAnalysis.scala",
			"settings":
			{
				"buffer_size": 2346,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/ScopeInjection.scala",
			"settings":
			{
				"buffer_size": 2189,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package mpde.vector.test\n\nimport org.scalatest._\nimport dsl.la._\nimport org.junit.runner.RunWith\nimport org.scalatest.junit.JUnitRunner\nimport reflect.runtime.universe._\nimport java.io.{ PrintStream, ByteArrayOutputStream }\n\n@RunWith(classOf[JUnitRunner])\nclass GenericTranslationSpec extends FlatSpec with ShouldMatchers {\n  \"Generic translation\" should \"work for val definitions\" in {\n    intercept[NotImplementedError] {\n      la {\n        val v = 1\n        v\n      }\n    }\n  }\n\n  it should \"work for vars\" in {\n    intercept[NotImplementedError] {\n      la {\n        var v = 1\n        v = 2\n        v\n      }\n    }\n  }\n\n  it should \"work for lambdas\" in {\n    intercept[NotImplementedError] {\n      la {\n        val id = (x: Int) => x\n        id\n      }\n    }\n  }\n\n  it should \"work for application\" in {\n    intercept[NotImplementedError] {\n      la {\n        val id = (x: Int) => x\n        id(1)\n      }\n    }\n  }\n\n  it should \"work for all types of application\" in {\n    intercept[NotImplementedError] {\n      la {\n        val id0 = () => 1\n        val id1 = (x: Int) => x\n        val id2 = (x: Int, y: Int) => x + y\n        id0()\n        id1(1)\n        id2(1, 2)\n      }\n    }\n  }\n\n  it should \"work for AnyRef functions\" in {\n    intercept[NotImplementedError] {\n      la {\n        val id0 = 1\n        val hash = 1.hashCode\n        val hash2 = 2.hashCode\n        hash != hash2\n      }\n    }\n  }\n\n  it should \"work for locally defined functions\" in {\n    intercept[NotImplementedError] {\n      val x: Int = la {\n        def id[T](x: T): T = x\n        def id2[T, U <: AnyRef](p1: T, p2: U): Unit = ()\n        id2[Int, String](1, \"string\")\n        id[Int](1)\n      }\n    }\n  }\n\n  it should \"work for type aliases\" in {\n    intercept[NotImplementedError] {\n      la {\n        type X = Int\n        type Y = dsl.la.Vector[X]\n        val x: Y = dsl.la.Vector(1, 2, 3)\n        x\n      }\n    }\n  }\n\n  it should \"work with captured variables\" in {\n    val captured = 1\n    val captured1 = 2\n    val captured2 = 3\n    intercept[NotImplementedError] {\n      la {\n        val x: Int = captured + captured1 + captured2\n        x + 1\n      }\n    }\n  }\n\n}\n",
			"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/test/GenericTranslationTest.scala",
			"file_size": 2154,
			"file_write_time": 130887830510000000,
			"settings":
			{
				"buffer_size": 2149,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/shallow/package.scala",
			"settings":
			{
				"buffer_size": 11838,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package failure\n\nimport scala.annotation.unchecked.uncheckedVariance\n\ntrait FailureCake {\n  //  type Rep[T] = Exp[T]\n  //\n  //  abstract class Exp[+T: Manifest] {\n  //    def tp: Manifest[T @uncheckedVariance] = manifest[T]\n  //  }\n\n  //  trait LiftEvidence[T, K]\n  implicit def liftAnyFails[T: Manifest]: Any = ???\n  // This one works\n  //  implicit def liftAny[T]: Any = ???\n  //    new LiftEvidence[T, Rep[T]] {\n  //      def lift(v: T): Rep[T] = ???\n  //    }\n\n}",
			"file": "/Users/vjovanov/code/scala-yinyang/components/delite-test/src/FailureCake.scala",
			"file_size": 466,
			"file_write_time": 130554137000000000,
			"settings":
			{
				"buffer_size": 466,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/HoleTransformation.scala",
			"settings":
			{
				"buffer_size": 2313,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/examples/test/GenericTranslationTest.scala",
			"settings":
			{
				"buffer_size": 2167,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/examples/src/la/package.scala",
			"settings":
			{
				"buffer_size": 1335,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<!DOCTYPE html >\n<html>\n        <head>\n          <title>TransformationUtils - ch.epfl.yinyang.TransformationUtils</title>\n          <meta name=\"description\" content=\"TransformationUtils - ch.epfl.yinyang.TransformationUtils\" />\n          <meta name=\"keywords\" content=\"TransformationUtils ch.epfl.yinyang.TransformationUtils\" />\n          <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\" />\n          \n      <link href=\"../../../lib/template.css\" media=\"screen\" type=\"text/css\" rel=\"stylesheet\" />\n      <link href=\"../../../lib/diagrams.css\" media=\"screen\" type=\"text/css\" rel=\"stylesheet\" id=\"diagrams-css\" />\n      <script type=\"text/javascript\" src=\"../../../lib/jquery.js\" id=\"jquery-js\"></script>\n      <script type=\"text/javascript\" src=\"../../../lib/jquery-ui.js\"></script>\n      <script type=\"text/javascript\" src=\"../../../lib/template.js\"></script>\n      <script type=\"text/javascript\" src=\"../../../lib/tools.tooltip.js\"></script>\n      \n      <script type=\"text/javascript\">\n         if(top === self) {\n            var url = '../../../index.html';\n            var hash = 'ch.epfl.yinyang.TransformationUtils';\n            var anchor = window.location.hash;\n            var anchor_opt = '';\n            if (anchor.length >= 1)\n              anchor_opt = '@' + anchor.substring(1);\n            window.location.href = url + '#' + hash + anchor_opt;\n         }\n   	  </script>\n    \n        </head>\n        <body class=\"type\">\n      <div id=\"definition\">\n        <img src=\"../../../lib/trait_big.png\" />\n        <p id=\"owner\"><a href=\"../../package.html\" class=\"extype\" name=\"ch\">ch</a>.<a href=\"../package.html\" class=\"extype\" name=\"ch.epfl\">epfl</a>.<a href=\"package.html\" class=\"extype\" name=\"ch.epfl.yinyang\">yinyang</a></p>\n        <h1>TransformationUtils</h1> <span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      </div>\n\n      <h4 id=\"signature\" class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">trait</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">TransformationUtils</span><span class=\"result\"> extends <a href=\"MacroModule.html\" class=\"extype\" name=\"ch.epfl.yinyang.MacroModule\">MacroModule</a></span>\n      </span>\n      </h4>\n      \n          <div id=\"comment\" class=\"fullcommenttop\"><div class=\"comment cmt\"><p>Common utilities for the Yin-Yang project.\n</p></div><div class=\"toggleContainer block\">\n          <span class=\"toggle\">Linear Supertypes</span>\n          <div class=\"superTypes hiddenContent\"><a href=\"MacroModule.html\" class=\"extype\" name=\"ch.epfl.yinyang.MacroModule\">MacroModule</a>, <span class=\"extype\" name=\"scala.AnyRef\">AnyRef</span>, <span class=\"extype\" name=\"scala.Any\">Any</span></div>\n        </div><div class=\"toggleContainer block\">\n            <span class=\"toggle\">Known Subclasses</span>\n            <div class=\"subClasses hiddenContent\"><a href=\"transformers/AscriptionTransformation.html\" class=\"extype\" name=\"ch.epfl.yinyang.transformers.AscriptionTransformation\">AscriptionTransformation</a>, <a href=\"analysis/FreeIdentAnalysis.html\" class=\"extype\" name=\"ch.epfl.yinyang.analysis.FreeIdentAnalysis\">FreeIdentAnalysis</a>, <a href=\"transformers/HoleTransformation.html\" class=\"extype\" name=\"ch.epfl.yinyang.transformers.HoleTransformation\">HoleTransformation</a>, <a href=\"transformers/LanguageVirtualization.html\" class=\"extype\" name=\"ch.epfl.yinyang.transformers.LanguageVirtualization\">LanguageVirtualization</a>, <a href=\"transformers/LiftLiteralTransformation.html\" class=\"extype\" name=\"ch.epfl.yinyang.transformers.LiftLiteralTransformation\">LiftLiteralTransformation</a>, <a href=\"transformers/NullPostProcessing.html\" class=\"extype\" name=\"ch.epfl.yinyang.transformers.NullPostProcessing\">NullPostProcessing</a>, <a href=\"transformers/PostProcessing.html\" class=\"extype\" name=\"ch.epfl.yinyang.transformers.PostProcessing\">PostProcessing</a>, <a href=\"transformers/ScopeInjection.html\" class=\"extype\" name=\"ch.epfl.yinyang.transformers.ScopeInjection\">ScopeInjection</a></div>\n          </div></div>\n        \n\n      <div id=\"mbrsel\">\n        <div id=\"textfilter\"><span class=\"pre\"></span><span class=\"input\"><input id=\"mbrsel-input\" type=\"text\" accesskey=\"/\" /></span><span class=\"post\"></span></div>\n        <div id=\"order\">\n              <span class=\"filtertype\">Ordering</span>\n              <ol>\n                \n                <li class=\"alpha in\"><span>Alphabetic</span></li>\n                <li class=\"inherit out\"><span>By inheritance</span></li>\n              </ol>\n            </div>\n        <div id=\"ancestors\">\n                <span class=\"filtertype\">Inherited<br />\n                </span>\n                <ol id=\"linearization\">\n                  <li class=\"in\" name=\"ch.epfl.yinyang.TransformationUtils\"><span>TransformationUtils</span></li><li class=\"in\" name=\"ch.epfl.yinyang.MacroModule\"><span>MacroModule</span></li><li class=\"in\" name=\"scala.AnyRef\"><span>AnyRef</span></li><li class=\"in\" name=\"scala.Any\"><span>Any</span></li>\n                </ol>\n              </div><div id=\"ancestors\">\n            <span class=\"filtertype\"></span>\n            <ol>\n              <li class=\"hideall out\"><span>Hide All</span></li>\n              <li class=\"showall in\"><span>Show all</span></li>\n            </ol>\n            <a href=\"http://docs.scala-lang.org/overviews/scaladoc/usage.html#members\" target=\"_blank\">Learn more about member selection</a>\n          </div>\n        <div id=\"visbl\">\n            <span class=\"filtertype\">Visibility</span>\n            <ol><li class=\"public in\"><span>Public</span></li><li class=\"all out\"><span>All</span></li></ol>\n          </div>\n      </div>\n\n      <div id=\"template\">\n        <div id=\"allMembers\">\n        \n\n        <div id=\"types\" class=\"types members\">\n              <h3>Type Members</h3>\n              <ol><li name=\"ch.epfl.yinyang.MacroModule.Ctx\" visbl=\"pub\" data-isabs=\"true\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"Ctx&lt;:scala.reflect.macros.blackbox.Context\"></a>\n      <a id=\"Ctx:Ctx\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">abstract </span>\n        <span class=\"kind\">type</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">Ctx</span><span class=\"result\"> &lt;: <span class=\"extype\" name=\"scala.reflect.macros.blackbox.Context\">Context</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@Ctx&lt;:scala.reflect.macros.blackbox.Context\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd><a href=\"MacroModule.html\" class=\"extype\" name=\"ch.epfl.yinyang.MacroModule\">MacroModule</a></dd></dl></div>\n    </li></ol>\n            </div>\n\n        <div id=\"values\" class=\"values members\">\n              <h3>Abstract Value Members</h3>\n              <ol><li name=\"ch.epfl.yinyang.MacroModule#c\" visbl=\"pub\" data-isabs=\"true\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"c:MacroModule.this.Ctx\"></a>\n      <a id=\"c:Ctx\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">abstract </span>\n        <span class=\"kind\">val</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">c</span><span class=\"result\">: <a href=\"#Ctx&lt;:scala.reflect.macros.blackbox.Context\" class=\"extmbr\" name=\"ch.epfl.yinyang.TransformationUtils.Ctx\">Ctx</a></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@c:MacroModule.this.Ctx\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd><a href=\"MacroModule.html\" class=\"extype\" name=\"ch.epfl.yinyang.MacroModule\">MacroModule</a></dd></dl></div>\n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#debugLevel\" visbl=\"pub\" data-isabs=\"true\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"debugLevel:Int\"></a>\n      <a id=\"debugLevel:Int\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">abstract </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">debugLevel</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Int\">Int</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@debugLevel:Int\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li></ol>\n            </div>\n\n        <div id=\"values\" class=\"values members\">\n              <h3>Concrete Value Members</h3>\n              <ol><li name=\"scala.AnyRef#!=\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"!=(x$1:Any):Boolean\"></a>\n      <a id=\"!=(Any):Boolean\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span title=\"gt4s: $bang$eq\" class=\"name\">!=</span><span class=\"params\">(<span name=\"arg0\">arg0: <span class=\"extype\" name=\"scala.Any\">Any</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Boolean\">Boolean</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@!=(x$1:Any):Boolean\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef → Any</dd></dl></div>\n    </li><li name=\"scala.AnyRef###\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"##():Int\"></a>\n      <a id=\"##():Int\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span title=\"gt4s: $hash$hash\" class=\"name\">##</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Int\">Int</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@##():Int\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef → Any</dd></dl></div>\n    </li><li name=\"scala.AnyRef#==\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"==(x$1:Any):Boolean\"></a>\n      <a id=\"==(Any):Boolean\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span title=\"gt4s: $eq$eq\" class=\"name\">==</span><span class=\"params\">(<span name=\"arg0\">arg0: <span class=\"extype\" name=\"scala.Any\">Any</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Boolean\">Boolean</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@==(x$1:Any):Boolean\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef → Any</dd></dl></div>\n    </li><li name=\"ch.epfl.yinyang.TransformationUtils.UnstageBlock\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"UnstageBlock\"></a>\n      <a id=\"UnstageBlock:UnstageBlock\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">object</span>\n      </span>\n      <span class=\"symbol\">\n        <a href=\"TransformationUtils$UnstageBlock$.html\"><span class=\"name\">UnstageBlock</span></a>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@UnstageBlock\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"scala.Any#asInstanceOf\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"asInstanceOf[T0]:T0\"></a>\n      <a id=\"asInstanceOf[T0]:T0\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">asInstanceOf</span><span class=\"tparams\">[<span name=\"T0\">T0</span>]</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Any.asInstanceOf.T0\">T0</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@asInstanceOf[T0]:T0\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>Any</dd></dl></div>\n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#className\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"className:String\"></a>\n      <a id=\"className:String\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">className</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Predef.String\">String</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@className:String\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"scala.AnyRef#clone\" visbl=\"prt\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"clone():Object\"></a>\n      <a id=\"clone():AnyRef\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">clone</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"scala.AnyRef\">AnyRef</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@clone():Object\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Attributes</dt><dd>protected[<a href=\"../../../java$lang.html\" class=\"extype\" name=\"java.lang\">java.lang</a>] </dd><dt>Definition Classes</dt><dd>AnyRef</dd><dt>Annotations</dt><dd>\n                <span class=\"name\">@throws</span><span class=\"args\">(<span>\n      \n      <span class=\"defval\" name=\"classOf[java.lang.CloneNotSupportedException]\">...</span>\n    </span>)</span>\n              \n        </dd></dl></div>\n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#code\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"code(tree:TransformationUtils.this.c.universe.Tree,shortenDSLNames:Boolean):String\"></a>\n      <a id=\"code(scala.reflect.macros.Universe.Tree,Boolean):String\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">code</span><span class=\"params\">(<span name=\"tree\">tree: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>, <span name=\"shortenDSLNames\">shortenDSLNames: <span class=\"extype\" name=\"scala.Boolean\">Boolean</span> = <span class=\"symbol\">true</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Predef.String\">String</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@code(tree:TransformationUtils.this.c.universe.Tree,shortenDSLNames:Boolean):String\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#copy\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"copy(orig:TransformationUtils.this.c.universe.Tree)(nev:TransformationUtils.this.c.universe.Tree):TransformationUtils.this.c.universe.Tree\"></a>\n      <a id=\"copy(scala.reflect.macros.Universe.Tree)(scala.reflect.macros.Universe.Tree):scala.reflect.macros.Universe.Tree\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">copy</span><span class=\"params\">(<span name=\"orig\">orig: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>)</span><span class=\"params\">(<span name=\"nev\">nev: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@copy(orig:TransformationUtils.this.c.universe.Tree)(nev:TransformationUtils.this.c.universe.Tree):TransformationUtils.this.c.universe.Tree\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#deepDealias\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"deepDealias(tpe:TransformationUtils.this.c.universe.Type):TransformationUtils.this.c.universe.Type\"></a>\n      <a id=\"deepDealias(scala.reflect.macros.Universe.Type):scala.reflect.macros.Universe.Type\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">deepDealias</span><span class=\"params\">(<span name=\"tpe\">tpe: <span class=\"extype\" name=\"scala.reflect.api.Types.Type\">scala.reflect.macros.Universe.Type</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.reflect.api.Types.Type\">scala.reflect.macros.Universe.Type</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@deepDealias(tpe:TransformationUtils.this.c.universe.Type):TransformationUtils.this.c.universe.Type\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"scala.AnyRef#eq\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"eq(x$1:AnyRef):Boolean\"></a>\n      <a id=\"eq(AnyRef):Boolean\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">eq</span><span class=\"params\">(<span name=\"arg0\">arg0: <span class=\"extype\" name=\"scala.AnyRef\">AnyRef</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Boolean\">Boolean</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@eq(x$1:AnyRef):Boolean\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd></dl></div>\n    </li><li name=\"scala.AnyRef#equals\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"equals(x$1:Any):Boolean\"></a>\n      <a id=\"equals(Any):Boolean\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">equals</span><span class=\"params\">(<span name=\"arg0\">arg0: <span class=\"extype\" name=\"scala.Any\">Any</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Boolean\">Boolean</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@equals(x$1:Any):Boolean\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef → Any</dd></dl></div>\n    </li><li name=\"scala.AnyRef#finalize\" visbl=\"prt\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"finalize():Unit\"></a>\n      <a id=\"finalize():Unit\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">finalize</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Unit\">Unit</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@finalize():Unit\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Attributes</dt><dd>protected[<a href=\"../../../java$lang.html\" class=\"extype\" name=\"java.lang\">java.lang</a>] </dd><dt>Definition Classes</dt><dd>AnyRef</dd><dt>Annotations</dt><dd>\n                <span class=\"name\">@throws</span><span class=\"args\">(<span>\n      \n      <span class=\"symbol\">classOf[java.lang.Throwable]</span>\n    </span>)</span>\n              \n        </dd></dl></div>\n    </li><li name=\"scala.AnyRef#getClass\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"getClass():Class[_]\"></a>\n      <a id=\"getClass():Class[_]\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">getClass</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"java.lang.Class\">Class</span>[_]</span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@getClass():Class[_]\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef → Any</dd></dl></div>\n    </li><li name=\"scala.AnyRef#hashCode\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"hashCode():Int\"></a>\n      <a id=\"hashCode():Int\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">hashCode</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Int\">Int</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@hashCode():Int\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef → Any</dd></dl></div>\n    </li><li name=\"scala.Any#isInstanceOf\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"isInstanceOf[T0]:Boolean\"></a>\n      <a id=\"isInstanceOf[T0]:Boolean\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">isInstanceOf</span><span class=\"tparams\">[<span name=\"T0\">T0</span>]</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Boolean\">Boolean</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@isInstanceOf[T0]:Boolean\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>Any</dd></dl></div>\n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#log\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"log(s:=&gt;String,level:Int):Unit\"></a>\n      <a id=\"log(⇒String,Int):Unit\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">log</span><span class=\"params\">(<span name=\"s\">s: ⇒ <span class=\"extype\" name=\"scala.Predef.String\">String</span></span>, <span name=\"level\">level: <span class=\"extype\" name=\"scala.Int\">Int</span> = <span class=\"symbol\">0</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Unit\">Unit</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@log(s:=&gt;String,level:Int):Unit\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#makeConstructor\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"makeConstructor(classname:String,arguments:List[TransformationUtils.this.c.universe.Tree]):TransformationUtils.this.c.universe.Tree\"></a>\n      <a id=\"makeConstructor(String,List[scala.reflect.macros.Universe.Tree]):scala.reflect.macros.Universe.Tree\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">makeConstructor</span><span class=\"params\">(<span name=\"classname\">classname: <span class=\"extype\" name=\"scala.Predef.String\">String</span></span>, <span name=\"arguments\">arguments: <span class=\"extype\" name=\"scala.List\">List</span>[<span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span>]</span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@makeConstructor(classname:String,arguments:List[TransformationUtils.this.c.universe.Tree]):TransformationUtils.this.c.universe.Tree\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#method\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"method(recOpt:Option[TransformationUtils.this.c.universe.Tree],methName:String,args:List[List[TransformationUtils.this.c.universe.Tree]],targs:List[TransformationUtils.this.c.universe.Tree]):TransformationUtils.this.c.universe.Tree\"></a>\n      <a id=\"method(Option[scala.reflect.macros.Universe.Tree],String,List[List[scala.reflect.macros.Universe.Tree]],List[scala.reflect.macros.Universe.Tree]):scala.reflect.macros.Universe.Tree\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">method</span><span class=\"params\">(<span name=\"recOpt\">recOpt: <span class=\"extype\" name=\"scala.Option\">Option</span>[<span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span>]</span>, <span name=\"methName\">methName: <span class=\"extype\" name=\"scala.Predef.String\">String</span></span>, <span name=\"args\">args: <span class=\"extype\" name=\"scala.List\">List</span>[<span class=\"extype\" name=\"scala.List\">List</span>[<span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span>]]</span>, <span name=\"targs\">targs: <span class=\"extype\" name=\"scala.List\">List</span>[<span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span>] = <span class=\"symbol\">Nil</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@method(recOpt:Option[TransformationUtils.this.c.universe.Tree],methName:String,args:List[List[TransformationUtils.this.c.universe.Tree]],targs:List[TransformationUtils.this.c.universe.Tree]):TransformationUtils.this.c.universe.Tree\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"scala.AnyRef#ne\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"ne(x$1:AnyRef):Boolean\"></a>\n      <a id=\"ne(AnyRef):Boolean\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">ne</span><span class=\"params\">(<span name=\"arg0\">arg0: <span class=\"extype\" name=\"scala.AnyRef\">AnyRef</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Boolean\">Boolean</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@ne(x$1:AnyRef):Boolean\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd></dl></div>\n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#newClass\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"newClass(classname:String):TransformationUtils.this.c.universe.New\"></a>\n      <a id=\"newClass(String):scala.reflect.macros.Universe.New\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">newClass</span><span class=\"params\">(<span name=\"classname\">classname: <span class=\"extype\" name=\"scala.Predef.String\">String</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.reflect.api.Trees.New\">scala.reflect.macros.Universe.New</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@newClass(classname:String):TransformationUtils.this.c.universe.New\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"scala.AnyRef#notify\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"notify():Unit\"></a>\n      <a id=\"notify():Unit\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">notify</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Unit\">Unit</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@notify():Unit\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd></dl></div>\n    </li><li name=\"scala.AnyRef#notifyAll\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"notifyAll():Unit\"></a>\n      <a id=\"notifyAll():Unit\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">notifyAll</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Unit\">Unit</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@notifyAll():Unit\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd></dl></div>\n    </li><li name=\"scala.AnyRef#synchronized\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"synchronized[T0](x$1:=&gt;T0):T0\"></a>\n      <a id=\"synchronized[T0](⇒T0):T0\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">synchronized</span><span class=\"tparams\">[<span name=\"T0\">T0</span>]</span><span class=\"params\">(<span name=\"arg0\">arg0: ⇒ <span class=\"extype\" name=\"java.lang.AnyRef.synchronized.T0\">T0</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"java.lang.AnyRef.synchronized.T0\">T0</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@synchronized[T0](x$1:=&gt;T0):T0\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd></dl></div>\n    </li><li name=\"scala.AnyRef#toString\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"toString():String\"></a>\n      <a id=\"toString():String\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">toString</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"java.lang.String\">String</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@toString():String\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef → Any</dd></dl></div>\n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#typeApply\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"typeApply(targs:List[TransformationUtils.this.c.universe.Tree])(select:TransformationUtils.this.c.universe.Tree):TransformationUtils.this.c.universe.Tree\"></a>\n      <a id=\"typeApply(List[scala.reflect.macros.Universe.Tree])(scala.reflect.macros.Universe.Tree):scala.reflect.macros.Universe.Tree\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">typeApply</span><span class=\"params\">(<span name=\"targs\">targs: <span class=\"extype\" name=\"scala.List\">List</span>[<span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span>]</span>)</span><span class=\"params\">(<span name=\"select\">select: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@typeApply(targs:List[TransformationUtils.this.c.universe.Tree])(select:TransformationUtils.this.c.universe.Tree):TransformationUtils.this.c.universe.Tree\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#typeRegex\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"typeRegex:scala.util.matching.Regex\"></a>\n      <a id=\"typeRegex:Regex\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">lazy val</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">typeRegex</span><span class=\"result\">: <span class=\"extype\" name=\"scala.util.matching.Regex\">Regex</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@typeRegex:scala.util.matching.Regex\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#typeToTree\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"typeToTree(tpe:TransformationUtils.this.c.universe.Type):TransformationUtils.this.c.universe.Tree\"></a>\n      <a id=\"typeToTree(scala.reflect.macros.Universe.Type):scala.reflect.macros.Universe.Tree\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">typeToTree</span><span class=\"params\">(<span name=\"tpe\">tpe: <span class=\"extype\" name=\"scala.reflect.api.Types.Type\">scala.reflect.macros.Universe.Type</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.reflect.api.Trees.Tree\">scala.reflect.macros.Universe.Tree</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@typeToTree(tpe:TransformationUtils.this.c.universe.Type):TransformationUtils.this.c.universe.Tree\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"ch.epfl.yinyang.TransformationUtils#typetagRegex\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"no\" group=\"Ungrouped\">\n      <a id=\"typetagRegex:scala.util.matching.Regex\"></a>\n      <a id=\"typetagRegex:Regex\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\"></span>\n        <span class=\"kind\">lazy val</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">typetagRegex</span><span class=\"result\">: <span class=\"extype\" name=\"scala.util.matching.Regex\">Regex</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@typetagRegex:scala.util.matching.Regex\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      \n    </li><li name=\"scala.AnyRef#wait\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"wait():Unit\"></a>\n      <a id=\"wait():Unit\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">wait</span><span class=\"params\">()</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Unit\">Unit</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@wait():Unit\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd><dt>Annotations</dt><dd>\n                <span class=\"name\">@throws</span><span class=\"args\">(<span>\n      \n      <span class=\"defval\" name=\"classOf[java.lang.InterruptedException]\">...</span>\n    </span>)</span>\n              \n        </dd></dl></div>\n    </li><li name=\"scala.AnyRef#wait\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"wait(x$1:Long,x$2:Int):Unit\"></a>\n      <a id=\"wait(Long,Int):Unit\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">wait</span><span class=\"params\">(<span name=\"arg0\">arg0: <span class=\"extype\" name=\"scala.Long\">Long</span></span>, <span name=\"arg1\">arg1: <span class=\"extype\" name=\"scala.Int\">Int</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Unit\">Unit</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@wait(x$1:Long,x$2:Int):Unit\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd><dt>Annotations</dt><dd>\n                <span class=\"name\">@throws</span><span class=\"args\">(<span>\n      \n      <span class=\"defval\" name=\"classOf[java.lang.InterruptedException]\">...</span>\n    </span>)</span>\n              \n        </dd></dl></div>\n    </li><li name=\"scala.AnyRef#wait\" visbl=\"pub\" data-isabs=\"false\" fullComment=\"yes\" group=\"Ungrouped\">\n      <a id=\"wait(x$1:Long):Unit\"></a>\n      <a id=\"wait(Long):Unit\"></a>\n      <h4 class=\"signature\">\n      <span class=\"modifier_kind\">\n        <span class=\"modifier\">final </span>\n        <span class=\"kind\">def</span>\n      </span>\n      <span class=\"symbol\">\n        <span class=\"name\">wait</span><span class=\"params\">(<span name=\"arg0\">arg0: <span class=\"extype\" name=\"scala.Long\">Long</span></span>)</span><span class=\"result\">: <span class=\"extype\" name=\"scala.Unit\">Unit</span></span>\n      </span>\n      </h4><span class=\"permalink\">\n      <a href=\"../../../index.html#ch.epfl.yinyang.TransformationUtils@wait(x$1:Long):Unit\" title=\"Permalink\" target=\"_top\">\n        <img src=\"../../../lib/permalink.png\" />\n      </a>\n    </span>\n      <div class=\"fullcomment\"><dl class=\"attributes block\"> <dt>Definition Classes</dt><dd>AnyRef</dd><dt>Annotations</dt><dd>\n                <span class=\"name\">@throws</span><span class=\"args\">(<span>\n      \n      <span class=\"defval\" name=\"classOf[java.lang.InterruptedException]\">...</span>\n    </span>)</span>\n              \n        </dd></dl></div>\n    </li></ol>\n            </div>\n\n        \n\n        \n        </div>\n\n        <div id=\"inheritedMembers\">\n        <div class=\"parent\" name=\"ch.epfl.yinyang.MacroModule\">\n              <h3>Inherited from <a href=\"MacroModule.html\" class=\"extype\" name=\"ch.epfl.yinyang.MacroModule\">MacroModule</a></h3>\n            </div><div class=\"parent\" name=\"scala.AnyRef\">\n              <h3>Inherited from <span class=\"extype\" name=\"scala.AnyRef\">AnyRef</span></h3>\n            </div><div class=\"parent\" name=\"scala.Any\">\n              <h3>Inherited from <span class=\"extype\" name=\"scala.Any\">Any</span></h3>\n            </div>\n        \n        </div>\n\n        <div id=\"groupedMembers\">\n        <div class=\"group\" name=\"Ungrouped\">\n              <h3>Ungrouped</h3>\n              \n            </div>\n        </div>\n\n      </div>\n\n      <div id=\"tooltip\"></div>\n\n      <div id=\"footer\">  </div>\n\n\n    </body>\n      </html>",
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/target/scala-2.11/api/ch/epfl/yinyang/TransformationUtils.html",
			"file_size": 44835,
			"file_write_time": 130740071630000000,
			"settings":
			{
				"buffer_size": 44813,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "format version: 5\noutput mode:\n1 items\n0 -> single\noutput directories:\n1 items\noutput dir -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes\ncompile options:\n4 items\n0 -> -deprecation\n1 -> -feature\n2 -> -language:higherKinds\n3 -> -language:implicitConversions\njavac options:\n0 items\ncompiler version:\n1 items\n0 -> 2.11.1\ncompile order:\n1 items\n0 -> Mixed\nname hashing:\n1 items\n0 -> true\nproducts:\n142 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/Base.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/PolymorphicBase.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile$$anonfun$setupCompiler$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile$$anonfun$setupCompiler$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/VirtualControlsBase.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/VirtualFunctionsBase.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$$plus$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$$times$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$baseVectors$1$$anonfun$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$baseVectors$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$corresponds$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$dotProduct$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$length$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$negate$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$splice$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$$plus$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$$times$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$baseVectors$2$$anonfun$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$baseVectors$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$corresponds$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$dotProduct$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$length$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$negate$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$splice$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/TestObject$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/TestObject.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/Vector$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/Vector.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$Array$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$ArrayOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$ArrayOpsOf.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/BooleanDSL$LiftBoolean$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/BooleanDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/BooleanDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ClassTagOps$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ClassTagOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOpsOf.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOrdering$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOverloaded$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$LiftDouble$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$LiftString$$typecreator1$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$LiftString$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IfThenElseDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IfThenElseDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOpsOf.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOrdering$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOverloaded$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$LiftInt$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$LiftUnit$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$DoubleIsFractional$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$IntIsIntegral$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOps$Ops.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOps$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOpsOf$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOpsOf.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ScalaVirtualizationDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ScalaVirtualizationDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$DenseVector$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$SparseVector$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$Vector$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$VectorOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$VectorOpsOf.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package$implementations$$anon$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package$implementations$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BasePrintDSL$$anonfun$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BasePrintDSL$$anonfun$generateCode$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BasePrintDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanConst$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanConst.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanHole$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanHole.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanLess$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanLess.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanOps$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$LiftBoolean$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL$$anonfun$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL$$anonfun$compilationVars$3$$anonfun$apply$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL$$anonfun$compilationVars$3.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$CodeGeneratingStatement$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$CodeGeneratingStatement.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$Hole$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$Hole.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntConst$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntConst.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntEq$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntEq.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntMixed$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntMixed.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntOps$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntOps.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntPlus$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntPlus.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntValue.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$LiftInt$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniUnitDSL$LiftUnit$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniUnitDSL$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniUnitDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/OptimizedPrintDSL$$anonfun$compilationVars$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/OptimizedPrintDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/PrintCodeGenerator$BaseHole.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/PrintCodeGenerator$class.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/PrintCodeGenerator.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/ReturningPrintDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/StagedPrintDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/UnstagedPrintDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$3.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$4.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$5.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$6.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$7$$anonfun$apply$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$7.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$compilationVars$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/package$.class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/package.class\nbinary dependencies:\n22 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-compiler/jars/scala-compiler-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-compiler/jars/scala-compiler-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar\ndirect source dependencies:\n0 items\ndirect external dependencies:\n0 items\npublic inherited source dependencies:\n0 items\npublic inherited external dependencies:\n0 items\nmember reference internal dependencies:\n6 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala\nmember reference external dependencies:\n29 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> ch.epfl.yinyang.api.BaseYinYangTypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> ch.epfl.yinyang.api.CodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> ch.epfl.yinyang.api.CodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ch.epfl.yinyang.api.BaseYinYang\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ch.epfl.yinyang.api.FullyStaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ch.epfl.yinyang.api.Interpreted\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> ch.epfl.yinyang.YYTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> ch.epfl.yinyang.YYTransformer$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> ch.epfl.yinyang.typetransformers.GenericTypeTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.BaseYinYang\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.BaseYinYangTypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.CodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.CompVar$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.FullyStaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.FullyUnstaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.Interpreted\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.NonCompVar$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.OptionalDynamicCompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.OptionalDynamicCompVar$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.OptionalStaticCompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.OptionalStaticCompVar$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.RequiredDynamicCompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.RequiredDynamicCompVar$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.RequiredStaticCompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.VarType\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.VirtualAny\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> ch.epfl.yinyang.YYTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> ch.epfl.yinyang.YYTransformer$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> ch.epfl.yinyang.typetransformers.PolyTransformer\ninheritance internal dependencies:\n5 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> /Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala\ninheritance external dependencies:\n13 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> ch.epfl.yinyang.api.BaseYinYangTypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> ch.epfl.yinyang.api.CodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ch.epfl.yinyang.api.BaseYinYang\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ch.epfl.yinyang.api.FullyStaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ch.epfl.yinyang.api.Interpreted\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> ch.epfl.yinyang.typetransformers.GenericTypeTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.BaseYinYang\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.BaseYinYangTypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.CodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.FullyStaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.FullyUnstaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.Interpreted\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch.epfl.yinyang.api.VirtualAny\nclass names:\n142 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> base.Base\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> base.PolymorphicBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> base.ScalaCompile\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> base.ScalaCompile$$anonfun$setupCompiler$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> base.ScalaCompile$$anonfun$setupCompiler$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> base.ScalaCompile$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> base.VirtualControlsBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> base.VirtualFunctionsBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$$plus$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$$times$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$baseVectors$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$baseVectors$1$$anonfun$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$corresponds$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$dotProduct$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$length$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$negate$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.DenseVector$$anonfun$splice$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$$plus$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$$times$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$baseVectors$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$baseVectors$2$$anonfun$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$corresponds$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$dotProduct$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$length$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$negate$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.SparseVector$$anonfun$splice$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.TestObject\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.TestObject$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.Vector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl.la.Vector$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ArrayDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ArrayDSL$Array$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ArrayDSL$ArrayOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ArrayDSL$ArrayOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ArrayDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.BooleanDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.BooleanDSL$LiftBoolean$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.BooleanDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ClassTagOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ClassTagOps$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$DoubleOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$DoubleOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$DoubleOrdering$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$DoubleOverloaded$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$LiftDouble$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$LiftString$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$LiftString$$typecreator1$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.DoubleDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IfThenElseDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IfThenElseDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL$IntOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL$IntOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL$IntOrdering$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL$IntOverloaded$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL$LiftInt$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL$LiftUnit$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.IntDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$DoubleIsFractional$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$IntIsIntegral$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$NumericOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$NumericOps$Ops\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$NumericOps$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$NumericOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$NumericOpsOf$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.NumericOps$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ScalaVirtualizationDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.ScalaVirtualizationDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.VectorDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.VectorDSL$DenseVector$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.VectorDSL$SparseVector$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.VectorDSL$Vector$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.VectorDSL$VectorOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.VectorDSL$VectorOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl.la.rep.VectorDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> dsl.la.package\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> dsl.la.package$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> dsl.la.package$implementations$\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> dsl.la.package$implementations$$anon$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BasePrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BasePrintDSL$$anonfun$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BasePrintDSL$$anonfun$generateCode$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanConst\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanConst$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanHole\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanHole$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanLess\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanLess$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$BooleanOps$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$LiftBoolean$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.BooleanOps$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.EvenOddOptimizedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.EvenOddOptimizedPrintDSL$$anonfun$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.EvenOddOptimizedPrintDSL$$anonfun$compilationVars$3\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.EvenOddOptimizedPrintDSL$$anonfun$compilationVars$3$$anonfun$apply$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$CodeGeneratingStatement\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$CodeGeneratingStatement$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$Hole\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$Hole$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntConst\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntConst$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntEq\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntEq$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntMixed\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntMixed$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntOps$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntPlus\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntPlus$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$IntValue\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$LiftInt$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniIntDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniUnitDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniUnitDSL$LiftUnit$\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.MiniUnitDSL$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.OptimizedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.OptimizedPrintDSL$$anonfun$compilationVars$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.PrintCodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.PrintCodeGenerator$BaseHole\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.PrintCodeGenerator$class\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.ReturningPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.StagedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.UnstagedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL$$anonfun$3\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL$$anonfun$4\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL$$anonfun$5\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL$$anonfun$6\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL$$anonfun$7\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL$$anonfun$7$$anonfun$apply$2\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl.print.VarTypePrintDSL$$anonfun$compilationVars$1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> dsl.print.package\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> dsl.print.package$\nused names:\n583 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> Any\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> Base\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> BaseYinYangTypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> CodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> api\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> base\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> ch\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> epfl\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> yinyang\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> +\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> <init>\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> AbstractFileClassLoader\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> AnyRef\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Array\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> BatchSourceFile\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> COLON\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Class\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> ClassTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> ConsoleReporter\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Global\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Int\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> List\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> None\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Predef\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> PrintWriter\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Ret\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Run\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> ScalaCompile\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Set\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> Settings\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> System\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> T\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> TypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> VirtualDirectory\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> api\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> apply\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> asInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> base\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> bootclasspath\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> canBuildFrom\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> ch\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> className\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> classpath\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> cls\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> collection\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> compileCount\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> compileCount_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> compileSources\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> compiler\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> compiler_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> dumpGeneratedCode\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> encoding\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> epfl\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> eq\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> extdirs\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> fileSystem\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> generateCode\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> getClass\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> getClassLoader\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> getConstructor\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> getPath\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> getProperty\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> getURLs\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> hasErrors\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> immutable\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> internal\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> io\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> isInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> java\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> lang\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> loadClass\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> loader\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> map\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> mkString\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> newInstance\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> nsc\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> out\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> outdir\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> outputDirs\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> package\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> printSummary\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> println\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> refArrayOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> reflect\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> reporter\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> reporter_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> reporters\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> reset\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> run\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> runtime\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> setSingleOutput\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> settings\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> setupCompiler\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> source\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> toString\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> tools\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> universe\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> unstableHoleIds\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> util\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> value_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> wrapString\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> yinyang\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> Any\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> Boolean\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> Function0\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> Function1\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> Function2\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> Nothing\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> R\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> PolymorphicBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> T\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> T_1\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> T_2\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> U\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> Unit\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> VirtualControlsBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> VirtualFunctionsBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> _root_\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> base\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> ++\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> <init>\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> <repeated>\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> ==\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> ???\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> A1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Any\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> AnyRef\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Array\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> B\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Boolean\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> ClassTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> DenseVector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Double\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Function1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Function2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> IndexedSeq\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Int\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> List\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> ListBuffer\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Map\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Numeric\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Ordering\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Predef\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Seq\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> SparseVector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> T\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> TestObject\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Tuple2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> U\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> Vector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> WrappedArray\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> _1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> _2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> _root_\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> a\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> apply\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> asInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> canBuildFrom\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> collection\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> dsl\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> f\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> fill\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> flatMap\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> fn\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> forall\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> fun\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> genericWrapArray\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> head\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> i\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> implicitly\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> isInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> la\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> length\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> listBuffer\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> make\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> map\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> mas\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> math\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> mkString\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> mutable\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> ne\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> negate\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> num\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> p\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> package\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> partition\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> plus\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> reflect\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> seq\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> sqrt\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> sum\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> tail\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> that\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> times\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> toArray\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> toDouble\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> toList\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> toSeq\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> underlying\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> update\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> v\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> values\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> vs\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> x\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> z\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> zero\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> zip\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> zipWithIndex\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> $m\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> $m$untyped\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> $typecreator1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> $u\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> <byname>\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> <init>\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> <repeated>\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ???\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> A1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Any\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> AnyRef\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Array\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ArrayDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ArrayOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ArrayOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> B\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Base\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Boolean\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> BooleanDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ClassTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ClassTagOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> DenseVector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Double\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> DoubleDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> DoubleIsFractional\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> DoubleOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> DoubleOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> DoubleOrdering\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> DoubleOverloaded\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> FullyStaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Function0\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Function1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Function2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> IfThenElseDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Int\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> IntDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> IntIsIntegral\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> IntOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> IntOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> IntOrdering\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> IntOverloaded\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Interpreted\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> LiftBoolean\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> LiftDouble\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> LiftEvidence\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> LiftInt\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> LiftString\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> LiftUnit\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Map\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Mirror\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Nil\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Nothing\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Numeric\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> NumericOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> NumericOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Ops\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Ordering\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Predef\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> R\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> PolymorphicBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Ret\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ScalaVirtualizationDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Set\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> SingleType\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Singleton\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> SparseVector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> String\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> T\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> T_1\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> T_2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ThisType\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Tuple2\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Type\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> TypeCreator\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> TypeRef\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> TypeRep\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> TypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> U\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Unit\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Universe\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> Vector\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> VectorDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> VectorOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> VectorOpsOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> VirtualControlsBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> VirtualFunctionsBase\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> _root_\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> api\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> apply\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> asInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> asModule\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> base\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> ch\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> dsl\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> epfl\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> getClassLoader\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> immutable\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> internal\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> la\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> lhs\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> minus\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> moduleClass\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> negate\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> package\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> plus\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> reflect\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> reificationSupport\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> rep\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> rhs\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> runtime\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> runtimeMirror\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> selectType\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> staticModule\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> staticPackage\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> times\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> universe\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> v\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> x\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> yinyang\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> $anon\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> ->\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> <byname>\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> <init>\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> AnyRef\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> Context\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> Expr\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> GenericTypeTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> IRType\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> Map\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> None\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> Predef\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> T\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> YYTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> _root_\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> apply\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> blackbox\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> block\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> c\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> ch\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> dsl\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> epfl\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> experimental\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> implementations\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> la\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> language\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> liftRep\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> macros\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> package\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> reflect\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> typetransformers\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> yinyang\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> %\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> &&\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> *\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> +\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> +=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> <init>\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> <repeated>\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ==\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> A1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> AbstractFunction0\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> AbstractFunction1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> AbstractFunction2\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Any\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> AnyRef\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ArrayBuffer\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> B1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Base\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BaseHole\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BasePrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BaseYinYang\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BaseYinYangTypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Boolean\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BooleanConst\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BooleanHole\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BooleanLess\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> BooleanOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ClassTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> CodeGeneratingStatement\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> CodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> CompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> EvenOddOptimizedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> FullyStaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> FullyUnstaged\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Function0\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Function1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Hole\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Int\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> IntConst\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> IntEq\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> IntIsIntegral\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> IntMixed\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> IntOps\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> IntPlus\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> IntValue\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Interpreted\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> LiftBoolean\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> LiftEvidence\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> LiftInt\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> LiftUnit\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> List\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Map\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> MiniIntDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> MiniUnitDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> None\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Numeric\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> OptimizedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> OptionalDynamicCompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> OptionalStaticCompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Predef\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> PrintCodeGenerator\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Product\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> RequiredDynamicCompVar\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ReturningPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ScalaCompile\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ScalaRunTime\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Serializable\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Set\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> StagedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Statics\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> String\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> StringBuffer\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> StringContext\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Symbol\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> T\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> TypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> Unit\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> UnstagedPrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> VarType\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> VarTypePrintDSL\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> VirtualAny\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> _1\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> _2\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> _hashCode\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> _root_\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> and\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> anyHash\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> api\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> append\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> apply\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> asInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> augmentString\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> base\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> canBuildFrom\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ch\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> className\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> clear\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> collect\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> collection\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> compilationHoles\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> compile\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> compiledCode\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> compiledCode_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> contains\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> distinct\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> distinctHoles\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> dsl\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> epfl\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> eq\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> equality\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> finalizeHash\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> generateCode\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> getOrElse\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> h\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> hole\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> holeId\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> holes\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> i\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> id\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> immutable\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> isInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> java\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> l\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> lang\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> length\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> main\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> map\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> math\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> mix\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> mkString\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> mod2GuardKey\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> mutable\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ne\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> optionalStatic\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> optionalStatic_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> package\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> print\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> put\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> r\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> range\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> reflect\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> res\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> reset\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> retType\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> runtime\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> s\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> sb\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> sb_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> size\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> sym\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> symbolId\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> symbols\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> that\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> toSet\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> toString\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> tpe\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> typeSignature\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> typedProductIterator\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> unchecked\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> universe\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> unstableHoleIds\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> unstableHoleIds_=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> v\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> value\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> varType\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> varTypes\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> x\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> y\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> yinyang\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> zipWithIndex\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> ||\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> +\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> ->\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> <byname>\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> <init>\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> ???\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> AnyRef\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> Context\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> Expr\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> Int\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> Map\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> None\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> PolyTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> Predef\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> T\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> ToolBoxFactory\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> Unit\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> WeakHashMap\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> YYTransformer\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _liftEvenOddOptimizedPrint\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _liftOptimizedPrint\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _liftReturningPrint\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _liftStagedPrint\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _liftUnstagedPrint\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _liftVarTypeInitiallyUnstableStab10Print\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _liftVarTypeStab10Print\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> _root_\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> apply\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> blackbox\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> block\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> c\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> ch\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> collection\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> debug\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> dsl\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> epfl\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> experimental\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> language\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> macros\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> mutable\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> package\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> print\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> reflect\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> tools\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> typetransformers\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> x\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> yinyang\nproduct stamps:\n142 items\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/Base.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/PolymorphicBase.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile$$anonfun$setupCompiler$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile$$anonfun$setupCompiler$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/ScalaCompile.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/VirtualControlsBase.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/base/VirtualFunctionsBase.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$$plus$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$$times$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$baseVectors$1$$anonfun$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$baseVectors$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$corresponds$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$dotProduct$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$length$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$negate$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$$anonfun$splice$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/DenseVector.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$$plus$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$$times$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$baseVectors$2$$anonfun$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$baseVectors$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$corresponds$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$dotProduct$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$length$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$negate$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$$anonfun$splice$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/SparseVector.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/TestObject$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/TestObject.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/Vector$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/Vector.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package$implementations$$anon$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package$implementations$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/package.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$Array$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$ArrayOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$ArrayOpsOf.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ArrayDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/BooleanDSL$LiftBoolean$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/BooleanDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/BooleanDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ClassTagOps$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ClassTagOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOpsOf.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOrdering$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$DoubleOverloaded$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$LiftDouble$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$LiftString$$typecreator1$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$LiftString$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/DoubleDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IfThenElseDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IfThenElseDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOpsOf.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOrdering$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$IntOverloaded$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$LiftInt$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$LiftUnit$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/IntDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$DoubleIsFractional$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$IntIsIntegral$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOps$Ops.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOps$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOpsOf$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$NumericOpsOf.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/NumericOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ScalaVirtualizationDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/ScalaVirtualizationDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$DenseVector$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$SparseVector$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$Vector$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$VectorOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$VectorOpsOf.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/la/rep/VectorDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BasePrintDSL$$anonfun$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BasePrintDSL$$anonfun$generateCode$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BasePrintDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanConst$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanConst.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanHole$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanHole.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanLess$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanLess.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanOps$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$BooleanOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$LiftBoolean$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/BooleanOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL$$anonfun$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL$$anonfun$compilationVars$3$$anonfun$apply$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL$$anonfun$compilationVars$3.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/EvenOddOptimizedPrintDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$CodeGeneratingStatement$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$CodeGeneratingStatement.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$Hole$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$Hole.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntConst$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntConst.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntEq$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntEq.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntMixed$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntMixed.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntOps$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntOps.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntPlus$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntPlus.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$IntValue.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$LiftInt$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniIntDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniUnitDSL$LiftUnit$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniUnitDSL$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/MiniUnitDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/OptimizedPrintDSL$$anonfun$compilationVars$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/OptimizedPrintDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/PrintCodeGenerator$BaseHole.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/PrintCodeGenerator$class.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/PrintCodeGenerator.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/ReturningPrintDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/StagedPrintDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/UnstagedPrintDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$3.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$4.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$5.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$6.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$7$$anonfun$apply$2.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$7.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL$$anonfun$compilationVars$1.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/VarTypePrintDSL.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/package$.class -> lastModified(1411684184000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/classes/dsl/print/package.class -> lastModified(1411684184000)\nsource stamps:\n8 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala -> hash(170e033f71cb044ba66272b60ea872eddf064ad5)\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala -> hash(379de8f99507c6c5aa724277ac89db0b1cf12c5d)\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala -> hash(8123ac1fe26fd6cb173144c1485bf6e4fedf4aac)\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala -> hash(f100fb82208122448309121b405b5b84bda0e821)\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala -> hash(7a8fcbba99ae62cc3df0ba79438708f8e80504e9)\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala -> hash(7a6db1b5a30ae5e6840a6bb0c051a58024223ced)\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala -> hash(a84d3c96113ecee59f5dc8eb2303c0e079be4024)\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala -> hash(e97db3427b24ab193d90364a0dd50535ff9a3688)\nbinary stamps:\n4 items\n/Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1387422821000)\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-compiler/jars/scala-compiler-2.11.1.jar -> lastModified(1400572986000)\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar -> lastModified(1400572938000)\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar -> lastModified(1400572965000)\nclass names:\n4 items\n/Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.Object\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-compiler/jars/scala-compiler-2.11.1.jar -> scala.tools.reflect.ToolBoxFactory\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar -> scala.None$\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar -> scala.reflect.api.Exprs\ninternal apis:\n8 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHA9rt5iAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAI3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cCa6gLZ0AAZub3RpZnlzcQB+AAyJ+7IRdAAEd2FpdHNxAH4ADELqco90AA0kYXNJbnN0YW5jZU9mc3EAfgAM83GdAnQAD2NvbXBpbGF0aW9uVmFyc3NxAH4ADBdmNcZ0AAZlcXVhbHNzcQB+AAwDw7vzdAAMZ2VuZXJhdGVDb2Rlc3EAfgAM7tKyZHQADGFzSW5zdGFuY2VPZnNxAH4ADJFGkvp0AAtydW50aW1lVHlwZXNxAH4ADP6i4S50AAdSZXBCYXNlc3EAfgAM859rJHQADHN5bmNocm9uaXplZHNxAH4ADKDzhbJ0AA0kaXNJbnN0YW5jZU9mc3EAfgAMbv4xK3QABG1haW5zcQB+AAwiAqkLdAAHY29tcGlsZXNxAH4ADBitIz50AARCYXNlc3EAfgAMHYtdWnQACW5vdGlmeUFsbHNxAH4ADORB9Vh0AAxpc0luc3RhbmNlT2ZzcQB+AAy/aarMdAAFbWl4ZWRzcQB+AAyeHTCPdAAGPGluaXQ+c3EAfgAMLo0H4nQADExpZnRFdmlkZW5jZXNxAH4ADDrEZ+F0AAI9PXNxAH4ADHnP9Zt0ABFjb21waWxlJGRlZmF1bHQkMXNxAH4ADITWqid0AAdUeXBlUmVwc3EAfgAM3s7i+HQABWNsb25lc3EAfgAM7hShIHQAFmdlbmVyYXRlQ29kZSRkZWZhdWx0JDJzcQB+AAz2kzOudAAIdG9TdHJpbmdzcQB+AAzAGFGVdAACIT1zcQB+AAyZ7VCZdAAIZ2V0Q2xhc3NzcQB+AAyK3LDJdAAEaG9sZXNxAH4ADGtytzV0AAFSc3EAfgAMlbwIx3QAAm5lc3EAfgAMUgj5+HQABGxpZnRzcQB+AAyQezbgdAACZXFzcQB+AAzFDEfRdAACIyNzcQB+AAyp+x/qdAAIZmluYWxpemVzcQB+AAwQKQBHdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBdeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAJYmFzZS5CYXNldXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHABc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHBzcQB+AHUBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AF1MAAlpbmhlcml0ZWRxAH4AXUwAB3BhcmVudHNxAH4AXXhxAH4AfHNxAH4AdQF1cQB+AFgAAAAAcHNxAH4AdQF1cQB+AFgAAAAAcHNxAH4AdQF1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAABnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AHt0AA1Db2RlR2VuZXJhdG9yc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB7c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAAFc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAJjaHNxAH4AlHQABGVwZmxzcQB+AJR0AAd5aW55YW5nc3EAfgCUdAADYXBpc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJVzcQB+AIh0ABJCYXNlWWluWWFuZ1R5cGVUYWdxAH4AjnNxAH4AiHQADFR5cGVUYWdCYXNlZHEAfgCOc3EAfgCIdAALQmFzZVlpbllhbmdxAH4AjnNxAH4AiHQABk9iamVjdHNxAH4AjHNxAH4Aj3VxAH4AkgAAAANzcQB+AJR0AARqYXZhc3EAfgCUdAAEbGFuZ3EAfgCfc3EAfgCIdAADQW55c3EAfgCMc3EAfgCPdXEAfgCSAAAAAnNxAH4AlHQABXNjYWxhcQB+AJ9wcHNxAH4AWnEAfgBndXEAfgBoAAAAAHNxAH4AagF0AAxiYXNlLlJlcEJhc2V1cQB+AG0AAAAAcQB+AHF1cQB+AHMAAAAAc3EAfgB1AXEAfgB9cHNxAH4AdQFzcQB+AH9zcQB+AHUBdXEAfgBYAAAAAHBzcQB+AHUBdXEAfgBYAAAAAHBzcQB+AHUBdXEAfgCGAAAAB3NxAH4AiHQABEJhc2VzcQB+AIxzcQB+AI91cQB+AJIAAAACc3EAfgCUdAAEYmFzZXEAfgCfc3EAfgCIdAANQ29kZUdlbmVyYXRvcnNxAH4AjHNxAH4Aj3VxAH4AkgAAAAVzcQB+AJR0AAJjaHNxAH4AlHQABGVwZmxzcQB+AJR0AAd5aW55YW5nc3EAfgCUcQB+AJ1xAH4An3NxAH4AiHQAEkJhc2VZaW5ZYW5nVHlwZVRhZ3EAfgDOc3EAfgCIdAAMVHlwZVRhZ0Jhc2VkcQB+AM5zcQB+AIh0AAtCYXNlWWluWWFuZ3EAfgDOc3EAfgCIcQB+AKdzcQB+AIxzcQB+AI91cQB+AJIAAAADc3EAfgCUcQB+AKxzcQB+AJRxAH4ArnEAfgCfc3EAfgCIcQB+ALBzcQB+AIxzcQB+AI91cQB+AJIAAAACc3EAfgCUcQB+ALVxAH4An3BwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAEYmFzZXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vKfd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABHL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy9kc2xzL3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQXDgM/ccsES6ZicrYOqHLt3wZK1Q==\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHAH610cAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAHXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cMID/XJ0AAZub3RpZnlzcQB+AAxl+WrAdAAEd2FpdHNxAH4ADPAYMFF0AA0kYXNJbnN0YW5jZU9mc3EAfgAMjuAlnXQABmVxdWFsc3NxAH4ADI492KZ0AAhyZXBvcnRlcnNxAH4ADD2eV5x0ABFkdW1wR2VuZXJhdGVkQ29kZXNxAH4ADLLjZXN0AAxhc0luc3RhbmNlT2ZzcQB+AAz/ftBQdAAIY29tcGlsZXJzcQB+AAzzxLy8dAAMc3luY2hyb25pemVkc3EAfgAMnDYuqHQADSRpc0luc3RhbmNlT2ZzcQB+AAxX3TXJdAAHY29tcGlsZXNxAH4ADDsMSKh0AAVDT0xPTnNxAH4ADIS72Fd0AAlub3RpZnlBbGxzcQB+AAzLSnvudAAMaXNJbnN0YW5jZU9mc3EAfgAMqKjC3HQADGNvbXBpbGVDb3VudHNxAH4ADH13BMF0AAI9PXNxAH4ADJbStSZ0ABFjb21waWxlJGRlZmF1bHQkMXNxAH4ADOA0c2Z0AAVjbG9uZXNxAH4ADIDfPxt0AAYkaW5pdCRzcQB+AAxdj/W5dAANc2V0dXBDb21waWxlcnNxAH4ADP//2Hx0AAh0b1N0cmluZ3NxAH4ADHHAU7N0AAIhPXNxAH4ADNH0NzZ0AAhnZXRDbGFzc3NxAH4ADHdHljR0AAJuZXNxAH4ADPrp5Nl0AAJlcXNxAH4ADGCWATB0AAIjI3NxAH4ADC5gX+N0AAhmaW5hbGl6ZXNxAH4ADDTM+mJ0AAhoYXNoQ29kZXNxAH4ADIHPXAB0AAxTY2FsYUNvbXBpbGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBReHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAARYmFzZS5TY2FsYUNvbXBpbGV1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAVUcmFpdHVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cAFzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwcHNxAH4AaQFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AUUwACWluaGVyaXRlZHEAfgBRTAAHcGFyZW50c3EAfgBReHEAfgBwc3EAfgBpAXVxAH4ATAAAAABwc3EAfgBpAXVxAH4ATAAAAABwc3EAfgBpAXVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4Ab3QABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4Ab3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AiHQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AiXNxAH4AfHQAA0FueXNxAH4AgHNxAH4Ag3VxAH4AhgAAAAJzcQB+AIh0AAVzY2FsYXEAfgCPcHB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AARiYXNlc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFIru8p93VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AEcvVXNlcnMvdmpvdmFub3YvY29kZS95aW4teWFuZy9jb21wb25lbnRzL2RzbHMvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFDed6PmVB8bFqnJCd6yJ2wsc8Sxd\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDtsbpQAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAALnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cC4LP8Z0AAlfX3JlYWRWYXJzcQB+AAxQMJKsdAAGbm90aWZ5c3EAfgAMwRCaY3QAE1ZpcnR1YWxDb250cm9sc0Jhc2VzcQB+AAzTw9m9dAAFX19hcHBzcQB+AAzx1opPdAAEd2FpdHNxAH4ADBYSecV0AA0kYXNJbnN0YW5jZU9mc3EAfgAMx3lQLHQADF9fbGF6eVZhbERlZnNxAH4ADNjUbj50AA9jb21waWxhdGlvblZhcnNzcQB+AAwNaxJ3dAAGZXF1YWxzc3EAfgAMGYeCxnQADGdlbmVyYXRlQ29kZXNxAH4ADDKd4El0AAxhc0luc3RhbmNlT2ZzcQB+AAwjmghhdAALcnVudGltZVR5cGVzcQB+AAxkhdHrdAAMc3luY2hyb25pemVkc3EAfgAMjnZ+gXQADSRpc0luc3RhbmNlT2ZzcQB+AAziZ9i1dAAIX19hc3NpZ25zcQB+AAyZXJhXdAAEbWFpbnNxAH4ADEORGIp0AAdjb21waWxlc3EAfgAMQadjNHQACW5vdGlmeUFsbHNxAH4ADMzI0KF0AAxpc0luc3RhbmNlT2ZzcQB+AAyGoXHSdAAFbWl4ZWRzcQB+AAwtnYWHdAAGPGluaXQ+c3EAfgAMDEjlGHQADExpZnRFdmlkZW5jZXNxAH4ADGJpvJd0AAlfX2RvV2hpbGVzcQB+AAy4MQOgdAACPT1zcQB+AAzmr1vHdAARY29tcGlsZSRkZWZhdWx0JDFzcQB+AAwraGp4dAAHVHlwZVJlcHNxAH4ADIEMTWh0AAVjbG9uZXNxAH4ADBvxvVl0AAhfX2xhbWJkYXNxAH4ADLHRAwB0AAlfX3doaWxlRG9zcQB+AAwArClkdAAIX192YWxEZWZzcQB+AAxBZrCkdAAMX19pZlRoZW5FbHNlc3EAfgAMCXU6iHQACF9fbmV3VmFyc3EAfgAMP8ELTnQAFmdlbmVyYXRlQ29kZSRkZWZhdWx0JDJzcQB+AAxOAnLFdAAIX19yZXR1cm5zcQB+AAx3yhw9dAAIdG9TdHJpbmdzcQB+AAySyvWKdAACIT1zcQB+AAxNIQc1dAAUVmlydHVhbEZ1bmN0aW9uc0Jhc2VzcQB+AAwQ1Lt/dAAIZ2V0Q2xhc3NzcQB+AAwHSEmWdAAEaG9sZXNxAH4ADK1ooHx0AAFSc3EAfgAMrHSs1XQAAm5lc3EAfgAMEIS2EHQABGxpZnRzcQB+AAxfXls5dAACZXFzcQB+AAxPlEQBdAACIyNzcQB+AAxJ43k3dAAIZmluYWxpemVzcQB+AAwjrJ2ddAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBzeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAYYmFzZS5WaXJ0dWFsQ29udHJvbHNCYXNldXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHABc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHBzcQB+AIsBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AHNMAAlpbmhlcml0ZWRxAH4Ac0wAB3BhcmVudHNxAH4Ac3hxAH4AknNxAH4AiwF1cQB+AG4AAAAAcHNxAH4AiwF1cQB+AG4AAAAAcHNxAH4AiwF1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAACHNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AJF0AAdSZXBCYXNlc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgCRc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARiYXNlc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AKtzcQB+AJ50AARCYXNlcQB+AKRzcQB+AJ50AA1Db2RlR2VuZXJhdG9yc3EAfgCic3EAfgCldXEAfgCoAAAABXNxAH4AqnQAAmNoc3EAfgCqdAAEZXBmbHNxAH4AqnQAB3lpbnlhbmdzcQB+AKp0AANhcGlxAH4Ar3NxAH4AnnQAEkJhc2VZaW5ZYW5nVHlwZVRhZ3EAfgC0c3EAfgCedAAMVHlwZVRhZ0Jhc2VkcQB+ALRzcQB+AJ50AAtCYXNlWWluWWFuZ3EAfgC0c3EAfgCedAAGT2JqZWN0c3EAfgCic3EAfgCldXEAfgCoAAAAA3NxAH4AqnQABGphdmFzcQB+AKp0AARsYW5ncQB+AK9zcQB+AJ50AANBbnlzcQB+AKJzcQB+AKV1cQB+AKgAAAACc3EAfgCqdAAFc2NhbGFxAH4Ar3Bwc3EAfgBwcQB+AH11cQB+AH4AAAAAc3EAfgCAAXQAGWJhc2UuVmlydHVhbEZ1bmN0aW9uc0Jhc2V1cQB+AIMAAAAAcQB+AId1cQB+AIkAAAAAc3EAfgCLAXEAfgCTcHNxAH4AiwFzcQB+AJVzcQB+AIsBdXEAfgBuAAAAAHBzcQB+AIsBdXEAfgBuAAAAAHBzcQB+AIsBdXEAfgCcAAAACHNxAH4AnnQAB1JlcEJhc2VzcQB+AKJzcQB+AKV1cQB+AKgAAAACc3EAfgCqdAAEYmFzZXEAfgCvc3EAfgCedAAEQmFzZXEAfgDmc3EAfgCedAANQ29kZUdlbmVyYXRvcnNxAH4AonNxAH4ApXVxAH4AqAAAAAVzcQB+AKp0AAJjaHNxAH4AqnQABGVwZmxzcQB+AKp0AAd5aW55YW5nc3EAfgCqcQB+AL5xAH4Ar3NxAH4AnnQAEkJhc2VZaW5ZYW5nVHlwZVRhZ3EAfgDvc3EAfgCedAAMVHlwZVRhZ0Jhc2VkcQB+AO9zcQB+AJ50AAtCYXNlWWluWWFuZ3EAfgDvc3EAfgCecQB+AMZzcQB+AKJzcQB+AKV1cQB+AKgAAAADc3EAfgCqcQB+AMtzcQB+AKpxAH4AzXEAfgCvc3EAfgCecQB+AM9zcQB+AKJzcQB+AKV1cQB+AKgAAAACc3EAfgCqcQB+ANRxAH4Ar3BwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAEYmFzZXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vKfd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABHL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy9kc2xzL3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSBI6wf4m/WyxcxRMFIW/bk/t9KrA==\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala ->\\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala ->\\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHBnMX0KAXNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAF3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cJvasI50AAZub3RpZnlzcQB+AAzHtbeGdAAHcGFja2FnZXNxAH4ADDvsuLl0AAR3YWl0c3EAfgAMIGgKXnQADSRhc0luc3RhbmNlT2ZzcQB+AAy/1MzMdAAGZXF1YWxzc3EAfgAML9oKcHQADGFzSW5zdGFuY2VPZnNxAH4ADA92TFd0AAxzeW5jaHJvbml6ZWRzcQB+AAwEe6fgdAANJGlzSW5zdGFuY2VPZnNxAH4ADClwQkZ0AA9pbXBsZW1lbnRhdGlvbnNzcQB+AAwdjIlfdAACbGFzcQB+AAxbWlx4dAAHbGlmdFJlcHNxAH4ADAjE+QF0AAlub3RpZnlBbGxzcQB+AAzDO7FCdAAMaXNJbnN0YW5jZU9mc3EAfgAMgmKqH3QAAj09c3EAfgAMT/guUnQABWNsb25lc3EAfgAMVMNiaHQACHRvU3RyaW5nc3EAfgAM/t4UZnQAAiE9c3EAfgAMl69tmXQACGdldENsYXNzc3EAfgAMydwyj3QAAm5lc3EAfgAM6WSVAHQAAmVxc3EAfgAMT8HwxHQAAiMjc3EAfgAMY/BRnXQACGZpbmFsaXplc3EAfgAMjy+R/HQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4ARXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQADmRzbC5sYS5wYWNrYWdldXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAXQAJ3NjYWxhLnJlZmxlY3QubWFjcm9zLmludGVybmFsLm1hY3JvSW1wbHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AX3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AXgBwc3EAfgBjc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AEVMAAlpbmhlcml0ZWRxAH4ARUwAB3BhcmVudHNxAH4ARXhxAH4AZ3NxAH4AXgBwc3EAfgBjdXEAfgBAAAAAAHNxAH4AXgBwc3EAfgBjdXEAfgBAAAAAAHNxAH4AXgBwc3EAfgBjdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBmdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBmc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCDdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCEc3EAfgB3dAADQW55c3EAfgB7c3EAfgB+dXEAfgCBAAAAAnNxAH4Ag3QABXNjYWxhcQB+AIp1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAnNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AANkc2xzcQB+AJR0AAZkc2wubGFzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAUiu7yn3dXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUem2xtaMK5eaECmuwwFGlgCQiPO0=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala ->\\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHCqoYMyAXNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAK3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cNUMtm90AAZub3RpZnlzcQB+AAzoY8IudAAMZXZlbk9kZFByaW50c3EAfgAMTjLAmHQAB3BhY2thZ2VzcQB+AAz6fyB5dAAaX2xpZnRFdmVuT2RkT3B0aW1pemVkUHJpbnRzcQB+AAwe8W4AdAAEd2FpdHNxAH4ADCuPpRh0ABlyZXR1cm5pbmdJbmNyZW1lbnRlZFByaW50c3EAfgAMezEdynQADSRhc0luc3RhbmNlT2ZzcQB+AAzvn8aJdAAPcmVxRHluYW1pY1ByaW50c3EAfgAMMmfD0XQAEF9saWZ0U3RhZ2VkUHJpbnRzcQB+AAwcpS/PdAAGZXF1YWxzc3EAfgAM86SEw3QAFG9wdGlvbmFsRHluYW1pY1ByaW50c3EAfgAMb+lZVXQADGFzSW5zdGFuY2VPZnNxAH4ADLkJjXZ0AAVwcmludHNxAH4ADDgmy7F0ABZsaWZ0VmFyVHlwZVN0YWIxMFByaW50c3EAfgAMXYWDzHQAGWxpZnRFdmVuT2RkT3B0aW1pemVkUHJpbnRzcQB+AAzh2jFfdAAMc3luY2hyb25pemVkc3EAfgAMdZvbMXQADSRpc0luc3RhbmNlT2ZzcQB+AAzlDDRfdAAoX2xpZnRWYXJUeXBlSW5pdGlhbGx5VW5zdGFibGVTdGFiMTBQcmludHNxAH4ADKAq64N0ABJsaWZ0UmV0dXJuaW5nUHJpbnRzcQB+AAyODTvqdAASX2xpZnRVbnN0YWdlZFByaW50c3EAfgAM/QFKrXQACW5vdGlmeUFsbHNxAH4ADBXsByp0AAVkZWJ1Z3NxAH4ADDaLjpx0AAxpc0luc3RhbmNlT2ZzcQB+AAzyOHuQdAAPb3B0aW1pemluZ1ByaW50c3EAfgAMpYmTLHQAE29wdGlvbmFsU3RhdGljUHJpbnRzcQB+AAxf98REdAACPT1zcQB+AAyOv1sPdAAPbGlmdFN0YWdlZFByaW50c3EAfgAMFHiwfHQABWNsb25lc3EAfgAMojRmgnQAJ2xpZnRWYXJUeXBlSW5pdGlhbGx5VW5zdGFibGVTdGFiMTBQcmludHNxAH4ADLLTc7J0ABNfbGlmdFJldHVybmluZ1ByaW50c3EAfgAMsAk9XXQAF19saWZ0VmFyVHlwZVN0YWIxMFByaW50c3EAfgAMZBDbMXQACHRvU3RyaW5nc3EAfgAMtVKtHHQAAiE9c3EAfgAMM1jdeXQADnJlcVN0YXRpY1ByaW50c3EAfgAMFmo+mnQACGdldENsYXNzc3EAfgAMVyZ2cHQAEmxpZnRPcHRpbWl6ZWRQcmludHNxAH4ADPar54t0ABFsaWZ0VW5zdGFnZWRQcmludHNxAH4ADMDgVDl0AAJuZXNxAH4ADCs11MF0AAJlcXNxAH4ADP5T/PF0AAIjI3NxAH4ADJHibUp0AAhmaW5hbGl6ZXNxAH4ADIQodQ10AAhoYXNoQ29kZXNxAH4ADGjxOTp0ABNfbGlmdE9wdGltaXplZFByaW50c3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AbXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAEWRzbC5wcmludC5wYWNrYWdldXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAXQAJ3NjYWxhLnJlZmxlY3QubWFjcm9zLmludGVybmFsLm1hY3JvSW1wbHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4Ah3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AhgBwc3EAfgCLc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AG1MAAlpbmhlcml0ZWRxAH4AbUwAB3BhcmVudHNxAH4AbXhxAH4Aj3NxAH4AhgBwc3EAfgCLdXEAfgBoAAAAAHNxAH4AhgBwc3EAfgCLdXEAfgBoAAAAAHNxAH4AhgBwc3EAfgCLdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgCOdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgCOc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCrdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCsc3EAfgCfdAADQW55c3EAfgCjc3EAfgCmdXEAfgCpAAAAAnNxAH4Aq3QABXNjYWxhcQB+ALJ1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAnNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AANkc2xzcQB+ALx0AAlkc2wucHJpbnRzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAUiu7yn3dXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAU6X2zQnskqxk9kDZKDdUFNf+aNog=\nexternal apis:\n21 items\nch.epfl.yinyang.YYTransformer ->\\nch.epfl.yinyang.YYTransformer$ ->\\nch.epfl.yinyang.api.BaseYinYang ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDIPVgbAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAIXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cHPVDmt0AAtCYXNlWWluWWFuZ3NxAH4ADDMcrNh0AAZub3RpZnlzcQB+AAz0UmTOdAAEd2FpdHNxAH4ADAMfzJJ0AA0kYXNJbnN0YW5jZU9mc3EAfgAMNe+sxHQAD2NvbXBpbGF0aW9uVmFyc3NxAH4ADBDHMZB0AAZlcXVhbHNzcQB+AAx6n2oJdAATQmFzZVlpbllhbmdNYW5pZmVzdHNxAH4ADH9MWOF0AAxhc0luc3RhbmNlT2ZzcQB+AAzBafwwdAALcnVudGltZVR5cGVzcQB+AAy242gYdAANTWFuaWZlc3RCYXNlZHNxAH4ADC9uhed0AAxzeW5jaHJvbml6ZWRzcQB+AAw9YleldAANJGlzSW5zdGFuY2VPZnNxAH4ADPwm6wZ0AAlub3RpZnlBbGxzcQB+AAzQnYoHdAASQmFzZVlpbllhbmdUeXBlVGFnc3EAfgAMKfpjaXQADGlzSW5zdGFuY2VPZnNxAH4ADJJ597V0AAVtaXhlZHNxAH4ADN0C+p50AAY8aW5pdD5zcQB+AAwHw3zKdAAMTGlmdEV2aWRlbmNlc3EAfgAMAlSSzXQAAj09c3EAfgAMLoWcDnQAB1R5cGVSZXBzcQB+AAzX50ZDdAAFY2xvbmVzcQB+AAwhqZ1KdAAGJGluaXQkc3EAfgAM6i1K6XQADFR5cGVUYWdCYXNlZHNxAH4ADGDhTdd0AAh0b1N0cmluZ3NxAH4ADNab8fh0AAIhPXNxAH4ADEczNpx0AAhnZXRDbGFzc3NxAH4ADJM+7tx0AARob2xlc3EAfgAMnGdU/nQAAm5lc3EAfgAM9kSTTnQABGxpZnRzcQB+AAxuj6JedAACZXFzcQB+AAxOGATGdAACIyNzcQB+AAyQ/8u5dAAIZmluYWxpemVzcQB+AAxx8d3ndAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAAFc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBZeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAfY2guZXBmbC55aW55YW5nLmFwaS5CYXNlWWluWWFuZ3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAXNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBwc3EAfgBxAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBZTAAJaW5oZXJpdGVkcQB+AFlMAAdwYXJlbnRzcQB+AFl4cQB+AHhzcQB+AHEBdXEAfgBUAAAAAHBzcQB+AHEBdXEAfgBUAAAAAHBzcQB+AHEBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB3dAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB3c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCQdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCRc3EAfgCEdAADQW55c3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHQABXNjYWxhcQB+AJdwcHNxAH4AVnEAfgBjdXEAfgBkAAAAAHNxAH4AZgF0ACBjaC5lcGZsLnlpbnlhbmcuYXBpLlR5cGVUYWdCYXNlZHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAACc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAIWNoLmVwZmwueWlueWFuZy5hcGkuTWFuaWZlc3RCYXNlZHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAACc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAJ2NoLmVwZmwueWlueWFuZy5hcGkuQmFzZVlpbllhbmdNYW5pZmVzdHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAAEc3EAfgCEdAANTWFuaWZlc3RCYXNlZHNxAH4AiHNxAH4Ai3VxAH4AjgAAAAVzcQB+AJB0AAJjaHNxAH4AkHQABGVwZmxzcQB+AJB0AAd5aW55YW5nc3EAfgCQdAADYXBpcQB+AJdzcQB+AIR0AAtCYXNlWWluWWFuZ3EAfgDkc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAJmNoLmVwZmwueWlueWFuZy5hcGkuQmFzZVlpbllhbmdUeXBlVGFndXEAfgBpAAAAAHEAfgBtdXEAfgBvAAAAAHNxAH4AcQFxAH4AeXBzcQB+AHEBc3EAfgB7c3EAfgBxAXVxAH4AVAAAAABwc3EAfgBxAXVxAH4AVAAAAABwc3EAfgBxAXVxAH4AggAAAARzcQB+AIR0AAxUeXBlVGFnQmFzZWRzcQB+AIhzcQB+AIt1cQB+AI4AAAAFc3EAfgCQdAACY2hzcQB+AJB0AARlcGZsc3EAfgCQdAAHeWlueWFuZ3NxAH4AkHEAfgDucQB+AJdzcQB+AIR0AAtCYXNlWWluWWFuZ3EAfgENc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3BwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAATY2guZXBmbC55aW55YW5nLmFwaXNxAH4BJnQAAmNoc3EAfgEmdAAHY2guZXBmbHNxAH4BJnQAD2NoLmVwZmwueWlueWFuZ3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vGeN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABLL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy95aW4teWFuZy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAULhD0NULP2AT6lYyuly5NjluMcAE=\nch.epfl.yinyang.api.BaseYinYangTypeTag ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDIPVgbAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAIXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cHPVDmt0AAtCYXNlWWluWWFuZ3NxAH4ADDMcrNh0AAZub3RpZnlzcQB+AAz0UmTOdAAEd2FpdHNxAH4ADAMfzJJ0AA0kYXNJbnN0YW5jZU9mc3EAfgAMNe+sxHQAD2NvbXBpbGF0aW9uVmFyc3NxAH4ADBDHMZB0AAZlcXVhbHNzcQB+AAx6n2oJdAATQmFzZVlpbllhbmdNYW5pZmVzdHNxAH4ADH9MWOF0AAxhc0luc3RhbmNlT2ZzcQB+AAzBafwwdAALcnVudGltZVR5cGVzcQB+AAy242gYdAANTWFuaWZlc3RCYXNlZHNxAH4ADC9uhed0AAxzeW5jaHJvbml6ZWRzcQB+AAw9YleldAANJGlzSW5zdGFuY2VPZnNxAH4ADPwm6wZ0AAlub3RpZnlBbGxzcQB+AAzQnYoHdAASQmFzZVlpbllhbmdUeXBlVGFnc3EAfgAMKfpjaXQADGlzSW5zdGFuY2VPZnNxAH4ADJJ597V0AAVtaXhlZHNxAH4ADN0C+p50AAY8aW5pdD5zcQB+AAwHw3zKdAAMTGlmdEV2aWRlbmNlc3EAfgAMAlSSzXQAAj09c3EAfgAMLoWcDnQAB1R5cGVSZXBzcQB+AAzX50ZDdAAFY2xvbmVzcQB+AAwhqZ1KdAAGJGluaXQkc3EAfgAM6i1K6XQADFR5cGVUYWdCYXNlZHNxAH4ADGDhTdd0AAh0b1N0cmluZ3NxAH4ADNab8fh0AAIhPXNxAH4ADEczNpx0AAhnZXRDbGFzc3NxAH4ADJM+7tx0AARob2xlc3EAfgAMnGdU/nQAAm5lc3EAfgAM9kSTTnQABGxpZnRzcQB+AAxuj6JedAACZXFzcQB+AAxOGATGdAACIyNzcQB+AAyQ/8u5dAAIZmluYWxpemVzcQB+AAxx8d3ndAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAAFc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBZeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAfY2guZXBmbC55aW55YW5nLmFwaS5CYXNlWWluWWFuZ3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAXNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBwc3EAfgBxAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBZTAAJaW5oZXJpdGVkcQB+AFlMAAdwYXJlbnRzcQB+AFl4cQB+AHhzcQB+AHEBdXEAfgBUAAAAAHBzcQB+AHEBdXEAfgBUAAAAAHBzcQB+AHEBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB3dAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB3c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCQdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCRc3EAfgCEdAADQW55c3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHQABXNjYWxhcQB+AJdwcHNxAH4AVnEAfgBjdXEAfgBkAAAAAHNxAH4AZgF0ACBjaC5lcGZsLnlpbnlhbmcuYXBpLlR5cGVUYWdCYXNlZHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAACc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAIWNoLmVwZmwueWlueWFuZy5hcGkuTWFuaWZlc3RCYXNlZHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAACc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAJ2NoLmVwZmwueWlueWFuZy5hcGkuQmFzZVlpbllhbmdNYW5pZmVzdHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAAEc3EAfgCEdAANTWFuaWZlc3RCYXNlZHNxAH4AiHNxAH4Ai3VxAH4AjgAAAAVzcQB+AJB0AAJjaHNxAH4AkHQABGVwZmxzcQB+AJB0AAd5aW55YW5nc3EAfgCQdAADYXBpcQB+AJdzcQB+AIR0AAtCYXNlWWluWWFuZ3EAfgDkc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAJmNoLmVwZmwueWlueWFuZy5hcGkuQmFzZVlpbllhbmdUeXBlVGFndXEAfgBpAAAAAHEAfgBtdXEAfgBvAAAAAHNxAH4AcQFxAH4AeXBzcQB+AHEBc3EAfgB7c3EAfgBxAXVxAH4AVAAAAABwc3EAfgBxAXVxAH4AVAAAAABwc3EAfgBxAXVxAH4AggAAAARzcQB+AIR0AAxUeXBlVGFnQmFzZWRzcQB+AIhzcQB+AIt1cQB+AI4AAAAFc3EAfgCQdAACY2hzcQB+AJB0AARlcGZsc3EAfgCQdAAHeWlueWFuZ3NxAH4AkHEAfgDucQB+AJdzcQB+AIR0AAtCYXNlWWluWWFuZ3EAfgENc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3BwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAATY2guZXBmbC55aW55YW5nLmFwaXNxAH4BJnQAAmNoc3EAfgEmdAAHY2guZXBmbHNxAH4BJnQAD2NoLmVwZmwueWlueWFuZ3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vGeN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABLL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy95aW4teWFuZy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAULhD0NULP2AT6lYyuly5NjluMcAE=\nch.epfl.yinyang.api.CodeGenerator ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHBABb5xAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAGHNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cOr06QR0AAZub3RpZnlzcQB+AAxHIiZgdAAEd2FpdHNxAH4ADIOYGkR0AA0kYXNJbnN0YW5jZU9mc3EAfgAMafb3y3QABmVxdWFsc3NxAH4ADOHRi7t0AA1Db2RlR2VuZXJhdG9yc3EAfgAMkAJlqnQADGdlbmVyYXRlQ29kZXNxAH4ADN8x4rl0AAxhc0luc3RhbmNlT2ZzcQB+AAyBFNtFdAAMc3luY2hyb25pemVkc3EAfgAMmaCcZnQADSRpc0luc3RhbmNlT2ZzcQB+AAw95unmdAAHY29tcGlsZXNxAH4ADLhzSet0AAlub3RpZnlBbGxzcQB+AAyr6uFadAAMaXNJbnN0YW5jZU9mc3EAfgAMYX2kGHQAAj09c3EAfgAM04FJLnQAEWNvbXBpbGUkZGVmYXVsdCQxc3EAfgAMldMdD3QABWNsb25lc3EAfgAMZRQ+8HQAFmdlbmVyYXRlQ29kZSRkZWZhdWx0JDJzcQB+AAx9ZGnSdAAIdG9TdHJpbmdzcQB+AAxmhIpydAACIT1zcQB+AAz5uQjedAAIZ2V0Q2xhc3NzcQB+AAzxOfbTdAACbmVzcQB+AAzChjDgdAACZXFzcQB+AAyOvpmVdAACIyNzcQB+AAw7dqZkdAAIZmluYWxpemVzcQB+AAwvdadvdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBHeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAhY2guZXBmbC55aW55YW5nLmFwaS5Db2RlR2VuZXJhdG9ydXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHABc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHBzcQB+AF8Bc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AEdMAAlpbmhlcml0ZWRxAH4AR0wAB3BhcmVudHNxAH4AR3hxAH4AZnNxAH4AXwF1cQB+AEIAAAAAcHNxAH4AXwF1cQB+AEIAAAAAcHNxAH4AXwF1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGV0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGVzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AH50AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AH9zcQB+AHJ0AANBbnlzcQB+AHZzcQB+AHl1cQB+AHwAAAACc3EAfgB+dAAFc2NhbGFxAH4AhXBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAATY2guZXBmbC55aW55YW5nLmFwaXNxAH4Aj3QAAmNoc3EAfgCPdAAHY2guZXBmbHNxAH4Aj3QAD2NoLmVwZmwueWlueWFuZ3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vGeN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABLL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy95aW4teWFuZy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUf17O2j08kyxCGH0x2K1ooiSiAFg=\nch.epfl.yinyang.api.CompVar$ ->\\nch.epfl.yinyang.api.FullyStaged ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHBlLE75AHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cJ2d6Yt0AAZub3RpZnlzcQB+AAzo9mswdAAEd2FpdHNxAH4ADAJAiZV0AA0kYXNJbnN0YW5jZU9mc3EAfgAMTh/LK3QAD2NvbXBpbGF0aW9uVmFyc3NxAH4ADC2Kt5N0AAZlcXVhbHNzcQB+AAwC+UlldAAMYXNJbnN0YW5jZU9mc3EAfgAMPDiaPnQADHN5bmNocm9uaXplZHNxAH4ADEoIrB10AA0kaXNJbnN0YW5jZU9mc3EAfgAMUxQcLXQACW5vdGlmeUFsbHNxAH4ADMSaFcp0AAxpc0luc3RhbmNlT2ZzcQB+AAwsRdIOdAACPT1zcQB+AAzykaTVdAALRnVsbHlTdGFnZWRzcQB+AAyL20eLdAAFY2xvbmVzcQB+AAxPd8ymdAAGJGluaXQkc3EAfgAMChkjd3QACHRvU3RyaW5nc3EAfgAMJgbWlHQAAiE9c3EAfgAMaePlcHQACGdldENsYXNzc3EAfgAMYWdDfnQAAm5lc3EAfgAMee5OPXQAAmVxc3EAfgAM1FYNynQAAiMjc3EAfgAMaCfLZXQACGZpbmFsaXplc3EAfgAMxRKJqXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQ3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAXQAH2NoLmVwZmwueWlueWFuZy5hcGkuRnVsbHlTdGFnZWR1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAVUcmFpdHVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cAFzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwcHNxAH4AWwFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQ0wACWluaGVyaXRlZHEAfgBDTAAHcGFyZW50c3EAfgBDeHEAfgBic3EAfgBbAXVxAH4APgAAAABwc3EAfgBbAXVxAH4APgAAAABwc3EAfgBbAXVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AYXQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AYXNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AenQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4Ae3NxAH4AbnQAA0FueXNxAH4AcnNxAH4AdXVxAH4AeAAAAAJzcQB+AHp0AAVzY2FsYXEAfgCBcHB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAABHNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0ABNjaC5lcGZsLnlpbnlhbmcuYXBpc3EAfgCLdAACY2hzcQB+AIt0AAdjaC5lcGZsc3EAfgCLdAAPY2guZXBmbC55aW55YW5nc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFIru8Z43VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AEsvVXNlcnMvdmpvdmFub3YvY29kZS95aW4teWFuZy9jb21wb25lbnRzL3lpbi15YW5nL3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABR33UBnIhwvncAGU/DNQwFTNnoVRA==\nch.epfl.yinyang.api.FullyUnstaged ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHBkNUJbAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cPBFg+h0AAZub3RpZnlzcQB+AAyqVzp4dAAEd2FpdHNxAH4ADAews1l0AA0kYXNJbnN0YW5jZU9mc3EAfgAMJENP7nQAD2NvbXBpbGF0aW9uVmFyc3NxAH4ADHto5w10AAZlcXVhbHNzcQB+AAzMfJm/dAAMYXNJbnN0YW5jZU9mc3EAfgAMJ6g99HQADHN5bmNocm9uaXplZHNxAH4ADFlSQsl0AA0kaXNJbnN0YW5jZU9mc3EAfgAM3w1La3QACW5vdGlmeUFsbHNxAH4ADIPOfmt0AAxpc0luc3RhbmNlT2ZzcQB+AAzDidzTdAANRnVsbHlVbnN0YWdlZHNxAH4ADCRt+UV0AAI9PXNxAH4ADD2dViR0AAVjbG9uZXNxAH4ADOcF21t0AAYkaW5pdCRzcQB+AAxFt0/WdAAIdG9TdHJpbmdzcQB+AAweGzJLdAACIT1zcQB+AAz70Ey3dAAIZ2V0Q2xhc3NzcQB+AAzKoc/idAACbmVzcQB+AAzPmkICdAACZXFzcQB+AAwA9kVqdAACIyNzcQB+AAyOASTydAAIZmluYWxpemVzcQB+AAxlZvF4dAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBDeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAhY2guZXBmbC55aW55YW5nLmFwaS5GdWxseVVuc3RhZ2VkdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHABc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHBzcQB+AFsBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AENMAAlpbmhlcml0ZWRxAH4AQ0wAB3BhcmVudHNxAH4AQ3hxAH4AYnNxAH4AWwF1cQB+AD4AAAAAcHNxAH4AWwF1cQB+AD4AAAAAcHNxAH4AWwF1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGF0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGFzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AHp0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AHtzcQB+AG50AANBbnlzcQB+AHJzcQB+AHV1cQB+AHgAAAACc3EAfgB6dAAFc2NhbGFxAH4AgXBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAATY2guZXBmbC55aW55YW5nLmFwaXNxAH4Ai3QAAmNoc3EAfgCLdAAHY2guZXBmbHNxAH4Ai3QAD2NoLmVwZmwueWlueWFuZ3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vGeN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABLL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy95aW4teWFuZy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUvZs+8UvT2QDarPXB1FQZQlteM1w=\nch.epfl.yinyang.api.Interpreted ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHC8IYWQAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cOu5t/J0AAZub3RpZnlzcQB+AAywIuqPdAAEd2FpdHNxAH4ADF7FFr90AA0kYXNJbnN0YW5jZU9mc3EAfgAMIuG5OHQABmVxdWFsc3NxAH4ADIgq/t90AAxhc0luc3RhbmNlT2ZzcQB+AAyrG3JpdAAMc3luY2hyb25pemVkc3EAfgAMvR8DjXQADSRpc0luc3RhbmNlT2ZzcQB+AAyAXtWrdAAJbm90aWZ5QWxsc3EAfgAMijFQqHQADGlzSW5zdGFuY2VPZnNxAH4ADCeskjF0AAtJbnRlcnByZXRlZHNxAH4ADPEDvyl0AAI9PXNxAH4ADEyc1g50AAVjbG9uZXNxAH4ADHiAUgJ0AAVyZXNldHNxAH4ADGLHBPF0AAh0b1N0cmluZ3NxAH4ADLYmcd10AAIhPXNxAH4ADFZ+MY50AAhnZXRDbGFzc3NxAH4ADB7AM810AAJuZXNxAH4ADMWNKyN0AAJlcXNxAH4ADBZUyKF0AAlpbnRlcnByZXRzcQB+AAwPHxF+dAACIyNzcQB+AAzy9ycTdAAIZmluYWxpemVzcQB+AAyWFqxrdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBDeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAfY2guZXBmbC55aW55YW5nLmFwaS5JbnRlcnByZXRlZHVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAXNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBwc3EAfgBbAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBDTAAJaW5oZXJpdGVkcQB+AENMAAdwYXJlbnRzcQB+AEN4cQB+AGJzcQB+AFsBdXEAfgA+AAAAAHBzcQB+AFsBdXEAfgA+AAAAAHBzcQB+AFsBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBhdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBhc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgB6dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB7c3EAfgBudAADQW55c3EAfgByc3EAfgB1dXEAfgB4AAAAAnNxAH4AenQABXNjYWxhcQB+AIFwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAEc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAE2NoLmVwZmwueWlueWFuZy5hcGlzcQB+AIt0AAJjaHNxAH4Ai3QAB2NoLmVwZmxzcQB+AIt0AA9jaC5lcGZsLnlpbnlhbmdzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAUiu7xnjdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQASy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMveWluLXlhbmcvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFLGKp5fxSoA/Tv84QDRAazMtz2FD\nch.epfl.yinyang.api.NonCompVar$ ->\\nch.epfl.yinyang.api.OptionalDynamicCompVar ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHBFNV8CAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAANHNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cCkNPoB0AAZub3RpZnlzcQB+AAyJHqiKdAAHdW5hcHBseXNxAH4ADLsTsFx0ABZSZXF1aXJlZER5bmFtaWNDb21wVmFyc3EAfgAMziQylXQABHdhaXRzcQB+AAxidQAedAAOY29weSRkZWZhdWx0JDJzcQB+AAzyuK8bdAANJGFzSW5zdGFuY2VPZnNxAH4ADEUL0F90AAlyZXFLZXlzJDFzcQB+AAyygOzwdAAHb3B0S2V5c3NxAH4ADPl+YQ50AAxwcm9kdWN0QXJpdHlzcQB+AAwg+x4sdAAGZXF1YWxzc3EAfgAMCVgP83QACE9wdGlvbmFsc3EAfgAMGj127XQACW9wdEtleXMkMXNxAH4ADGVRtFB0AAxhc0luc3RhbmNlT2ZzcQB+AAyX+UjedAAMc3luY2hyb25pemVkc3EAfgAMzu2kuHQAB0R5bmFtaWNzcQB+AAx75QMzdAAHQ29tcFZhcnNxAH4ADD1FG3t0ABVSZXF1aXJlZFN0YXRpY0NvbXBWYXJzcQB+AAyDU6lWdAANJGlzSW5zdGFuY2VPZnNxAH4ADMH7hJB0ABZPcHRpb25hbER5bmFtaWNDb21wVmFyc3EAfgAMhKgQ4HQACGNhbkVxdWFsc3EAfgAMr2LrynQACFJlcXVpcmVkc3EAfgAMpteEE3QADXByb2R1Y3RQcmVmaXhzcQB+AAyYBWMtdAAJbm90aWZ5QWxsc3EAfgAMXEUIoXQAC3JlYWRSZXNvbHZlc3EAfgAMNZQD7HQADGlzSW5zdGFuY2VPZnNxAH4ADPHgwVZ0AAZTdGF0aWNzcQB+AAxVBy2PdAAHVmFyVHlwZXNxAH4ADBldSuF0AAY8aW5pdD5zcQB+AAz+Et7TdAAKTm9uQ29tcFZhcnNxAH4ADE81pjZ0AAVhcHBseXNxAH4ADGivNO90AAI9PXNxAH4ADCBryut0AAhlcXVhbGl0eXNxAH4ADGT3VzZ0AAVjbG9uZXNxAH4ADBdN0m90AAVHdWFyZHNxAH4ADBHZKWF0AARjb3B5c3EAfgAMFGarBnQACmdldFJlcUtleXNzcQB+AAwbz2ujdAAIdG9TdHJpbmdzcQB+AAxoQ1SldAACIT1zcQB+AAymwyd/dAAIZ2V0Q2xhc3NzcQB+AAy4xe1ydAAHcmVxS2V5c3NxAH4ADB3eTE50AAVndWFyZHNxAH4ADHyAHdJ0AA5jb3B5JGRlZmF1bHQkMXNxAH4ADIcXWl90ABVPcHRpb25hbFN0YXRpY0NvbXBWYXJzcQB+AAzzxFEjdAACbmVzcQB+AAz6jXwldAACZXFzcQB+AAz6Vw4FdAAPcHJvZHVjdEl0ZXJhdG9yc3EAfgAMw6KEvnQAA2FuZHNxAH4ADO8F5fJ0AApnZXRPcHRLZXlzc3EAfgAMTT7wzXQAAiMjc3EAfgAM21VVdXQACGZpbmFsaXplc3EAfgAMYoCeaHQADnByb2R1Y3RFbGVtZW50c3EAfgAMuTYNtXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAEXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4Af3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAXQAG2NoLmVwZmwueWlueWFuZy5hcGkuVmFyVHlwZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAXNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBwc3EAfgCXAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgB/TAAJaW5oZXJpdGVkcQB+AH9MAAdwYXJlbnRzcQB+AH94cQB+AJ5zcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgCddAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgCdc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgC2dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgC3c3EAfgCqdAADQW55c3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnQABXNjYWxhcQB+AL1wcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAB0AB5jaC5lcGZsLnlpbnlhbmcuYXBpLk5vbkNvbXBWYXJ1cQB+AI8AAAAAcQB+AJN1cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAAB3NxAH4AqnQADFNlcmlhbGl6YWJsZXNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqdAAHUHJvZHVjdHEAfgDWc3EAfgCqdAAGRXF1YWxzcQB+ANZzcQB+AKp0AAdWYXJUeXBlc3EAfgCuc3EAfgCxdXEAfgC0AAAABXNxAH4AtnQAAmNoc3EAfgC2dAAEZXBmbHNxAH4AtnQAB3lpbnlhbmdzcQB+ALZ0AANhcGlxAH4AvXNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+ANZwcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAF0ABtjaC5lcGZsLnlpbnlhbmcuYXBpLkNvbXBWYXJ1cQB+AI8AAAAAfnEAfgCRdAAFVHJhaXR1cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAAA3NxAH4AqnQAB1ZhclR5cGVzcQB+AK5zcQB+ALF1cQB+ALQAAAAFc3EAfgC2dAACY2hzcQB+ALZ0AARlcGZsc3EAfgC2dAAHeWlueWFuZ3NxAH4AtnEAfgDxcQB+AL1zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3NxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9cHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwAdAAbY2guZXBmbC55aW55YW5nLmFwaS5Db21wVmFydXEAfgCPAAAAAH5xAH4AkXQABk1vZHVsZXVxAH4AlQAAAABzcQB+AJcBcQB+AJ9wc3EAfgCXAXNxAH4AoXNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AKgAAAACc3EAfgCqcQB+AK1zcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZxAH4Au3EAfgC9c3EAfgCqcQB+AL9zcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXBwc3EAfgB8cQB+AIl1cQB+AIoAAAAAc3EAfgCMAXQAHGNoLmVwZmwueWlueWFuZy5hcGkuT3B0aW9uYWx1cQB+AI8AAAAAcQB+AP51cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAAAnNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/c3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1wcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAF0ABxjaC5lcGZsLnlpbnlhbmcuYXBpLlJlcXVpcmVkdXEAfgCPAAAAAHEAfgD+dXEAfgCVAAAAAHNxAH4AlwFxAH4An3BzcQB+AJcBc3EAfgChc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AqAAAAAJzcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3NxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9cHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwBdAAaY2guZXBmbC55aW55YW5nLmFwaS5TdGF0aWN1cQB+AI8AAAAAcQB+AP51cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAAAnNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/c3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1wcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAF0ABtjaC5lcGZsLnlpbnlhbmcuYXBpLkR5bmFtaWN1cQB+AI8AAAAAcQB+AP51cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAAAnNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/c3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1wcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAB0ACljaC5lcGZsLnlpbnlhbmcuYXBpLk9wdGlvbmFsU3RhdGljQ29tcFZhcnVxAH4AjwAAAABxAH4Ak3VxAH4AlQAAAABzcQB+AJcBcQB+AJ9wc3EAfgCXAXNxAH4AoXNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AKgAAAAKc3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2dAACaW9xAH4AvXNxAH4AqnEAfgDicQB+AbVzcQB+AKp0AAZFcXVhbHNxAH4BtXNxAH4AqnQABlN0YXRpY3NxAH4ArnNxAH4AsXVxAH4AtAAAAAVzcQB+ALZ0AAJjaHNxAH4AtnQABGVwZmxzcQB+ALZ0AAd5aW55YW5nc3EAfgC2cQB+APFxAH4AvXNxAH4AqnQACE9wdGlvbmFscQB+AcVzcQB+AKp0AAdDb21wVmFycQB+AcVzcQB+AKp0AAdWYXJUeXBlcQB+AcVzcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgG1cHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwAdAApY2guZXBmbC55aW55YW5nLmFwaS5PcHRpb25hbFN0YXRpY0NvbXBWYXJ1cQB+AI8AAAAAcQB+ASZ1cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAABHNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1zcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnQAAmlvcQB+AL1zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgHscHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwAdAAqY2guZXBmbC55aW55YW5nLmFwaS5PcHRpb25hbER5bmFtaWNDb21wVmFydXEAfgCPAAAAAHEAfgCTdXEAfgCVAAAAAHNxAH4AlwFxAH4An3BzcQB+AJcBc3EAfgChc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AqAAAAApzcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqcQB+AOJxAH4CDnNxAH4AqnQABkVxdWFsc3EAfgIOc3EAfgCqdAAHRHluYW1pY3NxAH4ArnNxAH4AsXVxAH4AtAAAAAVzcQB+ALZ0AAJjaHNxAH4AtnQABGVwZmxzcQB+ALZ0AAd5aW55YW5nc3EAfgC2cQB+APFxAH4AvXNxAH4AqnQACE9wdGlvbmFscQB+Ah5zcQB+AKp0AAdDb21wVmFycQB+Ah5zcQB+AKp0AAdWYXJUeXBlcQB+Ah5zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgIOcHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwAdAAqY2guZXBmbC55aW55YW5nLmFwaS5PcHRpb25hbER5bmFtaWNDb21wVmFydXEAfgCPAAAAAHEAfgEmdXEAfgCVAAAAAHNxAH4AlwFxAH4An3BzcQB+AJcBc3EAfgChc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AqAAAAARzcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqcQB+AK1zcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZxAH4Au3EAfgC9c3EAfgCqcQB+AL9xAH4CRXBwc3EAfgB8cQB+AIl1cQB+AIoAAAAAc3EAfgCMAHQAKWNoLmVwZmwueWlueWFuZy5hcGkuUmVxdWlyZWRTdGF0aWNDb21wVmFydXEAfgCPAAAAAHEAfgCTdXEAfgCVAAAAAHNxAH4AlwFxAH4An3BzcQB+AJcBc3EAfgChc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AegAAAABwc3EAfgCXAXVxAH4AqAAAAApzcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAAJzcQB+ALZxAH4AxHEAfgC9c3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAADc3EAfgC2cQB+ALlzcQB+ALZ0AAJpb3EAfgC9c3EAfgCqcQB+AOJxAH4CZ3NxAH4AqnQABkVxdWFsc3EAfgJnc3EAfgCqdAAGU3RhdGljc3EAfgCuc3EAfgCxdXEAfgC0AAAABXNxAH4AtnQAAmNoc3EAfgC2dAAEZXBmbHNxAH4AtnQAB3lpbnlhbmdzcQB+ALZxAH4A8XEAfgC9c3EAfgCqdAAIUmVxdWlyZWRxAH4Cd3NxAH4AqnQAB0NvbXBWYXJxAH4Cd3NxAH4AqnQAB1ZhclR5cGVxAH4Cd3NxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+AmdwcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAB0ACljaC5lcGZsLnlpbnlhbmcuYXBpLlJlcXVpcmVkU3RhdGljQ29tcFZhcnVxAH4AjwAAAABxAH4BJnVxAH4AlQAAAABzcQB+AJcBcQB+AJ9wc3EAfgCXAXNxAH4AoXNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AKgAAAAEc3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2dAACaW9xAH4AvXNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+Ap5wcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAB0ACpjaC5lcGZsLnlpbnlhbmcuYXBpLlJlcXVpcmVkRHluYW1pY0NvbXBWYXJ1cQB+AI8AAAAAcQB+AJN1cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAACnNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1zcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnQAAmlvcQB+AL1zcQB+AKpxAH4A4nEAfgLAc3EAfgCqdAAGRXF1YWxzcQB+AsBzcQB+AKp0AAdEeW5hbWljc3EAfgCuc3EAfgCxdXEAfgC0AAAABXNxAH4AtnQAAmNoc3EAfgC2dAAEZXBmbHNxAH4AtnQAB3lpbnlhbmdzcQB+ALZxAH4A8XEAfgC9c3EAfgCqdAAIUmVxdWlyZWRxAH4C0HNxAH4AqnQAB0NvbXBWYXJxAH4C0HNxAH4AqnQAB1ZhclR5cGVxAH4C0HNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+AsBwcHNxAH4AfHEAfgCJdXEAfgCKAAAAAHNxAH4AjAB0ACpjaC5lcGZsLnlpbnlhbmcuYXBpLlJlcXVpcmVkRHluYW1pY0NvbXBWYXJ1cQB+AI8AAAAAcQB+ASZ1cQB+AJUAAAAAc3EAfgCXAXEAfgCfcHNxAH4AlwFzcQB+AKFzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgB6AAAAAHBzcQB+AJcBdXEAfgCoAAAABHNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAAnNxAH4AtnEAfgDEcQB+AL1zcQB+AKpxAH4A1XNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnQAAmlvcQB+AL1zcQB+AKpxAH4ArXNxAH4ArnNxAH4AsXVxAH4AtAAAAANzcQB+ALZxAH4AuXNxAH4AtnEAfgC7cQB+AL1zcQB+AKpxAH4Av3EAfgL3cHBzcQB+AHxxAH4AiXVxAH4AigAAAABzcQB+AIwAdAAZY2guZXBmbC55aW55YW5nLmFwaS5HdWFyZHVxAH4AjwAAAABxAH4Ak3VxAH4AlQAAAABzcQB+AJcBcQB+AJ9wc3EAfgCXAXNxAH4AoXNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AHoAAAAAcHNxAH4AlwF1cQB+AKgAAAAGc3EAfgCqcQB+ANVzcQB+AK5zcQB+ALF1cQB+ALQAAAACc3EAfgC2cQB+AMRxAH4AvXNxAH4AqnEAfgDVc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2dAACaW9xAH4AvXNxAH4AqnEAfgDicQB+AxlzcQB+AKp0AAZFcXVhbHNxAH4DGXNxAH4AqnEAfgCtc3EAfgCuc3EAfgCxdXEAfgC0AAAAA3NxAH4AtnEAfgC5c3EAfgC2cQB+ALtxAH4AvXNxAH4AqnEAfgC/cQB+AxlwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAEc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAE2NoLmVwZmwueWlueWFuZy5hcGlzcQB+AzB0AAJjaHNxAH4DMHQAB2NoLmVwZmxzcQB+AzB0AA9jaC5lcGZsLnlpbnlhbmdzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAUiu7xnjdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQASy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMveWluLXlhbmcvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFJtUrNrt8J5CknFPYXuL6bTfLvX4\nch.epfl.yinyang.api.OptionalDynamicCompVar$ ->\\nch.epfl.yinyang.api.OptionalStaticCompVar ->\\nch.epfl.yinyang.api.OptionalStaticCompVar$ ->\\nch.epfl.yinyang.api.RequiredDynamicCompVar ->\\nch.epfl.yinyang.api.RequiredDynamicCompVar$ ->\\nch.epfl.yinyang.api.RequiredStaticCompVar ->\\nch.epfl.yinyang.api.VarType ->\\nch.epfl.yinyang.api.VirtualAny ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHB3rPWYAXNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAJ3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cB6yyc10AAZub3RpZnlzcQB+AAye4jt9dAAEd2FpdHNxAH4ADLVWkvh0ABJpbmZpeF9hc0luc3RhbmNlT2ZzcQB+AAztTSondAANJGFzSW5zdGFuY2VPZnNxAH4ADCkiIB50AApWaXJ0dWFsQW55c3EAfgAMxbNH33QACGluZml4XyMjc3EAfgAMOhkWDHQACmFueV9lcXVhbHNzcQB+AAzuVAOvdAAGZXF1YWxzc3EAfgAM5Iwvu3QADmluZml4X3RvU3RyaW5nc3EAfgAM1fZjo3QAEGFueV9pc0luc3RhbmNlT2ZzcQB+AAytxieNdAAOaW5maXhfaGFzaENvZGVzcQB+AAyviuThdAAMYXNJbnN0YW5jZU9mc3EAfgAMTc+KwXQADGFueV9oYXNoQ29kZXNxAH4ADLmxOKN0AAxzeW5jaHJvbml6ZWRzcQB+AAyCVpNtdAAGYW55XyMjc3EAfgAMVtU7Y3QADSRpc0luc3RhbmNlT2ZzcQB+AAxOzcltdAASaW5maXhfaXNJbnN0YW5jZU9mc3EAfgAM77np+XQADGFueV90b1N0cmluZ3NxAH4ADGGxsFl0AAlub3RpZnlBbGxzcQB+AAwgHiLgdAAMaXNJbnN0YW5jZU9mc3EAfgAMw+OYuXQABmFueV89PXNxAH4ADIp/Ge90AAZhbnlfIT1zcQB+AAzURNutdAACPT1zcQB+AAxSVDCWdAAFY2xvbmVzcQB+AAxecGnHdAAGJGluaXQkc3EAfgAMjYw1EHQACGluZml4Xz09c3EAfgAMUpXEo3QADGFueV9nZXRDbGFzc3NxAH4ADAfhxt10AA5pbmZpeF9nZXRDbGFzc3NxAH4ADKGhUSB0AAh0b1N0cmluZ3NxAH4ADFHRhJJ0AAIhPXNxAH4ADItfIy10AAhnZXRDbGFzc3NxAH4ADJ1LIRB0AAJuZXNxAH4ADDha1pl0AAxpbmZpeF9lcXVhbHNzcQB+AAwABrSVdAAQYW55X2FzSW5zdGFuY2VPZnNxAH4ADKT591l0AAhpbmZpeF8hPXNxAH4ADO8pcoV0AAJlcXNxAH4ADOSA7Fh0AAIjI3NxAH4ADFyW/k10AAhmaW5hbGl6ZXNxAH4ADLVQSj10AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAJzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AGV4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc8cREyFpnNwkAgABQgAFZmxhZ3N4cAF0AB5jaC5lcGZsLnlpbnlhbmcuYXBpLlZpcnR1YWxBbnl1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAVUcmFpdHVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0ACdzY2FsYS5yZWZsZWN0Lm1hY3Jvcy5pbnRlcm5hbC5tYWNyb0ltcGxzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cABwc3IAIHhzYnRpLlNhZmVMYXp5JCRhbm9uZnVuJHN0cmljdCQxAAAAAAAAAAACAAFMAAd2YWx1ZSQxcQB+AH94cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AH4AcHNxAH4Ag3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBlTAAJaW5oZXJpdGVkcQB+AGVMAAdwYXJlbnRzcQB+AGV4cQB+AIdzcQB+AH4AcHNxAH4Ag3VxAH4AYAAAAABzcQB+AH4AcHNxAH4Ag3VxAH4AYAAAAABzcQB+AH4AcHNxAH4Ag3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AhnQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AhnNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4Ao3QABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4ApHNxAH4Al3QAA0FueXNxAH4Am3NxAH4AnnVxAH4AoQAAAAJzcQB+AKN0AAVzY2FsYXEAfgCqc3EAfgBic3IAEXhzYnRpLmFwaS5Qcml2YXRlU6lggSbp1T4CAAB4cgATeHNidGkuYXBpLlF1YWxpZmllZKq0Xe9UsW0YAgABTAAJcXVhbGlmaWVydAAVTHhzYnRpL2FwaS9RdWFsaWZpZXI7eHEAfgBuc3IAFXhzYnRpLmFwaS5VbnF1YWxpZmllZNw2FLaeLoL1AgAAeHIAE3hzYnRpLmFwaS5RdWFsaWZpZXKzeJSp69ZbJwIAAHhwdXEAfgBwAAAAAHNxAH4AcgB0AB5jaC5lcGZsLnlpbnlhbmcuYXBpLlZpcnR1YWxBbnl1cQB+AHUAAAAAfnEAfgB3dAAGTW9kdWxldXEAfgB7AAAAAHNxAH4AfgBwc3EAfgCDcQB+AIhzcQB+AH4Bc3EAfgCLc3EAfgB+AXVxAH4AYAAAAABwc3EAfgB+AXVxAH4AYAAAAABwc3EAfgB+AHBzcQB+AIN1cQB+AJUAAAACc3EAfgCXcQB+AJpzcQB+AJtzcQB+AJ51cQB+AKEAAAADc3EAfgCjcQB+AKZzcQB+AKNxAH4AqHEAfgCqc3EAfgCXcQB+AKxzcQB+AJtzcQB+AJ51cQB+AKEAAAACc3EAfgCjcQB+ALFxAH4AqnB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAABHNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0ABNjaC5lcGZsLnlpbnlhbmcuYXBpc3EAfgDZdAACY2hzcQB+ANl0AAdjaC5lcGZsc3EAfgDZdAAPY2guZXBmbC55aW55YW5nc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFIru8Z43VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AEsvVXNlcnMvdmpvdmFub3YvY29kZS95aW4teWFuZy9jb21wb25lbnRzL3lpbi15YW5nL3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABS84I6yb5+BCkqJ0ovDCm4fWLnEvg==\nch.epfl.yinyang.typetransformers.GenericTypeTransformer ->\\nch.epfl.yinyang.typetransformers.PolyTransformer ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDRNWLLAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAALXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cJw+dc50AAZub3RpZnlzcQB+AAxyANdydAANcmV3aXJlZFRvVGhpc3NxAH4ADBLVzFt0AAR3YWl0c3EAfgAMD7VtVnQADSRhc0luc3RhbmNlT2ZzcQB+AAz0QxEwdAAMcHJvZHVjdEFyaXR5c3EAfgAM7x71UnQABmVxdWFsc3NxAH4ADPMi+eZ0AAxhc0luc3RhbmNlT2ZzcQB+AAxBRN4CdAAMc3luY2hyb25pemVkc3EAfgAMtUnBpnQADSRpc0luc3RhbmNlT2ZzcQB+AAxBmK0XdAAKVHlwZUFyZ0N0eHNxAH4ADEcWAGZ0AAtUeXBlQ29udGV4dHNxAH4ADODcRpN0AAhjYW5FcXVhbHNxAH4ADA992mR0ABBUeXBlUGFyYW1ldGVyQ3R4c3EAfgAM1YFyjHQADXByb2R1Y3RQcmVmaXhzcQB+AAyeUy1kdAAJbm90aWZ5QWxsc3EAfgAM1ZNTHHQAC3JlYWRSZXNvbHZlc3EAfgAMjxl/YHQABk5vdFZhcnNxAH4ADJld60R0AA5pc0Z1bmN0aW9uVHlwZXNxAH4ADJAoG8x0AAxpc0luc3RhbmNlT2ZzcQB+AAwL5eWudAAGdG9UeXBlc3EAfgAMjm6zqHQABjxpbml0PnNxAH4ADJ76LLx0AAVJc1ZhcnNxAH4ADFNyJkN0AAI9PXNxAH4ADCiox910AAVjbG9uZXNxAH4ADKNwGfx0AAljbGFzc05hbWVzcQB+AAyDRDNWdAAGdmFyQ3R4c3EAfgAMIKGIsHQABiRpbml0JHNxAH4ADE3c1Jh0AA9Qb2x5VHJhbnNmb3JtZXJzcQB+AAyUMkgNdAARY29uc3RydWN0UG9seVRyZWVzcQB+AAwscofJdAAIdG9TdHJpbmdzcQB+AAzi0C05dAACIT1zcQB+AAzDMvlCdAABY3NxAH4ADA6nHJJ0ABBNYXhGdW5jdGlvbkFyaXR5c3EAfgAM7JmDnXQACE90aGVyQ3R4c3EAfgAM0DuWcHQACGdldENsYXNzc3EAfgAMgr6Q0nQAAm5lc3EAfgAMEI8nlHQACXRyYW5zZm9ybXNxAH4ADHi1h/50AAJlcXNxAH4ADE7HiwZ0AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAzoAdkTdAACIyNzcQB+AAz6WuQGdAATUG9seVRyYW5zZm9ybWVyTGlrZXNxAH4ADHsTSyJ0AAhmaW5hbGl6ZXNxAH4ADOmBQL90AA5wcm9kdWN0RWxlbWVudHNxAH4ADIkFJhJ0AAhoYXNoQ29kZXNxAH4ADKksznZ0AApWYXJDb250ZXh0c3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AcXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAXQANGNoLmVwZmwueWlueWFuZy50eXBldHJhbnNmb3JtZXJzLlBvbHlUcmFuc2Zvcm1lckxpa2V1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcmdpVdvjcpBrAgAGWwALYW5ub3RhdGlvbnNxAH4AdkwAAmlkcQB+AA1MAApsb3dlckJvdW5kdAAQTHhzYnRpL2FwaS9UeXBlO1sADnR5cGVQYXJhbWV0ZXJzcQB+AHNMAAp1cHBlckJvdW5kcQB+AIRMAAh2YXJpYW5jZXQAFEx4c2J0aS9hcGkvVmFyaWFuY2U7eHB1cQB+AHwAAAAAdAA2Y2guZXBmbC55aW55YW5nLnR5cGV0cmFuc2Zvcm1lcnMuUG9seVRyYW5zZm9ybWVyTGlrZS5Dc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHQAB05vdGhpbmdzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AItzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAAJzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABXNjYWxhc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJh1cQB+AIEAAAAAc3EAfgCJdAAHQ29udGV4dHNxAH4Aj3NxAH4AknVxAH4AlQAAAAVzcQB+AJdxAH4AmnNxAH4Al3QAB3JlZmxlY3RzcQB+AJd0AAZtYWNyb3NzcQB+AJd0AAhibGFja2JveHEAfgCcfnIAEnhzYnRpLmFwaS5WYXJpYW5jZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACUludmFyaWFudH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhxAH4Aq3QABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAXNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cQB+AItwc3EAfgCzAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBxTAAJaW5oZXJpdGVkcQB+AHFMAAdwYXJlbnRzcQB+AHF4cQB+AIxzcQB+ALMBdXEAfgBsAAAAAHBzcQB+ALMBdXEAfgBsAAAAAHBzcQB+ALMBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcQB+AIl0AAZPYmplY3RzcQB+AI9zcQB+AJJ1cQB+AJUAAAADc3EAfgCXdAAEamF2YXNxAH4Al3QABGxhbmdxAH4AnHNxAH4AiXQAA0FueXNxAH4Aj3NxAH4AknVxAH4AlQAAAAJzcQB+AJdxAH4AmnEAfgCccHBzcQB+AG5xAH4Ae3VxAH4AfAAAAABzcQB+AH4AdAAwY2guZXBmbC55aW55YW5nLnR5cGV0cmFuc2Zvcm1lcnMuUG9seVRyYW5zZm9ybWVydXEAfgCBAAAAAXNxAH4Ag3VxAH4AfAAAAAB0ADJjaC5lcGZsLnlpbnlhbmcudHlwZXRyYW5zZm9ybWVycy5Qb2x5VHJhbnNmb3JtZXIuQ3EAfgCNdXEAfgCBAAAAAHEAfgCecQB+AKx+cQB+AK50AAhDbGFzc0RlZnVxAH4AsQAAAABzcQB+ALMBcQB+ALlwc3EAfgCzAXNxAH4Au3NxAH4AswF1cQB+AGwAAAAAcHNxAH4AswF1cQB+AGwAAAAAcHNxAH4AswF1cQB+AMIAAAAEc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJpemVkFmzuaQPJu38CAAJMAAhiYXNlVHlwZXEAfgCKWwANdHlwZUFyZ3VtZW50c3QAEVtMeHNidGkvYXBpL1R5cGU7eHEAfgCLc3EAfgCJdAATUG9seVRyYW5zZm9ybWVyTGlrZXNxAH4Aj3NxAH4AknVxAH4AlQAAAAVzcQB+AJd0AAJjaHNxAH4Al3QABGVwZmxzcQB+AJd0AAd5aW55YW5nc3EAfgCXdAAQdHlwZXRyYW5zZm9ybWVyc3EAfgCcdXEAfgDCAAAAAXNyABZ4c2J0aS5hcGkuUGFyYW1ldGVyUmVmP9jjOQAsc7ACAAFMAAJpZHEAfgANeHEAfgCLdAAyY2guZXBmbC55aW55YW5nLnR5cGV0cmFuc2Zvcm1lcnMuUG9seVRyYW5zZm9ybWVyLkNzcQB+AOhzcQB+AIl0AA9UeXBlVHJhbnNmb3JtZXJxAH4A7XVxAH4AwgAAAAFxAH4A+nNxAH4AiXEAfgDFc3EAfgCPc3EAfgCSdXEAfgCVAAAAA3NxAH4Al3EAfgDKc3EAfgCXcQB+AMxxAH4AnHNxAH4AiXEAfgDOc3EAfgCPc3EAfgCSdXEAfgCVAAAAAnNxAH4Al3EAfgCacQB+AJxwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAEc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAAmNoc3EAfgENdAAHY2guZXBmbHNxAH4BDXQAD2NoLmVwZmwueWlueWFuZ3NxAH4BDXQAIGNoLmVwZmwueWlueWFuZy50eXBldHJhbnNmb3JtZXJzc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFIru8Z43VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AEsvVXNlcnMvdmpvdmFub3YvY29kZS95aW4teWFuZy9jb21wb25lbnRzL3lpbi15YW5nL3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABRaH4+781TbGniOur8kSRjhzeqe0w==\nsource infos:\n8 items\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/Base.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaCompile.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/src/base/ScalaVirtualizedBase.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/Vector.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/lifted/VectorOpsRep.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/src/la/package.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/LiftedPrint.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/src/print/package.scala ->\nAAAAAAAAAAA=\ncompilations:\n43 items\n00 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSILxBRZ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n01 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJU5rzl1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n02 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJVCsdB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n03 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJVCst11cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n04 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJVH/ll1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n05 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJVPDgt1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n06 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJVh05N1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n07 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJV99GN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n08 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJV+Nwp1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n09 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJV+OB91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n10 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJWC7j51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n11 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJWGSJV1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n12 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJ9nKsV1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n13 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJ9vPOR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n14 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJ94V011cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n15 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJ+Ewo51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n16 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJ+FLel1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n17 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJ+FLuJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n18 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSJ+Fztt1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n19 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKdKHHN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n20 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKdKhEx1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n21 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKdPPjN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n22 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKfSo8l1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n23 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKfXm4h1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n24 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKfcP7R1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n25 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKjwwwd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n26 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKj3P0d1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n27 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKknQaB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n28 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKk4Jmp1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n29 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKk5RjR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n30 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKwoaHZ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n31 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKwsvxV1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n32 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKwt5I51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n33 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKwujcB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n34 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKwvOa51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n35 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKwwN9B1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n36 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSKw0+tN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n37 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7fibh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n38 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7g/yB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n39 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7maaR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n40 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7qU7R1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n41 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7rEHZ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n42 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vKfd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABLw==\n",
			"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/target/streams/compile/incCompileSetup/$global/streams/inc_compile",
			"file_size": 421535,
			"file_write_time": 130879470840000000,
			"settings":
			{
				"buffer_size": 421535,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "format version: 5\noutput mode:\n1 items\n0 -> single\noutput directories:\n1 items\noutput dir -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes\ncompile options:\n4 items\n0 -> -deprecation\n1 -> -feature\n2 -> -language:higherKinds\n3 -> -language:implicitConversions\njavac options:\n0 items\ncompiler version:\n1 items\n0 -> 2.11.1\ncompile order:\n1 items\n0 -> Mixed\nname hashing:\n1 items\n0 -> true\nproducts:\n72 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$$anonfun$9.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anonfun$10.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$generated$dsllarepVectorDSL1$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$$anonfun$11.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anonfun$12.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$generated$dsllarepVectorDSL2$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$$anonfun$14.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$$typecreator1$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anonfun$15.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$generated$dsllarepVectorDSL3$1$$anonfun$13.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$generated$dsllarepVectorDSL3$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$$anonfun$17.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anonfun$18.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$generated$dsllarepVectorDSL4$1$$anonfun$16.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$generated$dsllarepVectorDSL4$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$$anonfun$22.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anonfun$23.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$19.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$20.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$21.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$$anonfun$24.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anonfun$25.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$generated$dsllarepVectorDSL6$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$$anonfun$26.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anonfun$27.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$generated$dsllarepVectorDSL7$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$$anonfun$28.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$$typecreator2$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$ProgramVariant$.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$ProgramVariant.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anonfun$29.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$generated$dsllarepVectorDSL8$1.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8.class\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec.class\nbinary dependencies:\n5 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/.ivy2/cache/junit/junit/jars/junit-4.11.jar\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> /Users/vjovanov/.ivy2/cache/org.scalatest/scalatest_2.11/jars/scalatest_2.11-2.1.5.jar\ndirect source dependencies:\n0 items\ndirect external dependencies:\n0 items\npublic inherited source dependencies:\n0 items\npublic inherited external dependencies:\n0 items\nmember reference internal dependencies:\n0 items\nmember reference external dependencies:\n10 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> base.PolymorphicBase\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ch.epfl.yinyang.api.BaseYinYang\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ch.epfl.yinyang.runtime.YYCache\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ch.epfl.yinyang.runtime.YYStorage$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl.la.Vector\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl.la.rep.DoubleDSL\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl.la.rep.IntDSL\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl.la.rep.NumericOps\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl.la.rep.ScalaVirtualizationDSL\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl.la.rep.VectorDSL\ninheritance internal dependencies:\n0 items\ninheritance external dependencies:\n2 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ch.epfl.yinyang.runtime.YYCache\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl.la.rep.VectorDSL\nclass names:\n72 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$$anonfun$9\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anonfun$10\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$generated$dsllarepVectorDSL1$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$$anonfun$11\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anonfun$12\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$generated$dsllarepVectorDSL2$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$$anonfun$14\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$$typecreator1$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anonfun$15\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$generated$dsllarepVectorDSL3$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$generated$dsllarepVectorDSL3$1$$anonfun$13\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$$anonfun$17\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anonfun$18\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$generated$dsllarepVectorDSL4$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$generated$dsllarepVectorDSL4$1$$anonfun$16\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$$anonfun$22\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anonfun$23\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$19\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$20\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$21\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$$anonfun$24\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anonfun$25\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$generated$dsllarepVectorDSL6$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$$anonfun$26\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anonfun$27\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$generated$dsllarepVectorDSL7$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$$anonfun$28\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$$typecreator2$1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$ProgramVariant$\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anonfun$29\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde.vector.test.GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$generated$dsllarepVectorDSL8$1\nused names:\n170 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> $anon\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> $m\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> $m$untyped\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> $typecreator1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> $typecreator2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> $u\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> &&\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> +\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> <\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> <init>\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ==\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ???\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> AbstractFunction2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Any\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Array\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Boolean\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ByteArrayOutputStream\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ClassTag\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> FlatSpec\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Function0\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Function1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> FunctionT\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> GenericTranslationSpec\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> HashMap\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Int\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> IntIsIntegral\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> JUnitRunner\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> LiftInt\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> LiftString\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> LiftUnit\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> List\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ManifestFactory\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Mirror\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> None\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> NotImplementedError\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Nothing\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Option\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Predef\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> PrintStream\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Product\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ProgramVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> R\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> RunWith\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ScalaRunTime\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Serializable\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Set\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ShouldMatchers\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Singleton\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> SortedSet\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Statics\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ThisType\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Type\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> TypeCreator\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> TypeRef\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> TypeTag\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> U\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Universe\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> Vector\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> VectorDSL\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> YYCache\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> YYStorage\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> __app\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> __assign\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> __lambda\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> __newVar\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> __valDef\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> _root_\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> _toString\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> anyHash\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> apply\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> asInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> asModule\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> asType\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> cache\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ch\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> classType\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> collection\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> compilVars\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> compile\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> convertToInAndIgnoreMethods\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> convertToStringShouldWrapper\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> copyToArray\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> createAndStoreVariant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> dsl\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> epfl\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> eq\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> evictedCache\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> finalizeHash\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> function\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL3\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL4\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL5\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL6\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL7\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> generated$dsllarepVectorDSL8\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> genericArrayOps\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> get\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> getClassLoader\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> getOrElse\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> guardedLookup\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> hash\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> hash2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> hashes\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> id\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> id0\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> id1\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> id2\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> immutable\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> in\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> incrementRuntimeCompileCount\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> infix_!=\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> infix_hashCode\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> intercept\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> internal\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> io\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> isInstanceOf\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> it\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> java\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> junit\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> la\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> lift\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> lookup\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> lookupReq\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> minCount\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> minHashes\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> minSet\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mix\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> moduleClass\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde$vector$test$GenericTranslationSpec$$anon$$classInstance\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde$vector$test$GenericTranslationSpec$$anon$$recompile\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde$vector$test$GenericTranslationSpec$$anon$$variantCache\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> mpde$vector$test$GenericTranslationSpec$$anon$$variantCache_=\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> next0\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> org\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> package\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> program\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> reflect\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> refs\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> reificationSupport\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> rep\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> runner\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> runtime\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> runtimeMirror\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> scala\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> scalatest\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> set\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> shorthandTestRegistrationFunction\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> should\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> size\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> staticClass\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> staticPackage\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> test\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> toString\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> toTypeConstructor\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> typedProductIterator\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> universe\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> unsafeCounter\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> unsafeCounter_=\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> unstableSet\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> v\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> variant\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> variantCount\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> vector\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> x\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> y\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> yinyang\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> ||\nproduct stamps:\n72 items\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$$anonfun$9.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anon$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$$anonfun$10.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1$generated$dsllarepVectorDSL1$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1$$anonfun$apply$mcV$sp$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$$anonfun$11.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anon$2.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$$anonfun$12.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2$generated$dsllarepVectorDSL2$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2$$anonfun$apply$mcV$sp$2.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$2.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$$anonfun$14.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$$typecreator1$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anon$3.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$$anonfun$15.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$generated$dsllarepVectorDSL3$1$$anonfun$13.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7$generated$dsllarepVectorDSL3$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3$$anonfun$apply$mcV$sp$7.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$3.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$$anonfun$17.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anon$4.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$$anonfun$18.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$generated$dsllarepVectorDSL4$1$$anonfun$16.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3$generated$dsllarepVectorDSL4$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4$$anonfun$apply$mcV$sp$3.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$4.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$$anonfun$22.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anon$5.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$$anonfun$23.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$19.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$20.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1$$anonfun$21.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4$generated$dsllarepVectorDSL5$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5$$anonfun$apply$mcV$sp$4.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$5.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$$anonfun$24.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anon$6.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$$anonfun$25.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5$generated$dsllarepVectorDSL6$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6$$anonfun$apply$mcV$sp$5.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$6.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$$anonfun$26.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anon$7.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$$anonfun$27.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6$generated$dsllarepVectorDSL7$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7$$anonfun$apply$mcV$sp$6.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$7.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$$anonfun$28.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$$typecreator2$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$ProgramVariant$.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8$ProgramVariant.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anon$8.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$$anonfun$29.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8$generated$dsllarepVectorDSL8$1.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8$$anonfun$apply$mcV$sp$8.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec$$anonfun$8.class -> lastModified(1411686084000)\n/Users/vjovanov/code/yin-yang/components/dsls/target/scala-2.11/test-classes/mpde/vector/test/GenericTranslationSpec.class -> lastModified(1411686084000)\nsource stamps:\n3 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/CodeGenBench.scala -> hash(8125d1c4365940d0e2346fa5d9922972bdcfd029)\n/Users/vjovanov/code/yin-yang/components/dsls/test/CodeGenSpec.scala -> hash(5a33cc1da99efe6953996cb6ccc05c5057dbcf49)\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala -> hash(30dd94f44ba26b274f7d0c7e25a39432cc33afc8)\nbinary stamps:\n5 items\n/Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1387422821000)\n/Users/vjovanov/.ivy2/cache/junit/junit/jars/junit-4.11.jar -> lastModified(1352920880000)\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar -> lastModified(1400572938000)\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar -> lastModified(1400572965000)\n/Users/vjovanov/.ivy2/cache/org.scalatest/scalatest_2.11/jars/scalatest_2.11-2.1.5.jar -> lastModified(1398726265000)\nclass names:\n5 items\n/Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.Object\n/Users/vjovanov/.ivy2/cache/junit/junit/jars/junit-4.11.jar -> org.junit.runner.RunWith\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.1.jar -> scala.runtime.AbstractFunction2\n/Users/vjovanov/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.1.jar -> scala.reflect.api.TypeCreator\n/Users/vjovanov/.ivy2/cache/org.scalatest/scalatest_2.11/jars/scalatest_2.11-2.1.5.jar -> org.scalatest.FlatSpec\ninternal apis:\n3 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/CodeGenBench.scala ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHC4IVHqAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAAHNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7l6Dh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+ABp4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSBJdHENllA0OI0b6XZkilyvc/QKQ==\n/Users/vjovanov/code/yin-yang/components/dsls/test/CodeGenSpec.scala ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHC4IVHqAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAAHNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7l6Dh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+ABp4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABRaM8wdqZ7+aVOZbLbMwFxQV9vPSQ==\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala ->\\nexternal apis:\n10 items\nbase.PolymorphicBase ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHA9rt5iAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAI3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cCa6gLZ0AAZub3RpZnlzcQB+AAyJ+7IRdAAEd2FpdHNxAH4ADELqco90AA0kYXNJbnN0YW5jZU9mc3EAfgAM83GdAnQAD2NvbXBpbGF0aW9uVmFyc3NxAH4ADBdmNcZ0AAZlcXVhbHNzcQB+AAwDw7vzdAAMZ2VuZXJhdGVDb2Rlc3EAfgAM7tKyZHQADGFzSW5zdGFuY2VPZnNxAH4ADJFGkvp0AAtydW50aW1lVHlwZXNxAH4ADP6i4S50AAdSZXBCYXNlc3EAfgAM859rJHQADHN5bmNocm9uaXplZHNxAH4ADKDzhbJ0AA0kaXNJbnN0YW5jZU9mc3EAfgAMbv4xK3QABG1haW5zcQB+AAwiAqkLdAAHY29tcGlsZXNxAH4ADBitIz50AARCYXNlc3EAfgAMHYtdWnQACW5vdGlmeUFsbHNxAH4ADORB9Vh0AAxpc0luc3RhbmNlT2ZzcQB+AAy/aarMdAAFbWl4ZWRzcQB+AAyeHTCPdAAGPGluaXQ+c3EAfgAMLo0H4nQADExpZnRFdmlkZW5jZXNxAH4ADDrEZ+F0AAI9PXNxAH4ADHnP9Zt0ABFjb21waWxlJGRlZmF1bHQkMXNxAH4ADITWqid0AAdUeXBlUmVwc3EAfgAM3s7i+HQABWNsb25lc3EAfgAM7hShIHQAFmdlbmVyYXRlQ29kZSRkZWZhdWx0JDJzcQB+AAz2kzOudAAIdG9TdHJpbmdzcQB+AAzAGFGVdAACIT1zcQB+AAyZ7VCZdAAIZ2V0Q2xhc3NzcQB+AAyK3LDJdAAEaG9sZXNxAH4ADGtytzV0AAFSc3EAfgAMlbwIx3QAAm5lc3EAfgAMUgj5+HQABGxpZnRzcQB+AAyQezbgdAACZXFzcQB+AAzFDEfRdAACIyNzcQB+AAyp+x/qdAAIZmluYWxpemVzcQB+AAwQKQBHdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBdeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAJYmFzZS5CYXNldXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHABc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHBzcQB+AHUBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AF1MAAlpbmhlcml0ZWRxAH4AXUwAB3BhcmVudHNxAH4AXXhxAH4AfHNxAH4AdQF1cQB+AFgAAAAAcHNxAH4AdQF1cQB+AFgAAAAAcHNxAH4AdQF1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAABnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AHt0AA1Db2RlR2VuZXJhdG9yc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB7c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAAFc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAJjaHNxAH4AlHQABGVwZmxzcQB+AJR0AAd5aW55YW5nc3EAfgCUdAADYXBpc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJVzcQB+AIh0ABJCYXNlWWluWWFuZ1R5cGVUYWdxAH4AjnNxAH4AiHQADFR5cGVUYWdCYXNlZHEAfgCOc3EAfgCIdAALQmFzZVlpbllhbmdxAH4AjnNxAH4AiHQABk9iamVjdHNxAH4AjHNxAH4Aj3VxAH4AkgAAAANzcQB+AJR0AARqYXZhc3EAfgCUdAAEbGFuZ3EAfgCfc3EAfgCIdAADQW55c3EAfgCMc3EAfgCPdXEAfgCSAAAAAnNxAH4AlHQABXNjYWxhcQB+AJ9wcHNxAH4AWnEAfgBndXEAfgBoAAAAAHNxAH4AagF0AAxiYXNlLlJlcEJhc2V1cQB+AG0AAAAAcQB+AHF1cQB+AHMAAAAAc3EAfgB1AXEAfgB9cHNxAH4AdQFzcQB+AH9zcQB+AHUBdXEAfgBYAAAAAHBzcQB+AHUBdXEAfgBYAAAAAHBzcQB+AHUBdXEAfgCGAAAAB3NxAH4AiHQABEJhc2VzcQB+AIxzcQB+AI91cQB+AJIAAAACc3EAfgCUdAAEYmFzZXEAfgCfc3EAfgCIdAANQ29kZUdlbmVyYXRvcnNxAH4AjHNxAH4Aj3VxAH4AkgAAAAVzcQB+AJR0AAJjaHNxAH4AlHQABGVwZmxzcQB+AJR0AAd5aW55YW5nc3EAfgCUcQB+AJ1xAH4An3NxAH4AiHQAEkJhc2VZaW5ZYW5nVHlwZVRhZ3EAfgDOc3EAfgCIdAAMVHlwZVRhZ0Jhc2VkcQB+AM5zcQB+AIh0AAtCYXNlWWluWWFuZ3EAfgDOc3EAfgCIcQB+AKdzcQB+AIxzcQB+AI91cQB+AJIAAAADc3EAfgCUcQB+AKxzcQB+AJRxAH4ArnEAfgCfc3EAfgCIcQB+ALBzcQB+AIxzcQB+AI91cQB+AJIAAAACc3EAfgCUcQB+ALVxAH4An3BwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAEYmFzZXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vKfd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABHL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy9kc2xzL3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQXDgM/ccsES6ZicrYOqHLt3wZK1Q==\nch.epfl.yinyang.api.BaseYinYang ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDIPVgbAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAIXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cHPVDmt0AAtCYXNlWWluWWFuZ3NxAH4ADDMcrNh0AAZub3RpZnlzcQB+AAz0UmTOdAAEd2FpdHNxAH4ADAMfzJJ0AA0kYXNJbnN0YW5jZU9mc3EAfgAMNe+sxHQAD2NvbXBpbGF0aW9uVmFyc3NxAH4ADBDHMZB0AAZlcXVhbHNzcQB+AAx6n2oJdAATQmFzZVlpbllhbmdNYW5pZmVzdHNxAH4ADH9MWOF0AAxhc0luc3RhbmNlT2ZzcQB+AAzBafwwdAALcnVudGltZVR5cGVzcQB+AAy242gYdAANTWFuaWZlc3RCYXNlZHNxAH4ADC9uhed0AAxzeW5jaHJvbml6ZWRzcQB+AAw9YleldAANJGlzSW5zdGFuY2VPZnNxAH4ADPwm6wZ0AAlub3RpZnlBbGxzcQB+AAzQnYoHdAASQmFzZVlpbllhbmdUeXBlVGFnc3EAfgAMKfpjaXQADGlzSW5zdGFuY2VPZnNxAH4ADJJ597V0AAVtaXhlZHNxAH4ADN0C+p50AAY8aW5pdD5zcQB+AAwHw3zKdAAMTGlmdEV2aWRlbmNlc3EAfgAMAlSSzXQAAj09c3EAfgAMLoWcDnQAB1R5cGVSZXBzcQB+AAzX50ZDdAAFY2xvbmVzcQB+AAwhqZ1KdAAGJGluaXQkc3EAfgAM6i1K6XQADFR5cGVUYWdCYXNlZHNxAH4ADGDhTdd0AAh0b1N0cmluZ3NxAH4ADNab8fh0AAIhPXNxAH4ADEczNpx0AAhnZXRDbGFzc3NxAH4ADJM+7tx0AARob2xlc3EAfgAMnGdU/nQAAm5lc3EAfgAM9kSTTnQABGxpZnRzcQB+AAxuj6JedAACZXFzcQB+AAxOGATGdAACIyNzcQB+AAyQ/8u5dAAIZmluYWxpemVzcQB+AAxx8d3ndAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAAFc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBZeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHABdAAfY2guZXBmbC55aW55YW5nLmFwaS5CYXNlWWluWWFuZ3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABVRyYWl0dXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAXNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBwc3EAfgBxAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBZTAAJaW5oZXJpdGVkcQB+AFlMAAdwYXJlbnRzcQB+AFl4cQB+AHhzcQB+AHEBdXEAfgBUAAAAAHBzcQB+AHEBdXEAfgBUAAAAAHBzcQB+AHEBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgB3dAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgB3c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCQdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCRc3EAfgCEdAADQW55c3EAfgCIc3EAfgCLdXEAfgCOAAAAAnNxAH4AkHQABXNjYWxhcQB+AJdwcHNxAH4AVnEAfgBjdXEAfgBkAAAAAHNxAH4AZgF0ACBjaC5lcGZsLnlpbnlhbmcuYXBpLlR5cGVUYWdCYXNlZHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAACc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAIWNoLmVwZmwueWlueWFuZy5hcGkuTWFuaWZlc3RCYXNlZHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAACc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAJ2NoLmVwZmwueWlueWFuZy5hcGkuQmFzZVlpbllhbmdNYW5pZmVzdHVxAH4AaQAAAABxAH4AbXVxAH4AbwAAAABzcQB+AHEBcQB+AHlwc3EAfgBxAXNxAH4Ae3NxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AFQAAAAAcHNxAH4AcQF1cQB+AIIAAAAEc3EAfgCEdAANTWFuaWZlc3RCYXNlZHNxAH4AiHNxAH4Ai3VxAH4AjgAAAAVzcQB+AJB0AAJjaHNxAH4AkHQABGVwZmxzcQB+AJB0AAd5aW55YW5nc3EAfgCQdAADYXBpcQB+AJdzcQB+AIR0AAtCYXNlWWluWWFuZ3EAfgDkc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3Bwc3EAfgBWcQB+AGN1cQB+AGQAAAAAc3EAfgBmAXQAJmNoLmVwZmwueWlueWFuZy5hcGkuQmFzZVlpbllhbmdUeXBlVGFndXEAfgBpAAAAAHEAfgBtdXEAfgBvAAAAAHNxAH4AcQFxAH4AeXBzcQB+AHEBc3EAfgB7c3EAfgBxAXVxAH4AVAAAAABwc3EAfgBxAXVxAH4AVAAAAABwc3EAfgBxAXVxAH4AggAAAARzcQB+AIR0AAxUeXBlVGFnQmFzZWRzcQB+AIhzcQB+AIt1cQB+AI4AAAAFc3EAfgCQdAACY2hzcQB+AJB0AARlcGZsc3EAfgCQdAAHeWlueWFuZ3NxAH4AkHEAfgDucQB+AJdzcQB+AIR0AAtCYXNlWWluWWFuZ3EAfgENc3EAfgCEcQB+AIdzcQB+AIhzcQB+AIt1cQB+AI4AAAADc3EAfgCQcQB+AJNzcQB+AJBxAH4AlXEAfgCXc3EAfgCEcQB+AJlzcQB+AIhzcQB+AIt1cQB+AI4AAAACc3EAfgCQcQB+AJ5xAH4Al3BwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAATY2guZXBmbC55aW55YW5nLmFwaXNxAH4BJnQAAmNoc3EAfgEmdAAHY2guZXBmbHNxAH4BJnQAD2NoLmVwZmwueWlueWFuZ3NyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7vGeN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABLL1VzZXJzL3Zqb3Zhbm92L2NvZGUveWluLXlhbmcvY29tcG9uZW50cy95aW4teWFuZy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAULhD0NULP2AT6lYyuly5NjluMcAE=\nch.epfl.yinyang.runtime.YYCache ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDBELbCAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAKXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cCxLI910AAZub3RpZnlzcQB+AAz272ANdAAWZ2V0Q29tcGlsZVRpbWVDb21waWxlZHNxAH4ADPNN24Z0ABNydW50aW1lQ29tcGlsZUNvdW50c3EAfgAMXJyJZnQAB1lZQ2FjaGVzcQB+AAx6D3ZvdAAEd2FpdHNxAH4ADPNs9VJ0AA0kYXNJbnN0YW5jZU9mc3EAfgAMYzJw5XQAFmdldFJ1bnRpbWVDb21waWxlQ291bnRzcQB+AAy3Xq1LdAAYcmVzZXRDb21waWxlVGltZUNvbXBpbGVkc3EAfgAMh1kbXHQAF2NvbXBpbGVUaW1lQ29tcGlsZUNvdW50c3EAfgAM+KaDMnQAEWdldEhhc2hMb29rdXBUaW1lc3EAfgAMtmbkQ3QABmVxdWFsc3NxAH4ADAkRbs50AA1ndWFyZGVkTG9va3Vwc3EAfgAMF5whOnQADGFzSW5zdGFuY2VPZnNxAH4ADLEYKSp0ABFnZXRDaGVja1RpbWVDb3VudHNxAH4ADOdgkzN0AAxzeW5jaHJvbml6ZWRzcQB+AAzKH1YEdAAWc2V0Q29tcGlsZVRpbWVDb21waWxlZHNxAH4ADOfLG3B0AA0kaXNJbnN0YW5jZU9mc3EAfgAM/vzi43QACW5vdGlmeUFsbHNxAH4ADPO2btF0AAxpc0luc3RhbmNlT2ZzcQB+AAxHLRegdAAXaW5jcmVtZW50Q2hlY2tUaW1lQ291bnRzcQB+AAxNE7UfdAAGPGluaXQ+c3EAfgAM7maHOnQABmNhY2hlc3NxAH4ADKI2brR0AAI9PXNxAH4ADI9M+050AB1hbHJlYWR5Q291bnRlZENvbXBpbGVUaW1lVUlEc3NxAH4ADBWcz890AAVjbG9uZXNxAH4ADPSVE2N0ABNjb21waWxlVGltZUNvbXBpbGVkc3EAfgAMXrPjGXQACGhhc2hUaW1lc3EAfgAMl9EEnXQAIGluY3JlbWVudENvbXBpbGVUaW1lQ29tcGlsZUNvdW50c3EAfgAMrpwZ6XQAGmdldENvbXBpbGVUaW1lQ29tcGlsZUNvdW50c3EAfgAMVSBs73QACWNoZWNrVGltZXNxAH4ADFLt5I90AAh0b1N0cmluZ3NxAH4ADKw9/tl0AAIhPXNxAH4ADEqkR/t0AApjaGVja0NvdW50c3EAfgAMd/3aTHQACGdldENsYXNzc3EAfgAMxSek8XQAAm5lc3EAfgAM3WyuIXQACVlZU3RvcmFnZXNxAH4ADLd7vLJ0AAJlcXNxAH4ADDVzQqd0ABxpbmNyZW1lbnRSdW50aW1lQ29tcGlsZUNvdW50c3EAfgAM7e1F33QAAiMjc3EAfgAMTi3Da3QACGZpbmFsaXplc3EAfgAMMo49x3QACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AaXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAIWNoLmVwZmwueWlueWFuZy5ydW50aW1lLllZU3RvcmFnZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS5pbmxpbmVzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cAFzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwcHNxAH4AggFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AaUwACWluaGVyaXRlZHEAfgBpTAAHcGFyZW50c3EAfgBpeHEAfgCJc3EAfgCCAXVxAH4AZAAAAABwc3EAfgCCAXVxAH4AZAAAAABwc3EAfgCCAXVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AiHQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AiHNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AoXQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AonNxAH4AlXQAA0FueXNxAH4AmXNxAH4AnHVxAH4AnwAAAAJzcQB+AKF0AAVzY2FsYXEAfgCocHBzcQB+AGZxAH4Ac3VxAH4AdAAAAABzcQB+AHYAdAAfY2guZXBmbC55aW55YW5nLnJ1bnRpbWUuWVlDYWNoZXVxAH4AeQAAAAB+cQB+AHt0AAhDbGFzc0RlZnVxAH4AfwAAAABzcQB+AIIBcQB+AIpwc3EAfgCCAXNxAH4AjHNxAH4AggF1cQB+AGQAAAAAcHNxAH4AggF1cQB+AGQAAAAAcHNxAH4AggF1cQB+AJMAAAACc3EAfgCVcQB+AJhzcQB+AJlzcQB+AJx1cQB+AJ8AAAADc3EAfgChcQB+AKRzcQB+AKFxAH4ApnEAfgCoc3EAfgCVcQB+AKpzcQB+AJlzcQB+AJx1cQB+AJ8AAAACc3EAfgChcQB+AK9xAH4AqHBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAACY2hzcQB+AM50AAdjaC5lcGZsc3EAfgDOdAAPY2guZXBmbC55aW55YW5nc3EAfgDOdAAXY2guZXBmbC55aW55YW5nLnJ1bnRpbWVzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAUiu7xnjdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQASy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMveWluLXlhbmcvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFG9RtvC0jgoFjUFVQ26qdXuoqX1d\nch.epfl.yinyang.runtime.YYStorage$ ->\nrO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDBELbCAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAKXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cCxLI910AAZub3RpZnlzcQB+AAz272ANdAAWZ2V0Q29tcGlsZVRpbWVDb21waWxlZHNxAH4ADPNN24Z0ABNydW50aW1lQ29tcGlsZUNvdW50c3EAfgAMXJyJZnQAB1lZQ2FjaGVzcQB+AAx6D3ZvdAAEd2FpdHNxAH4ADPNs9VJ0AA0kYXNJbnN0YW5jZU9mc3EAfgAMYzJw5XQAFmdldFJ1bnRpbWVDb21waWxlQ291bnRzcQB+AAy3Xq1LdAAYcmVzZXRDb21waWxlVGltZUNvbXBpbGVkc3EAfgAMh1kbXHQAF2NvbXBpbGVUaW1lQ29tcGlsZUNvdW50c3EAfgAM+KaDMnQAEWdldEhhc2hMb29rdXBUaW1lc3EAfgAMtmbkQ3QABmVxdWFsc3NxAH4ADAkRbs50AA1ndWFyZGVkTG9va3Vwc3EAfgAMF5whOnQADGFzSW5zdGFuY2VPZnNxAH4ADLEYKSp0ABFnZXRDaGVja1RpbWVDb3VudHNxAH4ADOdgkzN0AAxzeW5jaHJvbml6ZWRzcQB+AAzKH1YEdAAWc2V0Q29tcGlsZVRpbWVDb21waWxlZHNxAH4ADOfLG3B0AA0kaXNJbnN0YW5jZU9mc3EAfgAM/vzi43QACW5vdGlmeUFsbHNxAH4ADPO2btF0AAxpc0luc3RhbmNlT2ZzcQB+AAxHLRegdAAXaW5jcmVtZW50Q2hlY2tUaW1lQ291bnRzcQB+AAxNE7UfdAAGPGluaXQ+c3EAfgAM7maHOnQABmNhY2hlc3NxAH4ADKI2brR0AAI9PXNxAH4ADI9M+050AB1hbHJlYWR5Q291bnRlZENvbXBpbGVUaW1lVUlEc3NxAH4ADBWcz890AAVjbG9uZXNxAH4ADPSVE2N0ABNjb21waWxlVGltZUNvbXBpbGVkc3EAfgAMXrPjGXQACGhhc2hUaW1lc3EAfgAMl9EEnXQAIGluY3JlbWVudENvbXBpbGVUaW1lQ29tcGlsZUNvdW50c3EAfgAMrpwZ6XQAGmdldENvbXBpbGVUaW1lQ29tcGlsZUNvdW50c3EAfgAMVSBs73QACWNoZWNrVGltZXNxAH4ADFLt5I90AAh0b1N0cmluZ3NxAH4ADKw9/tl0AAIhPXNxAH4ADEqkR/t0AApjaGVja0NvdW50c3EAfgAMd/3aTHQACGdldENsYXNzc3EAfgAMxSek8XQAAm5lc3EAfgAM3WyuIXQACVlZU3RvcmFnZXNxAH4ADLd7vLJ0AAJlcXNxAH4ADDVzQqd0ABxpbmNyZW1lbnRSdW50aW1lQ29tcGlsZUNvdW50c3EAfgAM7e1F33QAAiMjc3EAfgAMTi3Da3QACGZpbmFsaXplc3EAfgAMMo49x3QACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAnNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AaXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAIWNoLmVwZmwueWlueWFuZy5ydW50aW1lLllZU3RvcmFnZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQABk1vZHVsZXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0AAxzY2FsYS5pbmxpbmVzcgATeHNidGkuU2FmZUxhenkkSW1wbFACLpOXl0A/AgADWgAIYml0bWFwJDBMAAJfdHQAEkxqYXZhL2xhbmcvT2JqZWN0O0wABGV2YWx0ABFMc2NhbGEvRnVuY3Rpb24wO3hyABZ4c2J0aS5hcGkuQWJzdHJhY3RMYXp503e1AV+756ACAAB4cAFzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwcHNxAH4AggFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AaUwACWluaGVyaXRlZHEAfgBpTAAHcGFyZW50c3EAfgBpeHEAfgCJc3EAfgCCAXVxAH4AZAAAAABwc3EAfgCCAXVxAH4AZAAAAABwc3EAfgCCAXVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AiHQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AiHNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AoXQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AonNxAH4AlXQAA0FueXNxAH4AmXNxAH4AnHVxAH4AnwAAAAJzcQB+AKF0AAVzY2FsYXEAfgCocHBzcQB+AGZxAH4Ac3VxAH4AdAAAAABzcQB+AHYAdAAfY2guZXBmbC55aW55YW5nLnJ1bnRpbWUuWVlDYWNoZXVxAH4AeQAAAAB+cQB+AHt0AAhDbGFzc0RlZnVxAH4AfwAAAABzcQB+AIIBcQB+AIpwc3EAfgCCAXNxAH4AjHNxAH4AggF1cQB+AGQAAAAAcHNxAH4AggF1cQB+AGQAAAAAcHNxAH4AggF1cQB+AJMAAAACc3EAfgCVcQB+AJhzcQB+AJlzcQB+AJx1cQB+AJ8AAAADc3EAfgChcQB+AKRzcQB+AKFxAH4ApnEAfgCoc3EAfgCVcQB+AKpzcQB+AJlzcQB+AJx1cQB+AJ8AAAACc3EAfgChcQB+AK9xAH4AqHBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAARzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAACY2hzcQB+AM50AAdjaC5lcGZsc3EAfgDOdAAPY2guZXBmbC55aW55YW5nc3EAfgDOdAAXY2guZXBmbC55aW55YW5nLnJ1bnRpbWVzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAUiu7xnjdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQASy9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMveWluLXlhbmcvdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFG9RtvC0jgoFjUFVQ26qdXuoqX1d\ndsl.la.Vector ->\\ndsl.la.rep.DoubleDSL ->\\ndsl.la.rep.IntDSL ->\\ndsl.la.rep.NumericOps ->\\ndsl.la.rep.ScalaVirtualizationDSL ->\\ndsl.la.rep.VectorDSL ->\\nsource infos:\n3 items\n/Users/vjovanov/code/yin-yang/components/dsls/test/CodeGenBench.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/test/CodeGenSpec.scala ->\nAAAAAAAAAAA=\n/Users/vjovanov/code/yin-yang/components/dsls/test/GenericTranslationTest.scala ->\nAAAAAAAAAAA=\ncompilations:\n6 items\n0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7l6Dh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv\n1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7mHSR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv\n2 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7mcQ11cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv\n3 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK7sxE51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv\n4 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK71s0d1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv\n5 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABSK8MJml1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATC9Vc2Vycy92am92YW5vdi9jb2RlL3lpbi15YW5nL2NvbXBvbmVudHMvZHNscy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv\n",
			"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/target/streams/test/incCompileSetup/$global/streams/inc_compile",
			"file_size": 187621,
			"file_write_time": 130879470840000000,
			"settings":
			{
				"buffer_size": 187621,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package dsl\n\nimport ch.epfl.yinyang._\nimport ch.epfl.yinyang.typetransformers._\nimport scala.language.experimental.macros\nimport scala.reflect.macros.blackbox.Context\n\npackage object la {\n\n  def la[T](block: => T): T = macro implementations.liftRep[T]\n  def laDebug[T](block: => T): T = macro implementations.liftRepDebug[T]\n\n  object implementations {\n    def liftRep[T](c: Context)(block: c.Expr[T]): c.Expr[T] =\n      YYTransformer[c.type, T](c)(\n        \"dsl.la.rep.VectorDSL\",\n        new GenericTypeTransformer[c.type](c) {\n          override val IRType = \"R\"\n        },\n        None, None,\n        Map(\n          \"shallow\" -> false,\n          \"virtualizeFunctions\" -> true,\n          \"virtualizeValDef\" -> true,\n          \"debug\" -> 0,\n          \"featureAnalysing\" -> false,\n          \"ascriptionTransforming\" -> false))(block)\n\n    def liftRepDebug[T](c: Context)(block: c.Expr[T]): c.Expr[T] =\n      YYTransformer[c.type, T](c)(\n        \"dsl.la.rep.VectorDSL\",\n        new GenericTypeTransformer[c.type](c) {\n          override val IRType = \"R\"\n        },\n        None, None,\n        Map(\n          \"shallow\" -> false,\n          \"virtualizeFunctions\" -> true,\n          \"virtualizeValDef\" -> true,\n          \"debug\" -> 0,\n          \"featureAnalysing\" -> true,\n          \"ascriptionTransforming\" -> false))(block)\n  }\n}\n",
			"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/src/la/package.scala",
			"file_size": 1328,
			"file_write_time": 130879466040000000,
			"settings":
			{
				"buffer_size": 1328,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/TypeTransformation.scala",
			"settings":
			{
				"buffer_size": 2171,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/typetransformers/RepTransformer.scala",
			"settings":
			{
				"buffer_size": 2883,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/test/VirtualizeTest.scala",
			"settings":
			{
				"buffer_size": 4489,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/EmbeddedControls.scala",
			"settings":
			{
				"buffer_size": 8734,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/Utils.scala",
			"settings":
			{
				"buffer_size": 3951,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "",
			"file": "/Users/vjovanov/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/Library/Application Support/Sublime Text 3/Packages/LaTeXTools/Default (OSX).sublime-keymap",
			"settings":
			{
				"buffer_size": 15186,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/vjovanov/Library/Application Support/Sublime Text 3/Packages/User/LaTeXTools.sublime-settings",
			"settings":
			{
				"buffer_size": 6372,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dissertation.sublime-project",
			"settings":
			{
				"buffer_size": 486,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main/ch1_introduction.tex",
			"settings":
			{
				"buffer_size": 17853,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tail/bibliography.bib",
			"settings":
			{
				"buffer_size": 96008,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/dissertation.sublime-build",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 47.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Migra",
				"LaTeXTools: Reconfigure and migrate settings"
			],
			[
				"pack in",
				"Package Control: Install Package"
			],
			[
				"Insta",
				"Package Control: Install Package"
			],
			[
				"kbu",
				"Preferences: Key Bindings - Default"
			],
			[
				"Preview",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"Previ",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"Gith",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"Mark",
				"Preferences: MarkdownEditing Settings – Default"
			],
			[
				"Packa",
				"Package Control: Remove Package"
			],
			[
				"Pacak",
				"Package Control: Disable Package"
			],
			[
				"Pref",
				"Preferences: Settings - User"
			],
			[
				"pref",
				"Preferences: Settings - Default"
			],
			[
				"User",
				"Preferences: Settings - User"
			],
			[
				"Setting",
				"Preferences: Settings - Default"
			],
			[
				"Prefere",
				"Preferences: Settings - User"
			],
			[
				"user",
				"Preferences: Settings - User"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/vjovanov/code/scala",
		"/Users/vjovanov/code/scala/src",
		"/Users/vjovanov/code/scala/src/reflect",
		"/Users/vjovanov/code/scala/src/reflect/scala",
		"/Users/vjovanov/code/scala/src/reflect/scala/reflect",
		"/Users/vjovanov/code/scala/src/reflect/scala/reflect/macros",
		"/Users/vjovanov/code/scala/src/reflect/scala/reflect/runtime"
	],
	"file_history":
	[
		"/Users/vjovanov/code/scala-yinyang/.git/rebase-merge/git-rebase-todo",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/src/base/ScalaCompile.scala",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/target/streams/test/incCompileSetup/$global/streams/inc_compile_2.11",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/target/streams/compile/incCompileSetup/$global/streams/inc_compile_2.11",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/src/la/lifted/VectorOpsRep.scala",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/src/base/Base.scala",
		"/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/runtime/YYStorage.scala",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/src/print/LiftedPrint.scala",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/src/base/ScalaVirtualizedBase.scala",
		"/Users/vjovanov/code/scala-yinyang/components/dsls/src/instrumentation.scala",
		"/Users/vjovanov/code/scala-yinyang/.git/COMMIT_EDITMSG",
		"/Users/vjovanov/code/scala-yinyang/components/delite-test/src/lifted/ScalaPkgTest.scala",
		"/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/HoleTransformation.scala",
		"/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/YYStorageFactory.scala",
		"/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/runtime/package.scala",
		"/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/FullyUnstaged.scala",
		"/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/HoleTypeAnalyser.scala",
		"/Users/vjovanov/dissertation/main/ch2_dsl_embedding.tex",
		"/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/VirtualAnyRef.scala",
		"/home/vjovanov/dissertation/.gitignore",
		"/home/vjovanov/dissertation/phd.pyg",
		"/home/vjovanov/dissertation/dissertation.sublime-project",
		"/home/vjovanov/dissertation/clean-make.sh",
		"/home/vjovanov/dissertation/Makefile",
		"/home/vjovanov/dissertation/head/abstracts.tex",
		"/home/vjovanov/dissertation/tail/biblio.tex",
		"/home/vjovanov/dissertation/head/settings_custom.tex",
		"/home/vjovanov/dissertation/tail/bibliography.bib",
		"/home/vjovanov/research/yy-pldi/deep_gen.tex",
		"/home/vjovanov/research/yy-pldi/evaluation.tex",
		"/home/vjovanov/research/yy-pldi/discussion.tex",
		"/home/vjovanov/research/yy-pldi/yy_macros.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/vjovanov-lib.bib",
		"/home/vjovanov/dissertation/main/ch1_introduction.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/partial-evaluator.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/case-studies.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/discussion.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/limitations.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/related.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/conclusion.tex",
		"/home/vjovanov/dissertation/main/ch2_dsl_embedding.tex",
		"/home/vjovanov/research/yy-pldi/motivation.tex",
		"/home/vjovanov/dissertation/phd.tex",
		"/home/vjovanov/dissertation/main/ch3_polyvariant_staging.tex",
		"/home/vjovanov/dissertation/main/ch5_conclusion.tex",
		"/home/vjovanov/dissertation/main/ch4_dynamic_compilation_of_staged_DSLs.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/macros.tex",
		"/home/vjovanov/.config/sublime-text-3/Packages/User/dissertation.sublime-build",
		"/home/vjovanov/research/papers/2015-scala-symposium/paper.tex",
		"/home/vjovanov/research/yy-pldi/background.tex",
		"/home/vjovanov/research/yy-pldi/core_translation.tex",
		"/home/vjovanov/research/yy-pldi/intro.tex",
		"/home/vjovanov/dissertation/head/preface.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/bcprules.sty",
		"/home/vjovanov/research/papers/2015-scala-symposium/Makefile",
		"/home/vjovanov/research/papers/2015-scala-symposium/math.sty",
		"/home/vjovanov/research/papers/2015-scala-symposium/calculus.tex",
		"/home/vjovanov/research/papers/2015-scala-symposium/intro.tex",
		"/home/vjovanov/research/yy-pldi/paper.tex",
		"/home/vjovanov/dissertation/head/settings_epfl_template.tex",
		"/home/vjovanov/research/yy-pldi/sigplanconf.cls",
		"/home/vjovanov/research/yy-pldi/paper.sublime-project",
		"/home/vjovanov/dissertation/head/acknowledgements.tex",
		"/home/vjovanov/dissertation/head/titlepage.tex",
		"/home/vjovanov/dissertation/lineno/SRCFILEs.txt",
		"/home/vjovanov/dissertation/phd.aux",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/ins_qdsl.html",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/contact.html",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/gettinghere.html",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/program.html",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/lausanne.html",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/index.html",
		"/home/vjovanov/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/photos.html",
		"/home/vjovanov/code/vjovanov.github.io/dsldi-summer-school/css/skel.css",
		"/home/vjovanov/Downloads/jssor/demos-no-jquery/image-gallery.source.html",
		"/home/vjovanov/code/virtualization-lms-core/test-src/epfl/test11-shonan/TestHMM.scala",
		"/home/vjovanov/code/virtualization-lms-core/src/common/Base.scala",
		"/home/vjovanov/code/virtualization-lms-core/test-out/common/target/resolution-cache/reports/default-common_2.10-compile.xml",
		"/home/vjovanov/code/virtualization-lms-core/test-out/common/target/resolution-cache/reports/default-common_2.10-plugin.xml",
		"/home/vjovanov/code/virtualization-lms-core/test-out/common/target/resolution-cache/reports/default-common_2.10-optional.xml",
		"/home/vjovanov/code/virtualization-lms-core/project/target/resolution-cache/reports/default-virtualization-lms-core-build-compile.xml",
		"/home/vjovanov/code/virtualization-lms-core/src/internal/CudaDeviceTransfer.scala",
		"/home/vjovanov/code/virtualization-lms-core/src/common/DSLOps.scala",
		"/home/vjovanov/code/virtualization-lms-core/src/common/Structs.scala",
		"/home/vjovanov/code/virtualization-lms-core/src/internal/Exceptions.scala",
		"/home/vjovanov/code/virtualization-lms-core/src/common/Equal.scala",
		"/home/vjovanov/code/virtualization-lms-core/build.sbt",
		"/home/vjovanov/code/virtualization-lms-core/src/internal/Expressions.scala",
		"/home/vjovanov/code/virtualization-lms-core/.gitignore",
		"/home/vjovanov/papers/2015-scala-symposium/Makefile",
		"/home/vjovanov/papers/2015-scala-symposium/safe-commit.sh",
		"/home/vjovanov/papers/2015-scala-symposium/clean-make.sh",
		"/home/vjovanov/papers/2015-scala-symposium/case-studies.tex",
		"/home/vjovanov/papers/2015-scala-symposium/calculus.tex",
		"/home/vjovanov/papers/2015-scala-symposium/bcprules.sty",
		"/home/vjovanov/papers/2015-scala-symposium/prooftree.sty",
		"/home/vjovanov/papers/2015-scala-symposium/related.tex",
		"/home/vjovanov/papers/2015-scala-symposium/partial-evaluator.tex",
		"/home/vjovanov/papers/2015-scala-symposium/math.sty",
		"/home/vjovanov/papers/2015-scala-symposium/macros.tex",
		"/home/vjovanov/papers/2015-scala-symposium/limitations.tex",
		"/home/vjovanov/papers/2015-scala-symposium/evaluation.tex",
		"/home/vjovanov/papers/2015-scala-symposium/discussion.tex",
		"/home/vjovanov/papers/2015-scala-symposium/conclusion.tex",
		"/home/vjovanov/code/scala-ct/.project",
		"/home/vjovanov/code/scala-ct/interpreter-old/tests/src/test/scala/PrimitivesSuite.scala",
		"/home/vjovanov/code/scala-ct/target/streams/compile/unmanagedJars/$global/streams/export",
		"/home/vjovanov/code/scala-ct/src/ch/epfl/inline/Inline.scala",
		"/home/vjovanov/code/scala-ct/resources/scalac-plugin.xml",
		"/home/vjovanov/code/scala-ct/interpreter/project/plugins.sbt",
		"/home/vjovanov/code/scala-ct/project/plugins.sbt",
		"/home/vjovanov/code/scala-ct/project/target/resolution-cache/reports/default-scala-ct-build-compile-internal.xml",
		"/home/vjovanov/code/scala-ct/project/target/resolution-cache/reports/default-scala-ct-build-compile.xml",
		"/home/vjovanov/code/scala-ct/src/ch/epfl/inline/plugin/InlinePlugin.scala",
		"/home/vjovanov/code/scala-ct/test/InlineSpec.scala",
		"/home/vjovanov/code/scala-ct/src/ch/epfl/inline/examples/VarargsExample.scala",
		"/home/vjovanov/code/scala-ct/src/ch/epfl/package.scala",
		"/home/vjovanov/code/scala-ct/project/build.properties",
		"/home/vjovanov/code/scala-ct/project/Build.scala",
		"/home/vjovanov/code/scala-ct/README.md",
		"/home/vjovanov/code/scala-ct/LICENCE",
		"/home/vjovanov/code/scala-ct/.travis.yml",
		"/home/vjovanov/code/scala-ct/.gitmodules",
		"/home/vjovanov/code/scala-ct/.gitignore",
		"/home/vjovanov/code/scala/test/junit/scala/tools/nsc/symtab/SymbolTableForUnitTesting.scala",
		"/home/vjovanov/code/scala/src/reflect/scala/reflect/internal/Trees.scala",
		"/home/vjovanov/code/scala/src/reflect/scala/reflect/api/Symbols.scala"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"/Users/vjovanov/code/scala/",
			"/Users/vjovanov/code/scala/src",
			"",
			"src/reflect",
			"reflect",
			"reflect/api",
			"",
			"/home/vjovanov/code/yin-yang/components/generator/src/types",
			"",
			"/home/vjovanov/code/yin-yang/components/backend/src",
			"",
			"voltdb/*",
			"voltdb",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"koomey2011growth",
			"\\newpage",
			"sec:deep-embedding-implementations",
			"new",
			"\\todo",
			"sec:deep-embedding-implementations",
			"newpage",
			"\\newpage",
			"Compil",
			"def map",
			"map",
			"idiomatic",
			"def echo",
			"def info",
			"instantiation",
			"DLS",
			"type Position",
			"extends Position",
			"protected[yinyang] class Reporter(private val c: Context) {\n  def echo(pos: Position, msg: String): Unit = c.echo(pos, msg)\n  def info(pos: Position, msg: String, force: Boolean): Unit = c.info(pos, msg, force)\n  def warning(pos: Position, msg: String): Unit = c.warning(pos, msg)\n  def error(pos: Position, msg: String): Unit = c.error(pos, msg)\n}\nextends Position",
			"trait Position",
			"SourcePosition",
			"SourceContext",
			"Source",
			"SourceLocation",
			"SourceContext",
			"package scala.reflect",
			"SourceContext",
			"class SourceContext",
			"case class SourceContext",
			"trait SourceContext",
			"SourceContext",
			"trait Position",
			"case class Position",
			"type Position",
			"case class Position",
			"case classPosition",
			"type Position",
			"Motivation",
			"Restri",
			"\\sct{",
			"sct{",
			"ingti",
			"\\sct{",
			"Interface}",
			"Yin-Yang I",
			"ValDef",
			"virtu",
			"artifacts of ",
			"if",
			"@virutalize",
			"http",
			"NSDI",
			"OSDI",
			"spark",
			"Motiva",
			"Compil",
			"Matrix",
			"def from",
			"<:_\\omega",
			"$",
			"Scala",
			"Unit",
			"listings",
			"-mot",
			"domain-specific-error-reporting",
			"label",
			"\\subsection",
			"subsection",
			"problems",
			"rompf_lightweight_2012",
			"subsub",
			"sub",
			"sec:com",
			"sec:mini",
			"runtime",
			"section",
			"chapter",
			"runtime",
			"compile-time-e",
			"reify",
			"Deep Embedding",
			"different deep",
			"paradise",
			"runtimeType",
			"lift",
			"runtimeType",
			"def lift",
			"holeMethod",
			"$hole",
			"holeMethod",
			"hole",
			"@virtualize ",
			"\"",
			"\",",
			"typecheck",
			"read",
			"captures",
			"val x",
			"hole",
			"def symbolId",
			"holeTable",
			"transform(",
			"toHoles",
			"debug",
			"Hole",
			"shallow",
			"className",
			"execute",
			"dsls",
			"ascribeTypes",
			"ascriptionTransforming",
			"ascribeTypes",
			"shallowFlag",
			"shallow",
			"shortenDSLNames",
			"shallow",
			"mainMethod",
			"featureAnalysing",
			"ascriptionTransforming",
			"programId",
			"args(",
			"args",
			"nonCompilVars",
			"unboundDSL",
			"type",
			"hashCode",
			"infix_hashCode",
			"lift("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"PolymorphicBase",
			"\\end{listingtiny}",
			"\\begin{listingtiny}",
			"Nil"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 68,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main/ch3_polyvariant_staging.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41320,
						"regions":
						{
						},
						"selection":
						[
							[
								235,
								235
							]
						],
						"settings":
						{
							"syntax": "Packages/LaTeX/LaTeX.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "head/settings_epfl_template.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6740,
						"regions":
						{
						},
						"selection":
						[
							[
								6740,
								6740
							]
						],
						"settings":
						{
							"syntax": "Packages/LaTeX/LaTeX.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2963.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "head/settings_custom.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13000,
						"regions":
						{
						},
						"selection":
						[
							[
								3446,
								3446
							]
						],
						"settings":
						{
							"syntax": "Packages/LaTeX/LaTeX.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2086.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1202,
						"regions":
						{
						},
						"selection":
						[
							[
								1176,
								1176
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/YYTransformer.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12862,
						"regions":
						{
						},
						"selection":
						[
							[
								1043,
								1043
							]
						],
						"settings":
						{
							"spell_check": true,
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 273.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Reified.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 379,
						"regions":
						{
						},
						"selection":
						[
							[
								321,
								321
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/LiftLiteralsTransformation.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1373,
						"regions":
						{
						},
						"selection":
						[
							[
								1373,
								1373
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/Users/vjovanov/code/scala-yinyang/components/examples/src/base/Base.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1358,
						"regions":
						{
						},
						"selection":
						[
							[
								1272,
								1272
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/typetransformers/PolyTransformer.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2275,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/YYConfig.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 965,
						"regions":
						{
						},
						"selection":
						[
							[
								962,
								962
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/AscriptionTransformation.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2464,
						"regions":
						{
						},
						"selection":
						[
							[
								701,
								701
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 229.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/Users/vjovanov/code/scala-yinyang/project/Build.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6159,
						"regions":
						{
						},
						"selection":
						[
							[
								3666,
								3666
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/Users/vjovanov/code/scala-yinyang/.travis.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 284,
						"regions":
						{
						},
						"selection":
						[
							[
								185,
								185
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/Users/vjovanov/code/scala-yinyang/components/examples/src/la/lifted/VectorOpsRep.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12905,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "main/ch2_dsl_embedding.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 124184,
						"regions":
						{
						},
						"selection":
						[
							[
								56959,
								56959
							]
						],
						"settings":
						{
							"syntax": "Packages/LaTeX/LaTeX.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 22864.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestFusion2.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6748,
						"regions":
						{
						},
						"selection":
						[
							[
								809,
								809
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 290.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-dynamic-compilation/TestDynamicCompilation.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41708,
						"regions":
						{
						},
						"selection":
						[
							[
								24717,
								24717
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12848.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7333,
						"regions":
						{
						},
						"selection":
						[
							[
								6163,
								6163
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3984.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/ListOps.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10224,
						"regions":
						{
						},
						"selection":
						[
							[
								806,
								806
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/HashMapOps.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8759,
						"regions":
						{
						},
						"selection":
						[
							[
								1100,
								1100
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/Users/vjovanov/code/virtualization-lms-core/src/common/MathOps.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16199,
						"regions":
						{
						},
						"selection":
						[
							[
								115,
								149
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/Users/vjovanov/code/virtualization-lms-core/build.sbt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1518,
						"regions":
						{
						},
						"selection":
						[
							[
								498,
								498
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test15-terrors/ErrorSamples.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10481,
						"regions":
						{
						},
						"selection":
						[
							[
								4207,
								4207
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1994.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/Users/vjovanov/code/virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6885,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 24,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 786,
						"regions":
						{
						},
						"selection":
						[
							[
								232,
								232
							]
						],
						"settings":
						{
							"auto_indent": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"tab_width": 2,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/BaseYinYang.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 761,
						"regions":
						{
						},
						"selection":
						[
							[
								383,
								383
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/CodeGenerator.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 454,
						"regions":
						{
						},
						"selection":
						[
							[
								454,
								454
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Executable.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 206,
						"regions":
						{
						},
						"selection":
						[
							[
								176,
								176
							]
						],
						"settings":
						{
							"auto_name": "Executable.scala",
							"syntax": "Packages/Scala/Scala.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Staged.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 465,
						"regions":
						{
						},
						"selection":
						[
							[
								465,
								465
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/StaticallyChecked.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 679,
						"regions":
						{
						},
						"selection":
						[
							[
								191,
								191
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/macros/blackbox/Context.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4220,
						"regions":
						{
						},
						"selection":
						[
							[
								2938,
								2938
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "/Users/vjovanov/code/scala/src/compiler/scala/tools/nsc/reporters/Reporter.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2359,
						"regions":
						{
						},
						"selection":
						[
							[
								718,
								718
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 32,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 845525,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										618,
										631
									],
									[
										904,
										917
									],
									[
										1206,
										1219
									],
									[
										1562,
										1575
									],
									[
										1889,
										1902
									],
									[
										2196,
										2209
									],
									[
										2546,
										2559
									],
									[
										2912,
										2926
									],
									[
										3128,
										3142
									],
									[
										3325,
										3339
									],
									[
										3544,
										3558
									],
									[
										3837,
										3851
									],
									[
										4179,
										4192
									],
									[
										4284,
										4297
									],
									[
										4404,
										4417
									],
									[
										4776,
										4789
									],
									[
										5064,
										5077
									],
									[
										5227,
										5240
									],
									[
										5378,
										5391
									],
									[
										5585,
										5598
									],
									[
										5709,
										5722
									],
									[
										5861,
										5874
									],
									[
										6092,
										6105
									],
									[
										6203,
										6216
									],
									[
										6460,
										6473
									],
									[
										6643,
										6656
									],
									[
										6892,
										6905
									],
									[
										7144,
										7157
									],
									[
										7370,
										7383
									],
									[
										7506,
										7519
									],
									[
										7802,
										7815
									],
									[
										8144,
										8157
									],
									[
										8407,
										8420
									],
									[
										8614,
										8627
									],
									[
										8809,
										8822
									],
									[
										8917,
										8930
									],
									[
										9033,
										9046
									],
									[
										9157,
										9170
									],
									[
										9232,
										9245
									],
									[
										9374,
										9387
									],
									[
										9685,
										9698
									],
									[
										9814,
										9827
									],
									[
										9943,
										9956
									],
									[
										10062,
										10075
									],
									[
										10177,
										10190
									],
									[
										10339,
										10352
									],
									[
										10460,
										10473
									],
									[
										10558,
										10571
									],
									[
										10755,
										10768
									],
									[
										10866,
										10879
									],
									[
										11090,
										11103
									],
									[
										11244,
										11257
									],
									[
										11382,
										11395
									],
									[
										11629,
										11642
									],
									[
										11749,
										11762
									],
									[
										11933,
										11946
									],
									[
										12223,
										12236
									],
									[
										12731,
										12744
									],
									[
										12915,
										12928
									],
									[
										13010,
										13023
									],
									[
										13083,
										13096
									],
									[
										13181,
										13194
									],
									[
										13256,
										13269
									],
									[
										13624,
										13637
									],
									[
										13741,
										13754
									],
									[
										13868,
										13881
									],
									[
										13964,
										13977
									],
									[
										14089,
										14102
									],
									[
										14258,
										14271
									],
									[
										14434,
										14447
									],
									[
										14528,
										14541
									],
									[
										15001,
										15014
									],
									[
										15137,
										15150
									],
									[
										15291,
										15304
									],
									[
										15397,
										15410
									],
									[
										15539,
										15552
									],
									[
										15867,
										15880
									],
									[
										16093,
										16106
									],
									[
										16217,
										16230
									],
									[
										16482,
										16495
									],
									[
										16810,
										16823
									],
									[
										17068,
										17081
									],
									[
										17311,
										17324
									],
									[
										17548,
										17561
									],
									[
										17691,
										17704
									],
									[
										17983,
										17996
									],
									[
										18325,
										18338
									],
									[
										18490,
										18503
									],
									[
										18601,
										18614
									],
									[
										18715,
										18728
									],
									[
										18872,
										18885
									],
									[
										18978,
										18991
									],
									[
										19083,
										19096
									],
									[
										19293,
										19306
									],
									[
										19421,
										19434
									],
									[
										19549,
										19562
									],
									[
										19690,
										19703
									],
									[
										19979,
										19992
									],
									[
										20200,
										20213
									],
									[
										20426,
										20439
									],
									[
										20725,
										20738
									],
									[
										20936,
										20949
									],
									[
										21069,
										21082
									],
									[
										21257,
										21270
									],
									[
										21392,
										21405
									],
									[
										21655,
										21668
									],
									[
										21804,
										21817
									],
									[
										21963,
										21976
									],
									[
										22428,
										22441
									],
									[
										22610,
										22623
									],
									[
										22839,
										22852
									],
									[
										23131,
										23144
									],
									[
										23482,
										23495
									],
									[
										23638,
										23651
									],
									[
										23795,
										23808
									],
									[
										23947,
										23960
									],
									[
										24104,
										24117
									],
									[
										24261,
										24274
									],
									[
										24418,
										24431
									],
									[
										24580,
										24593
									],
									[
										24745,
										24758
									],
									[
										24905,
										24918
									],
									[
										25066,
										25079
									],
									[
										25222,
										25235
									],
									[
										25384,
										25397
									],
									[
										25546,
										25559
									],
									[
										25708,
										25721
									],
									[
										25875,
										25888
									],
									[
										26009,
										26022
									],
									[
										26121,
										26134
									],
									[
										26356,
										26369
									],
									[
										26480,
										26493
									],
									[
										26618,
										26631
									],
									[
										26885,
										26898
									],
									[
										27183,
										27196
									],
									[
										27459,
										27472
									],
									[
										27793,
										27806
									],
									[
										28053,
										28066
									],
									[
										28449,
										28462
									],
									[
										28735,
										28748
									],
									[
										28935,
										28948
									],
									[
										29104,
										29117
									],
									[
										29385,
										29398
									],
									[
										29530,
										29543
									],
									[
										30048,
										30061
									],
									[
										30375,
										30388
									],
									[
										30525,
										30538
									],
									[
										30782,
										30795
									],
									[
										30928,
										30941
									],
									[
										31097,
										31110
									],
									[
										31334,
										31347
									],
									[
										31492,
										31505
									],
									[
										31676,
										31689
									],
									[
										31819,
										31832
									],
									[
										31919,
										31932
									],
									[
										32224,
										32237
									],
									[
										32424,
										32437
									],
									[
										32603,
										32616
									],
									[
										32916,
										32929
									],
									[
										33209,
										33222
									],
									[
										33356,
										33369
									],
									[
										33547,
										33560
									],
									[
										33642,
										33655
									],
									[
										33730,
										33743
									],
									[
										33804,
										33817
									],
									[
										33873,
										33886
									],
									[
										33945,
										33958
									],
									[
										34015,
										34028
									],
									[
										34084,
										34097
									],
									[
										34200,
										34213
									],
									[
										34332,
										34345
									],
									[
										34464,
										34477
									],
									[
										34606,
										34619
									],
									[
										34732,
										34745
									],
									[
										34846,
										34859
									],
									[
										34958,
										34971
									],
									[
										35077,
										35090
									],
									[
										35190,
										35203
									],
									[
										35303,
										35316
									],
									[
										35544,
										35557
									],
									[
										35692,
										35705
									],
									[
										35836,
										35849
									],
									[
										36007,
										36020
									],
									[
										36160,
										36173
									],
									[
										36284,
										36297
									],
									[
										36403,
										36416
									],
									[
										36523,
										36536
									],
									[
										36660,
										36673
									],
									[
										36779,
										36792
									],
									[
										36903,
										36916
									],
									[
										37178,
										37191
									],
									[
										37464,
										37477
									],
									[
										37770,
										37783
									],
									[
										38093,
										38106
									],
									[
										38327,
										38340
									],
									[
										38546,
										38559
									],
									[
										38790,
										38803
									],
									[
										39104,
										39117
									],
									[
										39355,
										39368
									],
									[
										39618,
										39631
									],
									[
										39923,
										39936
									],
									[
										40129,
										40142
									],
									[
										40518,
										40531
									],
									[
										40672,
										40685
									],
									[
										40784,
										40797
									],
									[
										40881,
										40894
									],
									[
										40971,
										40984
									],
									[
										41074,
										41087
									],
									[
										41163,
										41176
									],
									[
										41243,
										41256
									],
									[
										41327,
										41340
									],
									[
										41490,
										41503
									],
									[
										41600,
										41613
									],
									[
										41695,
										41708
									],
									[
										41792,
										41805
									],
									[
										41891,
										41904
									],
									[
										41979,
										41992
									],
									[
										42133,
										42146
									],
									[
										42268,
										42281
									],
									[
										42378,
										42391
									],
									[
										42475,
										42488
									],
									[
										42587,
										42600
									],
									[
										42673,
										42686
									],
									[
										42819,
										42832
									],
									[
										42919,
										42932
									],
									[
										43071,
										43084
									],
									[
										43171,
										43184
									],
									[
										43364,
										43377
									],
									[
										43488,
										43501
									],
									[
										43583,
										43596
									],
									[
										43671,
										43684
									],
									[
										43775,
										43788
									],
									[
										43902,
										43915
									],
									[
										44025,
										44038
									],
									[
										44144,
										44157
									],
									[
										44291,
										44304
									],
									[
										44396,
										44409
									],
									[
										44502,
										44515
									],
									[
										44622,
										44635
									],
									[
										44769,
										44782
									],
									[
										45121,
										45134
									],
									[
										45331,
										45344
									],
									[
										45412,
										45425
									],
									[
										45573,
										45586
									],
									[
										45676,
										45689
									],
									[
										45855,
										45868
									],
									[
										46120,
										46133
									],
									[
										46246,
										46259
									],
									[
										46572,
										46585
									],
									[
										46726,
										46739
									],
									[
										46867,
										46880
									],
									[
										46965,
										46978
									],
									[
										47093,
										47106
									],
									[
										47235,
										47248
									],
									[
										47361,
										47374
									],
									[
										47499,
										47512
									],
									[
										47608,
										47621
									],
									[
										47706,
										47719
									],
									[
										47803,
										47816
									],
									[
										47918,
										47931
									],
									[
										48025,
										48038
									],
									[
										48144,
										48157
									],
									[
										48263,
										48276
									],
									[
										48358,
										48371
									],
									[
										48448,
										48461
									],
									[
										48547,
										48560
									],
									[
										48757,
										48770
									],
									[
										48855,
										48868
									],
									[
										48985,
										48998
									],
									[
										49258,
										49271
									],
									[
										49524,
										49537
									],
									[
										49801,
										49814
									],
									[
										50038,
										50051
									],
									[
										50137,
										50150
									],
									[
										50247,
										50260
									],
									[
										50368,
										50381
									],
									[
										50481,
										50494
									],
									[
										50583,
										50596
									],
									[
										50704,
										50717
									],
									[
										50809,
										50822
									],
									[
										50906,
										50919
									],
									[
										51006,
										51019
									],
									[
										51131,
										51144
									],
									[
										51391,
										51404
									],
									[
										51709,
										51722
									],
									[
										52060,
										52073
									],
									[
										52245,
										52258
									],
									[
										52796,
										52809
									],
									[
										52935,
										52948
									],
									[
										53016,
										53029
									],
									[
										53096,
										53109
									],
									[
										53174,
										53187
									],
									[
										53254,
										53267
									],
									[
										53339,
										53352
									],
									[
										53418,
										53431
									],
									[
										53497,
										53510
									],
									[
										53577,
										53590
									],
									[
										53656,
										53669
									],
									[
										53735,
										53748
									],
									[
										53815,
										53828
									],
									[
										53894,
										53907
									],
									[
										53973,
										53986
									],
									[
										54059,
										54072
									],
									[
										54156,
										54169
									],
									[
										54254,
										54267
									],
									[
										54349,
										54362
									],
									[
										54453,
										54466
									],
									[
										54559,
										54572
									],
									[
										54622,
										54635
									],
									[
										54678,
										54691
									],
									[
										54774,
										54787
									],
									[
										54857,
										54870
									],
									[
										54938,
										54951
									],
									[
										55019,
										55032
									],
									[
										55102,
										55115
									],
									[
										55185,
										55198
									],
									[
										55266,
										55279
									],
									[
										55348,
										55361
									],
									[
										55429,
										55442
									],
									[
										55509,
										55522
									],
									[
										55591,
										55604
									],
									[
										55672,
										55685
									],
									[
										55753,
										55766
									],
									[
										55834,
										55847
									],
									[
										55919,
										55932
									],
									[
										56018,
										56031
									],
									[
										56115,
										56128
									],
									[
										56210,
										56223
									],
									[
										56312,
										56325
									],
									[
										56413,
										56426
									],
									[
										56471,
										56484
									],
									[
										56533,
										56546
									],
									[
										56693,
										56706
									],
									[
										56776,
										56789
									],
									[
										56858,
										56871
									],
									[
										56938,
										56951
									],
									[
										57020,
										57033
									],
									[
										57103,
										57116
									],
									[
										57184,
										57197
									],
									[
										57265,
										57278
									],
									[
										57347,
										57360
									],
									[
										57428,
										57441
									],
									[
										57509,
										57522
									],
									[
										57591,
										57604
									],
									[
										57672,
										57685
									],
									[
										57753,
										57766
									],
									[
										57839,
										57852
									],
									[
										57938,
										57951
									],
									[
										58038,
										58051
									],
									[
										58135,
										58148
									],
									[
										58241,
										58254
									],
									[
										58350,
										58363
									],
									[
										58416,
										58429
									],
									[
										58476,
										58489
									],
									[
										58593,
										58606
									],
									[
										58917,
										58930
									],
									[
										59048,
										59061
									],
									[
										59122,
										59135
									],
									[
										59207,
										59220
									],
									[
										59346,
										59359
									],
									[
										59430,
										59443
									],
									[
										59519,
										59532
									],
									[
										59597,
										59610
									],
									[
										59674,
										59687
									],
									[
										59835,
										59848
									],
									[
										59947,
										59960
									],
									[
										60072,
										60085
									],
									[
										60180,
										60193
									],
									[
										60269,
										60282
									],
									[
										60358,
										60371
									],
									[
										60684,
										60697
									],
									[
										61121,
										61134
									],
									[
										61302,
										61315
									],
									[
										61394,
										61407
									],
									[
										61477,
										61490
									],
									[
										61561,
										61574
									],
									[
										61645,
										61658
									],
									[
										61791,
										61804
									],
									[
										61901,
										61914
									],
									[
										62011,
										62024
									],
									[
										62122,
										62135
									],
									[
										62449,
										62462
									],
									[
										62584,
										62597
									],
									[
										62720,
										62733
									],
									[
										62857,
										62870
									],
									[
										62999,
										63012
									],
									[
										63410,
										63423
									],
									[
										63766,
										63779
									],
									[
										64047,
										64060
									],
									[
										64413,
										64426
									],
									[
										64862,
										64875
									],
									[
										65002,
										65015
									],
									[
										65097,
										65110
									],
									[
										65209,
										65222
									],
									[
										65327,
										65340
									],
									[
										65437,
										65450
									],
									[
										65541,
										65554
									],
									[
										65638,
										65651
									],
									[
										65760,
										65773
									],
									[
										65873,
										65886
									],
									[
										66210,
										66223
									],
									[
										66412,
										66425
									],
									[
										66734,
										66747
									],
									[
										67065,
										67078
									],
									[
										67290,
										67303
									],
									[
										67380,
										67393
									],
									[
										67472,
										67485
									],
									[
										67562,
										67575
									],
									[
										67654,
										67667
									],
									[
										67747,
										67760
									],
									[
										67838,
										67851
									],
									[
										67929,
										67942
									],
									[
										68046,
										68059
									],
									[
										68153,
										68166
									],
									[
										68262,
										68275
									],
									[
										68369,
										68382
									],
									[
										68478,
										68491
									],
									[
										68588,
										68601
									],
									[
										68696,
										68709
									],
									[
										68804,
										68817
									],
									[
										68962,
										68975
									],
									[
										69083,
										69096
									],
									[
										69204,
										69217
									],
									[
										69325,
										69338
									],
									[
										69446,
										69459
									],
									[
										69567,
										69580
									],
									[
										69682,
										69695
									],
									[
										69797,
										69810
									],
									[
										70049,
										70062
									],
									[
										70191,
										70204
									],
									[
										70335,
										70348
									],
									[
										70477,
										70490
									],
									[
										70621,
										70634
									],
									[
										70766,
										70779
									],
									[
										70909,
										70922
									],
									[
										71052,
										71065
									],
									[
										71198,
										71211
									],
									[
										71597,
										71610
									],
									[
										71903,
										71916
									],
									[
										72208,
										72221
									],
									[
										72514,
										72527
									],
									[
										72822,
										72835
									],
									[
										73129,
										73142
									],
									[
										73418,
										73431
									],
									[
										73711,
										73724
									],
									[
										74067,
										74080
									],
									[
										74320,
										74333
									],
									[
										74451,
										74464
									],
									[
										74587,
										74600
									],
									[
										74708,
										74721
									],
									[
										74846,
										74859
									],
									[
										74984,
										74997
									],
									[
										75106,
										75119
									],
									[
										75247,
										75260
									],
									[
										75387,
										75400
									],
									[
										75505,
										75518
									],
									[
										75623,
										75636
									],
									[
										75744,
										75757
									],
									[
										75879,
										75892
									],
									[
										76016,
										76029
									],
									[
										76154,
										76167
									],
									[
										76292,
										76305
									],
									[
										76432,
										76445
									],
									[
										76573,
										76586
									],
									[
										76713,
										76726
									],
									[
										76843,
										76856
									],
									[
										76996,
										77009
									],
									[
										77151,
										77164
									],
									[
										77306,
										77319
									],
									[
										77443,
										77456
									],
									[
										77601,
										77614
									],
									[
										77760,
										77773
									],
									[
										77920,
										77933
									],
									[
										78044,
										78057
									],
									[
										78174,
										78187
									],
									[
										78309,
										78322
									],
									[
										78429,
										78442
									],
									[
										78566,
										78579
									],
									[
										78703,
										78716
									],
									[
										78824,
										78837
									],
									[
										78964,
										78977
									],
									[
										79103,
										79116
									],
									[
										79220,
										79233
									],
									[
										79337,
										79350
									],
									[
										79457,
										79470
									],
									[
										79591,
										79604
									],
									[
										79727,
										79740
									],
									[
										79864,
										79877
									],
									[
										80001,
										80014
									],
									[
										80140,
										80153
									],
									[
										80280,
										80293
									],
									[
										80420,
										80433
									],
									[
										80550,
										80563
									],
									[
										80703,
										80716
									],
									[
										80858,
										80871
									],
									[
										81013,
										81026
									],
									[
										81150,
										81163
									],
									[
										81308,
										81321
									],
									[
										81467,
										81480
									],
									[
										81627,
										81640
									],
									[
										81750,
										81763
									],
									[
										81881,
										81894
									],
									[
										82017,
										82030
									],
									[
										82138,
										82151
									],
									[
										82276,
										82289
									],
									[
										82414,
										82427
									],
									[
										82536,
										82549
									],
									[
										82677,
										82690
									],
									[
										82817,
										82830
									],
									[
										82935,
										82948
									],
									[
										83053,
										83066
									],
									[
										83174,
										83187
									],
									[
										83309,
										83322
									],
									[
										83446,
										83459
									],
									[
										83584,
										83597
									],
									[
										83722,
										83735
									],
									[
										83862,
										83875
									],
									[
										84003,
										84016
									],
									[
										84143,
										84156
									],
									[
										84273,
										84286
									],
									[
										84426,
										84439
									],
									[
										84581,
										84594
									],
									[
										84736,
										84749
									],
									[
										84873,
										84886
									],
									[
										85031,
										85044
									],
									[
										85190,
										85203
									],
									[
										85350,
										85363
									],
									[
										85474,
										85487
									],
									[
										85606,
										85619
									],
									[
										85743,
										85756
									],
									[
										85865,
										85878
									],
									[
										86004,
										86017
									],
									[
										86143,
										86156
									],
									[
										86266,
										86279
									],
									[
										86408,
										86421
									],
									[
										86549,
										86562
									],
									[
										86668,
										86681
									],
									[
										86787,
										86800
									],
									[
										86909,
										86922
									],
									[
										87045,
										87058
									],
									[
										87183,
										87196
									],
									[
										87322,
										87335
									],
									[
										87461,
										87474
									],
									[
										87602,
										87615
									],
									[
										87744,
										87757
									],
									[
										87885,
										87898
									],
									[
										88016,
										88029
									],
									[
										88170,
										88183
									],
									[
										88326,
										88339
									],
									[
										88482,
										88495
									],
									[
										88620,
										88633
									],
									[
										88779,
										88792
									],
									[
										88939,
										88952
									],
									[
										89100,
										89113
									],
									[
										89278,
										89291
									],
									[
										89368,
										89381
									],
									[
										89460,
										89473
									],
									[
										89544,
										89557
									],
									[
										89620,
										89633
									],
									[
										89766,
										89779
									],
									[
										89842,
										89855
									],
									[
										89915,
										89928
									],
									[
										90039,
										90052
									],
									[
										90123,
										90136
									],
									[
										90207,
										90220
									],
									[
										90283,
										90296
									],
									[
										90359,
										90372
									],
									[
										90451,
										90464
									],
									[
										90553,
										90566
									],
									[
										90657,
										90670
									],
									[
										90761,
										90774
									],
									[
										90866,
										90879
									],
									[
										90955,
										90968
									],
									[
										91041,
										91054
									],
									[
										91190,
										91203
									],
									[
										91323,
										91336
									],
									[
										91443,
										91456
									],
									[
										91570,
										91583
									],
									[
										91669,
										91682
									],
									[
										91769,
										91782
									],
									[
										91869,
										91882
									],
									[
										91970,
										91983
									],
									[
										92063,
										92076
									],
									[
										92148,
										92161
									],
									[
										92298,
										92311
									],
									[
										92419,
										92432
									],
									[
										92492,
										92505
									],
									[
										92740,
										92753
									],
									[
										92821,
										92834
									],
									[
										92899,
										92912
									],
									[
										92973,
										92986
									],
									[
										93044,
										93057
									],
									[
										93117,
										93130
									],
									[
										93270,
										93283
									],
									[
										93386,
										93399
									],
									[
										93508,
										93521
									],
									[
										93629,
										93642
									],
									[
										93752,
										93765
									],
									[
										93875,
										93888
									],
									[
										94005,
										94018
									],
									[
										94127,
										94140
									],
									[
										94197,
										94210
									],
									[
										94267,
										94280
									],
									[
										94358,
										94371
									],
									[
										94450,
										94463
									],
									[
										94542,
										94555
									],
									[
										94664,
										94677
									],
									[
										94755,
										94768
									],
									[
										94855,
										94868
									],
									[
										94950,
										94963
									],
									[
										95046,
										95059
									],
									[
										95142,
										95155
									],
									[
										95225,
										95238
									],
									[
										95311,
										95324
									],
									[
										95397,
										95410
									],
									[
										95476,
										95489
									],
									[
										95558,
										95571
									],
									[
										95642,
										95655
									],
									[
										95742,
										95755
									],
									[
										95844,
										95857
									],
									[
										95948,
										95961
									],
									[
										96091,
										96104
									],
									[
										96233,
										96246
									],
									[
										96358,
										96371
									],
									[
										96482,
										96495
									],
									[
										96608,
										96621
									],
									[
										96731,
										96744
									],
									[
										96839,
										96852
									],
									[
										96939,
										96952
									],
									[
										97038,
										97051
									],
									[
										97137,
										97150
									],
									[
										97246,
										97259
									],
									[
										97326,
										97339
									],
									[
										97540,
										97553
									],
									[
										97637,
										97650
									],
									[
										97738,
										97751
									],
									[
										97831,
										97844
									],
									[
										97916,
										97929
									],
									[
										98017,
										98030
									],
									[
										98115,
										98128
									],
									[
										98210,
										98223
									],
									[
										98321,
										98334
									],
									[
										98448,
										98461
									],
									[
										98576,
										98589
									],
									[
										98705,
										98718
									],
									[
										98947,
										98960
									],
									[
										99043,
										99056
									],
									[
										99136,
										99149
									],
									[
										99246,
										99259
									],
									[
										99368,
										99381
									],
									[
										99491,
										99504
									],
									[
										99615,
										99628
									],
									[
										99836,
										99849
									],
									[
										99920,
										99933
									],
									[
										99999,
										100012
									],
									[
										100099,
										100112
									],
									[
										100338,
										100351
									],
									[
										100589,
										100602
									],
									[
										100864,
										100877
									],
									[
										100982,
										100995
									],
									[
										101095,
										101108
									],
									[
										101199,
										101212
									],
									[
										101309,
										101322
									],
									[
										101420,
										101433
									],
									[
										101519,
										101532
									],
									[
										101614,
										101627
									],
									[
										101708,
										101721
									],
									[
										101797,
										101810
									],
									[
										101884,
										101897
									],
									[
										101973,
										101986
									],
									[
										102078,
										102091
									],
									[
										102195,
										102208
									],
									[
										102320,
										102333
									],
									[
										102524,
										102537
									],
									[
										102634,
										102647
									],
									[
										102747,
										102760
									],
									[
										102862,
										102875
									],
									[
										102985,
										102998
									],
									[
										103088,
										103101
									],
									[
										103214,
										103227
									],
									[
										103501,
										103514
									],
									[
										103768,
										103781
									],
									[
										104040,
										104053
									],
									[
										104307,
										104320
									],
									[
										104522,
										104535
									],
									[
										104744,
										104757
									],
									[
										104982,
										104995
									],
									[
										105312,
										105325
									],
									[
										105560,
										105573
									],
									[
										105687,
										105700
									],
									[
										105781,
										105794
									],
									[
										105866,
										105879
									],
									[
										105949,
										105962
									],
									[
										106150,
										106163
									],
									[
										106231,
										106244
									],
									[
										106310,
										106323
									],
									[
										106388,
										106401
									],
									[
										106498,
										106511
									],
									[
										106741,
										106754
									],
									[
										106843,
										106856
									],
									[
										107093,
										107106
									],
									[
										107186,
										107199
									],
									[
										107463,
										107476
									],
									[
										107675,
										107688
									],
									[
										108197,
										108210
									],
									[
										108349,
										108362
									],
									[
										108515,
										108528
									],
									[
										108583,
										108596
									],
									[
										108697,
										108710
									],
									[
										108803,
										108816
									],
									[
										108892,
										108905
									],
									[
										109099,
										109112
									],
									[
										109212,
										109225
									],
									[
										109318,
										109331
									],
									[
										109448,
										109461
									],
									[
										109760,
										109773
									],
									[
										109899,
										109912
									],
									[
										110068,
										110081
									],
									[
										110148,
										110161
									],
									[
										110226,
										110239
									],
									[
										110294,
										110307
									],
									[
										110360,
										110373
									],
									[
										110425,
										110438
									],
									[
										110492,
										110505
									],
									[
										110607,
										110620
									],
									[
										110715,
										110728
									],
									[
										110819,
										110832
									],
									[
										110923,
										110936
									],
									[
										111014,
										111027
									],
									[
										111105,
										111118
									],
									[
										111197,
										111210
									],
									[
										111292,
										111305
									],
									[
										111428,
										111441
									],
									[
										111564,
										111577
									],
									[
										111673,
										111686
									],
									[
										111797,
										111810
									],
									[
										111911,
										111924
									],
									[
										112004,
										112017
									],
									[
										112115,
										112128
									],
									[
										112211,
										112224
									],
									[
										112399,
										112412
									],
									[
										112576,
										112589
									],
									[
										112859,
										112872
									],
									[
										113213,
										113226
									],
									[
										113467,
										113480
									],
									[
										113695,
										113708
									],
									[
										114080,
										114093
									],
									[
										114285,
										114298
									],
									[
										114415,
										114428
									],
									[
										114549,
										114562
									],
									[
										114678,
										114691
									],
									[
										114809,
										114822
									],
									[
										114931,
										114944
									],
									[
										115059,
										115072
									],
									[
										115178,
										115191
									],
									[
										115301,
										115314
									],
									[
										115436,
										115449
									],
									[
										115576,
										115589
									],
									[
										115717,
										115730
									],
									[
										115853,
										115866
									],
									[
										116005,
										116018
									],
									[
										116144,
										116157
									],
									[
										116287,
										116300
									],
									[
										116589,
										116602
									],
									[
										116712,
										116725
									],
									[
										116835,
										116848
									],
									[
										116956,
										116969
									],
									[
										117078,
										117091
									],
									[
										117201,
										117214
									],
									[
										117334,
										117347
									],
									[
										117430,
										117443
									],
									[
										117542,
										117555
									],
									[
										117693,
										117706
									],
									[
										117814,
										117827
									],
									[
										117924,
										117937
									],
									[
										118038,
										118051
									],
									[
										118136,
										118149
									],
									[
										118229,
										118242
									],
									[
										118319,
										118332
									],
									[
										118408,
										118421
									],
									[
										118533,
										118546
									],
									[
										118728,
										118741
									],
									[
										118845,
										118858
									],
									[
										118964,
										118977
									],
									[
										119071,
										119084
									],
									[
										119155,
										119168
									],
									[
										119281,
										119294
									],
									[
										119371,
										119384
									],
									[
										119469,
										119482
									],
									[
										119570,
										119583
									],
									[
										119676,
										119689
									],
									[
										119764,
										119777
									],
									[
										119850,
										119863
									],
									[
										119933,
										119946
									],
									[
										120015,
										120028
									],
									[
										120131,
										120144
									],
									[
										120216,
										120229
									],
									[
										120403,
										120416
									],
									[
										120528,
										120541
									],
									[
										120624,
										120637
									],
									[
										120767,
										120780
									],
									[
										120894,
										120907
									],
									[
										120998,
										121011
									],
									[
										121108,
										121121
									],
									[
										121222,
										121235
									],
									[
										121320,
										121333
									],
									[
										121413,
										121426
									],
									[
										121503,
										121516
									],
									[
										121592,
										121605
									],
									[
										121715,
										121728
									],
									[
										121818,
										121831
									],
									[
										121941,
										121954
									],
									[
										122236,
										122249
									],
									[
										122599,
										122612
									],
									[
										122870,
										122883
									],
									[
										123014,
										123027
									],
									[
										123150,
										123163
									],
									[
										123286,
										123299
									],
									[
										123621,
										123634
									],
									[
										123929,
										123942
									],
									[
										124333,
										124346
									],
									[
										124729,
										124742
									],
									[
										125101,
										125114
									],
									[
										125668,
										125681
									],
									[
										126026,
										126039
									],
									[
										126329,
										126342
									],
									[
										126632,
										126645
									],
									[
										126994,
										127007
									],
									[
										127253,
										127266
									],
									[
										127534,
										127547
									],
									[
										127954,
										127967
									],
									[
										128159,
										128172
									],
									[
										128405,
										128418
									],
									[
										128676,
										128689
									],
									[
										128827,
										128840
									],
									[
										128966,
										128979
									],
									[
										129126,
										129139
									],
									[
										129307,
										129320
									],
									[
										129426,
										129439
									],
									[
										129578,
										129591
									],
									[
										129758,
										129771
									],
									[
										129966,
										129979
									],
									[
										130147,
										130160
									],
									[
										130237,
										130250
									],
									[
										130337,
										130350
									],
									[
										130429,
										130442
									],
									[
										130521,
										130534
									],
									[
										130623,
										130636
									],
									[
										130717,
										130730
									],
									[
										130811,
										130824
									],
									[
										130905,
										130918
									],
									[
										131009,
										131022
									],
									[
										131105,
										131118
									],
									[
										131201,
										131214
									],
									[
										131297,
										131310
									],
									[
										131393,
										131406
									],
									[
										131595,
										131608
									],
									[
										131786,
										131799
									],
									[
										132013,
										132026
									],
									[
										132278,
										132291
									],
									[
										132489,
										132502
									],
									[
										132590,
										132603
									],
									[
										132701,
										132714
									],
									[
										132804,
										132817
									],
									[
										132907,
										132920
									],
									[
										133020,
										133033
									],
									[
										133125,
										133138
									],
									[
										133230,
										133243
									],
									[
										133335,
										133348
									],
									[
										133450,
										133463
									],
									[
										133557,
										133570
									],
									[
										133664,
										133677
									],
									[
										133771,
										133784
									],
									[
										133878,
										133891
									],
									[
										134153,
										134166
									],
									[
										134401,
										134414
									],
									[
										134783,
										134796
									],
									[
										134882,
										134895
									],
									[
										135039,
										135052
									],
									[
										135162,
										135175
									],
									[
										135279,
										135292
									],
									[
										135436,
										135449
									],
									[
										135589,
										135602
									],
									[
										135752,
										135765
									],
									[
										135889,
										135902
									],
									[
										136029,
										136042
									],
									[
										136277,
										136290
									],
									[
										136385,
										136398
									],
									[
										136614,
										136627
									],
									[
										136713,
										136726
									],
									[
										136819,
										136832
									],
									[
										136926,
										136939
									],
									[
										137033,
										137046
									],
									[
										137141,
										137154
									],
									[
										137246,
										137259
									],
									[
										137388,
										137401
									],
									[
										137524,
										137537
									],
									[
										138113,
										138126
									],
									[
										138259,
										138272
									],
									[
										138398,
										138411
									],
									[
										138541,
										138554
									],
									[
										138688,
										138701
									],
									[
										138828,
										138841
									],
									[
										138972,
										138985
									],
									[
										139119,
										139132
									],
									[
										139259,
										139272
									],
									[
										139403,
										139416
									],
									[
										139551,
										139564
									],
									[
										139692,
										139705
									],
									[
										139928,
										139941
									],
									[
										140162,
										140175
									],
									[
										140359,
										140372
									],
									[
										140564,
										140577
									],
									[
										140772,
										140785
									],
									[
										140981,
										140994
									],
									[
										141192,
										141205
									],
									[
										141564,
										141577
									],
									[
										141873,
										141886
									],
									[
										142196,
										142209
									],
									[
										142332,
										142345
									],
									[
										142563,
										142576
									],
									[
										142849,
										142862
									],
									[
										143045,
										143058
									],
									[
										143238,
										143251
									],
									[
										143472,
										143485
									],
									[
										143698,
										143711
									],
									[
										143885,
										143898
									],
									[
										144094,
										144107
									],
									[
										144290,
										144303
									],
									[
										144562,
										144575
									],
									[
										144806,
										144819
									],
									[
										145130,
										145143
									],
									[
										145397,
										145410
									],
									[
										145496,
										145509
									],
									[
										145744,
										145757
									],
									[
										145941,
										145954
									],
									[
										145962,
										145975
									],
									[
										146214,
										146227
									],
									[
										146475,
										146488
									],
									[
										146664,
										146677
									],
									[
										146999,
										147012
									],
									[
										147208,
										147221
									],
									[
										147224,
										147237
									],
									[
										147502,
										147515
									],
									[
										147763,
										147776
									],
									[
										147847,
										147860
									],
									[
										148160,
										148173
									],
									[
										148427,
										148440
									],
									[
										148444,
										148457
									],
									[
										148499,
										148512
									],
									[
										148674,
										148687
									],
									[
										148798,
										148811
									],
									[
										148953,
										148966
									],
									[
										149214,
										149227
									],
									[
										149762,
										149775
									],
									[
										150237,
										150250
									],
									[
										150700,
										150713
									],
									[
										151159,
										151172
									],
									[
										151638,
										151651
									],
									[
										152120,
										152133
									],
									[
										152583,
										152596
									],
									[
										153058,
										153071
									],
									[
										153570,
										153583
									],
									[
										154064,
										154077
									],
									[
										154561,
										154574
									],
									[
										155034,
										155047
									],
									[
										155495,
										155508
									],
									[
										155957,
										155970
									],
									[
										156436,
										156449
									],
									[
										156908,
										156921
									],
									[
										157392,
										157405
									],
									[
										157855,
										157868
									],
									[
										158315,
										158328
									],
									[
										158765,
										158778
									],
									[
										159229,
										159242
									],
									[
										159705,
										159718
									],
									[
										160181,
										160194
									],
									[
										160657,
										160670
									],
									[
										161144,
										161157
									],
									[
										161624,
										161637
									],
									[
										162084,
										162097
									],
									[
										162537,
										162550
									],
									[
										163028,
										163041
									],
									[
										163537,
										163550
									],
									[
										164025,
										164038
									],
									[
										164501,
										164514
									],
									[
										164971,
										164984
									],
									[
										165479,
										165492
									],
									[
										165984,
										165997
									],
									[
										166459,
										166472
									],
									[
										166939,
										166952
									],
									[
										167395,
										167408
									],
									[
										167854,
										167867
									],
									[
										168342,
										168355
									],
									[
										168847,
										168860
									],
									[
										169360,
										169373
									],
									[
										169876,
										169889
									],
									[
										170384,
										170397
									],
									[
										171110,
										171123
									],
									[
										171630,
										171643
									],
									[
										172149,
										172162
									],
									[
										172667,
										172680
									],
									[
										173198,
										173211
									],
									[
										173756,
										173769
									],
									[
										174339,
										174352
									],
									[
										174948,
										174961
									],
									[
										175559,
										175572
									],
									[
										176164,
										176177
									],
									[
										176794,
										176807
									],
									[
										177440,
										177453
									],
									[
										178036,
										178049
									],
									[
										178595,
										178608
									],
									[
										179158,
										179171
									],
									[
										179761,
										179774
									],
									[
										180365,
										180378
									],
									[
										180962,
										180975
									],
									[
										181566,
										181579
									],
									[
										182139,
										182152
									],
									[
										182697,
										182710
									],
									[
										183267,
										183280
									],
									[
										183905,
										183918
									],
									[
										184502,
										184515
									],
									[
										185029,
										185042
									],
									[
										185570,
										185583
									],
									[
										186123,
										186136
									],
									[
										186672,
										186685
									],
									[
										187230,
										187243
									],
									[
										187799,
										187812
									],
									[
										188395,
										188408
									],
									[
										188988,
										189001
									],
									[
										189562,
										189575
									],
									[
										190154,
										190167
									],
									[
										190702,
										190715
									],
									[
										191246,
										191259
									],
									[
										191791,
										191804
									],
									[
										192363,
										192376
									],
									[
										192964,
										192977
									],
									[
										193557,
										193570
									],
									[
										194142,
										194155
									],
									[
										194721,
										194734
									],
									[
										195329,
										195342
									],
									[
										195961,
										195974
									],
									[
										196564,
										196577
									],
									[
										196951,
										196964
									],
									[
										197099,
										197112
									],
									[
										197194,
										197207
									],
									[
										197289,
										197302
									],
									[
										197384,
										197397
									],
									[
										197586,
										197599
									],
									[
										197681,
										197694
									],
									[
										197777,
										197790
									],
									[
										197873,
										197886
									],
									[
										197992,
										198005
									],
									[
										198245,
										198258
									],
									[
										198482,
										198495
									],
									[
										198719,
										198732
									],
									[
										198942,
										198955
									],
									[
										199216,
										199229
									],
									[
										199404,
										199417
									],
									[
										199608,
										199621
									],
									[
										199813,
										199826
									],
									[
										200075,
										200088
									],
									[
										200262,
										200275
									],
									[
										200572,
										200585
									],
									[
										200890,
										200903
									],
									[
										201120,
										201133
									],
									[
										201353,
										201366
									],
									[
										201540,
										201553
									],
									[
										201908,
										201921
									],
									[
										202225,
										202238
									],
									[
										202459,
										202472
									],
									[
										202810,
										202823
									],
									[
										203104,
										203117
									],
									[
										203312,
										203325
									],
									[
										203587,
										203600
									],
									[
										203888,
										203901
									],
									[
										204004,
										204017
									],
									[
										204186,
										204199
									],
									[
										204513,
										204526
									],
									[
										204629,
										204642
									],
									[
										204794,
										204807
									],
									[
										205213,
										205226
									],
									[
										205651,
										205664
									],
									[
										206102,
										206115
									],
									[
										206608,
										206621
									],
									[
										206837,
										206850
									],
									[
										207099,
										207112
									],
									[
										207403,
										207416
									],
									[
										207709,
										207722
									],
									[
										208036,
										208049
									],
									[
										208199,
										208212
									],
									[
										208384,
										208397
									],
									[
										208667,
										208680
									],
									[
										208783,
										208796
									],
									[
										209018,
										209031
									],
									[
										209277,
										209290
									],
									[
										209640,
										209653
									],
									[
										209836,
										209849
									],
									[
										210082,
										210095
									],
									[
										210328,
										210341
									],
									[
										210618,
										210631
									],
									[
										210782,
										210795
									],
									[
										211040,
										211053
									],
									[
										211146,
										211159
									],
									[
										211252,
										211265
									],
									[
										211358,
										211371
									],
									[
										211563,
										211576
									],
									[
										211823,
										211836
									],
									[
										211972,
										211985
									],
									[
										212111,
										212124
									],
									[
										212278,
										212291
									],
									[
										212508,
										212521
									],
									[
										212781,
										212794
									],
									[
										213101,
										213114
									],
									[
										213370,
										213383
									],
									[
										213583,
										213596
									],
									[
										213836,
										213849
									],
									[
										214114,
										214127
									],
									[
										214346,
										214359
									],
									[
										214538,
										214551
									],
									[
										214927,
										214940
									],
									[
										215258,
										215271
									],
									[
										215520,
										215533
									],
									[
										215762,
										215775
									],
									[
										216126,
										216139
									],
									[
										216242,
										216255
									],
									[
										216434,
										216447
									],
									[
										216772,
										216785
									],
									[
										217098,
										217111
									],
									[
										217463,
										217476
									],
									[
										217726,
										217739
									],
									[
										218194,
										218207
									],
									[
										218439,
										218452
									],
									[
										218785,
										218798
									],
									[
										219005,
										219018
									],
									[
										219799,
										219812
									],
									[
										219904,
										219917
									],
									[
										220024,
										220037
									],
									[
										220396,
										220409
									],
									[
										220684,
										220697
									],
									[
										220847,
										220860
									],
									[
										220998,
										221011
									],
									[
										221205,
										221218
									],
									[
										221329,
										221342
									],
									[
										221481,
										221494
									],
									[
										221712,
										221725
									],
									[
										221823,
										221836
									],
									[
										222080,
										222093
									],
									[
										222263,
										222276
									],
									[
										222512,
										222525
									],
									[
										222764,
										222777
									],
									[
										222990,
										223003
									],
									[
										223126,
										223139
									],
									[
										223422,
										223435
									],
									[
										223764,
										223777
									],
									[
										224027,
										224040
									],
									[
										224234,
										224247
									],
									[
										224429,
										224442
									],
									[
										224537,
										224550
									],
									[
										224653,
										224666
									],
									[
										224777,
										224790
									],
									[
										224852,
										224865
									],
									[
										224994,
										225007
									],
									[
										225305,
										225318
									],
									[
										225434,
										225447
									],
									[
										225563,
										225576
									],
									[
										225682,
										225695
									],
									[
										225797,
										225810
									],
									[
										225959,
										225972
									],
									[
										226080,
										226093
									],
									[
										226178,
										226191
									],
									[
										226375,
										226388
									],
									[
										226486,
										226499
									],
									[
										226710,
										226723
									],
									[
										226864,
										226877
									],
									[
										227002,
										227015
									],
									[
										227249,
										227262
									],
									[
										227369,
										227382
									],
									[
										227553,
										227566
									],
									[
										227843,
										227856
									],
									[
										228351,
										228364
									],
									[
										228535,
										228548
									],
									[
										228630,
										228643
									],
									[
										228703,
										228716
									],
									[
										228801,
										228814
									],
									[
										228876,
										228889
									],
									[
										229244,
										229257
									],
									[
										229361,
										229374
									],
									[
										229488,
										229501
									],
									[
										229584,
										229597
									],
									[
										229709,
										229722
									],
									[
										229878,
										229891
									],
									[
										230054,
										230067
									],
									[
										230148,
										230161
									],
									[
										230621,
										230634
									],
									[
										230757,
										230770
									],
									[
										230911,
										230924
									],
									[
										231017,
										231030
									],
									[
										231159,
										231172
									],
									[
										231487,
										231500
									],
									[
										231713,
										231726
									],
									[
										231837,
										231850
									],
									[
										232102,
										232115
									],
									[
										232430,
										232443
									],
									[
										232688,
										232701
									],
									[
										232931,
										232944
									],
									[
										233168,
										233181
									],
									[
										233311,
										233324
									],
									[
										233603,
										233616
									],
									[
										233945,
										233958
									],
									[
										234110,
										234123
									],
									[
										234221,
										234234
									],
									[
										234335,
										234348
									],
									[
										234492,
										234505
									],
									[
										234598,
										234611
									],
									[
										234703,
										234716
									],
									[
										234913,
										234926
									],
									[
										235041,
										235054
									],
									[
										235169,
										235182
									],
									[
										235310,
										235323
									],
									[
										235599,
										235612
									],
									[
										235820,
										235833
									],
									[
										236046,
										236059
									],
									[
										236345,
										236358
									],
									[
										236556,
										236569
									],
									[
										236689,
										236702
									],
									[
										236877,
										236890
									],
									[
										237012,
										237025
									],
									[
										237275,
										237288
									],
									[
										237424,
										237437
									],
									[
										237583,
										237596
									],
									[
										238048,
										238061
									],
									[
										238230,
										238243
									],
									[
										238459,
										238472
									],
									[
										238751,
										238764
									],
									[
										239102,
										239115
									],
									[
										239258,
										239271
									],
									[
										239415,
										239428
									],
									[
										239567,
										239580
									],
									[
										239724,
										239737
									],
									[
										239881,
										239894
									],
									[
										240038,
										240051
									],
									[
										240200,
										240213
									],
									[
										240365,
										240378
									],
									[
										240525,
										240538
									],
									[
										240686,
										240699
									],
									[
										240842,
										240855
									],
									[
										241004,
										241017
									],
									[
										241166,
										241179
									],
									[
										241328,
										241341
									],
									[
										241495,
										241508
									],
									[
										241629,
										241642
									],
									[
										241741,
										241754
									],
									[
										241976,
										241989
									],
									[
										242100,
										242113
									],
									[
										242238,
										242251
									],
									[
										242505,
										242518
									],
									[
										242803,
										242816
									],
									[
										243079,
										243092
									],
									[
										243413,
										243426
									],
									[
										243673,
										243686
									],
									[
										244069,
										244082
									],
									[
										244355,
										244368
									],
									[
										244555,
										244568
									],
									[
										244724,
										244737
									],
									[
										245005,
										245018
									],
									[
										245150,
										245163
									],
									[
										245668,
										245681
									],
									[
										245995,
										246008
									],
									[
										246145,
										246158
									],
									[
										246402,
										246415
									],
									[
										246548,
										246561
									],
									[
										246717,
										246730
									],
									[
										246954,
										246967
									],
									[
										247112,
										247125
									],
									[
										247296,
										247309
									],
									[
										247439,
										247452
									],
									[
										247539,
										247552
									],
									[
										247844,
										247857
									],
									[
										248044,
										248057
									],
									[
										248223,
										248236
									],
									[
										248536,
										248549
									],
									[
										248829,
										248842
									],
									[
										248976,
										248989
									],
									[
										249167,
										249180
									],
									[
										249262,
										249275
									],
									[
										249350,
										249363
									],
									[
										249424,
										249437
									],
									[
										249493,
										249506
									],
									[
										249565,
										249578
									],
									[
										249635,
										249648
									],
									[
										249704,
										249717
									],
									[
										249820,
										249833
									],
									[
										249952,
										249965
									],
									[
										250084,
										250097
									],
									[
										250226,
										250239
									],
									[
										250352,
										250365
									],
									[
										250466,
										250479
									],
									[
										250578,
										250591
									],
									[
										250697,
										250710
									],
									[
										250810,
										250823
									],
									[
										250923,
										250936
									],
									[
										251164,
										251177
									],
									[
										251312,
										251325
									],
									[
										251456,
										251469
									],
									[
										251627,
										251640
									],
									[
										251780,
										251793
									],
									[
										251904,
										251917
									],
									[
										252023,
										252036
									],
									[
										252143,
										252156
									],
									[
										252280,
										252293
									],
									[
										252399,
										252412
									],
									[
										252523,
										252536
									],
									[
										252798,
										252811
									],
									[
										253084,
										253097
									],
									[
										253390,
										253403
									],
									[
										253713,
										253726
									],
									[
										253947,
										253960
									],
									[
										254166,
										254179
									],
									[
										254410,
										254423
									],
									[
										254724,
										254737
									],
									[
										254975,
										254988
									],
									[
										255238,
										255251
									],
									[
										255543,
										255556
									],
									[
										255749,
										255762
									],
									[
										256138,
										256151
									],
									[
										256292,
										256305
									],
									[
										256404,
										256417
									],
									[
										256501,
										256514
									],
									[
										256591,
										256604
									],
									[
										256694,
										256707
									],
									[
										256783,
										256796
									],
									[
										256863,
										256876
									],
									[
										256947,
										256960
									],
									[
										257110,
										257123
									],
									[
										257220,
										257233
									],
									[
										257315,
										257328
									],
									[
										257412,
										257425
									],
									[
										257511,
										257524
									],
									[
										257599,
										257612
									],
									[
										257753,
										257766
									],
									[
										257888,
										257901
									],
									[
										257998,
										258011
									],
									[
										258095,
										258108
									],
									[
										258207,
										258220
									],
									[
										258293,
										258306
									],
									[
										258439,
										258452
									],
									[
										258539,
										258552
									],
									[
										258691,
										258704
									],
									[
										258791,
										258804
									],
									[
										258984,
										258997
									],
									[
										259108,
										259121
									],
									[
										259203,
										259216
									],
									[
										259291,
										259304
									],
									[
										259395,
										259408
									],
									[
										259522,
										259535
									],
									[
										259645,
										259658
									],
									[
										259764,
										259777
									],
									[
										259911,
										259924
									],
									[
										260016,
										260029
									],
									[
										260122,
										260135
									],
									[
										260242,
										260255
									],
									[
										260389,
										260402
									],
									[
										260741,
										260754
									],
									[
										260951,
										260964
									],
									[
										261032,
										261045
									],
									[
										261193,
										261206
									],
									[
										261296,
										261309
									],
									[
										261475,
										261488
									],
									[
										261740,
										261753
									],
									[
										261866,
										261879
									],
									[
										262192,
										262205
									],
									[
										262346,
										262359
									],
									[
										262487,
										262500
									],
									[
										262585,
										262598
									],
									[
										262713,
										262726
									],
									[
										262855,
										262868
									],
									[
										262981,
										262994
									],
									[
										263119,
										263132
									],
									[
										263228,
										263241
									],
									[
										263326,
										263339
									],
									[
										263423,
										263436
									],
									[
										263538,
										263551
									],
									[
										263645,
										263658
									],
									[
										263764,
										263777
									],
									[
										263883,
										263896
									],
									[
										263978,
										263991
									],
									[
										264068,
										264081
									],
									[
										264167,
										264180
									],
									[
										264377,
										264390
									],
									[
										264475,
										264488
									],
									[
										264605,
										264618
									],
									[
										264878,
										264891
									],
									[
										265144,
										265157
									],
									[
										265421,
										265434
									],
									[
										265658,
										265671
									],
									[
										265757,
										265770
									],
									[
										265867,
										265880
									],
									[
										265988,
										266001
									],
									[
										266101,
										266114
									],
									[
										266203,
										266216
									],
									[
										266324,
										266337
									],
									[
										266429,
										266442
									],
									[
										266526,
										266539
									],
									[
										266626,
										266639
									],
									[
										266751,
										266764
									],
									[
										267011,
										267024
									],
									[
										267329,
										267342
									],
									[
										267680,
										267693
									],
									[
										267865,
										267878
									],
									[
										268416,
										268429
									],
									[
										268555,
										268568
									],
									[
										268636,
										268649
									],
									[
										268716,
										268729
									],
									[
										268794,
										268807
									],
									[
										268874,
										268887
									],
									[
										268959,
										268972
									],
									[
										269038,
										269051
									],
									[
										269117,
										269130
									],
									[
										269197,
										269210
									],
									[
										269276,
										269289
									],
									[
										269355,
										269368
									],
									[
										269435,
										269448
									],
									[
										269514,
										269527
									],
									[
										269593,
										269606
									],
									[
										269679,
										269692
									],
									[
										269776,
										269789
									],
									[
										269874,
										269887
									],
									[
										269969,
										269982
									],
									[
										270073,
										270086
									],
									[
										270179,
										270192
									],
									[
										270242,
										270255
									],
									[
										270298,
										270311
									],
									[
										270394,
										270407
									],
									[
										270477,
										270490
									],
									[
										270558,
										270571
									],
									[
										270639,
										270652
									],
									[
										270722,
										270735
									],
									[
										270805,
										270818
									],
									[
										270886,
										270899
									],
									[
										270968,
										270981
									],
									[
										271049,
										271062
									],
									[
										271129,
										271142
									],
									[
										271211,
										271224
									],
									[
										271292,
										271305
									],
									[
										271373,
										271386
									],
									[
										271454,
										271467
									],
									[
										271539,
										271552
									],
									[
										271638,
										271651
									],
									[
										271735,
										271748
									],
									[
										271830,
										271843
									],
									[
										271932,
										271945
									],
									[
										272033,
										272046
									],
									[
										272091,
										272104
									],
									[
										272153,
										272166
									],
									[
										272313,
										272326
									],
									[
										272396,
										272409
									],
									[
										272478,
										272491
									],
									[
										272558,
										272571
									],
									[
										272640,
										272653
									],
									[
										272723,
										272736
									],
									[
										272804,
										272817
									],
									[
										272885,
										272898
									],
									[
										272967,
										272980
									],
									[
										273048,
										273061
									],
									[
										273129,
										273142
									],
									[
										273211,
										273224
									],
									[
										273292,
										273305
									],
									[
										273373,
										273386
									],
									[
										273459,
										273472
									],
									[
										273558,
										273571
									],
									[
										273658,
										273671
									],
									[
										273755,
										273768
									],
									[
										273861,
										273874
									],
									[
										273970,
										273983
									],
									[
										274036,
										274049
									],
									[
										274096,
										274109
									],
									[
										274213,
										274226
									],
									[
										274537,
										274550
									],
									[
										274668,
										274681
									],
									[
										274742,
										274755
									],
									[
										274827,
										274840
									],
									[
										274966,
										274979
									],
									[
										275050,
										275063
									],
									[
										275139,
										275152
									],
									[
										275217,
										275230
									],
									[
										275294,
										275307
									],
									[
										275455,
										275468
									],
									[
										275567,
										275580
									],
									[
										275692,
										275705
									],
									[
										275800,
										275813
									],
									[
										275889,
										275902
									],
									[
										275978,
										275991
									],
									[
										276304,
										276317
									],
									[
										276741,
										276754
									],
									[
										276922,
										276935
									],
									[
										277014,
										277027
									],
									[
										277097,
										277110
									],
									[
										277181,
										277194
									],
									[
										277265,
										277278
									],
									[
										277411,
										277424
									],
									[
										277521,
										277534
									],
									[
										277631,
										277644
									],
									[
										277742,
										277755
									],
									[
										278069,
										278082
									],
									[
										278204,
										278217
									],
									[
										278340,
										278353
									],
									[
										278477,
										278490
									],
									[
										278619,
										278632
									],
									[
										279030,
										279043
									],
									[
										279386,
										279399
									],
									[
										279667,
										279680
									],
									[
										280033,
										280046
									],
									[
										280482,
										280495
									],
									[
										280622,
										280635
									],
									[
										280717,
										280730
									],
									[
										280829,
										280842
									],
									[
										280947,
										280960
									],
									[
										281057,
										281070
									],
									[
										281161,
										281174
									],
									[
										281258,
										281271
									],
									[
										281380,
										281393
									],
									[
										281493,
										281506
									],
									[
										281830,
										281843
									],
									[
										282032,
										282045
									],
									[
										282354,
										282367
									],
									[
										282685,
										282698
									],
									[
										282910,
										282923
									],
									[
										283000,
										283013
									],
									[
										283092,
										283105
									],
									[
										283182,
										283195
									],
									[
										283274,
										283287
									],
									[
										283367,
										283380
									],
									[
										283458,
										283471
									],
									[
										283549,
										283562
									],
									[
										283666,
										283679
									],
									[
										283773,
										283786
									],
									[
										283882,
										283895
									],
									[
										283989,
										284002
									],
									[
										284098,
										284111
									],
									[
										284208,
										284221
									],
									[
										284316,
										284329
									],
									[
										284424,
										284437
									],
									[
										284582,
										284595
									],
									[
										284703,
										284716
									],
									[
										284824,
										284837
									],
									[
										284945,
										284958
									],
									[
										285066,
										285079
									],
									[
										285187,
										285200
									],
									[
										285302,
										285315
									],
									[
										285417,
										285430
									],
									[
										285669,
										285682
									],
									[
										285811,
										285824
									],
									[
										285955,
										285968
									],
									[
										286097,
										286110
									],
									[
										286241,
										286254
									],
									[
										286386,
										286399
									],
									[
										286529,
										286542
									],
									[
										286672,
										286685
									],
									[
										286818,
										286831
									],
									[
										287217,
										287230
									],
									[
										287523,
										287536
									],
									[
										287828,
										287841
									],
									[
										288134,
										288147
									],
									[
										288442,
										288455
									],
									[
										288749,
										288762
									],
									[
										289038,
										289051
									],
									[
										289331,
										289344
									],
									[
										289687,
										289700
									],
									[
										289940,
										289953
									],
									[
										290071,
										290084
									],
									[
										290207,
										290220
									],
									[
										290328,
										290341
									],
									[
										290466,
										290479
									],
									[
										290604,
										290617
									],
									[
										290726,
										290739
									],
									[
										290867,
										290880
									],
									[
										291007,
										291020
									],
									[
										291125,
										291138
									],
									[
										291243,
										291256
									],
									[
										291364,
										291377
									],
									[
										291499,
										291512
									],
									[
										291636,
										291649
									],
									[
										291774,
										291787
									],
									[
										291912,
										291925
									],
									[
										292052,
										292065
									],
									[
										292193,
										292206
									],
									[
										292333,
										292346
									],
									[
										292463,
										292476
									],
									[
										292616,
										292629
									],
									[
										292771,
										292784
									],
									[
										292926,
										292939
									],
									[
										293063,
										293076
									],
									[
										293221,
										293234
									],
									[
										293380,
										293393
									],
									[
										293540,
										293553
									],
									[
										293664,
										293677
									],
									[
										293794,
										293807
									],
									[
										293929,
										293942
									],
									[
										294049,
										294062
									],
									[
										294186,
										294199
									],
									[
										294323,
										294336
									],
									[
										294444,
										294457
									],
									[
										294584,
										294597
									],
									[
										294723,
										294736
									],
									[
										294840,
										294853
									],
									[
										294957,
										294970
									],
									[
										295077,
										295090
									],
									[
										295211,
										295224
									],
									[
										295347,
										295360
									],
									[
										295484,
										295497
									],
									[
										295621,
										295634
									],
									[
										295760,
										295773
									],
									[
										295900,
										295913
									],
									[
										296040,
										296053
									],
									[
										296170,
										296183
									],
									[
										296323,
										296336
									],
									[
										296478,
										296491
									],
									[
										296633,
										296646
									],
									[
										296770,
										296783
									],
									[
										296928,
										296941
									],
									[
										297087,
										297100
									],
									[
										297247,
										297260
									],
									[
										297370,
										297383
									],
									[
										297501,
										297514
									],
									[
										297637,
										297650
									],
									[
										297758,
										297771
									],
									[
										297896,
										297909
									],
									[
										298034,
										298047
									],
									[
										298156,
										298169
									],
									[
										298297,
										298310
									],
									[
										298437,
										298450
									],
									[
										298555,
										298568
									],
									[
										298673,
										298686
									],
									[
										298794,
										298807
									],
									[
										298929,
										298942
									],
									[
										299066,
										299079
									],
									[
										299204,
										299217
									],
									[
										299342,
										299355
									],
									[
										299482,
										299495
									],
									[
										299623,
										299636
									],
									[
										299763,
										299776
									],
									[
										299893,
										299906
									],
									[
										300046,
										300059
									],
									[
										300201,
										300214
									],
									[
										300356,
										300369
									],
									[
										300493,
										300506
									],
									[
										300651,
										300664
									],
									[
										300810,
										300823
									],
									[
										300970,
										300983
									],
									[
										301094,
										301107
									],
									[
										301226,
										301239
									],
									[
										301363,
										301376
									],
									[
										301485,
										301498
									],
									[
										301624,
										301637
									],
									[
										301763,
										301776
									],
									[
										301886,
										301899
									],
									[
										302028,
										302041
									],
									[
										302169,
										302182
									],
									[
										302288,
										302301
									],
									[
										302407,
										302420
									],
									[
										302529,
										302542
									],
									[
										302665,
										302678
									],
									[
										302803,
										302816
									],
									[
										302942,
										302955
									],
									[
										303081,
										303094
									],
									[
										303222,
										303235
									],
									[
										303364,
										303377
									],
									[
										303505,
										303518
									],
									[
										303636,
										303649
									],
									[
										303790,
										303803
									],
									[
										303946,
										303959
									],
									[
										304102,
										304115
									],
									[
										304240,
										304253
									],
									[
										304399,
										304412
									],
									[
										304559,
										304572
									],
									[
										304720,
										304733
									],
									[
										304898,
										304911
									],
									[
										304988,
										305001
									],
									[
										305080,
										305093
									],
									[
										305164,
										305177
									],
									[
										305240,
										305253
									],
									[
										305386,
										305399
									],
									[
										305462,
										305475
									],
									[
										305535,
										305548
									],
									[
										305659,
										305672
									],
									[
										305743,
										305756
									],
									[
										305827,
										305840
									],
									[
										305903,
										305916
									],
									[
										305979,
										305992
									],
									[
										306071,
										306084
									],
									[
										306173,
										306186
									],
									[
										306277,
										306290
									],
									[
										306381,
										306394
									],
									[
										306486,
										306499
									],
									[
										306575,
										306588
									],
									[
										306661,
										306674
									],
									[
										306810,
										306823
									],
									[
										306943,
										306956
									],
									[
										307063,
										307076
									],
									[
										307190,
										307203
									],
									[
										307289,
										307302
									],
									[
										307389,
										307402
									],
									[
										307489,
										307502
									],
									[
										307590,
										307603
									],
									[
										307683,
										307696
									],
									[
										307768,
										307781
									],
									[
										307918,
										307931
									],
									[
										308039,
										308052
									],
									[
										308112,
										308125
									],
									[
										308360,
										308373
									],
									[
										308441,
										308454
									],
									[
										308519,
										308532
									],
									[
										308593,
										308606
									],
									[
										308664,
										308677
									],
									[
										308737,
										308750
									],
									[
										308890,
										308903
									],
									[
										309006,
										309019
									],
									[
										309128,
										309141
									],
									[
										309249,
										309262
									],
									[
										309372,
										309385
									],
									[
										309495,
										309508
									],
									[
										309625,
										309638
									],
									[
										309747,
										309760
									],
									[
										309817,
										309830
									],
									[
										309887,
										309900
									],
									[
										309978,
										309991
									],
									[
										310070,
										310083
									],
									[
										310162,
										310175
									],
									[
										310284,
										310297
									],
									[
										310375,
										310388
									],
									[
										310475,
										310488
									],
									[
										310570,
										310583
									],
									[
										310666,
										310679
									],
									[
										310762,
										310775
									],
									[
										310845,
										310858
									],
									[
										310931,
										310944
									],
									[
										311017,
										311030
									],
									[
										311096,
										311109
									],
									[
										311178,
										311191
									],
									[
										311262,
										311275
									],
									[
										311362,
										311375
									],
									[
										311464,
										311477
									],
									[
										311568,
										311581
									],
									[
										311711,
										311724
									],
									[
										311853,
										311866
									],
									[
										311978,
										311991
									],
									[
										312102,
										312115
									],
									[
										312228,
										312241
									],
									[
										312351,
										312364
									],
									[
										312459,
										312472
									],
									[
										312559,
										312572
									],
									[
										312658,
										312671
									],
									[
										312757,
										312770
									],
									[
										312866,
										312879
									],
									[
										312946,
										312959
									],
									[
										313160,
										313173
									],
									[
										313257,
										313270
									],
									[
										313358,
										313371
									],
									[
										313451,
										313464
									],
									[
										313536,
										313549
									],
									[
										313637,
										313650
									],
									[
										313735,
										313748
									],
									[
										313830,
										313843
									],
									[
										313941,
										313954
									],
									[
										314068,
										314081
									],
									[
										314196,
										314209
									],
									[
										314325,
										314338
									],
									[
										314567,
										314580
									],
									[
										314663,
										314676
									],
									[
										314756,
										314769
									],
									[
										314866,
										314879
									],
									[
										314988,
										315001
									],
									[
										315111,
										315124
									],
									[
										315235,
										315248
									],
									[
										315456,
										315469
									],
									[
										315540,
										315553
									],
									[
										315619,
										315632
									],
									[
										315719,
										315732
									],
									[
										315958,
										315971
									],
									[
										316209,
										316222
									],
									[
										316484,
										316497
									],
									[
										316602,
										316615
									],
									[
										316715,
										316728
									],
									[
										316819,
										316832
									],
									[
										316929,
										316942
									],
									[
										317040,
										317053
									],
									[
										317139,
										317152
									],
									[
										317234,
										317247
									],
									[
										317328,
										317341
									],
									[
										317417,
										317430
									],
									[
										317504,
										317517
									],
									[
										317593,
										317606
									],
									[
										317698,
										317711
									],
									[
										317815,
										317828
									],
									[
										317940,
										317953
									],
									[
										318144,
										318157
									],
									[
										318254,
										318267
									],
									[
										318367,
										318380
									],
									[
										318482,
										318495
									],
									[
										318605,
										318618
									],
									[
										318708,
										318721
									],
									[
										318834,
										318847
									],
									[
										319121,
										319134
									],
									[
										319388,
										319401
									],
									[
										319660,
										319673
									],
									[
										319927,
										319940
									],
									[
										320142,
										320155
									],
									[
										320364,
										320377
									],
									[
										320602,
										320615
									],
									[
										320932,
										320945
									],
									[
										321180,
										321193
									],
									[
										321307,
										321320
									],
									[
										321401,
										321414
									],
									[
										321486,
										321499
									],
									[
										321569,
										321582
									],
									[
										321770,
										321783
									],
									[
										321851,
										321864
									],
									[
										321930,
										321943
									],
									[
										322008,
										322021
									],
									[
										322118,
										322131
									],
									[
										322361,
										322374
									],
									[
										322463,
										322476
									],
									[
										322713,
										322726
									],
									[
										322806,
										322819
									],
									[
										323083,
										323096
									],
									[
										323295,
										323308
									],
									[
										323817,
										323830
									],
									[
										323969,
										323982
									],
									[
										324135,
										324148
									],
									[
										324203,
										324216
									],
									[
										324317,
										324330
									],
									[
										324423,
										324436
									],
									[
										324512,
										324525
									],
									[
										324719,
										324732
									],
									[
										324832,
										324845
									],
									[
										324938,
										324951
									],
									[
										325068,
										325081
									],
									[
										325380,
										325393
									],
									[
										325519,
										325532
									],
									[
										325688,
										325701
									],
									[
										325768,
										325781
									],
									[
										325846,
										325859
									],
									[
										325914,
										325927
									],
									[
										325980,
										325993
									],
									[
										326045,
										326058
									],
									[
										326112,
										326125
									],
									[
										326227,
										326240
									],
									[
										326335,
										326348
									],
									[
										326439,
										326452
									],
									[
										326543,
										326556
									],
									[
										326634,
										326647
									],
									[
										326725,
										326738
									],
									[
										326817,
										326830
									],
									[
										326912,
										326925
									],
									[
										327048,
										327061
									],
									[
										327184,
										327197
									],
									[
										327293,
										327306
									],
									[
										327417,
										327430
									],
									[
										327531,
										327544
									],
									[
										327624,
										327637
									],
									[
										327735,
										327748
									],
									[
										327831,
										327844
									],
									[
										328019,
										328032
									],
									[
										328196,
										328209
									],
									[
										328479,
										328492
									],
									[
										328833,
										328846
									],
									[
										329087,
										329100
									],
									[
										329315,
										329328
									],
									[
										329700,
										329713
									],
									[
										329905,
										329918
									],
									[
										330035,
										330048
									],
									[
										330169,
										330182
									],
									[
										330298,
										330311
									],
									[
										330429,
										330442
									],
									[
										330551,
										330564
									],
									[
										330679,
										330692
									],
									[
										330798,
										330811
									],
									[
										330921,
										330934
									],
									[
										331056,
										331069
									],
									[
										331196,
										331209
									],
									[
										331337,
										331350
									],
									[
										331473,
										331486
									],
									[
										331625,
										331638
									],
									[
										331764,
										331777
									],
									[
										331907,
										331920
									],
									[
										332209,
										332222
									],
									[
										332332,
										332345
									],
									[
										332455,
										332468
									],
									[
										332576,
										332589
									],
									[
										332698,
										332711
									],
									[
										332821,
										332834
									],
									[
										332954,
										332967
									],
									[
										333050,
										333063
									],
									[
										333162,
										333175
									],
									[
										333313,
										333326
									],
									[
										333434,
										333447
									],
									[
										333544,
										333557
									],
									[
										333658,
										333671
									],
									[
										333756,
										333769
									],
									[
										333849,
										333862
									],
									[
										333939,
										333952
									],
									[
										334028,
										334041
									],
									[
										334153,
										334166
									],
									[
										334348,
										334361
									],
									[
										334465,
										334478
									],
									[
										334584,
										334597
									],
									[
										334691,
										334704
									],
									[
										334775,
										334788
									],
									[
										334901,
										334914
									],
									[
										334991,
										335004
									],
									[
										335089,
										335102
									],
									[
										335190,
										335203
									],
									[
										335296,
										335309
									],
									[
										335384,
										335397
									],
									[
										335470,
										335483
									],
									[
										335553,
										335566
									],
									[
										335635,
										335648
									],
									[
										335751,
										335764
									],
									[
										335836,
										335849
									],
									[
										336023,
										336036
									],
									[
										336148,
										336161
									],
									[
										336244,
										336257
									],
									[
										336387,
										336400
									],
									[
										336514,
										336527
									],
									[
										336618,
										336631
									],
									[
										336728,
										336741
									],
									[
										336842,
										336855
									],
									[
										336940,
										336953
									],
									[
										337033,
										337046
									],
									[
										337123,
										337136
									],
									[
										337212,
										337225
									],
									[
										337335,
										337348
									],
									[
										337438,
										337451
									],
									[
										337561,
										337574
									],
									[
										337856,
										337869
									],
									[
										338219,
										338232
									],
									[
										338490,
										338503
									],
									[
										338634,
										338647
									],
									[
										338770,
										338783
									],
									[
										338906,
										338919
									],
									[
										339241,
										339254
									],
									[
										339549,
										339562
									],
									[
										339953,
										339966
									],
									[
										340349,
										340362
									],
									[
										340721,
										340734
									],
									[
										341288,
										341301
									],
									[
										341646,
										341659
									],
									[
										341949,
										341962
									],
									[
										342252,
										342265
									],
									[
										342614,
										342627
									],
									[
										342873,
										342886
									],
									[
										343154,
										343167
									],
									[
										343574,
										343587
									],
									[
										343779,
										343792
									],
									[
										344025,
										344038
									],
									[
										344296,
										344309
									],
									[
										344447,
										344460
									],
									[
										344586,
										344599
									],
									[
										344746,
										344759
									],
									[
										344927,
										344940
									],
									[
										345046,
										345059
									],
									[
										345198,
										345211
									],
									[
										345378,
										345391
									],
									[
										345586,
										345599
									],
									[
										345767,
										345780
									],
									[
										345857,
										345870
									],
									[
										345957,
										345970
									],
									[
										346049,
										346062
									],
									[
										346141,
										346154
									],
									[
										346243,
										346256
									],
									[
										346337,
										346350
									],
									[
										346431,
										346444
									],
									[
										346525,
										346538
									],
									[
										346629,
										346642
									],
									[
										346725,
										346738
									],
									[
										346821,
										346834
									],
									[
										346917,
										346930
									],
									[
										347013,
										347026
									],
									[
										347215,
										347228
									],
									[
										347406,
										347419
									],
									[
										347633,
										347646
									],
									[
										347898,
										347911
									],
									[
										348109,
										348122
									],
									[
										348210,
										348223
									],
									[
										348321,
										348334
									],
									[
										348424,
										348437
									],
									[
										348527,
										348540
									],
									[
										348640,
										348653
									],
									[
										348745,
										348758
									],
									[
										348850,
										348863
									],
									[
										348955,
										348968
									],
									[
										349070,
										349083
									],
									[
										349177,
										349190
									],
									[
										349284,
										349297
									],
									[
										349391,
										349404
									],
									[
										349498,
										349511
									],
									[
										349773,
										349786
									],
									[
										350021,
										350034
									],
									[
										350403,
										350416
									],
									[
										350502,
										350515
									],
									[
										350659,
										350672
									],
									[
										350782,
										350795
									],
									[
										350899,
										350912
									],
									[
										351056,
										351069
									],
									[
										351209,
										351222
									],
									[
										351372,
										351385
									],
									[
										351509,
										351522
									],
									[
										351649,
										351662
									],
									[
										351897,
										351910
									],
									[
										352005,
										352018
									],
									[
										352234,
										352247
									],
									[
										352333,
										352346
									],
									[
										352439,
										352452
									],
									[
										352546,
										352559
									],
									[
										352653,
										352666
									],
									[
										352761,
										352774
									],
									[
										352866,
										352879
									],
									[
										353008,
										353021
									],
									[
										353144,
										353157
									],
									[
										353733,
										353746
									],
									[
										353879,
										353892
									],
									[
										354018,
										354031
									],
									[
										354161,
										354174
									],
									[
										354308,
										354321
									],
									[
										354448,
										354461
									],
									[
										354592,
										354605
									],
									[
										354739,
										354752
									],
									[
										354879,
										354892
									],
									[
										355023,
										355036
									],
									[
										355171,
										355184
									],
									[
										355312,
										355325
									],
									[
										355548,
										355561
									],
									[
										355782,
										355795
									],
									[
										355979,
										355992
									],
									[
										356184,
										356197
									],
									[
										356392,
										356405
									],
									[
										356601,
										356614
									],
									[
										356812,
										356825
									],
									[
										357184,
										357197
									],
									[
										357493,
										357506
									],
									[
										357816,
										357829
									],
									[
										357952,
										357965
									],
									[
										358183,
										358196
									],
									[
										358469,
										358482
									],
									[
										358665,
										358678
									],
									[
										358858,
										358871
									],
									[
										359092,
										359105
									],
									[
										359318,
										359331
									],
									[
										359505,
										359518
									],
									[
										359714,
										359727
									],
									[
										359910,
										359923
									],
									[
										360182,
										360195
									],
									[
										360426,
										360439
									],
									[
										360750,
										360763
									],
									[
										361017,
										361030
									],
									[
										361116,
										361129
									],
									[
										361364,
										361377
									],
									[
										361561,
										361574
									],
									[
										361582,
										361595
									],
									[
										361834,
										361847
									],
									[
										362095,
										362108
									],
									[
										362284,
										362297
									],
									[
										362619,
										362632
									],
									[
										362828,
										362841
									],
									[
										362844,
										362857
									],
									[
										363122,
										363135
									],
									[
										363383,
										363396
									],
									[
										363467,
										363480
									],
									[
										363780,
										363793
									],
									[
										364047,
										364060
									],
									[
										364064,
										364077
									],
									[
										364119,
										364132
									],
									[
										364294,
										364307
									],
									[
										364418,
										364431
									],
									[
										364573,
										364586
									],
									[
										364834,
										364847
									],
									[
										365382,
										365395
									],
									[
										365857,
										365870
									],
									[
										366320,
										366333
									],
									[
										366779,
										366792
									],
									[
										367258,
										367271
									],
									[
										367740,
										367753
									],
									[
										368203,
										368216
									],
									[
										368678,
										368691
									],
									[
										369190,
										369203
									],
									[
										369684,
										369697
									],
									[
										370181,
										370194
									],
									[
										370654,
										370667
									],
									[
										371115,
										371128
									],
									[
										371577,
										371590
									],
									[
										372056,
										372069
									],
									[
										372528,
										372541
									],
									[
										373012,
										373025
									],
									[
										373475,
										373488
									],
									[
										373935,
										373948
									],
									[
										374385,
										374398
									],
									[
										374849,
										374862
									],
									[
										375325,
										375338
									],
									[
										375801,
										375814
									],
									[
										376277,
										376290
									],
									[
										376764,
										376777
									],
									[
										377244,
										377257
									],
									[
										377704,
										377717
									],
									[
										378157,
										378170
									],
									[
										378648,
										378661
									],
									[
										379157,
										379170
									],
									[
										379645,
										379658
									],
									[
										380121,
										380134
									],
									[
										380591,
										380604
									],
									[
										381099,
										381112
									],
									[
										381604,
										381617
									],
									[
										382079,
										382092
									],
									[
										382559,
										382572
									],
									[
										383015,
										383028
									],
									[
										383474,
										383487
									],
									[
										383962,
										383975
									],
									[
										384467,
										384480
									],
									[
										384980,
										384993
									],
									[
										385496,
										385509
									],
									[
										386004,
										386017
									],
									[
										386730,
										386743
									],
									[
										387250,
										387263
									],
									[
										387769,
										387782
									],
									[
										388287,
										388300
									],
									[
										388818,
										388831
									],
									[
										389376,
										389389
									],
									[
										389959,
										389972
									],
									[
										390568,
										390581
									],
									[
										391179,
										391192
									],
									[
										391784,
										391797
									],
									[
										392414,
										392427
									],
									[
										393060,
										393073
									],
									[
										393656,
										393669
									],
									[
										394215,
										394228
									],
									[
										394778,
										394791
									],
									[
										395381,
										395394
									],
									[
										395985,
										395998
									],
									[
										396582,
										396595
									],
									[
										397186,
										397199
									],
									[
										397759,
										397772
									],
									[
										398317,
										398330
									],
									[
										398887,
										398900
									],
									[
										399525,
										399538
									],
									[
										400122,
										400135
									],
									[
										400649,
										400662
									],
									[
										401190,
										401203
									],
									[
										401743,
										401756
									],
									[
										402292,
										402305
									],
									[
										402850,
										402863
									],
									[
										403419,
										403432
									],
									[
										404015,
										404028
									],
									[
										404608,
										404621
									],
									[
										405182,
										405195
									],
									[
										405774,
										405787
									],
									[
										406322,
										406335
									],
									[
										406866,
										406879
									],
									[
										407411,
										407424
									],
									[
										407983,
										407996
									],
									[
										408584,
										408597
									],
									[
										409177,
										409190
									],
									[
										409762,
										409775
									],
									[
										410341,
										410354
									],
									[
										410949,
										410962
									],
									[
										411581,
										411594
									],
									[
										412184,
										412197
									],
									[
										412571,
										412584
									],
									[
										412719,
										412732
									],
									[
										412814,
										412827
									],
									[
										412909,
										412922
									],
									[
										413004,
										413017
									],
									[
										413206,
										413219
									],
									[
										413301,
										413314
									],
									[
										413397,
										413410
									],
									[
										413493,
										413506
									],
									[
										413612,
										413625
									],
									[
										413865,
										413878
									],
									[
										414102,
										414115
									],
									[
										414339,
										414352
									],
									[
										414562,
										414575
									],
									[
										414836,
										414849
									],
									[
										415024,
										415037
									],
									[
										415228,
										415241
									],
									[
										415433,
										415446
									],
									[
										415695,
										415708
									],
									[
										415882,
										415895
									],
									[
										416192,
										416205
									],
									[
										416510,
										416523
									],
									[
										416740,
										416753
									],
									[
										416973,
										416986
									],
									[
										417160,
										417173
									],
									[
										417528,
										417541
									],
									[
										417845,
										417858
									],
									[
										418079,
										418092
									],
									[
										418430,
										418443
									],
									[
										418724,
										418737
									],
									[
										418932,
										418945
									],
									[
										419207,
										419220
									],
									[
										419508,
										419521
									],
									[
										419624,
										419637
									],
									[
										419806,
										419819
									],
									[
										420133,
										420146
									],
									[
										420249,
										420262
									],
									[
										420414,
										420427
									],
									[
										420833,
										420846
									],
									[
										421271,
										421284
									],
									[
										421722,
										421735
									],
									[
										422228,
										422241
									],
									[
										422457,
										422470
									],
									[
										422719,
										422732
									],
									[
										423023,
										423036
									],
									[
										423329,
										423342
									],
									[
										423656,
										423669
									],
									[
										423819,
										423832
									],
									[
										424004,
										424017
									],
									[
										424287,
										424300
									],
									[
										424403,
										424416
									],
									[
										424638,
										424651
									],
									[
										424897,
										424910
									],
									[
										425260,
										425273
									],
									[
										425456,
										425469
									],
									[
										425702,
										425715
									],
									[
										425948,
										425961
									],
									[
										426238,
										426251
									],
									[
										426402,
										426415
									],
									[
										426660,
										426673
									],
									[
										426766,
										426779
									],
									[
										426872,
										426885
									],
									[
										426978,
										426991
									],
									[
										427183,
										427196
									],
									[
										427443,
										427456
									],
									[
										427592,
										427605
									],
									[
										427731,
										427744
									],
									[
										427898,
										427911
									],
									[
										428128,
										428141
									],
									[
										428401,
										428414
									],
									[
										428721,
										428734
									],
									[
										428990,
										429003
									],
									[
										429203,
										429216
									],
									[
										429456,
										429469
									],
									[
										429734,
										429747
									],
									[
										429966,
										429979
									],
									[
										430158,
										430171
									],
									[
										430547,
										430560
									],
									[
										430878,
										430891
									],
									[
										431140,
										431153
									],
									[
										431382,
										431395
									],
									[
										431746,
										431759
									],
									[
										431862,
										431875
									],
									[
										432054,
										432067
									],
									[
										432392,
										432405
									],
									[
										432718,
										432731
									],
									[
										433083,
										433096
									],
									[
										433346,
										433359
									],
									[
										433814,
										433827
									],
									[
										434059,
										434072
									],
									[
										434405,
										434418
									],
									[
										434625,
										434638
									],
									[
										434914,
										434935
									],
									[
										435067,
										435088
									],
									[
										435223,
										435244
									],
									[
										435380,
										435401
									],
									[
										435534,
										435555
									],
									[
										435688,
										435709
									],
									[
										435845,
										435866
									],
									[
										435997,
										436018
									],
									[
										436153,
										436174
									],
									[
										436309,
										436330
									],
									[
										436470,
										436491
									],
									[
										436626,
										436647
									],
									[
										436778,
										436799
									],
									[
										436932,
										436953
									],
									[
										437106,
										437127
									],
									[
										437259,
										437280
									],
									[
										437412,
										437433
									],
									[
										437577,
										437598
									],
									[
										437744,
										437765
									],
									[
										437902,
										437923
									],
									[
										438054,
										438075
									],
									[
										438212,
										438233
									],
									[
										438357,
										438378
									],
									[
										438501,
										438522
									],
									[
										438647,
										438668
									],
									[
										438798,
										438819
									],
									[
										438948,
										438969
									],
									[
										439095,
										439116
									],
									[
										439234,
										439255
									],
									[
										439408,
										439429
									],
									[
										439550,
										439571
									],
									[
										439705,
										439726
									],
									[
										439846,
										439867
									],
									[
										440094,
										440115
									],
									[
										440245,
										440266
									],
									[
										440400,
										440421
									],
									[
										440553,
										440574
									],
									[
										440704,
										440725
									],
									[
										440855,
										440876
									],
									[
										441006,
										441027
									],
									[
										441157,
										441178
									],
									[
										441308,
										441329
									],
									[
										441454,
										441475
									],
									[
										441602,
										441623
									],
									[
										441752,
										441773
									],
									[
										441948,
										441969
									],
									[
										442101,
										442122
									],
									[
										442252,
										442273
									],
									[
										442396,
										442417
									],
									[
										442539,
										442560
									],
									[
										442700,
										442721
									],
									[
										442873,
										442894
									],
									[
										443018,
										443039
									],
									[
										443157,
										443178
									],
									[
										443303,
										443324
									],
									[
										443483,
										443504
									],
									[
										443691,
										443712
									],
									[
										443848,
										443869
									],
									[
										444037,
										444058
									],
									[
										444176,
										444197
									],
									[
										444396,
										444417
									],
									[
										444544,
										444565
									],
									[
										444686,
										444707
									],
									[
										444931,
										444952
									],
									[
										445212,
										445233
									],
									[
										445368,
										445389
									],
									[
										445508,
										445529
									],
									[
										445655,
										445676
									],
									[
										445813,
										445834
									],
									[
										445988,
										446009
									],
									[
										446142,
										446163
									],
									[
										446306,
										446327
									],
									[
										446464,
										446485
									],
									[
										446645,
										446666
									],
									[
										446818,
										446839
									],
									[
										446990,
										447011
									],
									[
										447164,
										447185
									],
									[
										447326,
										447347
									],
									[
										447839,
										447845
									],
									[
										448201,
										448207
									],
									[
										448213,
										448219
									],
									[
										448427,
										448433
									],
									[
										448712,
										448718
									],
									[
										448732,
										448738
									],
									[
										449075,
										449081
									],
									[
										449253,
										449259
									],
									[
										449579,
										449585
									],
									[
										449755,
										449761
									],
									[
										450129,
										450135
									],
									[
										450458,
										450464
									],
									[
										450704,
										450710
									],
									[
										450932,
										450938
									],
									[
										450983,
										450989
									],
									[
										451157,
										451163
									],
									[
										451419,
										451425
									],
									[
										451673,
										451679
									],
									[
										452099,
										452105
									],
									[
										452336,
										452342
									],
									[
										452773,
										452779
									],
									[
										452896,
										452902
									],
									[
										452925,
										452931
									],
									[
										453150,
										453156
									],
									[
										453279,
										453285
									],
									[
										453299,
										453305
									],
									[
										453508,
										453514
									],
									[
										453718,
										453724
									],
									[
										454028,
										454034
									],
									[
										454058,
										454064
									],
									[
										454350,
										454356
									],
									[
										454598,
										454604
									],
									[
										454879,
										454885
									],
									[
										455211,
										455217
									],
									[
										455393,
										455399
									],
									[
										455711,
										455717
									],
									[
										455725,
										455731
									],
									[
										455948,
										455954
									],
									[
										455963,
										455969
									],
									[
										456376,
										456382
									],
									[
										456650,
										456656
									],
									[
										457046,
										457052
									],
									[
										457381,
										457387
									],
									[
										457795,
										457801
									],
									[
										458088,
										458094
									],
									[
										458268,
										458274
									],
									[
										458282,
										458288
									],
									[
										458617,
										458623
									],
									[
										458839,
										458845
									],
									[
										459162,
										459168
									],
									[
										459444,
										459450
									],
									[
										459503,
										459509
									],
									[
										459719,
										459725
									],
									[
										459916,
										459922
									],
									[
										460216,
										460222
									],
									[
										460242,
										460248
									],
									[
										460352,
										460358
									],
									[
										460383,
										460389
									],
									[
										460518,
										460524
									],
									[
										460549,
										460555
									],
									[
										460751,
										460757
									],
									[
										460782,
										460788
									],
									[
										461122,
										461128
									],
									[
										461270,
										461276
									],
									[
										461623,
										461629
									],
									[
										462030,
										462036
									],
									[
										462596,
										462602
									],
									[
										463096,
										463102
									],
									[
										463337,
										463343
									],
									[
										463512,
										463518
									],
									[
										463552,
										463558
									],
									[
										463586,
										463592
									],
									[
										463767,
										463773
									],
									[
										463836,
										463842
									],
									[
										464066,
										464072
									],
									[
										464102,
										464108
									],
									[
										464140,
										464146
									],
									[
										464406,
										464412
									],
									[
										464809,
										464815
									],
									[
										465140,
										465146
									],
									[
										465360,
										465366
									],
									[
										465455,
										465461
									],
									[
										465492,
										465498
									],
									[
										465566,
										465572
									],
									[
										465721,
										465727
									],
									[
										465816,
										465822
									],
									[
										465858,
										465864
									],
									[
										465931,
										465937
									],
									[
										466100,
										466106
									],
									[
										466207,
										466213
									],
									[
										466282,
										466288
									],
									[
										466561,
										466567
									],
									[
										466839,
										466845
									],
									[
										467143,
										467149
									],
									[
										467213,
										467219
									],
									[
										467635,
										467641
									],
									[
										467979,
										467985
									],
									[
										468026,
										468032
									],
									[
										468067,
										468073
									],
									[
										468329,
										468335
									],
									[
										468723,
										468729
									],
									[
										468786,
										468792
									],
									[
										469187,
										469193
									],
									[
										469195,
										469201
									],
									[
										469500,
										469506
									],
									[
										469552,
										469558
									],
									[
										469779,
										469785
									],
									[
										470100,
										470106
									],
									[
										470670,
										470676
									],
									[
										471056,
										471062
									],
									[
										471429,
										471435
									],
									[
										471930,
										471936
									],
									[
										472342,
										472348
									],
									[
										472477,
										472483
									],
									[
										472728,
										472734
									],
									[
										473005,
										473011
									],
									[
										473221,
										473227
									],
									[
										473283,
										473289
									],
									[
										473537,
										473543
									],
									[
										473741,
										473747
									],
									[
										473885,
										473891
									],
									[
										473910,
										473916
									],
									[
										473928,
										473934
									],
									[
										474009,
										474015
									],
									[
										474202,
										474208
									],
									[
										474502,
										474508
									],
									[
										474676,
										474682
									],
									[
										474989,
										474995
									],
									[
										475209,
										475215
									],
									[
										475268,
										475274
									],
									[
										475350,
										475356
									],
									[
										475472,
										475478
									],
									[
										475494,
										475500
									],
									[
										475590,
										475596
									],
									[
										475739,
										475745
									],
									[
										475765,
										475771
									],
									[
										475829,
										475835
									],
									[
										476070,
										476076
									],
									[
										476140,
										476146
									],
									[
										476174,
										476180
									],
									[
										476207,
										476213
									],
									[
										476317,
										476323
									],
									[
										476397,
										476403
									],
									[
										476677,
										476683
									],
									[
										476945,
										476951
									],
									[
										477419,
										477425
									],
									[
										477635,
										477641
									],
									[
										477766,
										477772
									],
									[
										477894,
										477900
									],
									[
										478167,
										478173
									],
									[
										478229,
										478235
									],
									[
										478373,
										478379
									],
									[
										478421,
										478427
									],
									[
										478483,
										478489
									],
									[
										478638,
										478644
									],
									[
										478944,
										478950
									],
									[
										478973,
										478979
									],
									[
										479061,
										479067
									],
									[
										479344,
										479350
									],
									[
										479395,
										479401
									],
									[
										479501,
										479507
									],
									[
										479610,
										479616
									],
									[
										479959,
										479965
									],
									[
										480205,
										480211
									],
									[
										480431,
										480437
									],
									[
										480536,
										480542
									],
									[
										480602,
										480608
									],
									[
										480688,
										480694
									],
									[
										480810,
										480816
									],
									[
										480933,
										480939
									],
									[
										480955,
										480961
									],
									[
										481083,
										481089
									],
									[
										481212,
										481218
									],
									[
										481418,
										481424
									],
									[
										481432,
										481438
									],
									[
										481714,
										481720
									],
									[
										481984,
										481990
									],
									[
										482181,
										482187
									],
									[
										482539,
										482545
									],
									[
										482821,
										482827
									],
									[
										482835,
										482841
									],
									[
										482852,
										482858
									],
									[
										482870,
										482876
									],
									[
										483114,
										483120
									],
									[
										483272,
										483278
									],
									[
										483506,
										483512
									],
									[
										483707,
										483713
									],
									[
										483866,
										483872
									],
									[
										484079,
										484085
									],
									[
										484344,
										484350
									],
									[
										484555,
										484561
									],
									[
										484790,
										484796
									],
									[
										484824,
										484830
									],
									[
										484846,
										484852
									],
									[
										484899,
										484905
									],
									[
										484925,
										484931
									],
									[
										485121,
										485127
									],
									[
										485308,
										485314
									],
									[
										485514,
										485520
									],
									[
										485526,
										485532
									],
									[
										485541,
										485547
									],
									[
										485826,
										485832
									],
									[
										485834,
										485840
									],
									[
										485906,
										485912
									],
									[
										486214,
										486220
									],
									[
										486465,
										486471
									],
									[
										486734,
										486740
									],
									[
										486813,
										486819
									],
									[
										486962,
										486968
									],
									[
										487174,
										487180
									],
									[
										487426,
										487432
									],
									[
										487707,
										487713
									],
									[
										487729,
										487735
									],
									[
										487911,
										487917
									],
									[
										488006,
										488012
									],
									[
										488178,
										488184
									],
									[
										488421,
										488427
									],
									[
										488442,
										488448
									],
									[
										488651,
										488657
									],
									[
										488850,
										488856
									],
									[
										488891,
										488897
									],
									[
										489138,
										489144
									],
									[
										489188,
										489194
									],
									[
										489239,
										489245
									],
									[
										489449,
										489455
									],
									[
										489689,
										489695
									],
									[
										490059,
										490065
									],
									[
										490143,
										490149
									],
									[
										490301,
										490307
									],
									[
										490548,
										490554
									],
									[
										490854,
										490860
									],
									[
										491165,
										491171
									],
									[
										491338,
										491344
									],
									[
										491982,
										491988
									],
									[
										492274,
										492280
									],
									[
										492583,
										492589
									],
									[
										492776,
										492782
									],
									[
										493035,
										493041
									],
									[
										493252,
										493258
									],
									[
										493547,
										493553
									],
									[
										493768,
										493774
									],
									[
										494084,
										494090
									],
									[
										494187,
										494193
									],
									[
										494458,
										494464
									],
									[
										494671,
										494677
									],
									[
										494893,
										494899
									],
									[
										495137,
										495143
									],
									[
										495168,
										495174
									],
									[
										495370,
										495376
									],
									[
										495558,
										495564
									],
									[
										495753,
										495759
									],
									[
										496067,
										496073
									],
									[
										496416,
										496422
									],
									[
										496937,
										496943
									],
									[
										497466,
										497472
									],
									[
										497544,
										497550
									],
									[
										497796,
										497802
									],
									[
										498088,
										498094
									],
									[
										498518,
										498524
									],
									[
										498853,
										498859
									],
									[
										499126,
										499132
									],
									[
										499534,
										499540
									],
									[
										499715,
										499721
									],
									[
										499989,
										499995
									],
									[
										500250,
										500256
									],
									[
										500312,
										500318
									],
									[
										500547,
										500553
									],
									[
										500870,
										500876
									],
									[
										501031,
										501037
									],
									[
										501143,
										501149
									],
									[
										501393,
										501399
									],
									[
										501517,
										501523
									],
									[
										501680,
										501686
									],
									[
										502018,
										502024
									],
									[
										502220,
										502226
									],
									[
										502479,
										502485
									],
									[
										502756,
										502762
									],
									[
										503087,
										503093
									],
									[
										503364,
										503370
									],
									[
										503533,
										503539
									],
									[
										503919,
										503925
									],
									[
										504131,
										504137
									],
									[
										504311,
										504317
									],
									[
										504710,
										504716
									],
									[
										504964,
										504970
									],
									[
										505096,
										505102
									],
									[
										505542,
										505548
									],
									[
										505865,
										505871
									],
									[
										505996,
										506002
									],
									[
										506049,
										506055
									],
									[
										506198,
										506204
									],
									[
										506433,
										506439
									],
									[
										506650,
										506656
									],
									[
										506690,
										506696
									],
									[
										506779,
										506785
									],
									[
										506994,
										507000
									],
									[
										507208,
										507214
									],
									[
										507469,
										507475
									],
									[
										507554,
										507560
									],
									[
										507719,
										507725
									],
									[
										507898,
										507904
									],
									[
										508316,
										508322
									],
									[
										508353,
										508359
									],
									[
										508394,
										508400
									],
									[
										508469,
										508475
									],
									[
										508511,
										508517
									],
									[
										508557,
										508563
									],
									[
										508913,
										508919
									],
									[
										508927,
										508933
									],
									[
										509141,
										509147
									],
									[
										509156,
										509162
									],
									[
										509293,
										509299
									],
									[
										509930,
										509936
									],
									[
										510120,
										510126
									],
									[
										510621,
										510627
									],
									[
										510977,
										510983
									],
									[
										511289,
										511295
									],
									[
										511378,
										511384
									],
									[
										511695,
										511701
									],
									[
										512004,
										512010
									],
									[
										512092,
										512098
									],
									[
										512394,
										512400
									],
									[
										512720,
										512726
									],
									[
										513055,
										513061
									],
									[
										513360,
										513366
									],
									[
										513656,
										513662
									],
									[
										513964,
										513970
									],
									[
										514266,
										514272
									],
									[
										514586,
										514592
									],
									[
										514905,
										514911
									],
									[
										515165,
										515171
									],
									[
										515211,
										515217
									],
									[
										515555,
										515561
									],
									[
										515932,
										515938
									],
									[
										516232,
										516238
									],
									[
										516437,
										516443
									],
									[
										516541,
										516547
									],
									[
										516852,
										516858
									],
									[
										517140,
										517146
									],
									[
										517414,
										517420
									],
									[
										517665,
										517671
									],
									[
										517946,
										517952
									],
									[
										517996,
										518002
									],
									[
										518291,
										518297
									],
									[
										518595,
										518601
									],
									[
										518804,
										518810
									],
									[
										518999,
										519005
									],
									[
										519287,
										519293
									],
									[
										519545,
										519551
									],
									[
										519774,
										519780
									],
									[
										519939,
										519945
									],
									[
										520177,
										520183
									],
									[
										520417,
										520423
									],
									[
										520686,
										520692
									],
									[
										520864,
										520870
									],
									[
										521137,
										521143
									],
									[
										521187,
										521193
									],
									[
										521545,
										521551
									],
									[
										521861,
										521867
									],
									[
										522356,
										522362
									],
									[
										522373,
										522379
									],
									[
										522626,
										522632
									],
									[
										522698,
										522704
									],
									[
										522777,
										522783
									],
									[
										523044,
										523050
									],
									[
										523401,
										523407
									],
									[
										523611,
										523617
									],
									[
										523624,
										523630
									],
									[
										523838,
										523844
									],
									[
										523852,
										523858
									],
									[
										524142,
										524148
									],
									[
										524364,
										524370
									],
									[
										524377,
										524383
									],
									[
										524509,
										524515
									],
									[
										524781,
										524787
									],
									[
										524966,
										524972
									],
									[
										525011,
										525017
									],
									[
										525040,
										525046
									],
									[
										525061,
										525067
									],
									[
										525162,
										525168
									],
									[
										525177,
										525183
									],
									[
										525402,
										525408
									],
									[
										525424,
										525430
									],
									[
										525532,
										525538
									],
									[
										525719,
										525725
									],
									[
										525870,
										525876
									],
									[
										526002,
										526008
									],
									[
										526351,
										526357
									],
									[
										526573,
										526579
									],
									[
										526846,
										526852
									],
									[
										527202,
										527208
									],
									[
										527396,
										527402
									],
									[
										527413,
										527419
									],
									[
										527487,
										527493
									],
									[
										527714,
										527720
									],
									[
										527852,
										527858
									],
									[
										528119,
										528125
									],
									[
										528385,
										528391
									],
									[
										528435,
										528441
									],
									[
										528744,
										528750
									],
									[
										529013,
										529019
									],
									[
										529258,
										529264
									],
									[
										529530,
										529536
									],
									[
										529789,
										529795
									],
									[
										530086,
										530092
									],
									[
										530366,
										530372
									],
									[
										530383,
										530389
									],
									[
										530544,
										530550
									],
									[
										530609,
										530615
									],
									[
										530659,
										530665
									],
									[
										530788,
										530794
									],
									[
										530883,
										530889
									],
									[
										531120,
										531126
									],
									[
										531446,
										531452
									],
									[
										531795,
										531801
									],
									[
										532012,
										532018
									],
									[
										532326,
										532332
									],
									[
										532557,
										532563
									],
									[
										532858,
										532864
									],
									[
										532903,
										532909
									],
									[
										533264,
										533270
									],
									[
										533533,
										533539
									],
									[
										533950,
										533956
									],
									[
										534145,
										534151
									],
									[
										534382,
										534388
									],
									[
										534550,
										534556
									],
									[
										534708,
										534714
									],
									[
										534887,
										534893
									],
									[
										534923,
										534929
									],
									[
										535230,
										535236
									],
									[
										535420,
										535426
									],
									[
										535799,
										535805
									],
									[
										535933,
										535939
									],
									[
										536121,
										536127
									],
									[
										536397,
										536403
									],
									[
										536480,
										536486
									],
									[
										536572,
										536578
									],
									[
										536711,
										536717
									],
									[
										537044,
										537050
									],
									[
										537227,
										537233
									],
									[
										537412,
										537418
									],
									[
										537572,
										537578
									],
									[
										537913,
										537919
									],
									[
										538104,
										538110
									],
									[
										538148,
										538154
									],
									[
										538176,
										538182
									],
									[
										538332,
										538338
									],
									[
										538517,
										538523
									],
									[
										538810,
										538816
									],
									[
										538961,
										538967
									],
									[
										539317,
										539323
									],
									[
										539564,
										539570
									],
									[
										539945,
										539951
									],
									[
										539961,
										539967
									],
									[
										540063,
										540069
									],
									[
										540096,
										540102
									],
									[
										540290,
										540296
									],
									[
										540311,
										540317
									],
									[
										540536,
										540542
									],
									[
										540640,
										540646
									],
									[
										540662,
										540668
									],
									[
										540888,
										540894
									],
									[
										541139,
										541145
									],
									[
										541153,
										541159
									],
									[
										541204,
										541210
									],
									[
										541254,
										541260
									],
									[
										541619,
										541625
									],
									[
										541957,
										541963
									],
									[
										542299,
										542305
									],
									[
										542502,
										542508
									],
									[
										542647,
										542653
									],
									[
										542942,
										542948
									],
									[
										543263,
										543269
									],
									[
										543401,
										543407
									],
									[
										543709,
										543715
									],
									[
										543792,
										543798
									],
									[
										543946,
										543952
									],
									[
										544175,
										544181
									],
									[
										544430,
										544436
									],
									[
										544616,
										544622
									],
									[
										544890,
										544896
									],
									[
										545139,
										545145
									],
									[
										545384,
										545390
									],
									[
										545423,
										545429
									],
									[
										545577,
										545583
									],
									[
										545915,
										545921
									],
									[
										545958,
										545964
									],
									[
										545982,
										545988
									],
									[
										546353,
										546359
									],
									[
										546685,
										546691
									],
									[
										546938,
										546944
									],
									[
										547252,
										547258
									],
									[
										547471,
										547477
									],
									[
										547556,
										547562
									],
									[
										547949,
										547955
									],
									[
										548015,
										548021
									],
									[
										548041,
										548047
									],
									[
										548331,
										548337
									],
									[
										548407,
										548413
									],
									[
										548523,
										548529
									],
									[
										548633,
										548639
									],
									[
										548706,
										548712
									],
									[
										548719,
										548725
									],
									[
										548850,
										548856
									],
									[
										548936,
										548942
									],
									[
										548997,
										549003
									],
									[
										549111,
										549117
									],
									[
										549169,
										549175
									],
									[
										549261,
										549267
									],
									[
										549315,
										549321
									],
									[
										549480,
										549486
									],
									[
										549562,
										549568
									],
									[
										549739,
										549745
									],
									[
										549933,
										549939
									],
									[
										550014,
										550020
									],
									[
										550119,
										550125
									],
									[
										550194,
										550200
									],
									[
										550376,
										550382
									],
									[
										550411,
										550417
									],
									[
										550490,
										550496
									],
									[
										550583,
										550589
									],
									[
										550712,
										550718
									],
									[
										550800,
										550806
									],
									[
										551064,
										551070
									],
									[
										551163,
										551169
									],
									[
										551270,
										551276
									],
									[
										551402,
										551408
									],
									[
										551500,
										551506
									],
									[
										551627,
										551633
									],
									[
										551707,
										551713
									],
									[
										551864,
										551870
									],
									[
										551964,
										551970
									],
									[
										552079,
										552085
									],
									[
										552259,
										552265
									],
									[
										552428,
										552434
									],
									[
										552616,
										552622
									],
									[
										552807,
										552813
									],
									[
										553023,
										553029
									],
									[
										553088,
										553094
									],
									[
										553481,
										553487
									],
									[
										553595,
										553601
									],
									[
										553689,
										553695
									],
									[
										553853,
										553859
									],
									[
										553948,
										553954
									],
									[
										554108,
										554114
									],
									[
										554246,
										554252
									],
									[
										554280,
										554286
									],
									[
										554711,
										554717
									],
									[
										554920,
										554926
									],
									[
										555042,
										555048
									],
									[
										555109,
										555115
									],
									[
										555150,
										555156
									],
									[
										555210,
										555216
									],
									[
										555281,
										555287
									],
									[
										555506,
										555512
									],
									[
										555533,
										555539
									],
									[
										555557,
										555563
									],
									[
										555693,
										555699
									],
									[
										555937,
										555943
									],
									[
										556314,
										556320
									],
									[
										556493,
										556499
									],
									[
										556677,
										556683
									],
									[
										556831,
										556837
									],
									[
										556864,
										556870
									],
									[
										556984,
										556990
									],
									[
										557262,
										557268
									],
									[
										557504,
										557510
									],
									[
										557758,
										557764
									],
									[
										557859,
										557865
									],
									[
										557948,
										557954
									],
									[
										557961,
										557967
									],
									[
										558126,
										558132
									],
									[
										558265,
										558271
									],
									[
										558280,
										558286
									],
									[
										558471,
										558477
									],
									[
										558654,
										558660
									],
									[
										558877,
										558883
									],
									[
										558962,
										558968
									],
									[
										559082,
										559088
									],
									[
										559095,
										559101
									],
									[
										559357,
										559363
									],
									[
										559769,
										559775
									],
									[
										559828,
										559834
									],
									[
										559931,
										559937
									],
									[
										560074,
										560080
									],
									[
										560284,
										560290
									],
									[
										560320,
										560326
									],
									[
										560619,
										560625
									],
									[
										560727,
										560733
									],
									[
										560762,
										560768
									],
									[
										561065,
										561071
									],
									[
										561101,
										561107
									],
									[
										561261,
										561267
									],
									[
										561297,
										561303
									],
									[
										561423,
										561429
									],
									[
										561459,
										561465
									],
									[
										561880,
										561886
									],
									[
										561985,
										561991
									],
									[
										562153,
										562159
									],
									[
										562248,
										562254
									],
									[
										562320,
										562326
									],
									[
										562430,
										562436
									],
									[
										562587,
										562593
									],
									[
										563049,
										563055
									],
									[
										563372,
										563378
									],
									[
										563730,
										563736
									],
									[
										563996,
										564002
									],
									[
										564302,
										564308
									],
									[
										564593,
										564599
									],
									[
										565018,
										565024
									],
									[
										565058,
										565064
									],
									[
										565333,
										565339
									],
									[
										565531,
										565537
									],
									[
										565606,
										565612
									],
									[
										565694,
										565700
									],
									[
										565732,
										565738
									],
									[
										566039,
										566045
									],
									[
										566185,
										566191
									],
									[
										566376,
										566382
									],
									[
										566577,
										566583
									],
									[
										566884,
										566890
									],
									[
										566979,
										566985
									],
									[
										567424,
										567430
									],
									[
										567617,
										567623
									],
									[
										567978,
										567984
									],
									[
										568189,
										568195
									],
									[
										568550,
										568556
									],
									[
										568820,
										568826
									],
									[
										568937,
										568943
									],
									[
										569016,
										569022
									],
									[
										569107,
										569113
									],
									[
										569442,
										569448
									],
									[
										569674,
										569680
									],
									[
										569967,
										569973
									],
									[
										569982,
										569988
									],
									[
										570223,
										570229
									],
									[
										570409,
										570415
									],
									[
										570543,
										570549
									],
									[
										570695,
										570701
									],
									[
										570869,
										570875
									],
									[
										571090,
										571096
									],
									[
										571353,
										571359
									],
									[
										571656,
										571662
									],
									[
										571864,
										571870
									],
									[
										572054,
										572060
									],
									[
										572352,
										572358
									],
									[
										572367,
										572373
									],
									[
										572714,
										572720
									],
									[
										572802,
										572808
									],
									[
										572877,
										572883
									],
									[
										572965,
										572971
									],
									[
										573245,
										573251
									],
									[
										573455,
										573461
									],
									[
										573497,
										573503
									],
									[
										573759,
										573765
									],
									[
										573774,
										573780
									],
									[
										573823,
										573829
									],
									[
										574009,
										574015
									],
									[
										574070,
										574076
									],
									[
										574085,
										574091
									],
									[
										574130,
										574136
									],
									[
										574479,
										574485
									],
									[
										574729,
										574735
									],
									[
										574966,
										574972
									],
									[
										575169,
										575175
									],
									[
										575188,
										575194
									],
									[
										575399,
										575405
									],
									[
										575691,
										575697
									],
									[
										575802,
										575808
									],
									[
										575943,
										575949
									],
									[
										576040,
										576046
									],
									[
										576156,
										576162
									],
									[
										576184,
										576190
									],
									[
										576256,
										576262
									],
									[
										576389,
										576395
									],
									[
										576468,
										576474
									],
									[
										576504,
										576510
									],
									[
										576633,
										576639
									],
									[
										576700,
										576706
									],
									[
										577002,
										577008
									],
									[
										577369,
										577375
									],
									[
										577574,
										577580
									],
									[
										577805,
										577811
									],
									[
										578057,
										578063
									],
									[
										578407,
										578413
									],
									[
										578415,
										578421
									],
									[
										578608,
										578614
									],
									[
										578887,
										578893
									],
									[
										578942,
										578948
									],
									[
										578951,
										578957
									],
									[
										579233,
										579239
									],
									[
										579519,
										579525
									],
									[
										579872,
										579878
									],
									[
										580228,
										580234
									],
									[
										580593,
										580599
									],
									[
										580990,
										580996
									],
									[
										581246,
										581252
									],
									[
										581263,
										581269
									],
									[
										581558,
										581564
									],
									[
										581575,
										581581
									],
									[
										581820,
										581826
									],
									[
										581837,
										581843
									],
									[
										582178,
										582184
									],
									[
										582190,
										582196
									],
									[
										582481,
										582487
									],
									[
										582505,
										582511
									],
									[
										582760,
										582766
									],
									[
										582773,
										582779
									],
									[
										582884,
										582890
									],
									[
										582911,
										582917
									],
									[
										583086,
										583092
									],
									[
										583194,
										583200
									],
									[
										583322,
										583328
									],
									[
										583339,
										583345
									],
									[
										583381,
										583387
									],
									[
										583573,
										583579
									],
									[
										583590,
										583596
									],
									[
										583870,
										583876
									],
									[
										583897,
										583903
									],
									[
										584180,
										584186
									],
									[
										584352,
										584358
									],
									[
										584501,
										584507
									],
									[
										584796,
										584802
									],
									[
										585074,
										585080
									],
									[
										585328,
										585334
									],
									[
										585615,
										585621
									],
									[
										585684,
										585690
									],
									[
										586040,
										586046
									],
									[
										586249,
										586255
									],
									[
										586566,
										586572
									],
									[
										586979,
										586985
									],
									[
										587301,
										587307
									],
									[
										587552,
										587558
									],
									[
										587774,
										587780
									],
									[
										588002,
										588008
									],
									[
										588053,
										588059
									],
									[
										588278,
										588284
									],
									[
										588606,
										588612
									],
									[
										588936,
										588942
									],
									[
										589167,
										589173
									],
									[
										589189,
										589195
									],
									[
										589204,
										589210
									],
									[
										589431,
										589437
									],
									[
										589743,
										589749
									],
									[
										589996,
										590002
									],
									[
										590110,
										590116
									],
									[
										590517,
										590523
									],
									[
										590816,
										590822
									],
									[
										591180,
										591186
									],
									[
										591256,
										591262
									],
									[
										591286,
										591292
									],
									[
										623697,
										623703
									],
									[
										625602,
										625608
									],
									[
										625870,
										625876
									],
									[
										826853,
										826859
									],
									[
										827248,
										827254
									],
									[
										827535,
										827541
									],
									[
										827832,
										827838
									],
									[
										827973,
										827979
									],
									[
										828081,
										828087
									],
									[
										828423,
										828429
									],
									[
										828600,
										828606
									],
									[
										828919,
										828925
									],
									[
										829231,
										829237
									],
									[
										829323,
										829329
									],
									[
										829376,
										829382
									],
									[
										829667,
										829673
									],
									[
										829857,
										829863
									],
									[
										829940,
										829946
									],
									[
										830070,
										830076
									],
									[
										830271,
										830277
									],
									[
										830741,
										830755
									],
									[
										830957,
										830971
									],
									[
										831154,
										831168
									],
									[
										831373,
										831387
									],
									[
										831666,
										831680
									],
									[
										832799,
										832815
									],
									[
										833029,
										833045
									],
									[
										833154,
										833170
									],
									[
										833223,
										833239
									],
									[
										833553,
										833569
									],
									[
										833764,
										833780
									],
									[
										833953,
										833969
									],
									[
										834351,
										834364
									],
									[
										834637,
										834650
									],
									[
										834939,
										834952
									],
									[
										835295,
										835308
									],
									[
										835622,
										835635
									],
									[
										835929,
										835942
									],
									[
										836279,
										836292
									],
									[
										836636,
										836644
									],
									[
										836949,
										836957
									],
									[
										837237,
										837245
									],
									[
										837639,
										837647
									],
									[
										838012,
										838020
									],
									[
										838479,
										838487
									],
									[
										838746,
										838754
									],
									[
										839145,
										839153
									],
									[
										839609,
										839617
									],
									[
										839866,
										839874
									],
									[
										840123,
										840131
									],
									[
										840244,
										840252
									],
									[
										840510,
										840518
									],
									[
										840836,
										840844
									],
									[
										841086,
										841094
									],
									[
										841220,
										841228
									],
									[
										841454,
										841462
									],
									[
										841577,
										841585
									],
									[
										841895,
										841903
									],
									[
										842299,
										842307
									],
									[
										842580,
										842588
									],
									[
										842818,
										842826
									],
									[
										843133,
										843141
									],
									[
										843630,
										843638
									],
									[
										843670,
										843678
									],
									[
										843844,
										843852
									],
									[
										843869,
										843877
									],
									[
										843894,
										843902
									],
									[
										843919,
										843927
									],
									[
										843944,
										843952
									],
									[
										843969,
										843977
									],
									[
										843994,
										844002
									],
									[
										844019,
										844027
									],
									[
										844044,
										844052
									],
									[
										844069,
										844077
									],
									[
										844154,
										844162
									],
									[
										844179,
										844187
									],
									[
										844204,
										844212
									],
									[
										844229,
										844237
									],
									[
										844254,
										844262
									],
									[
										844353,
										844361
									],
									[
										844378,
										844386
									],
									[
										844403,
										844411
									],
									[
										844428,
										844436
									],
									[
										844557,
										844565
									],
									[
										844582,
										844590
									],
									[
										844607,
										844615
									],
									[
										844632,
										844640
									],
									[
										844657,
										844665
									],
									[
										844682,
										844690
									],
									[
										844707,
										844715
									],
									[
										844732,
										844740
									],
									[
										844757,
										844765
									],
									[
										844782,
										844790
									],
									[
										844807,
										844815
									],
									[
										844912,
										844920
									],
									[
										844937,
										844945
									],
									[
										844962,
										844970
									],
									[
										844987,
										844995
									],
									[
										845012,
										845020
									],
									[
										845037,
										845045
									],
									[
										845062,
										845070
									],
									[
										845087,
										845095
									],
									[
										845112,
										845120
									],
									[
										845137,
										845145
									],
									[
										845371,
										845379
									],
									[
										845411,
										845419
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								845191,
								845191
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 33,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 280098.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/util/Position.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10139,
						"regions":
						{
						},
						"selection":
						[
							[
								2142,
								2142
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/internal/Positions.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11925,
						"regions":
						{
						},
						"selection":
						[
							[
								3552,
								3552
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 558.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "/Users/vjovanov/code/scala/src/library/scala/io/Position.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3118,
						"regions":
						{
						},
						"selection":
						[
							[
								1272,
								1272
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 558.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/api/Position.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8340,
						"regions":
						{
						},
						"selection":
						[
							[
								2702,
								2702
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 861.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "/Users/vjovanov/code/scala/build/scaladoc/reflect/package.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3956,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "/Users/vjovanov/code/scala/src/library/scala/reflect/package.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3203,
						"regions":
						{
						},
						"selection":
						[
							[
								2579,
								2579
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 301.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "/Users/vjovanov/code/scala/src/reflect/scala/reflect/macros/package.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1346,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/VirtualAny.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2809,
						"regions":
						{
						},
						"selection":
						[
							[
								2809,
								2809
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 1027.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/VirtualAnyRef.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3472,
						"regions":
						{
						},
						"selection":
						[
							[
								3472,
								3472
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1300.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/Staged.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 465,
						"regions":
						{
						},
						"selection":
						[
							[
								199,
								199
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/api/old/VirtualAny.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2809,
						"regions":
						{
						},
						"selection":
						[
							[
								2809,
								2809
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1027.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/annotation/Virtualize.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1990,
						"regions":
						{
						},
						"selection":
						[
							[
								1929,
								1929
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 459.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/LanguageVirtualization.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12381,
						"regions":
						{
						},
						"selection":
						[
							[
								6257,
								6257
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3123.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/analysis/FreeIdentAnalysis.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2346,
						"regions":
						{
						},
						"selection":
						[
							[
								1175,
								1181
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/ScopeInjection.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2189,
						"regions":
						{
						},
						"selection":
						[
							[
								1709,
								1709
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 732.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/test/GenericTranslationTest.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2149,
						"regions":
						{
						},
						"selection":
						[
							[
								2057,
								2057
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1174.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/shallow/package.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11838,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "/Users/vjovanov/code/scala-yinyang/components/delite-test/src/FailureCake.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 466,
						"regions":
						{
						},
						"selection":
						[
							[
								464,
								464
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/transformers/HoleTransformation.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2313,
						"regions":
						{
						},
						"selection":
						[
							[
								2147,
								2147
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 334.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "/Users/vjovanov/code/scala-yinyang/components/examples/test/GenericTranslationTest.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2167,
						"regions":
						{
						},
						"selection":
						[
							[
								2069,
								2069
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1174.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "/Users/vjovanov/code/scala-yinyang/components/examples/src/la/package.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1335,
						"regions":
						{
						},
						"selection":
						[
							[
								576,
								576
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/target/scala-2.11/api/ch/epfl/yinyang/TransformationUtils.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 44813,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/target/streams/compile/incCompileSetup/$global/streams/inc_compile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 421535,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/target/streams/test/incCompileSetup/$global/streams/inc_compile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 187621,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "/Users/vjovanov/code/scala-yinyang/components/dsls/src/la/package.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1328,
						"regions":
						{
						},
						"selection":
						[
							[
								835,
								835
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/TypeTransformation.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2171,
						"regions":
						{
						},
						"selection":
						[
							[
								929,
								929
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "/Users/vjovanov/code/scala-yinyang/components/yin-yang/src/typetransformers/RepTransformer.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2883,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/test/VirtualizeTest.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4489,
						"regions":
						{
						},
						"selection":
						[
							[
								4489,
								4489
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "/Users/vjovanov/code/scala-yinyang/components/paradise/src/EmbeddedControls.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8734,
						"regions":
						{
						},
						"selection":
						[
							[
								2997,
								2997
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "/Users/vjovanov/code/scala-yinyang/components/core/src/Utils.scala",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3951,
						"regions":
						{
						},
						"selection":
						[
							[
								2931,
								2931
							]
						],
						"settings":
						{
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1584.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"type": "text"
				},
				{
					"buffer": 63,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "",
							"default_dir": "/Users/vjovanov/code/scala-yinyang/components/core/src",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "/Users/vjovanov/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "/Users/vjovanov/Library/Application Support/Sublime Text 3/Packages/LaTeXTools/Default (OSX).sublime-keymap",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15186,
						"regions":
						{
						},
						"selection":
						[
							[
								3235,
								3235
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "/Users/vjovanov/Library/Application Support/Sublime Text 3/Packages/User/LaTeXTools.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6372,
						"regions":
						{
						},
						"selection":
						[
							[
								3446,
								3446
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "dissertation.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 486,
						"regions":
						{
						},
						"selection":
						[
							[
								143,
								143
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "main/ch1_introduction.tex",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17853,
						"regions":
						{
						},
						"selection":
						[
							[
								9532,
								9532
							]
						],
						"settings":
						{
							"syntax": "Packages/LaTeX/LaTeX.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6949.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "tail/bibliography.bib",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 96008,
						"regions":
						{
						},
						"selection":
						[
							[
								96005,
								96005
							]
						],
						"settings":
						{
							"syntax": "Packages/LaTeX/Bibtex.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 42541.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 256.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 112.0
	},
	"pinned_build_system": "Packages/LaTeXTools/LaTeX.sublime-build",
	"project": "dissertation.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"dissertation/main/ch1_introduction.tex"
			],
			[
				"bibl",
				"dissertation/tail/bibliography.bib"
			],
			[
				"ch1",
				"dissertation/main/ch1_introduction.tex"
			],
			[
				"ch3",
				"dissertation/main/ch3_polyvariant_staging.tex"
			],
			[
				"langu",
				"scala-yinyang/components/core/src/transformers/LanguageVirtualization.scala"
			],
			[
				"settings",
				"dissertation/head/settings_custom.tex"
			],
			[
				"ch2",
				"dissertation/main/ch2_dsl_embedding.tex"
			],
			[
				"dataop",
				"virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala"
			],
			[
				"reporter.s",
				"scala/src/compiler/scala/tools/nsc/reporters/Reporter.scala"
			],
			[
				"context.scala",
				"scala/src/reflect/scala/reflect/macros/blackbox/Context.scala"
			],
			[
				"staticall",
				"scala-yinyang/components/yin-yang/src/api/StaticallyChecked.scala"
			],
			[
				"position.scala",
				"scala/src/reflect/scala/reflect/api/Position.scala"
			],
			[
				"position",
				"scala/src/reflect/scala/reflect/api/Position.scala"
			],
			[
				"position.s",
				"scala/src/library/scala/io/Position.scala"
			],
			[
				"statically",
				"scala-yinyang/components/yin-yang/src/api/StaticallyChecked.scala"
			],
			[
				"codegene",
				"scala-yinyang/components/yin-yang/src/api/CodeGenerator.scala"
			],
			[
				"reflectpackage",
				"scala/src/library/scala/reflect/package.scala"
			],
			[
				"statica",
				"scala-yinyang/components/yin-yang/src/api/StaticallyChecked.scala"
			],
			[
				"package",
				"scala-yinyang/components/examples/src/la/package.scala"
			],
			[
				"yytra",
				"scala-yinyang/components/yin-yang/src/YYTransformer.scala"
			],
			[
				"yyconf",
				"scala-yinyang/components/yin-yang/src/YYConfig.scala"
			],
			[
				"scoe",
				"scala-yinyang/components/core/src/transformers/ScopeInjection.scala"
			],
			[
				"yycon",
				"scala-yinyang/components/yin-yang/src/YYConfig.scala"
			],
			[
				"vir.scal",
				"scala-yinyang/components/paradise/src/annotation/Virtualize.scala"
			],
			[
				"lag",
				"scala-yinyang/components/core/src/transformers/LanguageVirtualization.scala"
			],
			[
				"ch",
				"dissertation/main/ch2_dsl_embedding.tex"
			],
			[
				"ops.",
				"virtualization-lms-core/src/common/MathOps.scala"
			],
			[
				"mapo",
				"virtualization-lms-core/src/common/HashMapOps.scala"
			],
			[
				"listo",
				"virtualization-lms-core/src/common/ListOps.scala"
			],
			[
				"testo",
				"virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala"
			],
			[
				"build",
				"virtualization-lms-core/build.sbt"
			],
			[
				"erro",
				"virtualization-lms-core/test-src/epfl/test15-terrors/ErrorSamples.scala"
			],
			[
				"testda",
				"virtualization-lms-core/test-src/epfl/test14-scratch/TestDataOp.scala"
			],
			[
				"test7-an",
				"virtualization-lms-core/test-src/epfl/test7-analysis/TestAnalysis.scala"
			],
			[
				"bib",
				"dissertation/tail/bibliography.bib"
			],
			[
				"sett",
				"dissertation/head/settings_custom.tex"
			],
			[
				"set",
				"dissertation/head/settings_custom.tex"
			],
			[
				"baseyin",
				"scala-yinyang/components/yin-yang/src/api/BaseYinYang.scala"
			],
			[
				"lif",
				"scala-yinyang/components/core/src/transformers/LiftLiteralsTransformation.scala"
			],
			[
				"hol",
				"scala-yinyang/components/core/src/transformers/HoleTransformation.scala"
			],
			[
				"yyt",
				"scala-yinyang/components/yin-yang/src/YYTransformer.scala"
			],
			[
				"scop",
				"scala-yinyang/components/core/src/transformers/ScopeInjection.scala"
			],
			[
				"base",
				"scala-yinyang/components/examples/src/base/Base.scala"
			],
			[
				"y",
				"scala-yinyang/components/yin-yang/src/YYConfig.scala"
			],
			[
				"hole",
				"scala-yinyang/components/core/src/transformers/HoleTransformation.scala"
			],
			[
				"lift",
				"scala-yinyang/components/core/src/transformers/LiftLiteralsTransformation.scala"
			],
			[
				"vec",
				"scala-yinyang/components/examples/src/la/lifted/VectorOpsRep.scala"
			],
			[
				"shallo",
				"scala-yinyang/components/core/src/shallow/package.scala"
			],
			[
				"virtualte",
				"scala-yinyang/components/paradise/test/VirtualizeTest.scala"
			],
			[
				"virtua",
				"scala-yinyang/components/paradise/src/annotation/Virtualize.scala"
			],
			[
				"virtualany",
				"scala-yinyang/components/paradise/src/VirtualAnyRef.scala"
			],
			[
				"test.sc",
				"~/code/scala-yinyang/components/delite-test/src/lifted/ScalaPkgTest.scala"
			],
			[
				"test",
				"scala-yinyang/components/paradise/test/VirtualizeTest.scala"
			],
			[
				"yytr",
				"scala-yinyang/components/yin-yang/src/YYTransformer.scala"
			],
			[
				"travis",
				"scala-yinyang/.travis.yml"
			],
			[
				"failure",
				"scala-yinyang/components/delite-test/src/FailureCake.scala"
			],
			[
				"fai",
				"scala-yinyang/components/delite-test/src/FailureCake.scala"
			],
			[
				"yy",
				"scala-yinyang/components/yin-yang/src/YYTransformer.scala"
			],
			[
				"scope",
				"scala-yinyang/components/core/src/transformers/ScopeInjection.scala"
			],
			[
				"genet",
				"scala-yinyang/components/examples/test/GenericTranslationTest.scala"
			],
			[
				"shallw",
				"scala-yinyang/components/core/src/shallow/package.scala"
			],
			[
				"vecto",
				"scala-yinyang/components/examples/src/la/lifted/VectorOpsRep.scala"
			],
			[
				"shallow",
				"scala-yinyang/components/core/src/shallow/package.scala"
			],
			[
				"poly",
				"scala-yinyang/components/yin-yang/src/typetransformers/PolyTransformer.scala"
			],
			[
				"base.",
				"scala-yinyang/components/examples/src/base/Base.scala"
			],
			[
				"pack",
				"scala-yinyang/components/core/src/shallow/package.scala"
			],
			[
				"holetra",
				"scala-yinyang/components/core/src/transformers/HoleTransformation.scala"
			],
			[
				"vect",
				"scala-yinyang/components/examples/src/la/lifted/VectorOpsRep.scala"
			],
			[
				"package.s",
				"scala-yinyang/components/examples/src/la/package.scala"
			],
			[
				"packa",
				"scala-yinyang/components/core/src/shallow/package.scala"
			],
			[
				"build.s",
				"scala-yinyang/project/Build.scala"
			],
			[
				"asc",
				"scala-yinyang/components/core/src/transformers/AscriptionTransformation.scala"
			],
			[
				"yystra",
				"scala-yinyang/components/yin-yang/src/api/YYStorageFactory.scala"
			],
			[
				"shall",
				"scala-yinyang/components/core/src/shallow/package.scala"
			],
			[
				"generi",
				"scala-yinyang/components/dsls/test/GenericTranslationTest.scala"
			],
			[
				"vector",
				"scala-yinyang/components/dsls/src/la/lifted/VectorOpsRep.scala"
			],
			[
				"scopein",
				"scala-yinyang/components/core/src/transformers/ScopeInjection.scala"
			],
			[
				"liftliter",
				"scala-yinyang/components/core/src/transformers/LiftLiteralsTransformation.scala"
			],
			[
				"liftli",
				"scala-yinyang/components/core/src/transformers/LiftLiteralsTransformation.scala"
			],
			[
				"printdsl",
				"scala-yinyang/components/dsls/src/print/LiftedPrint.scala"
			],
			[
				"holet",
				"scala-yinyang/components/core/src/transformers/HoleTransformation.scala"
			],
			[
				"basey",
				"scala-yinyang/components/yin-yang/src/api/BaseYinYang.scala"
			],
			[
				".bib",
				"dissertation/tail/bibliography.bib"
			],
			[
				"utils",
				"scala-yinyang/components/core/src/Utils.scala"
			],
			[
				"lang",
				"scala-yinyang/components/core/src/transformers/LanguageVirtualization.scala"
			],
			[
				"feeid",
				"scala-yinyang/components/core/src/analysis/FreeIdentAnalysis.scala"
			],
			[
				"scvi",
				"scala-yinyang/components/dsls/src/base/ScalaVirtualizedBase.scala"
			],
			[
				"fr",
				"scala-yinyang/components/core/src/analysis/FreeIdentAnalysis.scala"
			],
			[
				"scoepe",
				"scala-yinyang/components/core/src/transformers/ScopeInjection.scala"
			],
			[
				"embed",
				"scala-yinyang/components/paradise/src/EmbeddedControls.scala"
			],
			[
				"virt",
				"scala-yinyang/components/paradise/test/VirtualizeTest.scala"
			],
			[
				"langauge",
				"scala-yinyang/components/core/src/transformers/LanguageVirtualization.scala"
			],
			[
				"test.sca",
				"scala-yinyang/components/dsls/test/GenericTranslationTest.scala"
			],
			[
				"virtul",
				"scala-yinyang/components/paradise/test/VirtualizeTest.scala"
			],
			[
				"gene",
				"scala-yinyang/components/dsls/test/GenericTranslationTest.scala"
			],
			[
				"specs",
				"scala-yinyang/components/paradise/src/EmbeddedControls.scala"
			],
			[
				"util",
				"scala-yinyang/components/core/src/Utils.scala"
			],
			[
				"generic",
				"scala-yinyang/components/dsls/test/GenericTranslationTest.scala"
			],
			[
				"pacakge.scal",
				"scala-yinyang/components/dsls/src/la/package.scala"
			],
			[
				"code",
				"scala-yinyang/components/yin-yang/src/api/CodeGenerator.scala"
			],
			[
				"s",
				"scala-yinyang/components/dsls/src/base/ScalaVirtualizedBase.scala"
			],
			[
				"embedd",
				"scala-yinyang/components/paradise/src/EmbeddedControls.scala"
			],
			[
				"setting",
				"dissertation/head/settings_custom.tex"
			],
			[
				"liftd",
				"scala-yinyang/components/dsls/src/print/LiftedPrint.scala"
			],
			[
				"svirtu",
				"scala-yinyang/components/dsls/src/base/ScalaVirtualizedBase.scala"
			],
			[
				"svb",
				"scala-yinyang/components/dsls/src/base/ScalaVirtualizedBase.scala"
			],
			[
				"scalavir",
				"scala-yinyang/components/dsls/src/base/ScalaVirtualizedBase.scala"
			],
			[
				"scalacomp",
				"scala-yinyang/components/dsls/src/base/ScalaCompile.scala"
			],
			[
				"vectorops",
				"scala-yinyang/components/dsls/src/la/lifted/VectorOpsRep.scala"
			],
			[
				"virtulaitest",
				"scala-yinyang/components/paradise/test/VirtualizeTest.scala"
			],
			[
				"reptra",
				"scala-yinyang/components/yin-yang/src/typetransformers/RepTransformer.scala"
			],
			[
				"typetra",
				"scala-yinyang/components/yin-yang/src/TypeTransformation.scala"
			],
			[
				"vecotropsre",
				"scala-yinyang/components/dsls/src/la/lifted/VectorOpsRep.scala"
			],
			[
				"virtu",
				"scala-yinyang/components/paradise/test/VirtualizeTest.scala"
			],
			[
				"virtualize",
				"scala-yinyang/components/paradise/src/annotation/Virtualize.scala"
			],
			[
				"yytransfor",
				"scala-yinyang/components/yin-yang/src/YYTransformer.scala"
			],
			[
				"virtualiz",
				"scala-yinyang/components/paradise/src/annotation/Virtualize.scala"
			],
			[
				"langa",
				"scala-yinyang/components/core/src/transformers/LanguageVirtualization.scala"
			],
			[
				"scalavi",
				"scala-yinyang/components/dsls/src/base/ScalaVirtualizedBase.scala"
			],
			[
				"sco",
				"scala-yinyang/components/core/src/transformers/ScopeInjection.scala"
			],
			[
				"utils.",
				"scala-yinyang/components/core/src/Utils.scala"
			],
			[
				"trau",
				"scala-yinyang/components/core/target/scala-2.11/api/ch/epfl/yinyang/TransformationUtils.html"
			],
			[
				"lan",
				"scala-yinyang/components/core/src/transformers/LanguageVirtualization.scala"
			],
			[
				"virtual",
				"scala-yinyang/components/dsls/src/base/ScalaVirtualizedBase.scala"
			],
			[
				"se",
				"head/settings_epfl_template.tex"
			],
			[
				"settin",
				"head/settings_custom.tex"
			],
			[
				"in",
				"main/ch1_introduction.tex"
			],
			[
				"bibli",
				"tail/bibliography.bib"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 1218.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 387.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
